%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C4/dichotomie.dvi
%%CreationDate: Sat Aug 21 05:43:46 2021
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: LMSans10-Bold LMSans12-Regular LMSans10-Regular
%%+ LMRoman10-Regular LMMathItalic10-Regular LMMathSymbols7-Regular
%%+ LMMathExtension10-Regular LMSans8-Regular LMRomanCaps10-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C4/dichotomie.ps
%+ /home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C4/dichotomie.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.08.21:0943
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def

 /pgf16{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf17{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf18{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf19{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf20{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf21{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf22{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash
3.00003 0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto
-1.65689 3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689
-1.65689 -3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689
3.00003 0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc
pgfstr grestore newpath  grestore} bind def

 /pgf23{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRomanCaps10-Regular
%!PS-AdobeFont-1.0: LMRomanCaps10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRomanCaps10-Regular known{/LMRomanCaps10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRomanCaps10-Regular)readonly def
/FamilyName(LMRomanCaps10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRomanCaps10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-496 -290 1501 1100}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53E3095EF5AF4F01AA2B5C2934E5345
1D88D311DB46915432DD0F408112AADBDE54032868560673D08129A1793B6FDD
D1D82ACA35A8223DA18ED7A03094DE92156D5D0B42FF6C449A1823CEF7555FCA
B35573829AE5A55A1381600C734661125E28C2C51EAD103F3DD496F6EA7096EE
8FD3BEFA4FBD7391DF4FAAFA38FCC474FC632D8A8C890F5276629AC2552B74C5
3C8C4B1DF8FC58A3050CDF2357DD1F98E83C4D077AEE399C268ED59CDE9DFA68
BFE8629B52E8DC41DEEC0C9E84BDEA39B4AC552839755CBE2DC820864DC9612F
16D1A532150DE0137F647DAE154785D152CEE57AE3FF8F671B20EFA22C5711DC
B9F8AA784F222AE1183B01E2AAC6254D7994624D1B351DFF6CBF3B4F7B1DEC63
CCA90AEB60F15A33F727877927E80AC8722C27C584FB671FEB518D1DE33FAA48
3173C60B382AA1F0B22369BE368CBF749E7559509205B38DF4326DF6A6161C4F
E3553EE51C42032B00F69252E9043B7928B2824FCDB5189B3020CF1D596C59B2
135BC9D16D037D87C31B091D7C4DDDFAAB32D68F9C396CA3BF22BD6824BFE582
93520934A63EB6473935B1EB4801E3ED6475320DBFBA8C2F3F98F03DB06C3F05
B0B06847EA50E8220C87171F32F759EC361701793C97953550ECA6D4B28EC2FD
607D51FF237723D79DF208680711F2DAA6172AEBF28B736756CFE9D56EEF0156
FCC46EA96AFB2A804A3BEE06E0A59EC3652633189E85E68B5F3EFA7CBF91E3E1
D7472E66CCE86A28D2FE799AB043DA1C74EFBEB5C5AE6123A71702861463B56D
7BC98F38D9C0B29C25645142AD8BE57953956B838F815285B8802EE4BD0817BC
404C04D71B0FDFF6DC455B51B305A005DD7796527CD8561337EFB990C47DCC87
E2A042ECD49871111D71785275257C303761638CB0EF14492762F5A1CB7BD472
F0B01BB09FC6863455F33DE4BEF212E60A9021B94F42EE04735AF673E3D24A74
35BBA4EE640862CC2C49FD18BFD4A21FA259DED7A5F13C74E62BB9A4633098E0
15F6E5DD084E687F8909E2288265BB98D64189CEA29065AA87E8BB636C3FA965
32FA00F88F4C98217A140A3162D903EDE2880C3743AE61EA1D3E2DA8EFD0F95E
E88605CF6872260A0C808EB620E9F9156627EEF4B4F07CFF943A70AA730E2B56
3A5912AA256C9519F4F8A46E512BBA9F099FD0A4E11C873E88DFFCD25D0F0805
B0EA04ED10F3D442573A56648C90B3D8C4C44741A535D965E48F0F4AD114076E
79FD9D0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AE17F756273333E84F341
637A1BDB292EADD055C971FFA94B4E72EE284C44A9C294B2B18D9A2E50D90BEA
A161415478975E25D1E928C5867A495F88565BA02CEBBA62BBF3976782EE4B45
DF434B01660CFF3F89AB4FEF6BC7F7D7F83EED9F947931149B6CFA3CC38B537B
6C89BBCCE6C448AC5C61D17285F9E2E321C96C5501772C32C2B6183CA0BB5DEE
4B7C3C8F0D77EBB70D341E595B5A7BFE2B471EAC3CE6C0BB9A046AFF0D3CDE8F
81C142E70727135017B39A5A1AFBA562AA96BAD4D66958AA329DDE6CAB90B3FE
38E49F75EC083CE28D488E75BBF597DB49E3F42610D596C1D91A878EE680EB84
C857186645C467EC0164AB6086D2C2D95C1BA20D36E2E8C1494640BCF0294FF2
103926BD4D83104F9B660EFF434CCDDC96CC25E9F54CDC9E19D966D068DAEE4E
1255BF293797A1BD1FAAB9AF2BAB48057DE0E3C276E3A5117350E877FFF97EAE
242EFCE7ADE5DAB83C34AC97C66C21F4CE4812FA0F007C12820899207C35F3B0
14133645FB9F8E53A6E2A1CC08CED4D33CE9B69E7A5D0E31726EC3BF9FD98C0A
E5BA1BCF5166779F26081CE1DCF8FCBF985B41005EA0771D91D5727FB447795C
A639A5C9057E97FDC795EE6B7C39AF1AB0338BACA1A1E179F1AF0EABA623864E
553A210AE8C03A525E467DF8744A8B6DB57E04C99BF7F568041BF90B5EEC2B73
9A109B37B07E8A668E68D117A3E0C46B11617838874E7F840DAB45050FC413A5
037107717FB43013DA06FF41184DEF3526C06FD5BAB6F3763BD358D6931EEA4A
860E1A17079A59DEB9C7A4C0FC68AF583ECCBE6FE0329A031820D4D1DA9D11F0
2D650DFEAAD917E7F290E617903792223A2AA23AE7069154690EB370F940BAE2
395473B7C2F70EB4DF0E94468FBA1B6D5F1CCF350E3930ADAE5249B3D5CAE21B
281B22FAE6EE3AF85762C36421F291360670443326A44F1F4EA0E002D8B94CDA
144057B4D5F9FD416ADBAD209422879682A8D0D249CDBAB31345F45FCE24252E
D45316EA9E34A9EA03A6C950682BD7E72A81DC4FB2B9CCCA501761022009926B
5F55C9CB2855D5D049D3C73CBEF771A594437E6E1C6B0F15FB3102DB7A3DDCB5
3BF882D33E5A43EF201EC0B415DC701E8FE4FD3505B993F5CFDB502635117336
387D170AB42F95FFE8C79DD1C5CD4860749F82198FFFDAE1393586EFD3956EE1
0F7A3EC03DBC1045CDBCCCC3950C6C443E1EB25180C92F0640CE6A8AF3AE7EB1
81C2E4C11086C2ADDBAEFF30348287C9C3FA8B34A76654DD7AD692702C462BC8
6360DF3B3C743459AB088BEA49C5D06D6EB67124373543A2C18439DB2227247B
30A41C72B8836026F60961F8EA96BF0A4F3E778B9002DD7488DAD1A42BC257C3
C7149CB99114E73DDD3F9A78BBE152E1BAD8C1A22328682504131249C8468ADA
F74760105E07065AAB5CFCACB826EFB41D1A7A6F59DC8AFFD065CAD27B9EB202
0C908E91E81B07A92AD544D202816662873464594EBF58A0B38A156331EEAA0D
0BC24BB44DFFFCBF4181A86F0A4BD25C3921CD2BA8360AAD322C021122E962CD
756DE48DA93798FBDD034F4304D5EDBBA164DC9E9B3414D00E9F5B712394804B
D4BDA26FE7C2418EEB63B7E393108CADDA24C91C1962272359F2535FA1D1A508
FB5023D07D392FDDDE2AC0E0708B430846E137E6CA0B5436653A968FE24DF8D4
6D2003B45B60BB1B6D62DA735DA6689C2C03F196ADC11B27E608674E546D2074
A3AD2FDED543CBEB81B9271E5EDD5DEAA97BC86C948570063933291D78AB5298
EA92E13430C7CA1FC658FA031AAD0EA5B01D22253D6C26BF3F435E6A6E9147BC
1B68EA135225157DBB906F75C799F437E74F0E185AD518B7E446C30415CE5799
01D43D8E2B08A04783C5E1AB77A3E641BFCD7753EC20A9D8AED089AF77F0C5D8
96228A3AF8A96329A5F0EA14F929D5598F4437AB944A06B5EEC3343EB29A9271
70DB0EA31A11EE7634FD75CAEAA480F411AFB3A933234276082E17993B297043
B2F75674AA08FF419E5CBFB6407856406CC9C52353EAB3C79BAAEFD74B08910F
452C7FD271C1B9BACA52194DCABDB4284B77C573C5A7EEA60AC017A3CBD6BA59
A1AC2BACF1545011EA84CB75B2C5ED13C702870ECCCD60554EE8C5D4B9F2FB5A
92DA2D93B04417CC9240E9C692407250E7D47C97F9B3A11C8CB3EA31F589BDA6
00E115E70395E2E4C0A29284FD2C9A8740851EDC442490FAE8321683AE4A530F
EAC44A63E2B90731652CCDDBEEC58F573951454FE7AFA29CDDEF96E951AAA9B8
EEB3F9BD5F13210AEC71AED98317186244404D4812EB1E27A42058A387726A74
FD74B84CEABDA95CAA798540DFB193A897AEC52D74BB6747FB9CD5A633DF5375
2834D9E6147A844A7DC46DFC69EB7B63E6126545B566CA3099246CC6E5F85E04
5FE750DA4A9B403FD293CC4363897147A165FB658A4E7A74EE6C22C2737A8107
63C405C5DD41D7ADF7112DB70AEF68FF3B8773848FB918BD1D4D4963B96902F3
A84599D73EB3303D7B74883137EA5EEE14B739F60D45D102706C99D92E1CA501
846CC8AB6FB3AD6AC55575E66721F58FC39D634E3C68CB3E2E24D61819BC8515
9520ADC69ACA26ED5D96EF04C2AD0153759083DBE7DA9B89D877992A8DC821FB
5A141A58CC2A46228F2F642101F5B23CE1ED3A79F2C6006E04619B81578C0EA3
C3A72402DFB9B35C8E59BF582621648F48CC413EDED067EF9BEEEA1134788A6F
839F2C2FB22529A38153E830445FFF661BCCCA767DB0BCACA4693DF0370A9804
2E527BD65EC1E77D32A07DD7E1149715178A46263EFFFBE20CF045D1F128CA45
50BA9D6D6DA61B84D00CBC9FAE5924F8209ED49D597C20A0CAD1C2D3424E9CD5
8A179A2BB40AC54D2E45D206928BE43A964D2311F07753D0CE4ED2AD6198A473
F1F9EA821DEE99E27D331F0559477F0CF1D9731533BEFE67747FCBD3460F9E80
3E409065E158DA49560DBF9060489CEEBE735CE28EE4ABC81450157CB7DDACCB
72A0FB560345386569D9DEE8754EBA551B635693EC4FEEA9CDAE3564D5DB1DC8
0645A5DFBEDC32C58223FB032506BA87BA582862CCFE1FD43197B1C7953BD8F4
DA1AEDEC773D5C063965683DCBA5BAA51ED9F1F601F0F088C4C2859090964202
143D72C13B747461135CBEC72D82A7C1602B824629FA3F773B665ADFF0135A65
ACB5311765991CFE59744E7CC201895FC7C2415439EA0112F1804CEFA65F5653
92ECDDDC6641E651C4CAC35F163BC67A18CC18839FDC4EB001A723EE59734A18
EB12CD7C54DBA9F8C47428CFC2B96879AC6792E812426A33CD78A844120B5B67
120BA7884AE4336F3FEBD08B7B93B550CC6D1ED120AC16308B6DD2B9A8F686D6
AA020E49172C02DA888DE03EC12D4EA38E7D327F0F4C117F34AB17610F5D7F76
C207FAF88C8FAEF2476515A41387CA09174006C8F2125DB485D1F37C940A8F4B
3E4DCC91413C3273DAC2A3FD2C49E3C9AB8FF8EFC8DA34C873E57D38B01DF487
3772137582971F3249E6694A24DA005C84176455BA74C8A97447861732DFDA1A
5752B5222EDD9012B45CF0DF0644B2E5B7AE5DA72EFE54D294768DE021DDC1A7
C76EF77C6E740449BEE713B7E40F77F7F6EBB4BF933204D9E5E28D522591D17C
997D66D0491D2D29CFA7F4C88869E2D53DBAB54563CC5357F755C48E49F4F103
4A8645A68D436C42FAE21F2C158167C6BA509BED34E0B0DA099434D7FE957C3D
52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1D8B592CDD4375AD01D63E8F687
46B8029C831A0871A8F9F2E264EC10133C444A86EF7C38608D246A1B4379C45A
7C34D82EBEACACC718F5905E864DD54CA062EA1FF406D9E2E42031876A1CFCE5
8D611A8435A8459CAAD2B618D4BF9115DAC5B425EC8BA4590DD3555C2E4BB601
97FBB232487FD786E57CA1229401BF634D445C93FDC157796BFA5502F105FB79
F31A554D8BF98B8303CFD661ABF9A72CA0629AA65989A7AA9AC8B6930AE574DD
D32FF4BD7C970D933C47EA4515043C418049903E3F36885AD45509FC3CF6F31E
975595338AAC667E1ACC0A3D0AF0B6A0995FA0FA6A1C7BF34A0E25EFB2AD7503
D23492E7E980B2C4324736378E0843451E4D9840AF87F800D3B6E0248AC51AEB
F052E92CDC3ADAD81E2D2AABE09DD98F5AE00F69DACA0535AC90368B31AB3110
CB4EB8D00DF6246BA012FA3416E1EAF822DCAA6C0C4142A552F0D97037FD695F
92137A8CEB212797BBE778DCDB2D0F6726BCF115DA15374CB688BB2F98BDC3B7
21DB34D4C6186E5CB2E597FE2055304950D905D6AFB4390B62A3173B522240F0
D3AB72588D98BAC8AEF2D4837251BBBF065C283B7C7B3BD08D7708CF72309950
D176CFAA1D155312586A9ADC136D9155C3C6ACBDEF8BA575387DD0D73162CDDD
96166F795921D90204DB9F3E3FBE084A2DECAA1964AD31D9D2F4743E73B73557
69B7ED30FCFA10238AB9E263F42C980A603B024C1844C08D06E40C58072E7D12
43257B02B8CAFF2AC2FB7868A7FC61E6AD2CF8C5CA6111D592F4184FABB849A3
676A8D175D44E71B9CEB49676700958F17D09D8B8D37746E5AB46052350D2D3D
6947F4B53D2B14FD50B4CEF4398D2D2BE7E7A3103A10B82E0E27702BF83306A0
C3A89D9AD2A517E03614C8349282F97AF2292BEEF24F886427E846C0BD15A807
62263CD8C96EAA02F137C2134A47241E3F15A881F6A2FE15BD745CE175B92169
7F9D9FF0803559FEA211098B4B45E88443AFB83F96DECD5E0B32C5EA329CB342
00253C789CF8F0CC740618BA5DCDAD4693F4E17363864CC8AB69FF9238E0B18A
F4114B94CDF5DADB44EAF5DB260D8B8BC3027ADFF7DBE2AD88CA3261C59CFC1E
C0418A91E44F1718D13CF485B3CAE0E01B327EE29107319D27F242A8681C2397
F448C46BA164AC7BE0C0A73FB423A2AD05E28D490FE15EBC6A6956477E8B7DAA
F1AE28A6B253A55B77C969975DADE58C1A863D53B67DFFDE2F48652558A2D707
BE5A2C968491730CC85A6FAC2CF9D670F1FB69EB4966334402F76388AD6AB9DB
661A04037C111998C99A0A09C9002478AA31E4240F13D73182F04410A11A88EB
D5278ACEC4A55F1A082D537B3C1EE890A6FD2ECD5F4D5DE99814AD4A07983923
64FE0BEFFF89A5599AA47087D62EBF48C20DCB99FD2BAE6853877991059EA431
7ACD1B3B44D9E5F789B7877ADFBD0F5BF0D86E0DC7B68A3F2D8B66E59BE53EDA
B3DA137D59CC6EFA0F579F8A1C5E4FFF0AF7FF5CCE31B93E4048CFBFCDADF56B
75CC3A9291183CA5F1FCD9BACF833A9D58F384DC27B11B3380AED6F7A6719B66
AA3E4CF7A10D86C2E63BB1BCEFB27E668CB9A72C46083DD42729C37C41DB7347
D16B9C41AAE346617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DAD0A1CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B1FBCC83587A2536500DAFBE0CA7772A5
89F8D9CDE0932B5D3A1819CB2732460837EDC62035D7D232AD000EDC4598F22B
950DDB38150538219C18735C6FE1823BC63C569503A4B5CBCCDFEEFC01872476
101D65E487A587BCA95243A1EB5BA0431C918A879828150795CF2BA78D4E55F1
FDBABB8BF813CB9DB27CB44AA47AA0D4E648240D872FB7614B5068382C766444
22AE18999FFE37981189CADA735CF09EBF4678CFABD1A6D3FBBF8357D4DC0524
BC6A4F583F56C127E3666DF8476D5A8A6CC0A5B1420DDB2B7E75B0A8C76AA6C9
98C9AD482CED7C243C9688323D96A3F96517CFF904BA26767486441050388419
88EAA2FE0155EA8DC3F8EA9DB943789A191542089E218EF40FB4942319C28B52
2ABAF817F506EF45F7262128F935F4893B87C2220034C6F979B5B3DE3BA5858C
38C9C1337A638C0E5C575727665665C88AD38E13EB02AC3AE5CF08B53BAB7FD1
3E263C2549247D8DF74C6863D43B0266C927FC0C7682845F3E4266B7D327312E
FB770916FBAA37015011999870F0AD19B5EB1B9D54BBE7593C45B8F41C203368
AB891AA0006AFDE458F28C88624B7CD1FEC7F9EF2C74697D12EF1AC78B34E566
672E71A0A5B53E6FEB67E477C72E6CDA1458BC8DB8E1DA62D42F448933905E64
F93DE35FB61FDFA5A4C78E426D6F68DFE42F76B1CF5F095DCFF46884A1AD7C81
AD55FEE036634EFB88A2B1ED19E37CF0B527D14F008E134FA0711FE40BC8A925
3E5027D8FE5FE873E98EEF621E059DF969C14E19E1CB4EB43B64E6957AEEF5C1
7D832383CC11E5D6419158E6A838BB3106F54CEB953F0C16D9F1CEF47274C469
0FA0620F50E5BB14A0F359C4C172951461E884747D6E5D29114039F59776D65F
0A6D9E5088AD245098A9CFAE5B44CB364AE68381B4DD8789E1D35D4AE06A0511
07EA4D90D3FFD25223604AF01B5F46C739DDC81B47978F0BDBD79F9A6A53DA20
0FB56DC483BBA3EEA535009B3A8AC750DA63EDE128761D164A9843955BBFEC72
13307B78378886F93C1C822EFA66A75E01A68758FD97C5928BB2B1DCDB63CA10
90BA2CDF850F9E1A5C5856D41D8FB730E048E0EA435515BF52FD453207213F3E
13FC83A36F2D86CBF4AAC4ABBFA39688BB222A81685006706434FFEF6D6EE0E7
0900D14EF927A2F0C3A8BE6E4CBC44070FC79D85C273074A7E31F7C63BC4DA2C
8E1C1CEA7000F63CA5BF75389D057C364EB8747A414F55FB4FDEB79A695E89B5
B2C3987863CB4B29ED6BC20B0687BF97346B111AAD8EDD835B26DEE73E360BA2
4603A6B42398895F1F95D5F0D0225D8EDA64581718ADF5FBD7277E57E9919BD1
0558E3A5022F158043BEB6A6820566EAD71325D69BF3460E9C3C7E0C0F1BB457
048ED47325A221E91DC93BC429BB517890A8F857C2F54BA01FAAC221D701C672
36E08C7A56288E339620A52776770935A6A193FA21A3DC25DEE1FF03955E5671
C075DD53A5A82FE7F773815B2AA555BB03CE19B2B72268C40F772CFA2CD7A598
A024222D413287F7481B9AC0E13B169DD71090499B415AD8AAFD99AB5DE2BBC1
1B40ABFB7CE655281EAE4F27B1E027C2A23E63378F5339306A9F79BF2523B16A
083F710C102E07B67194745D7159FCDBB10B6459273EFD03520F2483A9E6C0E5
665B54CFCA5BBE96B39E69D388D9229C1E361D6C47FF84A49AE0C70F71EA41B0
2E1DDF2DE8630CFC5F2C8AE1E5BCD78411D194A831BD263880153BECC873A9C7
1796A7807E2345AD02481ACECEE7243887DBA28E28217389829F4D31CECC14EB
7C948E6E6E104A080B9441E0BC3624493ED50AB68A0B22A779D7D816629D1E36
FBA83C5BD9BC2C57BCEA7F9A6886C9F13EC903E886DCB7291933374888A65847
44692F87A67A218BFBCC8896E57E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243
E79E7B7164A60BC32326C2D36742C0D71D21C63AA4DEC82918F11F62984C5F85
3516C1419DF929D29EAF4490A01F57EEC3A27B18E547B77AB0DD203BA47E66E3
B8932462C277481778614D372B043761D928D66FCB9D760D3096B5CAB2A1DD50
A23E443D8A30572DD2A12550B2D61B5B8D3DA00ECDF9FEBE424C8D607EF6BABA
6D1482E9C494671BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C6F27C5348D0
4809C49896E18909ECD6892BFD2B0D73A84B6E682E463E69702266FBCF04AC9A
0CAB64076EB9EA884B2F5A13400556D1D07217CE900C16506F570143710E9AEE
87EB93711F2A49C15DD57EA42ECA4E6E8D58BC4A195405629408224D07020749
9DF2F43E7D52E442E951CEB1C926563979CAD433B91341797AC8D4E9842A2025
15A73ADB4AEAA456ACCF3FA9FD5C0D7DE2197E5C96CA1E77BBDA711E73F6CF45
F31613A24A30023BEA9A207E8E4E119B5356CED765F73F6935478D5133B9E761
4922209C25478E0A63F78F3460EDD4F64B4D2A5B3E660B614F62A53AB284FAE1
FEB947C50CE8BE18F24922B066F392E4321F75C42A86C70CC8E4AE8F6F84FC65
3EAE2D03CBEBEDA67F83FA8F1322A68097441DA3511D8FE63394AA5E6B7F441A
D12126999FA71ECFDD70607C4FFA2A1D6C138C8A750A892DDAEF50284D2CEADF
C997B78F9AF18E63822DA479E4279465A6CBD43EB5B5DB8B72E96306900A09C9
002478AA31E4240F13D73182F04410A119C72285F06F1773BAEB6FC8CD2EAC6F
0799C903D18C64FE378916128CCEBF8943967A33F856A40BA5B302782175203C
082BC703ED67F8956F3C757799D61A801701C34E5F0311D00A7FF64F31505AAE
C9170516D38C247C25CC98E436D6B0129745977065519D41FEA05DE277A2B681
6846BF7BEEBF9D323B549CAD581F17DB11717FE745194FD74DDFA29EF38C14A7
D31F074565A14EB60996DCAA0762F3C701390274F4A233B7C21EABC56271E0D2
6F4D8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D51564ABBBFD16D44724C916
7C7F909DCEC3005810B42BD9CA1B33DDC4B3D69A6DDA20E104C5BAB68F3D943A
9B0E24B8327345DBD550F4D3A85FEB2007E09F408B6FB0408AEBF36BB9459C6F
41B3B4EE5B63571F18E7077F1990611E243FB8A327EFE9CBBBE8F9B76ABA9F6F
7335FDFC57213D5D25DAA9FF60D639DE068E6459B14ADFA9FA485D2B692C522B
F8E5FB4531330E02C9A8EBCD6C3AD71A1E40A4D3F1B93134816B1E636A2327F6
240BFF595E24EF8941707987E8E672F486552480FFE3D56EF1EC01FC6D827091
334762A700EE46CCFF0F8222069A239E9C090C056C50ED33CCDF1DC4CD54AF2B
27F3898D35DBACB95E33FD81D89FFDEA459395AEB1FD2A2313C4619C3924D6CB
4C7156FED518164901F83DF3BAA6A0ED3E1145BF13B94FD26442237EE2121C14
F116A1114838B333EF11ACBCEC26CB9945AA4F8F616FCC76E4B0D7BA8C76364C
F343FDCB3945F586BFB542B229FECFCD917788FCB6F16B6C1C40E3E00F45773D
C20480C8D6BB75756FFD8F5C7A6D66A69276CF920B7BEC2E368A095DC1E3A421
F0C532042E003906F07403A54AAA87A7CC1465CB48ABFD9A879E5B8A847E9323
2C034664E2C43DF499BE3810C38A4BA01A31B5C80138263B8E0DA1FCC4238D71
517DA16343332416C4BFE510F180C63CD039D399B1D9C4208BDE9F2A8208512E
1E9EB36A96421288D8A846DA9F3D3B8DC89359340E6D6E4BB80425136F59F84D
8B2D3548C5EA909142D33AE8B2BDCC9705D1EC8848293ECD9599CAADB700A176
76B96C607DC49759734D8F1EBBF10A7E363AFBA180CC2897C588A09FDB14647F
570BBEE55DC7F2AED3E75B7AAE70ADAA461BAE73B4CBBA029A5BD8AB7E658340
5263C510185BC34AAC67226177133AA7CD431BB67C5261595CA2A18E0FD97413
5F38D540014D38ED97AC4F6058C1B834BD195096C9A61145921EBA98A70B52C5
BCA89089361DA0D7AB8B979BD91DBF43FB52495F20DFBF159A58F3D4BCCF3638
857C25C73B78F5C35FF0DD1AE8036C3620836DA8BB5CE31BAA722DDB36BA5642
CE4110C57A3A4D95D4D5188EBD111ADAF13004B95BB6A1F91C919C28F67F64AA
534A2AF512C1F2BC5BEE9F21801512D2455DD4B94E0C5EF66E5F4252E5511A19
172AE7E16B6E84C13265E7A78843F80CD719C44633862B102690CA956190CC61
CEF424A54E62107D2ADA1C19405B9CB4C39694E52AAA56E56F82678A4327EB6C
A34EB5A6A8B1C41ECCB9418C1094CBAB96EE405DCF58E3A569DF07092225A683
511770EAC39ED55DADB32778CAE943CE6E928D5C8A44F0B691350DC0E4B38E4B
5B5868A34E643E6075C7A82C17F569049E4A119632C47683095845CE5281573D
CCA18F596C2A638DFA3A2A0E4088072A3C9E36431D9A9656D60135F7B7941CCD
EA0BC0168ADAE8A1716BCAB61A1FBE56DE145488C0306C6EE589C2E71F0433B9
B8200015BEE977FEA781C3B8034170F9FCF6324AECC2554A56897CBF7F8B7139
ADF77EC4DA414C2CC5424CBACBFF09AB4F4962A697CA30668A1809DD72B71A4B
BF6C618A4EE64F0673FBCDF58BAD19C9CFA9D528D104702E4AD8F19711F44C14
87A8A062B0E7D307423CF2852AD05690FE1912DDF6CFDCB995609788A176928B
EB2B6E6007ACE26260537E178406C35173ADA131F8880C15E753D7BF2E4BC089
2953EAD550817FB700822EB157C4BE8DE18B2AC08FBC05291063120165B4379B
1A4DC9D967DBF6AE8C59B9584224CD65C6361095861A84EA1B7A991DD837F2E3
96EA1B598CDC2B459A81B19A090AA25E8D0036616784228ACBA46F5DDF43D3CA
439B4506CCFE90F24ED9CA8B3498FEDD429B1B1B8550F2219E7EF9CC64983581
38BF2645040109A3D2D98CB563D4CEB5C030A7D2F6DBF55063AB7EEC2FC100F1
26DBD977068AC186C94D6BDC3E849EABF685A634431D9FCCDFCB4A1195C76A6A
D5138A35588B794EF9FE03CDD26508432F9ACEEC0C86CE8744277F5C32166AB5
39082917BFF7EF652D589681C60B99DD4F132248742876953526D119551A8B29
CCFE9D9B35C9A04CDB15B160C3E2B285BBCFE14C06C490185488510704D87E32
41AB1B0AE52F898A234931F910D5DFE85FE2218C80C58E34DF3EA0718B7C8E2D
6511B059092391D17C997D66D0491D2D29CFA7F4C88869E2D53DB8DE6F4258E1
A49C6B865B75EAA21C02F7007978FF715C0E3EF03E39BD49697D30B8BCE8B934
1D2DAA72F7FDE1FCA3BF72DB85657F4A3558D4585AD1918E86DAACB86231F261
EBA0BB60C59D40F48DF92AF2EB6EC67815D27BA9BB672751D8A658C45E07B955
8E776E94EC0991B31A4BE92420B6D9F5E6FA1855513B7131C7A04B00038E48F3
936442CB14BD2C5658C938BC685FADEC8C6514A728C83D7E00DFD4EDBF4044F0
E247D957956045B16131155F4296C5D97BC3D1F1C93A6E82767543FEF3277C1D
AC4869CFA865B49FAFAEE9506D2F10DEE673E177D6279ABFFF8E757851AA4497
5855AB9D1E3310DC01B08B5CAB5346609FCB048910F3D70211659CDBCE05F073
3AF96804623A11636472F5845AF507C8EBA6518215D75034119AF4A4A9D8A9F9
24028ED77937B477662CCCE77BADAA08B20B9392171DBF9964BBEC03013F324B
D4B1E3053E4E12EF73AD5B6DC764101CD4CBC3FC2A4F1010CC1DE442DDC48044
4449DB76A321ED1517E750F551AAC934621B52AC90EE56F9DEE0666C2484BBCE
C64AC7004C28C6681794C0E2CA89BB581FF57DDBFF7865063A2AFC57C76819BE
9B78D0F4DD3B3B23D69A58E2C82C1981EB8E18B5EE80058433952B6985256120
82298F0E6E36968C8C0932BA0E02AA42C71D9E27302A88E52BB8B1924F057B9A
498D69CCFBFE7E3062895E706E20DE8096399754FB32677CFC456E5CBE116BC3
DFC67B18E95621D03FAEE1831A15D5205891AF008F869D7AF5E4EF1989FD377E
9724F1BD2A06FC203245246BE57408FCC7B3586AEF5F4BDD49CBC31AA72B65C3
BBEF8EDD9B4EEC32CD7D3C7C2FEC51FE0DA9A33F1C12A392750F3D1D4FE99AF4
D9A1772129A3C3490B8B4529805E0E306E95001663F0EE156891E1537A7E03BD
98EE97FA23D768F48EA462E9C8ADE136814E40E9494038C8C4146D9E400A2CF7
0467645A2898C551E43963ACD7E7868CAA4488EE815D40E28CA54BDEF9122801
8A6DF526D5C66A9F11AEC07A100C7CCF00A1BBB7177AD139137E1E992023356C
5C546DEE5401E08A00FD38A70551FF9C8A68CEEEC3E24A8A8D78F1B9CA757727
B2A7D3A46798F5F975A2784717BCE6E4D0B66E0000BA7FDB864CFE04BD7CE607
0FC5EF576B1DE985AAAC8126AEABC40B64A430C0AA868759E4C0A2689D828D2B
468A3858BB337F0E6842EC5D9C0D5D2596ACBE7E4BB9B5198903BEE40A9F1FEE
2CE3375D67D77D11B92C07A9CE1FFEC4FD57B0891FBA2E75BD5D5D17618A9ADD
DA75ABA8C339C5AAB51AB884232E9D200A40A68E4799E5E842BFA51FFFCEAE9E
1A97661A47326B6308D41B37E844E66954DA9032B1333396FD545000E364E7E6
A79BD95977419E006D51A92C2CF0046A5F542DBC264C611E8BD569D4E7894668
52BDABAADD6B9E6E1B71655C46DE2F505615AB470D93AC31E7FC99288D9FB5EB
919A1D92B466676E57429E6BD74FFC6257A2E0CE1910FF41A7B70BE8A29332C5
DA24457DF7F2AFBA61F8B754C7582A8C089F5553B7617187C50EE0D0D7941F08
41112068656190221491CAE0922A3C733FB9D45F81757CFC8ED6BAB5630EDD86
4ECFE0D6959D5114EAAF1612C970CAA2C9472CA9736B50613961F9E542A99E1E
9EAB27BEF2BCF74FB40E6263AD649C32D00F99B504DD1602FBCC202CC8046C60
9E8D29EB8FCDA4F0323901508EC6D0D3A034E320755C9FBA42428460AC283786
C0E4C0F45DA2C8C78EE355C3B5C349CFAD8F885A3D4CA30C74613E0205AF23AA
2719BC14013E7859D68CDF0BDCFE954601924C473B761EA72FE8B82C2A961083
82D4DE8073A483A2C65E3AACDF4106A11D6366AF685F88D99F32705FFB5C3190
91904AA6F8C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE6ACF6E51395ED67
AD441581D7A43EC3324CFF3DAB7E17D9D291D0CF9CB9086D116D56152BCE3296
95FE8A830CCF318CF0DDD078FF2E319A37EB5CEFDBF36492D265A24D538031F5
D1B00F3C41E627B1DB9876EE658C50AB2BD9D2B92C897D83ABBA76105BFF7E79
29B8B36A0F3C3F8378B427A87086EA10A597E1623529F8734C0E096F1BCE149F
8B0F4C80FD9ED2073D21FF50B841774BC20AA8870AA9DB4ED19128C657C8098E
D5BB7691BBF8C1F6ED0358B085054144022BE6620E3BE3BCFF07C029D465A074
684244F63F8367906C7C4648EF33244ECEF4405FCD839685C2BD7D5FC1353416
8DDBA44083519C586F6BCA610DA67BCBB18285BD9C0C838711A76C5B5D57F356
EA414904DCBB1C1FF12E5BFED5253156E3A76B45CE938395E129746ACA103A34
C38A7E6808E1BA082060EE975BBEE0EE2360D53A6C2EB0393A21C2984E95892F
8AB221D586720A71FAFBE2C80951B24AAACDF129B2BB843A35372A2FAE18AFAC
C74586D3DD54067F7779D9DA069D7897314C617685D05AE401C710E8EC03A64D
8C462D8E458ED29A12F56A9D3FC1A5A59BB391F99ED1BC64F8850BD7F2551F3C
144EC0BFA8529787A6F7E7F29C2C9D31F4094F9E218E053ED37FBC0EB204AAD2
53FF338FEC59B284251A985F7377BEAA49275B5E62BC871BCFAE9AB64224D592
847AE57C85675CF04BFD1410B56E616F68C39FF5608FEAEC6E72A40B22AB733D
F071D6B92B62F165192F48C0198F2957A103CB2F0D1F55AA122628853277D256
C2107390CC3E2D2BBEB1220329E86A68680D1F9DA963B401CDD3C429BD4CC3F9
6584C065FAFEA3EEC98A137AEAE50529E1F15174DF4AE9067EC4E67725672D65
4D5081FCF2663644C985191135F0156722F0BF1DFACDE24649CA49CBA47F93F0
201678944115499724D8B9052FB4F6E0375B8F8640A75773638943DE96B8C4EA
EC254CBA1E05D8C31B9C3178133782ACD3465C5CA2D45C688F3CDDED343F64C6
CAC65D8218E75ECDA7292A0F2FBB4F6B9DA8379C3AADF23AB9DC687ACA989BF8
6F24F23F6F74F71AD0561F50EAD7CB37952D1A0E9F744FBE8041D1C3EDBAED08
9845046259EA79899713DD1E567F28531E7B25EEE41EAC3D35A3AAF9348E13F1
671DB099C4BA1079D778A6FA8FA13E04D067B55F84954495EA3D40E2620204AD
69A42D29B4D95429C7651244276269FA385532E9B57F1C2D2652933D4F316B85
7DD80D0BF6EC0333F920B9031F7626389BD3E392CFB2EEDE173452C0642741F3
C72D84A0DB18152D56A72ECE236FD3A3914574309A3384CE66C909B7040538B5
E7DE80B6DE055DC28C1B394FBCEA0BDDFC44213AD960278AA498A967D890C295
77ED868877C03C1100D8EBF3CECA4AADE5DCBB3F0CFEA4E8A5DAE149F6483523
881EDF02DAEDAE3EE928160342AE6170A01E13666A84DFEBC5A5DC04BFB1D49B
F5BEB4A8F19D264A7F4B1C259E4B1010AC355CD9D1DD0C6F18999CC47EB3AAC7
B89EEEB9E2F9CFC6BCDFD9A438C10C8C604E64AB2F9488EA7B1344329A6DE47F
D59BF4A2987AD80BF0054F72ED0CA0451E5D8A813AD6697E53A43ACACCADDACB
20AB6BFCBDD95D322B8478B7485BE9C86F055D7217D0F46FDC29D08D6CD71B9E
1DE1C50C1C3C85C14940A830DDD392F93F6CE1294B62411E6DF77D4A4A4D889F
D9D7A6AC1A896380F2762679E60FA6E763176E1B2512B04580233972D9211954
9CBE53B0896667EC7ED9C97F909B8B374E4975E93D9FD32DFA0AE84699D182CF
6C029A8E6564460CBE4D5EE06C24C4F502E4EB602446673621049928B01E78C6
FC5FC52B1CB9BBE02BB81F2886C558B9F2EB0504A2F8002B1B13E2A496759FF4
2496772170C511EE704B4308A3727F64393E392FB6E0369BEFA855C8CF4E76AE
27517A9B3ACEEE42F3101F44998749B33FFFB35AD715BB0DCDBB2D35B51730CB
8CC9D14A39917EA3055C85D171C0378299712D1177AA7469F470279E73A0EB1F
BE7B70C8CE0AE57426572795B0826AC0D3E445C98DBCFBB63EAE33B6E75C7E71
157123DE44DE684057683F923A2126FE2A788552F7A3483384B6E646EC0415CF
6D4002CD9FA8779392B0A780E97EEBD2450DDD1ABDBA993B98A90E50CBF66121
08A4F43DBE0FE09467C33DA6A1C61F02BC5847C65C187E5B23DEC4C625C286EB
9AC7E30F0BEE1991402F2BC62D606C038AF2B098A79351897E7B6222B6D73635
3AC4E3D4C203CC50342491D2F70A528226650D38258FE2EADA6E4E1D582F4723
F2143CD07E0E6958254B6D96C9E5485E26B07047B80849C0A77BEDA560ECAE3F
CD7FF41BA0AFCC480F261D7CE694477F749F82E5B4AFFE12BA90C032157C7688
7E325784917AE505A158C5B3D37C1041ECCA0BA811777B5019CCAC36997DFE14
2D7DD000A0E766DFE0F272E311047B6227781696AD545FBE5A80E2A32D7F8462
912966E9E97A67D036FCC3FC5375A979B78F473EE7AF6AFC189BF5E14FD0D21D
656B3EF50D47E923F43BEA1BE16CC04EB2A966CBF4FE707BC7472D56ED0C13A9
66448345074B1F2C00C537A79FFCBB1A784959B43E58965C260A89E7E3BB7ADE
BA9C882AAEE60A026DA25D51A46651A1EE03A2CA61DE42D78AEF016749873529
5CFFA292D5B7A1FADD93BD3CC207D8623EB59F6B3FDF302403A9C2D794743851
18652EB37CB7021F80792262A4D2F354389D1ADE3C1E4BA1EB8855BBFECA191D
4B80212DECEE21CB16BE0DD2A5B6AE12B959415091545A96B78F6F4DDB5CDAB0
611B3248836DD9E54650EE2D2F3EB92489594667525BAF1656DE0175464EE264
860B6E310854C80BEC744D529624024E35566FF0EF71D60ABD9581F43AFD7EE4
A7099844282972DDAB121A040D3D7CC97870F88C3874BD5C497F391141F2094F
8EAB4CC90B12E10F8AE6DC2081CC4C4860CBC1DC3427060C9118E755156C02A9
9A7EF38084D649289E4600F5A67256788F406EFD36886F531DB9D7ECA48701B5
D4511FF86644AE56F46392D5804039C0FF5C49D1AD996A67AB0914D83D859C06
AA049CA26AAE7F316592E7DE134F775A835D46A69D1C4BBD6B53124D7433EEB4
4C724ED69C8697D06A5246DF0C49444B5390076A43C82C91B982B19D7AA8B615
16F4BE3585A899E98988CAFF8DCCEBF494D5676912D5E868E3877779F910B174
AF933326ABB47935AC900487A2273F6AA2BF735C312FEA9A1AC7289E4B43B953
D2EC568761231C3119E073DB7DEED7DC4A04968B69F792644FA8B627CF923CFD
F8CAF8B9C8FB9AC27C8F2C2F86FEEE11AA06BBC0027C40E0F9DE9385F79D5989
98FCADE704A1035C780BD03AF71BAE6A930CD02B6C4D07D6D0998EA18EC7CBE2
73105CE6378A2ED913F14D20C272D14060533ADF2FAB44A60E6395AF687EC88E
429815282D632366039F37D3D55E93A63A397B46FBB2B6757DD564C0BF55E0AC
8EC66E031CE51B2D7D27AB41A21D646C236DDEEF1A23DA64A61F0DBF36B86A59
893F277DDD906E28FFFDFAD7E4B7610E6A108DE7F71F178FC7448D4C2E985072
E0811881511DDFA4A3C730DD7CF5C1E29104673D7270F35D580E8F3BA9BC94F1
31ED0110C946D421B42532E5BD4FE3D8B242EDF647251781ED6CE249DEDCA4A1
FC94E0ACCAB225D733E123302C0C9B054E97386886E8AB5D03167D702466832B
32DC035DFAF601E2EB6615E116FA9A44B8D0586FACDA34A0D0DC74662C3F4FA1
736A4D67CE0650766E29A79AD6ACAE003485A4C21B389F45F8022593DF513D31
54E07738A2E39D6AC9429F1A359112CA28BD92DC4EDA5C72C6F813D53F1E9C37
34B81C2CB5207702A9A0194F0DA8D335635EE2174E2DB99DAE9AF89BEE304763
BBA1AA81F9D74B24FA7EACEFBCAC72DA4AF7C3A7C06483A7FE49E9118C94F79A
DB280E5CC383595D57C51F4C969C464C1CB1712283C42A77AE7874BD4EE0AB63
64E2FA747EE9A89161F93F178D7A24AB2C747B80BDF0816DA99795CA28792796
8E85C3FE71046BF6F87A97CD03FB8CB1FA267164742287C9F05BAB96F90F2374
8B2DA4315C703763D6B35A4836A2AA71B39B7AF614B09A3D9FE54E8B1AADF323
785074E2F023CF26547355053A5B40A0BE90965C2C34C42797BA6CD6DB3BEC3E
2ECFC061F2F9BAAF636F17EB88960EA70F1F0F037DDF2061921A72E46589CC08
EA87EECFDF36B819B07306C00D700345CA2E6113E992D2BE44DD9B12DA394FF3
5F44EFD4D133019C4ADC916AA6F4F5FE8A642DA2E54F42220C01688C94717B2F
1204BBE9A32B02C569FE47B75784AF1D9300E4D8EC13C0B542DB50991CB26D44
DFA0957D4DD0665F0BB9EFD60F9D0ACCDE739B576500ADBDD6E0D981C2149AB5
368FF41481D6B8DE8662E73CAE558AC3FDD6C48D353FC68A77014365407D48C1
350E58ECA8C0532F762F64A11900664ED4E6D4DAFDF0C64F9446C356216312C5
F614AAEE0D8590A3A26854ED51C4A9A1C13E40363B10533A8BE1080729D86FEA
A2193FA6D6C34422C34643DA9557ADE417810A48AA2D73D0E0E9674BD4C83958
81C15ACFCEBD5772A959E2C99D13BA11BFAFF1112E2CCB84677CE03DA00972FD
3106F8FB5AEA60ACB194FB8FD49395A70058C942F80C2313118CDFEFF258E569
E39372E34E3FF5AD87298C696722D1D562D4A8478555769EC2C44150D849A0C7
D966B2EE653CDBDBE9C8F352887F8DB03D70F9E692F0A5A3160110CD4097E3E1
FFD0B18758DF9ADE231B76140270F0A05D53FD964DF5CB87A377ADBF202718B9
E47B1DB784435B7EDEA4BD19388DDF3C5B474F5374D80D469AED90BA08D8A04E
A2CF32810C68ABDAE536D95D46BCDAAFAA5A8301F7DDCD3BFE10B6C23F1C7ACA
39A6117CE4DB91E197AE348634BF44B2108CE10CCBFA1B838169A4577A9B225A
BF538D4B10A9C5FDC801B144AF82BBCCC3E63B027A4C3070D38586C67E8A16C5
60DBC0D4941CB6DF6A0D1E7492A6DE009C0F464678859A03070758C38629FC34
410FAEDB24E5DA8ABA2868658526B74727FCB164F21405F988059A1BCCE6038D
184DC74E2E186A664391B7B84E2281ABBAB44B8B81D92F63481CCEFBF4264ED8
900D17D9632421541DC60BB39BB060ED6495AE98F6798010F76FBF67CA47E5CE
09E60F0839874318C8389E298F554671CE327B099B0AB9BDB8192271B478CE0B
38151243D996CA5AEF4354211E3953CD7AD90239C1FFCA061A21652100B8E2F3
DCA6DAAB758BD7FA7D29C266129C91A2A5804ABE9DBD230FB37711C0E606B1CD
01AF00122F9A948F54FDFAC13A9C437607321D3E4C10059C1091823B03DC61BD
809BB14C7D4FD2C4E6057BE5F5C51A242002726250A2AB4E8AC7F70BCD0AEE3C
4CCE6E1793589423B942DFF7E8267BE5FCB0B209B090009718A49C6D7256EBE0
D843690DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E2C44D18720A9F9D707C
9D341698A75314282E4770738AE96FBE5811DD097EB0065B1E01ABF5E2D8428D
248B16047FD72F0059E35DFEF5A8F444C41D300E540D53723F45F0E20277695C
CC2E54A25041A959AC738AB6CDEA6486B7EB9914CE42558ABC90B623AFF1FA2C
B3EE64202FB703CBE8249A14C37B54C54CD69DAD2A5C2183103109D6F82129B1
301EE091D9F7A4D345114235F4BA289528C04940A830DDD392F93F6CE1294B62
411E6DF77D4A4B7EEDDB6330756507D8BDB3F97266E6A31040AE138A8469E758
4D0670E527BC95332D13B3980549FA02073BC0A45FD5AD5AA0468323052D1205
BBE6E794D7FC7861CC42DCDDDD4A4A3EA5B0A1FA84E55ECA7617A4112459597B
716E81960CC0321BF3AC8193758B4610EF33F894F09C9ADB7C4531253BFAD318
0DBDF8DEA31BD5BB3282B15C22014FBA359AB5BFF346F5DDB0BD589A54893931
D3F46EC04582CAC86BBA5E5E515335B3ACA75A5A7E5F16E27E8CBF4128859E2E
97D48C02844AB8D43C84FB19D8B311E2E8146C7D3D076F43B3F9EA8A848D7E8D
0E219B61F71B5D50F4DFB79975EAD0E794E842C213CB237B187A7B54F41B5443
3526B5BCF13D2DF1472686B200B23FCE6AC13FAE056EA1B304C5FA713A88B4EB
663FD7959C6D491010F976D4C7EA2FA6C18E22DD503E8981DB670CF5CBD09E17
6E265CF148A20091BA8B06B993088E210C91279AAD5922A3546551F93A076B39
3E4219E0EF172C72ADE99EA91ED60447A31981F8F13BDB8CCAC4361557D938FC
4AEAEA9E88AA0FF61ED04C6C105F0258CE2084F898D7571091B18B212D48B43D
6007AF07A0FDB7C9FBC784A1C9E0506142709DA99718F36F909299F3C570E743
FBB19F4F841939609B3A3D2D388DA4DB9FFD25C55A4F377E53B352830FA336B8
CDA7B5752C68FC0637C661E3ECCBB47543C20271E2233F7FBDA8094346C06AF0
1FF1D4784AD33491DBFB17AA6A4C7C8B2518C12DD5F849263DA8B6B2C38E4741
21239515E3E3BC6B36475154CACD25A07C74FEAA2928802611B05C9CA0ECCDCD
40CE7AC49715D8BD0A6803D8B14E755118F43CE13E54945B0A6BCB5633B1D580
346D913BACDF1DA8EE9EDC8540FA56F817D5C135D554004829A6E4566D3C3D4F
50453B4C997ED2C8725BFB415A30E47844548A823BCD7D0D5F3A1B0B5789DB78
6BD92416107B1E59084B5F758E509DE66F112F49E63A16F60B6795CF0D93839A
E2FB6D0B74207F0434C9599D055D786DC25523AF3CDCD9D834D54D210461A17D
F138F3D9F5C7AF9CED4243271A1FE1B018462BEBE17138AA07373412B44023BA
4E204AF4BF3AD6DC4CF005D393672AF65F0D015C86E975DA6622238B837FDE02
71B310BDB076E1E5D2187136E1E88EEDCACC0DC5B4F3268A8831F3391A7B2A17
E1A8397AD1D30455CE9BCFB29BFE08071774366804FA232E4AE9688E40E61987
035623AB8DDEC101D55543FB93BA5928AAADEC03C130570142D6849BC5B3D044
5B30D984FBAF9F56E6FACF7C07F249FC058275A863D921A182DC7C205A93ADC9
40D3EDD5D675EE14CA60D33D1C57855BBEF5F5B024656B80578308ADA3B73C7D
92DFFA19F1A79AC9BDD3F2F88D9725FCEA44A75FEA44CE4C991729C5792E1052
A4216B17742ED304B2996DC77BEA528DD00039AA51261D5401AB2ABD3C25D5C9
A2FA8C392A82F8DC836C8E33A5B5A2FE1B6C18912CECB8E244A91E1AD8064357
046BF2F498400D6D7DC137A904C96EB7B3CA2E65F64E840DCF69234B15780303
EFD10F9B6887E40A5D78E6B1EF8305A4FCE9C00A5845D1C7E8F51710B4F1A4DB
D8E6BC200679470F5503B71479FD9AC22E7818EF7BA80719844ED6735C3EB876
E244D5CDFE745A089F2679B720C105764DA0F3744E683F88050A9CC76AD73A11
DD873632665A06A2D13141E35806D8F53E8F34D70DF5C324DEB566724FCB712F
E0BF7EC9416F02C2C3116926FBA26021B38D6E21AB7875CCA19E45CF37211113
56D1F3E208CC54E7684A70232F0EF82F448559F8CB85DD9909A74AD694DD99A2
3A6BF1BBDD51D96BA4A5207AF1044E917186B01F946EE08ECE7455EDEA610D0F
B69A58D32F41B39AF49EB624CAA6C346A08DBE65B1C054C0587AFB35100BC76C
C64E05B36DD4226A16A7822E6D523A4B3970F587F38A0E89A05611B3A13BD144
BDFA564DABA6CEAF8A444AA157E95381808E974D7CD402B571D2CD823D1E7014
31809B56C504BDB1B7D50B99310A0DAF0C020C04EF94D0D2D096B734CE3721C3
71C213B6AFA0E73C0622E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE24DFA0
F0D5FF99461F3A9DA8509E7EE6AB98B4BB88F67796EF2B133E9F6AAE0CDA18F2
428EACE52EE14B5FE74DE6D3E114246049948C187FABF401324F9989DB792F77
814729157208E3B37B9CE3F1D0C616D951BA702DBBFC2C1B953BFC6CCA78DB0C
094BC82EC4F0BC92833AEBC6E11B70E1C0F3A18E54817F7BDD3895DF79E9BE61
9F55E9CEE03B1AAC8C7642DA07EF2F28988112405F80F2BC8A63F2CF41C075C4
DF19A0F0AD8A46F5BCC2BA12C4D68D803B840ACF32FFBFD9E8DC6ED9FA9FF379
C70C8E439578725B3F51746691838E600146F6C88E1BE994C9B91F45C562A5BE
309D5D926AE5C673625845E1981A3316F98A77F4D100499847E1102CC075FA12
10881D95D6EB2E7C492BC58C366F903F717C1A9A37719070DB1E340FB5AE3AB8
F380A19F5FDCDCFB687120DD2BE5305363019BEC0F407C2D4DA38EA432F0E7A6
D8221F23B7C33CFA77D83480566E36545DAB1BB0423C34755F88AD24878354F7
52B9EA1278E210D305677B9A4739C67ACF82AAC653B48D8D7589DAF8148D380D
77F8E7DE4DAE00D18C95C7E50A7AD744042B565746C211F30813630C7EE7DC31
054612907A0811E8EC4075D24EB0682E7602CC252BA8AC0287850F9073E30FAC
A80736C0BF828DC7E5A8F8F4569CBA4C2C3F91912C485C5DAC43C435E2F5527D
647EFABA9D63753FAB6F4BF4D7B35D01E3A198153B354914BA8E4C0BAC128B7D
4D61C2AA87093F0D9188350856B6E34E1109B826A3F23AEBD548E10C71A93759
6710EBCD5651DFA0566AF29195C653FA085F712258B8A1B9AABB8A860492155A
DDA8E704EC5CFDF86D3B00CA7934C295363D8ADB04340CB71315D89A0A06D4C8
C61AEF51A2BD2410FF027C40E0F9DE9385F79D598998FCADE704A100379B7D9E
02960F7C0D013CCE063154E006EC3DBFD9106F331F128C794D9D6EF7E18E8301
0405CAA3AF558B2772A5EB6C07862D3090AC8A81D8019BF968EE312103282494
D6472D885F3CFAD49B63B96DA5105CEC17F4DE04D7DB69822968706EB94D1720
FB2879E596D3A7EF942D50173D24763E96F2C385B9F9C34E0382F02EB8C8BF9D
3BACA0FAB8F42D90434A48E3F4993DDF5FDF93C9E21FAF162C920C27726380FB
D329D29ADDF290883487CA328A0102AF3247216D8F96EBD8D1EC18D48FEB29E9
68BEDA93F92B4398FA2E1D6CE1F398ACBABDB5DEEFFFF4DA29E095CCD0114C8B
49875196489903BAEB958166DA9C2088BF9C76C921024B55FC6D5DB5BCCCF772
26C214AE81832A9157AF1175AB47229D0F348EA969DF366D3E164E497528F422
DFFD3B72A168E84519D138C233FED4D468568036B06C33F7273ADF8875EA0E53
899CAA8CCD652C4D5F26A7E0A25B9C7C4F5C4199F13DACC7D8F943E964B009D7
64D79C3C26CF9EFBA94B4FBF6CFE9C75C0F505BE6261EB9A2CB750BE2E146ECB
DD16A1584F3EA2AB3D9A3783D8743C3597C357ABD25D6B8DCB78E81FB5B8D5C7
0217AA3648ADD641A983CA3BCD930955DFBE0DA8B9619E7108A8EAA94000C80C
AB2AD7ACA1D2D0827EFFDD05D4EDE9C2B589686F3F263BC002C8884F38F3BB6E
09768DA7EB3BC1496E363543F04DE5B6F6A9812C7757E990268FFAEFB175466B
422BCC69E8B69400CDE8AE2CF394292067CCAF4F4E32669BE217C096E518A781
20259FE222179A0B410CEF30DD249F2A5D23E5E47C9ECD23288E6C069F496C57
3ED18C446A9892616611F8E6172063E0FCB7C1518524619525DAD95ED33B70A2
CB2356886E9B27AFB10DB195E5EDDB1006AE12755599CF67E27E753AD25C1FC7
5E2D35E33B794FD8F19F03162747FB4086DE7B1C1C800BFD4F229399392038EF
1BF9E659792F783316889221A826EC20ACFEE1E14ED854D3DED0148890086099
5F1623CF43A1C00109AF4F59B91B71B9682CE60E17947EB7915938EEC8A66836
140F02D324C7B4B70BED56A8FF4C1A2EAAAFDAE8BBB5E8E952B17C07E69BBE73
C205BC659E191366CDCFD2BD52526414BE2E70272CE823A43FB0D77B53B2866E
7F21C96896DA4DEE11C94AB03CA1A32018C4B034272D9B8876DAF47EF08D2DB5
D2936909F3E8BA0936E751B73E754A73DF6685DE51FD6A9989881AC4465318DB
FF9E0E5E13435B4A830B5E77C42EE8E41CD5CA9BD0C6E714DAA34F8DC7594332
E895054E5FD3DF1EA44126CCC0345812AFE08FC784E7C4C4287D887EBAC1683A
8CE358ED73989053E0F420D2D4A09E9CFB29726F821A7787E5F817FB905AB350
D466B4D20EE18B679FC1AA857C307C4D2AB54597F47496C8889CF6CF6C6E377D
41AA9E983FF07D8B6356917744AFA6F67477386B69D3DE885AE1F8B52B0FC756
5D358E8D01FC5A9066DBE8E1FE86726B646E864416CF2B7E1E9366A136B9837C
80FB068B3D2290FDC35C286E35763A02A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans8-Regular
%!PS-AdobeFont-1.0: LMSans8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans8-Regular known{/LMSans8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans8-Regular)readonly def
/FamilyName(LMSans8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMSans8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-446 -314 1510 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102E5EBE9986
D95806FBDB9DD41BBEC9E98875643E43D499FFB2E48F58EF7FA59843B8CC092D
AFB67604D9EE4CF2B87CD20222F6DC988B80418F8EBCBA06EB7577DC5FD0473A
55FC62B9B4DBABB8776941636268C7D4F704AFF1C85927E2D0C03585B60D5DDC
D07A1FE61288043CFE477BEC3F1A0BB96666D44F8286474186BD74037C208527
135C090597DEC81C9F985DD84C889A3A32B3805B9A653C816C523D14F6215B89
5E57100A2E43AD20344D45AC8419E928E4DC97E1B1B2285602B23DF89E149B9C
975AAB575A17772D4BD861C8DA1CF693AC37BA57CC51B9CB825607CFDF41347B
D09648E797437823A12DA3ABDAED3E3E1042F4B4BCEC0A9CB2517C0047ECDBDA
507600F57BF0F93B33764E47B5572573253F1439C293C4CBD1F018FCF994A313
30701B46B9E83B3C16E17036EAF2F0072D5CCC8AB293EC15697C72C097565D80
BFDA02AD9357437E60FB57F31BD6E172895D0E1212674C1401A3CE2599E7CED3
EF0A11750E622958C887E58600672A1AF43AEEA1D9BDAF69147E613C610E127C
9C8190A5B3F5F9A3CBC6A9A61D1970F030ED0D623FD6AAE34DD12E7F12B00204
42C239808277550593ADE8004B53B5FC0BB124F58965745A82152F9860FA6FFF
94BFDF287A8FC265B6B0411ACFEFA520E402DA17AA6B6D0904D8DCB1A56E96FC
6A1C7300A4455F6FF98AA6226337D5FC699B1A0900F049453DCF3FCDC8A3E397
C011C9D2E55D0C2845297B4C50597F58C82B0348AC299172DD191715C1FC81E2
BA9F00D26B3D3098006622D2740A0EB0743B1ECEADE8F9697C7F782265A58C4B
7D8B174654EC7F3BB8ACCAD729170D100F5DAC4CB7CC0EEF74D662EEF94702E7
9237CDB6E3DAF2C65E5A10DDD52EB236C227C3DEAB315E5CE479878DD60BCA19
564DA461E2EC66ABD6E7B4952C21C2D3E37C7B97175C5668DB4C64CD1CC23F71
36DE0E644436C67784A3CCE2F3DB601601B011F527AAC3DFA31A51A29C8C564D
794FDAA23AD6B4540055EC4403642C9A62E6138192E19652A050AC81B2D1D4CE
B9E40F7A0C351F8C72E4CBC21733BDE3623932A66FAC82D253D8251331B62150
06FB1CC2CF016E6BCC1D7732019B86C11D799B79F33BB09CB6771F637BEE71E6
FA1A18E90331A61A3162ED7589B05BF937ADBEC739FD624F6763A3B951E33C7E
F5F1AB73604DFCC2AAE3C9DAB3E303F8B56D1161CAF14DC202B636DB484CCA84
03197D7542BC10E7F9CF2FDDFE83B006FE1A6D13C6312FFAE07D32B62AEA32B5
8B8D127C00F3B953CDA49BBEB1B913570A51B2F96D302EF8913C6BB60B5D3924
78A32E11CECAEAFB7D4C6127C4A26EAC47FC77E895E36ECD8881C06314B93496
2984C7FE400CCA5A5007E9E2A5E16116D8483EC235D20B206326C7E4FB54256D
88CC4BD4DC84B5EEFE217BE0B436583B1D92B5C563266755B07C1E9658B8DA9F
48C8E10FB7F29D1EAE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA5D9EA54F207
742D31C0B69DDD41BA88727A80869626C7998F17B7D86D4D6F2D1C5324484C73
C05C61C3CCBDF28D048F84AA23178B60E4042034918287418FB5133B36447469
4193A44EE745F76035D5073240736B4F1BCE96F57A97F831842958E6B6517018
BFDBDC3423CF739AC5B38303C3D4DF196C462C8742A5F062F69B935148E81C55
7C4E1B77F5441CDA5FCF63459352EAD6B4A2A666CC5D85855641CB31507D0100
B13895988AD2D1F4DC2FB40840A0CA3622532561939CA66F3375B5C3CC39D956
0C010A1363F725ED71E3442C0A00DD938476920CF67869A9DDF5A299FBC13BD0
1C6450DBD0DE1D9CD163520429734028AA2CB185F711441471ED972022B4D84C
F007C1D9B1D7E625D684C53723CEDC5E42A4D17F35791CD367DFB3078ACB6507
E89B97158EADF677C788A0FFC3EEB38D5ABCA560E04852E7DBC79C2DC8561F80
5C0DA1E125B17E572A8DB0D0565F05E271CF122E3770490B395E4DC4AD00B46C
36448FE2DB35CB45276DFB339097E9EF935AE0DE2D8839376A78D70FA44F1974
ABA413D7143EE4742916BEAE0D21F24A3E4D146DEBD198727ECFF842EF5F146D
57D0287D62D1A34793E173D032F71193B2E2990ECE96EF6D712B4FD780875393
92EA302BFF0EAC108829820238728C6305754EF0BDCC8B7204CBBC597F2F9C95
9B69948674FA133F77935F24EF5D7522B401F3A783BF474B153533C05AF2DF8D
DA960CEED2FF28FF48234265B4759B50D24BD711DAC557EF4F768148C131B265
25D173F07ADFE2C2AAF32AA0B556EEE562106998F7FBFAF7313B1FA589C0DD6C
A9B5A8D9DDD843E6E80330277D6DD2356D80BC6180F2E924BAEABAA6E2628007
B37A2029F3D9F5E1728F408B89D85806D6A6AD7618A93DC4A85C4076A95944ED
748D1BA12F86DCE859F1F48AC037F26DEDB1C48ABA2768E9177E799855334DAC
3760EA1B589B5562F3D48655DACF49BA37A4AE429B79608716438BD99613EC67
5F40200FE34CEC934F99C14E909440B5457AE7487221179B9885F7A063D99B45
1BFD666E82909A1D82572176422757988D43159FD814DAF574818FC2CBB20431
9D5AC85C1B43EB9623DB369D2E0217DE72D65B0B051B0CAF9FBB9BF6FBD49BB6
7E0D942F8A6C4128F6504B102B0745FE0B75AC33767B7F328A8E8E537444EA52
7D0ADCC055264CF38070833FE36F3E9E75ED639A567075C6FD56077C00902CA6
AAF0C12EB5696A397E624F888EB2B5E2F8CD8F21B4A6E6FCABA356F58CA99ED5
3039A1BFEA1C40DC1AEA90C0959232198D1F4E26CA8339782ACB8A908C5E7CE6
98479ABD173B95479825415B084F754454ACBF44DCF4961F68DBB06449776DAF
07138F356959B8327FAA6CD71CE5EC69F97CCC84646C78399E063C0AAF44775E
6D1570F08B3085066DB8C38AFFAB5CBEBC7567A0330E68DBACCE1DBF6D7A0ADE
9BF8F8AC548AFDFF12971C763213CD781D208D0E5BBB31FA3647D2B0AA7E0124
3B0C3964184341D8D1ABFDDAE449FE68185327170B046B27F59EF54E9FB7783C
8A81FCC602CCD47F4BFD25E5D4B24CABEDE1436754701F9823D97F39E01DFCD7
F73BDC4069607F52F09F53B087A3E5284B1C41859808C27C7DFDF4D22DCC6CAD
9D6A335B2BCFA6D000A7C579EA6EFFE9BBC688FC7FB98005BF250E91BF91F719
E5568DA27D69EFC526F59DABA970CB94B8CBACF31A8EBD8AB754A936A7F9A209
8050930339C0DB023D08E568308EA1D4D5663E33173E5C99CB752EB3EEB45A26
663E123B8852CA9D2E0F4A930BEDB6F4CE046EE0A9BB4FDDFA475AD631D13A80
2CB7B6D960A86183FAAAA649948FB3F0D55900D5F58F37B8866DE8F3052007F9
104EED7A5DDFC7AC37A6D9E49F46CA0B3AAE98A934A36CCDE8EDA8362FE97F20
9BA574B5D5D039A77BA46591F6E45F73DCA2513811A6517DBDFD7D818F48E683
5C26FC0C7682845F3E4266B7D327312EFB770916FBA0C65A20305AA1A087B1CC
97528D5088D1E07DE9A23C9D41F23C77C5072809B2819B32478FD58A974363AA
8F4D622C39534F12614E0DF155D72F1EB25082796DC38497B4850BDD181EB8A9
6ABE64730301A06C16A74FE25A3C3068A83A513556D05359A393B6C6929BADBE
97502F351D81614CD73E27F230046F89E913D02B0326F68EDD3146F069085199
CC16681FED2AD0A7B141001A3FC4C5D21126A66592F51AB6DEC1CD3393B65C2B
CC478177F585F15CD2912847D0F53FF2986C63691FDB76EAD40D9798E28E803B
BDDE19EB95FB140A227DF24CCB36C662C7BB5E8F7DA664D1CEC437E17D6BF29D
BA2BFA67306C1B77FBCE256EA412CD417BC3BB4B243FC3A0CAE847B3AD58CBE7
B8C5C86283EB434163C89CE51D484F7E49765600A125D6DD423540B78E744459
2036A2427850EBD6C17EF1545EEE457EAEFDAABEAD2039060F8B6BB4C28AB1B9
A5AAFB7FB945AA4671A6A97BD8C6807C21360D0C3F7742F47CBC27562830521A
7BE2EF1D993F75619EAC1B3A7A43761856730BA49A3260BA0E094D9116F8D9C6
46740F45157716658C23144649A72A043685E0A6F25531307FA0CB5148358692
A287F5074A8C01BA5518911789F7767BD4551B1A301528C4F0C5008F19618E63
B50C60FBA08F6449B676DDFF2B9DAB14A41206C3350B9DFC1DEC1CA57547928E
BF55EC09503BF1AFD89227A574BD8D6F6283BF7C4A30E256A366A29BE5ABE787
9DB7FFB127700DFE7357E50376A9CE8E4B6C4211CBFCF9709AA29144F3A40000
E75FBC7E5D5A2A65C07D4FBCBB8FB94BE05DFF2B3FBD09F11CA9C72A278C045B
1D2572EC08DE1424D242091780720E28A4055091ED6C0F733B035CCAC9A2CAA2
8BC0DF33C013CBF06EDF7DF34EAFE36D3104DADE5D30F2104A0C54D49D520611
165AAF3711B005AD3DFBE56FD60E89A4C5C968742603F4FDB0B0B6D446B29F4A
0504DC2F9B420111821EAC567FC09B4517D9443FD0145DD7514B2E09AB2960F8
D54E965C4D8F99DE6CD69EFF58A2B6AC9AF7769E0A6E389AD0B2A5D10CD4C41A
40097EF75607A937A95839A181E6E55835DA3E81C8846980EC5C16651039C0C1
ED728808427CE96611D1F832FA6DB2B8783BB484E18505891086618044B4EE0F
4C3D3AB7CC8FCC4707DE223E7620AD1E77F2C9F7045257D254633BBD96D5D6F4
5696C589BC74CA556158DA32EAD64629BDED7D3AE5205535F92D8DA29782A187
5C6C8E74B0C86C0D3A604CE160F8ED1C2FE09E0AF9A45096060911999B94126D
B0DA5E108DFE59AE74C66857C7516D99DD1DB170A10E67FAEB5FCF007BAAB24E
5088794F62025380E1B1985AA631AA151879B37FEFB6F84B7EB6D57CDE9993D2
AD4F956BCABA7F25705254707445E43F11298F2B2836FC9F145DC459ADFD7815
41EA03A5D6704780155DE7E7B00A8B99E733AA64B78236F752DCA4D16C84E03F
22C9C61D0EF5C2431DEEC9C12A440FC332666E5F5A99C9ACC79B6952D59C46B1
586141301B6535236B09184689D672FB302CDA74DB0C43A77A643142F5804346
C1264135E15756B43D90E252FD16B3D1D07C190A30D72F4DC185613B31DF5DDE
2713384F4A9810BF94FA7E0D033E338E149518B5493D7E3500577099B505E655
9BB8E9664CFA5CB68AA71040D5DC521E1CDCBD27F6AFE6B8BD4E941D2FC154BE
A826E96D9C215ADDF45C88DEB19A25ADF96AA92AED7E26BBB3BBAD087C4DBD66
34637DCCE4848D2BF6E4764ACF0D6D5F26D6B5DE97BBDD74252B3DDB8CBD26D3
8BCBF23B4CC377A5BCFC19948EF5E45DAA4B5A860155B96B4CD17D25C1F69186
16CE476C12B33F2388C1E140DA4004919027257F2186CF716C685176C94E1A15
8E799D50610BA45F2003568AF44E2EE4DC9904BCB4CBA088D3922EEE7150107E
3A46EAF7928ABBBF6F2EAAA1C54F2F501AA172055892C47614A9035E79B01536
93796F91BFA1DDEC196549ABE28871B49AAF2BFD4E836BE55BACB3C737A5C73C
170B6563DA6A0785D44A92E180DD7550442AE3E0F8C1178EFEEB5152EB512122
E9A215EBDC5652B555D498479D289A015F8545F681333A6EAC4EECDB1B8AFA3C
E22F8B07A8C48FDD4D1333898953AEE8244542BFD2849D497F9F8E166005CDD3
ADE33F6D4B2E9C167ADCE832575A237C9637BC3A58D7BB96AFD1BD3F1808F707
5FE193F6C8EFA3CB01B31B63E3DE2D592079B66CFBFD74E98EAD3245271BCF81
1FAFEB8B4AF97E8EBEF4ED0334BF03EFA1554980E13B37FEC33DF3B23FC7BFED
A3E15BCD8494AEB75615C7A8F64D13FDBD4FB5AE98A4AFF2CEB1F92DC495B23E
AB87B339CD87B09F18BB72913812F041D5C00E90C1BB3D58C1A115B39B76EF79
2F7CCB492E4F71538878B4522D1AEE2980FC421B2977AF4C08DB2DC98289D2EC
32B466D21C9B802FF1810458E2756AEA1FD732B806286039E75042D590F24D8F
E9F50D35EC6D1C9950AB0402644E83479EA265192B41D8F3E81B4761EEEFBDEF
7E850602B6815EBCF3E19A3AD3094F5C09C98519210AAAE8AE94F744C02BF2E3
4544BBB19D1B5F87B2B89BE7CBEB6ECC8848D17A70BA8DB8DD6E5B41F5D52781
B40457D3C1C200483C0CDAFE837D984A761286C76125B491DCE3489FA322F968
E512AC8A5FB7C4DADB75C72FF726049E86265687368420C97F3A415D53BCD1CC
19ACBFC6867B4BAB0208DB3C5DD474D8829CFB026CD1F9D4B7A5B18F88BC747D
C2510E822259DDA43D30C33E916524C5E3561BDFF89136385827B7980C2FE0AC
B1C470121D9FCEFBFD625B7348402BEE59368220EB2EC57A6F5DF049C399BB8E
5B26813C6054B0EFD355444F1EFA69BE5A72B52D8380C5112F4CBCCB78C3DF9F
8D82D9EA22FC46617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DADF99A7D2E492
2E00C3EE943AFDB0739F75F0F1D250DE5B233FBB1B124C8D80AC2794EDB253BF
AD5DEDF0222EB7D72274BC7E475C56DABAD14F32804F0747A3C6E7330B156AA1
E3C01687A658F558B8F61516680DB3C059EECF1C3FDF8417EB931EC402CA0F24
50CC18B4D22872FD58121FEE981541B50456D7D18E788D2DF9753691F4823461
92B463FA2680A5A1E7FED1E46283199D5A2682BE207E04BD4B435A2949159C47
091A0832D4CEDA6CF0852CD2FF4B5719114C0DA6D1B0AD44E8FDB48008504174
7A1895896B8F275D9423DBE3730633BB053B59020B7AFA82C7CD159DC7C72517
CAE1994A0A790E475C4970EC656B89AD428BF4E1035E92E55FB21E639AF66E6A
3A571A8250C9716F9F265E0F76FFF660C54AC08131B56DF060B63E750342AC61
5286E4AC04B289D3EDBE86B8052D096C5864CA94CD5BA274FD97632C6C0F0067
967A1A308B96D5816166A81DF85561DF48DAC4C5DB5A2AA6B01BD0ADBEE35AFF
BD0A14469DBE041582D8B1BA5D736869A1DF71D59811D25FDA43865CAB8E8A20
A9326D2B50B9700E88FD90913D77B6417FEE8C039C12D8CCF516AA5DD9CA48DB
26F515B6576AE85A29BA65112121E1DEDF8153AF59E1B079468F08130FF077F6
6ACC0449643C295D82C70EF177EC0C2D3AAD49BD2A0BF511A722FDCCD19348FF
FB8CC7A4CFE322EBEEE15E3395B062B933EB55FA52E425B02401C79FF0F48D18
32E838472A8F1A94A91A8330634BB7968281E22133A947416DA2238038CC1475
89C36C8196F901BF6D9816FFA07969DD0CEA6C9669890092316F6A01DA7224B0
6AAD1687DBC419EFE2BDAA0F4D090D274A7CB5AC380B1B2006B28BD56725C287
44060877B73087CDACE34651547823DA7503D50E7C2E9451C8658FEB205E020B
27F5307E54B6F4A4858CEF9F21FDECDE3DC0B24BBE34AD7B572EDF436436EB7F
ED0BABD23AD8FCBD71934F0597C65122BD563F761BA4732E96D5BF346C211267
BEED7075B675167872F7A506F4B9E4896A4AA5AB5B5B58046899C9C5993E7302
C870678DEBEB07503EDE0435F57FCCEE637518F5812EB351B6558151AE0B43E0
25D14171FA920BEDF8462A59235F808BFBFB410C50E43A1EC101E5DAF2E71827
28B38441B5B6FE9AE8268540A9FF11ADA29B5A795C29AF1758A378BBED7FC315
2013534861328A5E4673A4B180A8AE1BEA97194C88BA5E67BF880AB2CBFB7909
B93FBE74BEE6955D3E495130BB3D28B42945DA4A9455103CC33474390660C14B
978158418AEC18D647A6DA9DBCF5A10C5007ADBE32E5D0E412FC23069DF8D162
A2B400EDE05DF412F5D3AF80887D36894E21A64F50AA7D53090F61EB25B9FD9B
CCEF9933F75C879222847F855960CC952649426FBD46FBB44432D9D6D92DDE4B
0DA61C03BF4360FEA49064FDE911D20A240ED2B4513467DD2E9F214E625FA0CD
4248B15A936034060334D2136641C1AA345C7642D1913555EA13D1678752CBB9
7A140C81DB516E544E04813437A0B89432E2929DC4A9F5B183E06D2DE8EE9FB8
3985B96CA9D8FDB132881DDB7B0ECCFFCE5E082CD7FF922805C21AB9435E2DEA
D0690379DD5578A156314BC78AA750E91BAC03948D44CE6AA5B6D92365D2EBD0
B357D962770F37D4A4C27A17BEFFE96B9154CF9B9E70BE65FBCF5161148E1C76
4E93EF4D2B88C75F569346AC2B878782D12F909516F74D56C5A927A2E7001730
D7CE823CA5968AE062DA5A54C5CF9AD095E0BD9530D515129F59FC510A6ED785
9DCC5747C69296B7999229531B651E4C98B0BD07C1AA85C261C55F6D7C5ADF69
1D4C163883BB2994826A94CA34D9E5B9B0965C52B191AE01721D88A03BF5FAA2
C6D0FA6444C3920853346594F0D3026F4900770B39B288622172E4D6171BD9AA
3BEA81915B81C56CD5055CD7F5232CBAF282AF59619638A93EC62A029471B607
8CFFD8AFD7D9B25F63CD8CC50A4FC59C2F3F6FD9963174FF863B57D85D994B25
A9E343F133B43FBA30C52CA8A503F3F93E3AB7AF6043F860D5D548B166C25921
D8DDAD33982A420DA8B0FBCED45414AD2285ABCE7D352FBDE6EB1E0F52B0D234
F2618EBCA323CC1B73E3AB241E4E95C8D833871AC8EB9E6A94AC62BB8D3E8500
6332DC7EA4CBCF5EB59A95A2B515DA86A293CD507153759C247901EBA8C4D36B
5C5E989B17A3A72248A138A3CA8622749CD748154EFD706AEBA91893597A866F
289B75B6C623DDC0E21C7E6920076B0AEAD03AB485F43DD669E9F6D78F7F3A3A
F0E163589DCDB652FF0580BE54FC52BD298B1DE626D7398E8DFC0C7BA115D338
8CD49E15D50DF45AB5BE763310556E5D82BB9E05390DEEC769C63967F79359D1
B292A2B968186C25AD5CE0BDA86D6C602F27D4D17370D21B4429ADC336A4AFAC
6A910A6B158DC42E97769D57AB2898FA62921A8D17FA331966743BB807BC62EC
CE310D8DD33666152E7DA26D679ED4D87F89B2D3FF1A88AEC672999B6FDBDE53
381FB28546087A7B8E3203B60A8DB8357CF639B2B4830DA2FFDD7B721978DD64
1CDF0C0459112C4AEC29A28E43DDFECF131E27A82FC1B8BBE36315E41967D1E0
1B09FE682EE128C28E930169DBAF16CB022D5D7BDB13E2A460620B8ED0372A76
B058E4BC1F616F6CFB2E9A0EF9AD85DAF560741A702B11CE084913296F4A3C5D
27DFBB1F3D0BE971812A7A83450DC0675C45C27A1010CBB79A5BCE21BFA46CCF
D6B4158BE06C768C73F344A107706B36EB97D9202C5763599B3C05E1464BA145
F368FAE4C9D1BB679CBABE4996D7829CA57157A0C21ACC8EF55F8E9FF435AFF8
3A7BFEF9BEEC854EC912ABB90EA785DED842C2A0642F862E14B66919AFD491F9
8D841A2DB2F981BFA79544B1A2F756D81ACAE235A58C64DC17B47C1C7C3A820E
A12732D95E3C21CAA8F9B9C27FEE8DA4DC31DACC0163FCEAC4FA882EB97C8739
69EFA04EE0627DD4C2D071F1C8E049E657F5F14377D75506A96CEEE43E33140F
8E91CE236EBFA996C51679100212026FEEE44CC3409440737FCCF58A9899769E
BE684B749A1D5C37CBFF72C7EB5AEBA5C7A3D9BDDCD1ABD7F3AE4C917B3A01F8
83767E8A5D9EB331968579C3DEBB3E382BC15B2751BC21E2E5AACC0CA211F50A
13075ABCF9F440C99FD25A8FEB3C0FB8C09606DF50490C7CAFCE844147A025DA
F903C17E5B0BC25F89AE84006216080ECAF450D8F1E3D7ABD94719F604EA68B1
108EBB5BEBC3EF465BDED4C73738D894770AD27F2BAA1A8AC49D55D311D7B27D
B7CB8AD061C3DC60016EE1F4848CA1A8533BE7D472D0AF407DD9F6C4238A71C1
F3511F227119F68C6EE144530AE8BD1FA0531017D74B47E173553F7727CAB5EA
16F460023E48C20D335FFE5E7239FF72332FA245BB59D385B940205426B2517F
B74FF8E56107FDF9585A1A1DFECFC086DD0D6D414ED8BA6E0D92A29E25918B5B
56C2935B4622F20B9A0C4CD3F80103A6459421C53711953FB5D85F36DDE63115
3EFBD5D42216945BBD05647ED068DCD0074F3A2B08A4CFEDFBB907B363DD79AD
C98AB074AA1C50EDDC6EB68C5B4DC1328B9E56BC0BC1104FF39EFB2360FD3BE0
34FFF6E650B0D9C5050670ABA64C062B5BB10DAE3331C3E3C1B56AB328435C99
64D0D5394345768F4A78E26D7BF1AC08BDBB8351C7F5C1C666E4E0987446F1B4
2166292D0CFAB1AAE6541A3DB6A5707CE98CADD70F81D892B4D2DAB0BABA6621
75C52E526A643F7FA4217D853967AF5E3659D9628533AE56E657371F3508EAFB
FA1E8FE0EE6A8E816CB79B2B26E424A78CFB02CECC37A2BF35D037B2C2EAE5F7
0642658A3C3543EFFD0999E7B2EE12E26D4E4C1998280DA60236796D84A935AD
41A3573879103DF7CE5F167720F3A7F94F2720FF757C2D2BFAF8B3DA862DA1E5
E48C0CF13D0BD5FAC207B7C7FC5AB1BAA9B3A11D34FDA62658B43CBCBC5E8F5A
A03947553BAECD57F4EBDAA673AD0E3ED5F7E7086C53B79066834B3766930924
14F780C2504096C1090865B9E036CC99A4EEC434992490906571E52F477395C5
C5040492FE6426FEDCC330BDFB5B09ECC3EA37300DD4FA4F7BBF2B252A533157
512E649A7B7F199EC63345AAE11DB0D025D8AD3593577DFB0B52B5ECEE8F47E6
C1D8A30C4E5E880AA0EEBB2A053C893FF1AA912ECBDE9B49AF18F66D1BD7BF73
82F89FE9492B2928C308C0373A7CAC1D612C9F3A9ADCFCF2099128D1C3565C6F
5FC2D898DF5C1E59CBDCAF4903835F153170BAD72480247EE13CC0281DC3FCB3
860E9ACAEC0BF95204DBF32AFA9DB2C058F11BC061D8BC48CC05727B71589342
370F8A366E11B3623E4443766368B5169A98B504DD1602FBCC202CC8046A8A60
AA24F57CFA5CCB8485932F527838C9E2F1889D11BA06271BB84AC9AAC072FF6D
5AFDC5A833E61CE4EDBF5868EE0A5930150D0AB4682B25D8FBBB10124FFCE47F
7C93CE9C3F929B0536AE7B9E288A7EB26E63EA1E98F44C92FB6074006BA0A1E1
A4A307BD9015DA3F03FDCA07EBDF9B71492C4F03427D0C1ED063847FD3945335
DCBEE971834F0AD7CE43DC88D5C9BAA5FA0F4D62066C0B7064578316C7C7DF63
49878E52C52E1051BD8785CA07029D855CDF298982AAC5EE9BD88BA864E1A1C1
86C7A2A8C8C70BC438F87957BFEEE5BC5752A4AD500E86ABF0FC0FCF15D09DF7
5C25F8B99BC1146D1509513ADF1CF627BC4C0D8984D01EEF7E17116174B74694
0DAB65039011AD4C5F22986EA0FC188FA30CB08809DA9EE88D490FE15EBC6A69
56477E8B7DAAF1AE28A6B251C5305E493D7A642A63F8C286FC69F1DE5A80C4C8
B98AEF06344921545DD99DB567D5486DF8C29864621BB2A03EA4F70B7ADBB35E
0F1641F668817E64481B4479C7387C9F8F912458C1965BF8BED4AA857E62B7BD
008DCC0B7951B385F7A70A6C3D6D39AB0BDE4E8A048DE4026A9AC527109FB09B
ABE1DE6A9F210B590563EA94F930201DB615B7373759BE4A62F1370FEDE056CE
E265838696FA0D3113738E35732216736F12E3E76D416DE431823060F980576C
90A5A37C5AD57E9AEB2A8717F653103DCAFB4E169855DA91D630F30DF34012DE
1F4C98E20602B36EB9C4EB49C7683B7056EE108F5296FF68DCD3E59302B013FD
FB3268047B4C03A37A680D1F806296BBF9424289AF41637F1864CE423FDF8BF9
B3AF739FC73D34077A744AA6D4D4E5B2BF51908ACA6489430DC92FFFE690A0DB
944262EF894985B1EF68F2EAA7AF9A3574C30D1D4FF53CA84EA834BC8DBBC201
865DD685BF133F7881BA8822D56C27388B0EC125B64BE6317C9BF4DBCE888278
926234B1A806B6DDA724D58044898340527DC91EC9A9A4D22ECD9BA6C4DB5C68
869E97698478CF49C2FA073AAB78D5EEB828B2BA0301AF9FAAF86D736602AF9D
374A8D11CB5F883B5FD6AE51F45362FE19DD066DDFCA49FD3906B7D32C787DE0
6908B02C5F6A9E36799C7822398C82C22A635BAB5D9FB381736C401936521879
1DA09A09C7AB12BE2E64A6DA55B6D50CE1CCEC0FE6ED74FCE37B42320F08639C
21E2A9455CDB01575A2180793394A0E1030EEB320FE1885A52A9BA8F613CF40D
D5AEE9976DD7E75F82C089119BAEC60CB65F11381291193A712212A6425836BF
B7BA7B0C86C87BA65742504DB1CF7C854DD6C6680E12CE77ACE2F4D31C0D4E1E
F83C805ACD94C2BD0401740C0E41DBEFE21209DD13BB4A5D5BF7E2981B87B73D
560A8E6EE0BEE3408D38C8E6AB4C1C7ED9F52818FAC02AC17A1D5484A8ACAE90
2CE9F5395204A7BA3D11006B763ED08B3EABCA1644E74824B92728B491DCE348
9FA322F968E512AC8A5FB7C4DADB77BFE2F3DCA6DAAB758BD7FA7D29C266129C
91A2A5804C165BAA2937974DBEB542E195EAF9D49EDF6190BCA5556700F11CBF
727B0E325EB254CF8F155C6EEA98CA31FA41117D53898BC4C53F469D84294458
62B0D901E4C6095A0F31CFB809A7ECB96980A5074D286ED71A9C482E00FA6412
F6D7A5FF13619795D13D4D739EC41CB885A482238364C123D24E6BF1F85A176D
DA23594D09824B51DF140157FD9954B3CE4C9FE714783E7391DE33C0C05B40BC
ED90CD07200665630896637DFFF8E3C3BE03C7C33CB54FCE37F1FD33C37C611A
FCBF59B67AD80F8F4D376E1B46A28A6E16C1D0A47C331FB855E174EFE813A62B
E4F0FD65715A7B15F3D0B586BE098465B7C1DCD5C9E3B84E1234A199A350D10A
B59AD65E34657555D9DBF091329A4C04DBDC48BE59495C29181964C7D81988B9
2091EB13E2F1277BA6BB7B0772E386CED36FD33CF7539004D4ACBC940EAF782A
3DD97E9D9C38B45594AD68EE45E874625229E7C4090734C7DEF2979422B6513C
C7C19248096BA7FAEA6747165330E085296C2C6FA393DA5D5EEBD9F1716EDCEC
7F291B0F56627438BDF3F29A4D69733BBF3FDCBF836FD5BAE7AE33C0D20B9B4C
E333CFF4D1EDD10BD74E5473A41499E485AE308B92650A286628FE70E07414F4
11C092F1DDB6F6D0887A85E30966A059B1636E4B1AEC751061030E9698C16AD6
D07C9A198489AA1D0FA3717BF3CD52E7FC86C8FE3C7977A14DF4431DB3E8171F
50DD33D78020E9575406D4032E09092A9C413C838DBAE1E76D2BBB2ED50CBC41
2A90190C806D5A035A04E3CF0FE3A71921ACE8D9BBBCC1F8A5D0D4CD7AD9F3C6
EA65504D9B742F99AF7F5AE6138953A982A7A78D7EB862446733B7CA2FAB2836
0724E0928C85C21A9F5D5DF7C234CCD1C14AE308A9DE8E06E047C76391ED93D9
810AC8F694B7DA252B4BABEF2C617F5933E0247210E7507788879E11A2D878FB
2541B561AEC1AFB3BD19017BF75A3E989BB3D1C77BF9ECE6A91142D95593EF9F
D51E9849C7380B4F6D6DA2E75BA9995538603D1E43CD12C950ECDE7E71917C4A
1E8A0D4EA9E7891EDCA725CE52A4AFE9A5E03C0141CF551118083D4CCCDBC9FD
23877034BC39F53BCD2B1D5E20C42CC6EE9775B7BBB561A00DDE1103847082CF
3058E645DA10A428178BA48DF74D54DDF7FBD46D78D457CD1912F93210F98194
A7DC809B6620C88AC1B10B7BFACC1EFAFD38D3EDDA0F89CDDCB653B8EEFB1214
87E9161E9A091684715B666D74F575E694983CDD4CDD976F16FA6AC990433A43
0B06E78424C90FF18A0243A8972172915ADB7131F254AD9E2C534A411593D10A
71D7D05EFFAFF37F9AF74561741AA5E41C758944B9AEF8D40818F06E21855D7B
A2A5D8C022B7F5F331994740A0BD185DB9D94F068D73C4E7576C59C296CB3001
3397EA8FF770AC4F62CB3AF8B17490893712912790B41EF43230CA91E2599B2F
6F443D3D7C8DBEB9FECFEFFFADBDE676D98DD6204B3EAD5002C29FE6D7A8605C
B9B576F4A07C53B4CB1B91F60C618B3560823A7386A25CF46386D6975B70E300
02CEB0144F2AC22C3BB66A51D65D864AA64B5B352D305553A14C59508C8DC825
E8B2EFB8E2803754084084CF308B047CD4389C12B3A1FC467F98A7E2F4511DEB
9FBAB2FEDC321C77CF13B21204776A715DE0C28F61B1C5B1B6CDE7CEF529A009
1209B70BA56CBBC8F894B06AB69A867B1C0322F16D016E992C7DACD8026D7F4C
5AC1E5D796C0E5A79C6083ACE132AEE5BDF71E90DA34D547ACCA61BE6D41EC37
F649CEA273F000F765D1CB762C01F0925CC899206487D69B87184F081BE4FC92
0915ADD1CAF234CCEE71ACB008439D7E0ED44D117E1C942F56B51E615267D9FF
C193186EEDFA412F2A917B97A920878315D488D1E15CCB1D18E9F76104D76978
B921AAF1E522B0134527426997D44471EB75304F9A5C8286AC95FD505FFFCE93
1B60115AFA35544EFEC21F1B21DAB103F2ECD03C45978D34A9AF4898439450F1
21F0DEC0F06B38C966A0AB56FB40FD3C6C4A6F1B92489BC74B93B7D7BED04206
674BCC38AA86F074419F816A5CCE657A26E927CAB2BFFBF4CC1A24A90064BB2E
0CA34E3C531D23DBC3035A95679F52ADC07DCB0BD1F9221EE576454A86A0C2BD
F0AE6914D6F36FA04AD771517929814BAB6CA2E090BC14049FD0BE5940E6A86B
1414F36C25B48A14382CA331926819999E1A5C2FA63104188731A458EFDACBAA
48397E97284B8A8C849D61C1D7D1A30D35C693B9AD261C3CF603FCB87651205D
6CF7D2AECDB5133E5A5D0B5019F9E1D426843264201C49B5F005D081B1C32432
485155F92D59DD66907ADFA1F18B28A8F1795FE08342FB4FA5F83392B4B54E43
ABAEC2B611954E2DE8DF3B36DB44DA46BB19EA1EAF0425B8B8CBF768BE5811DD
097EB0065B1E01ABF5E2D8428D248B1063727C5A6AF81F6238F1912F06CE23D9
B929E7E8CC2459C0E78A7B2FFB41C4992C8CA30CE5024BC62C59AE5F15A7C165
1CF31D319EC3E946CFF341E7B705B7CA5811F503F1E23A866648B75738A5C893
0A07DC64E8794EF123B66C212B7041AAC2F7A021930A6E91115F2FEAE306D1F1
C5ACF4307384369A00AADCE668ED7E814E32669BC829EF1B7EC98568A720100C
C4C8079BADFD302EADA542E45E04E10A6045F46D432299F879232E98F9FFBC32
6D9D0B73DA2804A813D9B83BA91C2B1EA4B102EC16763EE0F5092CAD9090F5C7
F6703D1EF5AC4FF555D8366BEFD891834EE0CCF512FC14D9AC7341D5046C96E9
8C17C37FF5841624BACC8EE6C44899633FD2E401CF66BCB8365EF29A3AD76A07
B35273CDCE50516A57F191028439EC8E5B8122A9C4B58D6C1A9D5A4E40821EE8
089BF5521A19117A0EA41112EA832CFF38AE62A7C42F405EBB4BE70A441D30A0
9C7A64A9C4CF1D411322A0A37992E6EBE6321C5E5B586AA1E12E4D9F314D84F4
FF5E0C0D729CD6C400E312293CD84D7FCD0058393BF81943537DFDEAB03839B3
A0481192391FACD2C83BBB9AC9E5E6BC6F373161076941FBE23CA6E81B848B33
A5D05FEA4DECE4EA88FDA3670AA71ED77DFFD3BAB2373B27FB482E06C093E9EB
E22F3B9FD5B28AB8931F1C96E4584559D47C3240B0D4A30A382DED5AF585C938
A804FC0854BA5F4ECA8379F7F7BFD9CD497E66CBE3728B69B85EB75D9B390B0F
B0E5C3F4CB0D2C1D1430C83390D90697DD4ADA95093D064B0E699C59892B661E
5A0CF700ED157AB521513CD600F052831A924C5DC9771CB880E017A30E64F2A8
7F902F283615BA37673DFAF9E0D2ECB5FBD10BFDA804BD47C3D4933E3B443D47
65DB43B2BD1433C8BCF47A40B72A0344627DA12399A086B6202987510581B57E
EA86ED95F3811AD256DFFE665809102BA715F8EC188EFEAE13FA319E5F388B89
BF950C292C152AE9B95A04D585E6AE259EA0C1E060B1C495ED215C9E3B5A7285
FE3568F5F91EE275365769916EF1BF70C062A45334FE88CFDEFF949914C4B69F
50F6628F9EEC6842B798950DA2A5A6416617A6D6AFDF832B4DBBEE2065A7C30B
63CB9340C50778EDDB5E0A218C79625498AFDDA452036F05A697FDD95DEF8B2D
573EFC2CBFB7C4F51848BFE652FFEB23AF2E20702F9888B531CABC31F73E1809
D29542B8B5D24ED5D673E26A25811D4BCA9D693EF8ABE7814BE8007BEC5BA79B
849449A58453935004FFFC8F5B183F7A4B9DE98FCF9B0FDA17BB2C917239849F
A8B3641B901E5A41C07518C027E399132512240CA99B02A0410974AB1197F948
7981AFBB4D5126B16E72D95B28D1EED1B4040E98E8A74B22C7D8CD3FF06B9FBF
62FB1443AC776F44F0AF34047C9A780F3B520A8E750230D501CCA84CB279D57D
905123FC23D46286CDBD70C1E35DA15F1BBB8EDF5FEBD36C6E600300261D453E
F3794BEF64528D7B4B91515E5442156C41984984E051B9F413865ED26E38CC6C
2563591CE129FDFC7520C5D5CA51DE48C5300CAE606605E951148BE1B66C45BA
04871565797EC537E26B24A4CA076109F2381E24C381185CDE9E231A78C23918
DFDCAECA2B8B7F8EAC363D0D75730D6DEBDCBF85188B95F8E5E17BD5C1FEFF38
2FA7B9B0B46073D4F6665C658431E7FFCC75FE1811BD701298F763AA466B7843
7709A5EC0784A852A32989A63805EEEA8B14A64CFECA4BE02BA114A4CF5869C1
6F750F4788B6B3C3C2776D4DDE23DFA1490CFA3B4C7D0B8794E078FF15A4159F
644CC8DD9EBFD8ABD8ABFBA9D53C42A61026E5BDAF59973977739CCF0FBE3A63
A34884DA9097C0F903F0F05E0F77EA5E07867117D1908D958AD0EFBD5C6CBE68
4E8993B9C485D8B4476F2EF2991878E11F38FF36D1F1D67E0A154F2D264D9813
78A969A5999E0F8A20B81D18E1961AE265B3F086969B4128A52251DB3EBDFA8F
59FFCA5E7FC82E25FA551CCF5E9DD8D6D3A5DB1E28A4B5BEDCF9AF7F4409C627
5E034FEB45E9425DBEF583887879AD93C362A37F0C069E6E22EB77ED0EE9E3E1
0459B9AA355E912CE927A1AED4B962FBD95ECBC414640CD8456E04A5E6F024E0
1294FB6906739CE1B4567C1C777D47A7F2D78950A8F84091E541E0DB8CFB173D
518F9C51019EB4FED063631D168D1A00B9B346B62199A1AAA40D8B35AC2F519F
A7ABF395C0BCAA522AB5851F8574ADB710CCB3FF48D54FE2C65A237E02A7621A
CE732ACF123824D61FFBB85FDC03D7B779BCD8BD13107973003A71F5147CA479
EFC1134966E442A2EEF5D51BE02AC50855B9158840F97FA94CC03969B2DDBC38
390BE7F6F9768E584BE5D3E02209C9F5C6398DB9A763F1BA3386E051BBC1C7FB
8B5CBE3D295F3E94C6484CD39D18A81F7389979EF408D778E57338EDAA1C658F
9C1F6BF01E8C05290B07F87D83C4498EB6B53E33D46BACA453D38B476C7B79AA
3A0EBFCE8A593AF6595410F0F59A79448D44E92E5A691F651E0B095682492BC3
5BB71CE21A3E9C1D1AB20BD6C6CAA328BF57F4FBEA068F1CF5B88FBEF9974213
7438E51623CE0E21C27ABA2D3805F093A069196BAE8DB7E6581F81C57C6E5CCB
B5BB7DC49648D46F2741B3A91D9032F24ED8F7853E8878C5315B93F0F0DCAF80
757EE1EA8A78049B8A9E998818F09E1B5E8D34EB46F04E8ABC5F4D367639B421
6AC785C142CE42FFB593697B786ECFEA320CD49838B5DAD7F3FA0DA3AF073C9D
ED0369646F6B36693E9A3C0BE4919F409768372CC0E84BCA86276BDBA1914660
83845E147A52D5DFD4043ED3AC4DB1DA120971ABC83477E84B2BD3E91C105784
6B76616532B79C929723445D51E55F2C97F1189BA69836D76D228AB453597E80
B7D3FD49E1D3663256360E4DA56184BE9677D3547C4F2765665237408FB4D1D0
7C190A30D72F4DC185613B31DF5DDE27133DB26720E36FF2D28374CFAD56A12B
00C3D409420B491B625E4C43A33EA29CBE2AB98CD0305DD935D8F0F5EE34E73F
44E9909CD4A49E4600DBC7FE9A727D18EA999ED7618E33DC61135BA3E5397F55
DF844F9EFE1E760903FBC228B55B1CF4B2482D465B5835341350E215B0D55DDB
690E1502018D0F42D2C05275C5EE7AC03CDA298908B414007BCC5CCBC4A7C3D0
AD578D0B0451F2767A6BF81979E99EBD6CB8017A27E311AE62FE08BEE58F2B33
AD6C2859059D8D3F20870038B6EA3C5E41A3E6E6EAE70E659701CCC2256A7CEC
A22D415F21FA095C1BDD305F557FA21DA361255FA634F5428046582F1894DE3C
9CF2E56BAD8A834ABCFD39A3CCE63CECBC5962EB3A03C8EDF831D63D2A5F4F9A
5ACF9D140BB42BDF2B5683587B8F7263E4C2C43A4C530DB3EA06EF9672983138
D713933F6760E2C0D9E3811F6D24F00B3EE58C56CC7E9CF8704FFCA8D35C141A
58CC2A46228F2F642101F5B23CE1ED3A79FF543B60E9DC22081E65320BCF3099
187ACC0F680A66AFFE0840D63870B38E4100D67ACF9EB4C072D3196F99F999C9
5A21641634CA6C9B6C1CEFBE4CE4B59F9895ECD8ECAA56D0136C16C2109C8762
7A1CFEA2A6707D6B09A9278F772433F92EE844A6DC01584B8219388C5D8C2630
E1D39F3430FD313C4E64190E98B0FE3A2FED197C64A2F173D67B96DEF8498BCC
17589A700E889B5EDFA8FF2A7CC570159B5621D374878E63B56C35023AFCEB53
97728E52E86616FE3023CDF8F2E3205A114D00FC4CF71B706FE7BAEC876CC50F
A0C3717E91F68E6E2C6DA9D1EB523DF48D10D441ABFA40086967CF3CEDE338D3
76450FAC53777A02A6CC5310ECA24348652BF62276DFED27FA15B47B5D48BDE5
E74F96C82774AF2512D837DB53D1C4791C4A31C1486D6B0646AFBEE8172CD48E
FD8B73CE708704378306780B31793DC3588A170E5A20B20B7C7E7B727D0620E6
F45BD57DB169FD3568C8E044865DE7308E8CBFA87DCB0FD9A4D39EC820E0B658
1A24EB1391BB3DC52178B378B00586F8A890443897F479F5C27BAC92012E8C26
625EDA3D3CE4E46821457498301C03ACF66F2F7EC5CA2D541D3617439C0069B5
5CCBE8D1F0523ECFF6004882B93CF5618D139605D06B8EF066B8FDFF0A4DF05F
CE76504BD81147F35D8989D2CA44BEDE6B8BA09F5117C4480EAD193A55D17766
E680F2D445758324D4264B34CD6D2643914BF569EA1F9CA8277788FADE52905B
6910E32ECBE6E8710E44EA188EAFBF5EA958EF011BE0E24D0F88BD44B30C8B42
88CD98CC5E56DC4D1333DBA8FDACC0DB85515E1096B1240EDC18A0F3BE451E29
C23A32A806529BD07349064CD9EF73D7A938B5AD3D1304F2C6FB438EAC993894
2455FD2F90BDE47DED116F3966B7915695F9EAFE5579F3C80495B6BDB1F24037
096741E04B3165928EC4FE7BD46E4F1C6B9C57378D414E6D7DB7466631822AF1
182EED5055418B4541E469969E60C53858FBDEBE4F725F66138B7C516819F0B5
991B1EFCFFD98E6D7F086B8DCD10391532F33C17437827D857FD477BA5042250
CED0BBFC6FD9825A5826DF34CE0B2C78229F24FFA4A3217EE0DAD89D3D58ACDA
20FF3FFAE1A1D2A73BB74858A015BAAF10F06E1384C1114F45BB3411F870A452
3AE84487D44CF7EA1D07131A8A62E3E9DD828C4C431A7B8BB078F8E328439E6B
8AB2B752FB49612F0D1A7126B450FAF7E16B807ADFEC622AF603CA211390BFF4
8AE9CC71BA9B8CEA1FEB0155DB9C23B3F8FAA8E0D93AD351171C1178E5F66BC4
73B74C3E6292079C2B2D43A59F09A158994B6F2DEC606802157CB31F7C7B524F
D9A7A57E3881A280D8F3EAC2E25EE41E58BC96B9FFA3B04C17065B1C34F194BE
EF98DDD55CA31A58924EAED8F7E8BEAD5304B355ECF4767A0950858BE19002D2
B4CB6DD56D0731B7552E12FBDA45AA1538B9DF9EFFE960AA42FD34136C401767
858310E8CD7276AA1FCA90514C00CD97FC5A09CD8B8D4A3A66DC9C5296DF3A93
ECFA6B76DC3B8C7FB8EA1F69471EF9B5F8628FDCFA2CC3A34B4A5413722E3A76
CC09A48F9C05C8EB145A9713BA7BC97CB557A128D43EC7119599BA999663E0D7
4313CE89766F8BE3C491BC98FB025C7AAFC2022271FE620574767E479BB2314E
0A20F00CAB37A9220ACCFD3BEA219CE217CA917354CD7B5811BCC4EA6D8BCD52
72A11099E6503AE6B47A9A116672553401B7157D0AE9F18D7CB8E40CD6C4FA69
1BE19493F58C953237B311F58B834EFC7A6196D4252CAB7B02B423D0DD2BCD7E
98FD7C35F7D446C5CAD90C19A1E7897D17E6E87BF17577C8E3A8A30165033249
D533856A2CB6E9C1AA0239CDAFB33902020D6EA45A8BA60731A9CFF651E03F1A
E3C2418EC2351DB956BB402DD25D0A48DEAAA63DC1CA574B8577BC542F76EB3F
DFD8004AE796D430B275395D75A99A2C14F47C5FC32202DAB656204D19FBD837
A6EC010C42084701F5770B0BF36DC8E39AE8C87D07ED9337F0F86C9551C6207F
BBFE3E8592626675EB20610C4C3F89BEFB3F1D0975F73FBE95C38FF0132F2F9E
C4932A19D7626D401865C3F32F4D178711861E7CFF54796B9DA96AAEB0ABAAD4
EAFD50EF789E313A3F52526390A48FDBEA688E80115FBB6BA8125BC7045B9ED7
2403B1EA544EA643B82782C150E294DA02F9F2C3BB0375BBA603EDC932F1F72E
59199FF3A48D907D3DE17655C8C8061B079BA8C845935E4E49F0CC9FF306C34B
1F3B56DA90A7697E1BF0A3553661CDA92CF3A581073A646B2EC998E8A7467630
91CAE08357D2B9C13593EDCC27B258C07FB0E279174A3265A1E2F6B63FF82311
62793416FC043D3DA7176DC3676B0D95192C772C129FCD2C9A9E58AF13DAEC63
1E8741BCDF96D62F37E7DEC262DD87B8D34C8DD3C20EBA6483DD41D48A5197F9
8F35348F25E9021FE50176E44F6203BE984312E98FDDA72D2D82687F527E0B67
9C0D5FE02EB2949453CA6ABCEE1E618D485E9895A8E8E5AF35CB731918D2EB4F
21CBE7759D3911F1DA71D12F4202E63A250F94457FBB6951722214D357292DE3
4AD59D0E96C7EE077EFD2CB107838CF298CE66E65983EA86332F8FC11BBBEBB7
199C057AA13B3DA10F76CF915257B58BC533356B6BAF578D802622B5BC8DDAEB
815F9DAB9D6B648631B5538BC3B05B2C9FF37E8805F8F1CAA95A3E493F5BE74F
817F95F102DDCB48C8B666E79D29824774274E960E1B6A2CF26C93F0A2756348
052AE1A2CD4C3A0653
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A229961ADB1D5023BD93644E4C23176BF787664F
CF245203C8C3E557669BDD382731E334C06F4B6EA145D5DF351211A0511605B2
8C540290A08A304CB1279FEB8FC14062F495A5EF2072B2957D98A1AB2E4B2A21
6F53829103F9CA4A8B6EB5766A44A7EAE4D5967EC3646F54568E9FAB28736D70
AE87CA7F3E445B1F49315332AC4AB47D5472A1BC7C25898A571B1D72C1BD6E96
9B113B77F62C4B04169FED7902A5728F9AEFC35B201F835D79EF607721BAA003
A911D34A077BBFACD7222B902679E576F8513DB641F42A787D2DD13B2E9EC554
B767D66A4B1F7246AC793C0D7F96D1BE0488ACF312B0E45B2C8AE85F051C4C63
F37ADC876E48591F88DBED81D5C8765B2BF3A44533E2337D753F22D89104226A
664D3565FBCC126D55E208EA8B8A23A7D1E9E93F85B4B8EFEB67FEDD00215CB4
FCD73C6552733BC2D130FD536EB5E8A16E300267328F993E953194B08A9769C1
C7BB989C54201D32DDC5CDF7B7F0776A6D5897382A3DD279FA998CACB087297E
679AC9984A5CA6020C4F9F335CBB0613F6E8AD1E54845B82A89B5FFE93727908
24B86F46D7EBF24DBBB8F45B2EC3B767626683EA5F64B4290B2FCD84DC2A541F
CA73DE62DB9B7FA4262A6D7FBE4F2D5DBB13C043FA13CE639EB71754983C7771
70F70169FB86ABE5A5B866D24D8C819A4746E554F96B84555C1079F821071200
F34E68BD45BC3D7747E1F68A416E37E25132BA5C19BD17029D65A36F1B674575
0880A2D37FE7813CC50A45EE2FC41464EFF317870E2C8520B0416A00DA9F8486
540A6027BA65EEF1A1771C560356D11B82E185FAD91A7D714E3BFC840A903518
7AD7C52C1833BE00F49F92C2D06F621D0DABF873B61D7F42ADEB5846AA762943
BA7D6254BF3E1FE8F6AC161E2DD0CCA4ED8CF20260753DD86B243EDE6FFE7B1C
9A87F030BD5B3F8494593BE656D43ED205A242
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols7-Regular
%!PS-AdobeFont-1.0: LMMathSymbols7-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 486 136 0
%%EndComments
FontDirectory/LMMathSymbols7-Regular known{/LMMathSymbols7-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols7-Regular)readonly def
/FamilyName(LMMathSymbols7)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -102 def
/UnderlineThickness 34 def
end readonly def
/FontName /LMMathSymbols7-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-15 -951 1252 782}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F03A6DC586679CA72BBD354F9F399D50
BAD7C7C223346AE45F1491717B0F25013BA153A6FD84A3646121DAAC4A2B28A6
FD518B8A077C4CB33DBEC8CA7C92E5D7BBCAF8D4A968F5C9B4A4B480A4A64D37
8AC3E8A3706E31139EAC60C4B60483C658B27250E70EACDE044C724432E6A3B8
FAB78794CB0F69D6CA06EA523DD9B215029083EC1DAA3E1FBDD8A08A07E69215
38909849D34B81B13BDE3A3A55C55D69753458FCB108596B941DE6FD79DEDCA4
3F628C620BCB8DD7BFDF97CB33698399614F1B95736890E6126BDCD2D454B855
26C1858B862DBCD01B51D3146C611B34A919DFC546D62B7A7ED89D4DB810E015
35291D579A93C37B00A62B56E8F33961FFE612EA82DFB9E37074E864B6A081C6
7787820CA9DCDF7AD3B004BF970F13DB52C8472AF44E7EEA0D4EF4049BBDA792
27945CB3433714705341C2080524D5FF0F5487D81E9EE0A44615899186267AE4
03681B2ED3AEC3135B0F7450F7B91E14255DE4C8550AD80D53A659DE49C30AB1
4A786DBA2DBEEFB1A693883C40FBD8E00135CF1B93BC0C2A5BBB0F16E134F7C9
E6494D1DA5DA50B5AFD3FE656915170BC0CBBB5DAFAB28025E5B5295354911FF
60060D5870E571EC86B3A43D3AB815884369FD58A68D3259D8E029B2C1693620
2B6F954A492E31870AC49A1FA86B3E2E20B96123908DDC342D56B954FFDB36E7
851D9E45C01F2F3A05ACCDDE9C804C0C63DDF6C261782C34BDF16958819B3E62
CF9A7316963077C305EE83FACE74164D3E8E7605C63BC9F4360BD38D3112A713
529ABC0444AC562F2D44F80512DA76E959A74DACA2371F8F2B53CB10267717D5
904FDF33D55934F684959E47802CDEC5653D9C26CED23CC1BADCF23FC98FFDBE
CC7BFECA9BC9234AAAE7D3B6E310FCA10907A0509510A0DBD662C07EEA977B58
FB6FA47D6FFBD7B0C78E1B9C0308C3B0D505776A23D1FF9BC1254E676081F8D2
385EACA0B54708441DE5A1A15C14A676EF40F0B1FD936FABE8C13BF3FEEF165D
E8C3E9109949A8FC60CB1F8FFE42C9877EDD26B9DCE4C271C33EDB0C544D104F
68DED3488EB9ABDBCE6E73EC5A0AD42D77350F6C11263A0B11C7D838FB6135F9
BF8DCCC03323FD968B026DDEA892BE5622E14F961290BA90B74ABACB598331F3
1E58AF3A560C46F0F9A0A0E9FA210EE25DAD7D7E9E578F849E100471974C6BB9
1EC150913C1D96A2575100A33E0287C97F91021615427B7572E807F52A37C14E
F4FE416F8FB3B918C454BD5774AAFB2595FC446E4A31CDDCBFD6063379EB4FFD
3FAFD44CD4F6E3C7FB4EF007EBB868DA7F878BDF6355C62305904C82771128C6
75DEB746189B1E316EB3ACCF5F83778BEBF5CDB65E8DFA20E2077404B83803AA
3A4643B751943A7BC0C6309835F84EFD13BBB1D2AE839915410F2ED33B200AE2
1D0404DCF32BCB28A7373F882021FCA0BB8BB34B51C9B4AE7A36326A5B4B5DB2
6DD5B3A039F1DFE9775FBAA1495A572719400771332BF0104037BD2EAD945FC6
ABCF3ECD8410335AE6CAAA4F740DD45908186740C9412068CEBAB515DF56E83B
5256D7693E64C514F2EB303D5CEE90C22A997075D4F196F677F5528CB36333C9
46980B89858450EAAA5D3FA5F825B5C034930B868DD9FC3657218B3CA3876B1E
4F54635394B39B74752BCEA3EA29DFFD680BCCE330394FA98A5BFBB0DDBC417E
99BD6A054FB44417F2BE595D99314A59067CD38D96DE35C792B2F1792E41D5E4
91934CFFAF612CB8A2CACE8BBBF0F6A1A184114CDEC52F67246555EBE371182F
EB8FCDA4F0323901F7C20F1DB918742E73651B67D1D3B6B5A904A785913F8981
AA2F2BD2486EDF301E072D202A3891B8152DA9A977E340DA159A87FA4985EEC7
BBE0C1164E6B22C9C7C48210FCDD633710BEB596A5FC652B236508C8213560F4
5DBFEC4450FB85180FF329A87D3CF322836427BA0145FC17734B925BC547917E
CA0F5C57BAC4A59B07C199F94E3DDAD2E4CC51AA13AE70B095C985EA99DAB28C
E43AAF5079814A8E3636216D18BB1569A7DE8FA2826EE262F21101F6B6BE9FB7
2A88DDE87511F94D66589832C41CA74160DB0E5BD7BDFA0B8E4BA148F05AF5FA
086FCEB1E629A25A234A87C35496A4981D4F006B2E415C991D11EE3E3A5A69AC
FA26596B1B40215617BCD388FF3595BF4A096C5CB765EC12FCF6B7EFBB235937
B6DF4B430FE70D6DDFA3FA66F6FE9B43F394AC06D0D0AE60416D516245D14ACD
9FAA97DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55886C3B2F6DED5322AA7F265EF97187DDAE8237E4A34D9
C496BB1C04588AE85FA5B209321554AF2252858B319283FC9468887C282A8537
29BD1E86B7A26AC1D3470F561C13613A73572D79A8CBE1180F4C4E8BEE8EC0B0
14E2B65B5E8054506521227674339C79F366B6CAB4CB030073A615CD431B3DE8
E976AA00381C839090AFFC5C4E0758F64AAAE03C0F7C813814A67AB8F69682F2
563C8FB6A05B1977B6AE44C6E4000F0EAA9978BAA153D1BB8258485413A23E94
CB9EC2E13B4460236941D5CFD1B8B1AE10C8BDECA8CE865BEEB4C18603BBCB8A
E85757F95CA933AED9876DD67758CC8F1FF11E66D36CB3918BD5AF95E7F9E991
5B69A7F567824CAB6DFC088DC146CCE271C5B05C128385771BC90D36245E944D
634AB2BA26D11DF2135A4F155CE9D27C44939C2FCC2D6E2CEC12538463468B44
52DEA3778EB0E96D6506E0B88CED560DC3113B98671E097BA4F2496E26C9214E
9862F0D2C435D76B02527DC85BE096347B9E8A8DB16C8AC34119A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C2D1AE634032492B7023944DD1F9FD0CE2F7F4
67A41ED7A40FEA86BBD50B645BA87E3D9B98A309023373FF75491743644413C2
ED9D0848A4FA332D582D8BFFF3D0D13EE0E49102ECE2D624A0A5EEF70005594C
5E0F074DF55E0355AA33C6C0F2D5F535AE93682E855B1BDD6CE955627284BC9A
9199F188FD2CB5BE9839DD396DE541D181016DD6F0563A26851AD5EEBF32FDFC
699847D069FC2A65671D66EB451F54066661038CF2C93BEF8D83E143656B00CD
21885CEE544EA7E773049D63C65BD60F8EA4F783BAAA1268AFC408D019ADF2A2
0C75052F46FDB53266B7944146B3B7D9CA452453C825B92E606247E509F9600B
D6760B31870D69C4C15EEA09E1831354F7C4A2158796310B1E33D5B6A764A8BF
95474A18AA51CBFE9226A4FC31C9828CF2AC80B73CE2768B06545FE267B888A5
CC380114DB40B124C844BFFA3CA29E638C11C7BB98816531D1983A33A1BE7394
B42FD72BF46E4127F4F1C298D34F3811D5DDA7F33DC6E913E04ED663E84F7681
48C131B26525D173F07ADFE2C2AAF32AA5A7101270D15AA6590DA4E9FFFDE23B
9AFBDC82C3C8F14509870D004DCFF1B72D8AA0542C90E349863E8AA5EB8342C2
773CE38E1EC3132A28B15C075DA951F9AF3ECD62EBE43B473FEC1F76DA6C5508
9AF3D95E3AD5012C5ED5A9F1AE7ED88340879B2EBF04DECC857C42C1A94A526B
9938774C9F054CE6F54FB243BC6C66687CF0155E10B53A271F23B6292718FFA5
6E5DAE5894F1924E3A5BC82120DE0F44151150EDD1C65A3D5099445C0BCCE07C
CF4C82B318494F42C776D9482C86646218BDA22F6E793C31EBF5C89965E329D5
452E084D72F8219F6D0A06EE6C0F733B035CCAC9A2CAA288BD94212203C21A39
B686F88742CA702042CE6FEE1C914085E7065FB50E28631D2A286B9862B0C691
72ACB8AD4121F47D4750A5501018DB4BDD5B64DF6A6F8D30AA78C33E121DA9D4
AB827E616E7357557C23BD668FDF38CF6194AF036EB3090451311D2E0315E7E1
38A9C53D00E01279397F08669A63BE88715C699C1A7A02FF77CDEE3F0D6C30D4
059BC9F9DD82CC123F00FF7C25CAA524C8B374AACE6AEAC8CB4182A887EF4B29
4EA35FC77F7364BB75AE2083C7C66E6C13CF17915C9B7EF1487F54EB23A1CE0A
B8CB768EDF04DBF511A4639F49A908F0C231A396B14B2C655BE5952539F63A9F
8AFB0F2BABD93922C7DB78C54E81C2E4C11086C35B56160359E166BF88694D92
194916965CA4B0D9FE1F35DD53F99E96005D40B3D072F7F84ACB436A01134774
3DCDAD88BEF8B3F7104BCAA6E752EE90D2B38F2CE715C6AB21674E82E6B49A5D
CA8AEE53295494C657A9676AA0B493D7D546F9D46F5873F4E4017972377DB456
69B6CAB61314565222A1493030E61D657AECDB179D9AEE28C7CF7AD74AB715DD
9CFAA477132F828687EF2A58C54D8AB7580EE3ED58AEB83B72CB902DF6D3064D
D668D016CD47C8D086A4C9BA264829CBBA92A6F8E302F4CD994EC08C00AC6A66
C51254F7128403B6A5B2ABE4A8B54B457DF7CA439382D1E5941E62CBDE6A24BF
40246A18A8D921257BE9AC6BF7CB079D9EF5F5BAD37D218B1C3735FB7D517C34
4AFEC68F345BCEBE40A55B3DA6DDBDD8E8C6011903736F02F04C2D2EB4489007
C555A6A08B437AFCF723A8F721B0600E268AE9B589919EE6287229169AB6A7B6
79DBABC420AA6231DDD2B6A02530540DBD7FF0FE7EA3CBCCFE293D8288A3C4DC
EEFA1F3076BB941B1832E3FDBFA3335CC6D1E2BCE00279474109AC67B7D0A034
352C6BAC6788DD87665BF143F03485E11FFE1F67FB6D16A8CB93137BCE2E4D53
089C9246ADCF057578194EC0467C42F53DC0838C1917ABDE57FE1D34CA143066
E10440056D3EC28D85BB53EE04612C6A0D8E6BB90C96A90E99E7CC878C86D863
F261E8969E275792F7C38F66CE9BAB1CE577EE970A2B5E013E23CB0654536FBD
A5400F30F7E8F77C2A44865D97EEB9EFD4AB7C41035E3955A08337C981230328
0228A1E6E048CC39F0187524756597F57FCB99FFDAEF963621BBB8373366E021
ACFF86D1A71187A40F5776AF971B1A2B727DBD281F3BF2D1075EEF8C1225F96B
9660E087FEBEEBFE490C45E28A8B6DDDB556D22D3BB579328E4AD9D5C3475D74
CFC7CF7E387414E4A017F9FAE43F47C36E5544A355DD24BF3CADEE7E8C956454
650FC6D9ECFF2EAD25C3A3A326B77B817ADBF1E5A669A87C3886435AD51C11BD
77A2137AD9E2DE4CA0AC1E9AC3B8B92A16F592E4082E90DBFE87968918000FCC
C4BBB3D0F0A77E12FE8705723A5D49D049F420266F034B72EE3B707AFA7CCC7B
9DC973319C4730E532FC9A74A40B28124889243D305D4132793CDF8DB01750F4
DFB79975EAD0E536F9DE9959CC5CDE05CA9B914F8749608248E964F5DC2CDC65
AC636325718AF7EA47946CFF07C2DC0FFC04786221F2C415B3480FE8DEBF394D
18921C6015E0E9B1C3E60150E61B8B33CC90FBD867BEB880FA518D57488893EA
46C5C9397942013B540DD291372C1B08DBB589B5A8C4895D9EFE1182E11CC0E7
AE75FBCB69890B519F7B53237A6BF0906A6DFF38E77DCACD3ACCC25E153A3069
83849D58F61DBD9851718C37C2FAAC141EF01103DCF36D894D9FB2FFD42D850B
D31A8B43358DB8266AAF65EC987FC4455748C8913FC00A089EAB8BEB6F1FEB40
4E47901751F077A3443B933694631A2EBB0EA34CC47CB9695CD7C3FBC4C07402
313101DD8A026EFA8516683FA3A30649486C002BFB9868A7B499DE2304679D96
80B7C482A7999611BB127FC8EFC7A169F8CBB6E313016221878340DAA18AA6AE
A3B09943CA8A11A99510B0A8B7B1E654C8AC3E8D668AA3D9B25927B9001E6ADA
AB86BA6B2B4E28F3C65566EF5311D4A151152979A546051AF86E03D22C944CF6
67AD123F9C30FF7F2B77E767A4C9492E72CFD969120BAD216E4DB5EC85E5830B
36D54688036EE18D076090BCAB0BB0A9A811A6D2D686A31029329ECAE472DB8B
59B3D595F7C8662B9D0DCEDCB3D6B3E6F306EC12F62083A6EFF68077131EC3E9
5A693F7FA901E8967A14F6F3A7CB4A47A9FCC007F910998AA28D18D0C0D347BD
4A20038A2DC01704A1B7852C0770A8B48D694619D3B6F77D845BAEBD1B168063
03B9D219B2782FD07F94C8534E755ED59E03086E183FB95F360FED53F1A1E6E7
CE34EEA5102A369CF06A6E34DF084EBBB3DAF7B5D21F6CFD57C238F564051172
45C74D0FC1B495593B3D020683696B7E034C4CE1C6B388B901F937A299F65C32
17180D4BBDA879E194B894904916531564BA32C99A9E9E4A7793BF6A20BAAF9F
9428E3695E72C64B3C2EF23BE1C2A88F617DB51621BA229A1410ABFA2171432A
1AA586E65AAC52D45E38A60BB3CE6D39B62E74D162022753ECFCF0A21A73EBCD
D3A3780A9B94E0BEF9D47DD2385136738B81E92728D1DD4EF6168C677EB452ED
7745CBA6E884CEC0ED22BEB7364E5ECDD2E07343A63DF827BA903093EB249BC4
7A16976E813D9223A95FECFF4BBD250E93F99D78494432E4D68B26A487D01ACB
26D732FD54BDFDFEEF2AC5DF8D61E0F261A3B888175DF42DCC3BD0D5529350D7
6CBA16B7A8667DB9DFCBBABD3164E8FDF9AE090685B5308B9516256C57DC4B76
03038D6E1BB47B5C74D184E2800FE0A2ECDD5C839307D93F710B1A0035B05FE4
89494276FDA492539ECDCE2E4BF7B7687F1681D103D7DFC415017C2E5851A2C4
A36D841ADED0348EF0A843D0F05CE3F579148DC11187F63B3C8DC2BAA9230C3B
2CD654ACA8A513F352B2484072106A35F92D8DA29782A1875C6C8E74B0C86C0D
3A604DB05D2D7C3AF72212F5C808FF97D6EBB5C4DC13B15101EAFFBCE1DE0C08
38B32FB1886BF564BDD888F39086B6594B85C1F204B6509D5201534954EAF50F
BA122DE97FEC6FFFA4998E879EAA280D8C528B77C22B572657F8EFF6BE77ADAD
22FF83BD861FCD07E1302D6A3AC106A7E2A161415478975E25D1E928C5867A49
5F88565BA02F0FD97017393DC2A256F557DCBD0CBDDCFA83A5772837E7018EF4
1C5D418651E3B1EDFE3F14ED7BA85AA03028441D5AB3FEA20864A490BF977C9C
50690DB088FC05D1532D06086CE3AD3BB9DDE9851808334DD1510066DFB8B9CA
B15E072F4D80E6FA1492BDE59F46CA026F44D4214C18A3CDD0D72D52948373E3
8251C508E4505E8453DF9C4DC83E3B37D07E571957BCC050B841774BC20AAD8D
21C3991D7DBD228759702CC5B12BD66CF5E8CCDBAE52E3F8F0327884D3C7467A
1598A876ED18B65ED8CF23F20F00F696EB582F5EAFD33A8B88C6D49F1AAEFA49
BA629E633B32C3C2864C63C768C9FB963D2338E603449AA387FAA45A1675EE98
A1F25F640ADF732D0F3522AEFE1A3BA517202447C343BAB5CF6D6F7B82AE7FA9
8BF36045A5B656689AFDD90C8CEF6056EC65CE4A345F755D5137963FF6491BBF
618C94177E99B34D229F4027E09BFE7642BFB889F83B3CAD005996A6309A63BE
BA0FE32D73F301701B91AD54984598F2AD46FEE3D68A0D0886AB8D173B2FC786
78B5FB7A9D371CAAB9A8A382A36EAB6BA5C8DEA7967B2433B6BD77628D7DC922
21438E1C15460910143118ACB750D98062B2D28844E50E7E44723EB4237A9871
234506BEF22737891913D14DB366F3BECEB3445CB66848AE60015545027C5D66
43ED9E898E52F22948AA61B751ACA01F7DF1FBC7452B5D1E789929A97CE2DE07
C298648560D837FB67D3FBCA7A93A80A32481524ACE2C9A7CBB1F832A94E176F
8B529878D4C5E8A0F09E221AF65781461FFC94C69C62018D6429EAD8B7F87627
FD63CBA0AA6B857291BCDA9B6705F0B062A78EFC65E27E551C79202D3AB929B3
2AEC0947D1ECB82B90FB04F177F3A072B3F3760F5FA35BCD767FEE4E9808EBF0
5438BFF2456A323564922DBDFDAC35CB538AE2C6E1BD11ED4F9697EDA04529E9
1C03B49A5201E011D544F6C50221963188E13B19B08630E5B4945F61D09DCBD7
E32C0027AD3F0FD2A3F2449EA5006EE0724C5B5D085846A3C7C30A664C30ED82
E6AF4E94FF0D5DBD3054E122389437002F30FA2488B32710451F72B84A25624F
30345A584BA50250B1620851BE2D39031BCFA0821FED4A2A8D9F8B0FEB9201BC
B6037C927F524EE70AD24F140AF825F8A3708FAB9610B70329CBC2AC275331FF
480589012D7881C8E03A1B8D71814BE7FEE42E6D1EB7644C10A722A014371DC3
9EA254984E08E607269086C7D6D1BAADEDE43E477B859D8EEDA068246F367E88
835E166A90FB1A389A34259B085014CFDE3E2029A04B11FDC740F7963E3E020F
367FD0BEC68717E95B7597AD7CACDA2A6A4E8808BDF0AFF9D56A1126E44E7E26
4E1D33846016AD0B0A7214FAFABDA3B72860BAD93A2E414FC4E3FA2AD4257AFB
55B24991EB80EB84C857186645C467EC0164AB6086D2C2D95FA16B47C748125F
1CCF350E3930ADAE5249B3D5CAE21942CB182BF5D95A135B9CFF91A00037A302
5364DBA8603BE34024535D6C5A374D7E022625ADC54C39C18A26349A63E8CD5D
E7E5A67D422015096D6A998EB98A49CE1D72DD702D31876A1CFCE58D619A66DF
8CCC3116319857380A9B3EE1860D5F11A241C4889FC8C0F634CABABB7B4C474A
A9D083F8A63723F7E5F750F0DA9C6BACA4A3EC27477824330F5052B43E42A8D9
BABC1C3DDA7B54BE6F77A8EE6D7A1161558E0103D69F95627A6E456099191E59
CF11273AEB78CCE20956F1F48D71825B795DCE254B9F4129E55D03F4CD2CD99A
E5AD22F3797128CDF102226832FCA7120F8F3A8E42134F1B6B0C248D56F247AA
6B028C60F3C8EE3A7AE59C665CD642F51EF1EBA346173E544D66ABE1553D2FAF
26EF405C4D00E4DD9F83370A2A10901005F90632E54F8CCA66519CBD3A850793
875696BBB9D0420507EDAE822C094868ABA4C18CAA5EDBAF9DC73B5355FD3F86
C2DB87EC77133C97128A29F68619E8A1F459DC33AB828E9D80023BAC482F8B93
AD55F1D27FCBA9FDEB4022640582C972655ECB16686869E6DA6416ACBC3A06F2
A4771CF854FE240328C4A2F37B9C73FA6AF719821961FF7FB9CDC8E87628938D
6D0D86F38133965B26E2AA96012837CA40EDBAAA2ACD2B44574480A072F8281C
E8EB7069C9E67E96EA825EBBA92EC6210B4F1385E79D29EDBBA19755C85371FC
C5A8F92195C203CEAC6A1BE866FB61F0E0ABF34FB39B2397D00BB653C7710594
C25B7D23ACB3D33E5D34214544CA05DC58670265FC8FAC50DA281BB7AEABF17F
24254496DA229B295EAB9A6862DFB59420A1979C1AE02943C136BD85269B02B1
0BCD497ECAC785BBDD2D86B42FF91FCE7E06435BB294023280A0A3669114BCBC
5B20BB6045BFD5AA4BA26DC69F2A27DAC4CCEF5353BCA7EF8CE6151D158AA7D6
F4DBE64EF220697B69063847180B6DCA83EB97A55FFB23788271A23BC2A85E36
2016840676DE91F62737BB54C4AFB0862857587905A91173BC23B3D1657C9E8D
CBDAB522E1F4AC23C2BF511A27D667AE834A96925698006601802F57A61C3BF0
988FF39084FE11179521E18BC7CF33EE9EB899E6A063314391267AFF415923F7
250C5BF3BE382D95FF4BAAED0957B2A13CCC8B93FF7BC5FC7C7A37AE0523EEA7
86F83AE2F256EB21595E795B727FD7B5FED0B59CCA854BD8A05A139AC2C2C648
6D2660348916BF68357880C88CBF9EFB538C274E3C64685888A61CD2FE2A3912
76B1457CE56323C7E4428D2EE1EC6B1C465BE35668B0A4000BA2A79E72C1E086
AD76C19784527E7D439BC235430FF572AF04F2704D9367231B1B8C4102A58FD6
66120619CB151594A7DD5C38E6CB8C5F4423E7EB86547851EF4FC7D829C4255C
893F7749C4E7B6796855E211E6751437FF09B350BB5369DCCC0739E563C6E1FE
10E8C70494B658D448E92E67031B18FCC2557726A60AC1B8AEF5E26247973976
EF232F76C9D0C0793684D68FE95129C325B04557A83A6CB987E1C0442D9FBB38
539AE5B64C3EE50C428270E1C017E33650E24F353E423A9254DC034E6B06ECF5
142F182D1D02504BED42472B74E8F6E1B541E2E6380789E848AD295B7FDFC54D
C6939A8FCE4E68B91BCEC611501A2632E9DDD7EDEAC56C518175212C74E1EA5C
FA4BB4FBCDEEE2DD064CE344608BEFC72FA3BC09B59A2FA9092D9F909889BB5F
3286E69430D36A5D1279E6A6DBC5B79E97D0F2752100481BBD994D8880B4A972
C3BABBF56D75393A665BC35F1E515F6BA570464F63E2AFE52A5A2CD263C77714
E5F40109D84051311E6BAC376A65E1D55D0D712E617802976F8F223C8ADDCA89
5309CC0F6A0578E32526B0722C162E9587F3E57B9104CA9107584F937BDE200C
D5F3148055B1CA561E2BA388DA3495A1AC0589EA038360616F45D67D53C58C1D
054321E6F5949B4A6EAA92E985B513F3445ECF5D8352F586DE03A29863374A22
72E6511BD0987B6E4A1FBAD528ADB4433BCA204C5441E3A478F0933EB129EAE4
4484E084BDDE7EDC55FBACD2586F3D71442DBE3042A47EBE4BA1FFB274D92BCD
6CFD20D74471AA7E56B805097668D76F7427FFBA94742CADA77012FB60C5E237
3B24D4D476728119EF46040CC252B957DFC1A97D522C07B0F972DB969DB771C9
0903261C60884073554BD0771EAE6A1500B64835A63DC19AE18F54402D1D6B7E
CA0285F5E924A72A2E58CF166BBFB011B6C12327592F8B086ACDB860B1B84DB9
BDA9C7AE98647776122A26396D984DADE28954EAA105FBBDAAF70B7ADBB35E0F
1641F668817E64481B4479C7392E646CE08EBBC0C484315EE485A8714EB6009A
9C06D9FCAA68BD3F58C8E45D64FF0AC96A7336E70C94832B1C518D9EB6F8AF80
07B3F27A59C82174638FACDEA968C7ACCB3CDD0260801639B3024B7847E99603
9601F6AFC86423DC06ED4D34A5E4A2F4C5A85BBDE0A289CFE59086EA4FE89B9A
39149E124C564C5251F613393060892D5064D4177FFA919FFB035784ECF6CB66
BF597BDE3FAA27251F8FFFC3C6838AC1204F34A6A16569177D6B1C7CE10B9D70
6E156C470460104C977C7E113345221695665B91D05A8F5D15D1339193DA369A
7559BE855EDE27C68BF1E5B9592241DD136479A65905FD0062C91DFF73498439
BBD8D8A22E4C49A366DE4CCB332EAB20A47BA58EAE5519728F397A677D32DEED
9B4896E372CFEBBCFC66C64851171717E42CCFB6922C2D5D6FDE3D0553CAB203
DA8454C6213212E127B968C9D09176613CDBBF70DD34941FD4A6EEF3C9CA5CDA
4184D6C7C197D4A0B223B1189D460972273C6F5D2619D655C3533FF17CC7A87B
F1B8EFD4639AC309B9E8CB4472C20F42917BA4B020DB0FBFDF8454918A719C5B
27C4DBBE2DD951ABFE4DE5DF820F1FDF5E96A02F947946C46A6DA7027DF02E54
B72AC91B90E441BFB87CDA9E22839448247D40B23A37DFAB7F41D82A93F3E95C
C117E21AA4E3A42C7E69DA6CEBD01779B1CAF4DEAB86E06EACF7F5DA3BC32030
E4E23C5E0E7E83F1FA6A2A4078CCA035D62FA290C68B1AE621530773D91D9F5C
B7CE178C529CD741BCF3E19A3AD3094F5C09CAB54D3F9B5EEAB01EA2E3783E06
B4B229FFB653DD3777D643DEBCA5AED237FF2B19138C46AECED0CFB8AA39A27B
99AF6894363B2114294E66864446DAA5CE2591121466393EF1DC48BD8BA01A6D
096129CD99FFFD3CD8871F2320F97EC724BEA6F27CAB18306462FC72D92AC07B
13218E87BDB04660DA44963FE1431EBB1008D8BC9DAF2A58B800BE51509F6851
73FC157CA62976128D48E72C16998F4443F64E4037AC19B46A1050451ECEB053
DC8EB42CFCEDCBDAF3A9F80AF982F9653F2DEFA6365ABB158E156FCA11C47786
5B61FF0136346A52E994D5242B0ED0DC27BDDD67D0110B8331410F1DCF9E65E7
338B42FFA0B27403F64797942F9227920CAAD43D1B48EC23887DF28D4C40A830
DDD392F93F6CE1294B62411E6DF77D4A4C209F802B8522CD9775285CCCC1D866
1C4F061141B6A3B7206F39189A1A07946720C31C5D12522AF7CC17918F49A648
4F2222BFD38455BA078A1A500CB006AA6A7D472AB9513611ED0874B55A2F393F
513C09D57D1775AACE59AC6A88DC3E1A94A0EE0C23525B292A271029E328590C
38E9CAE8D6A897962EBECEDD21DEF42A0ACB73580E31047D1883C61EF0334681
CCACC5D024F39309DDAE7176274BA3DD711DCA361EBF3DB4F6F633CEBB85B138
888F80720839AD6ABE1A0B43184BB79D88C960053AD6CF7081CD0DC5CBD97109
E9E4E462E58A293CD1BC4E240AE9218217263B2F5966D9590049E15A05F59D56
E5EDBE7C2F9551645EF4A3399C2832F197C27808D7DC3A930E4ED2CBF7FB5979
EF5F012CAF413DABCB3290E29A0CECA13C2FC60563D081F110CBB181C03581AE
7F5CFB6E2CCBBDAAE4015F53DD5994514C074D8D84A638CDAC65937F4B53EA2F
8C915BD95CB67D9E25F9C4C27688B2FFF552E1BF35ADBFCF366596F5E3DC4BEC
30136B8BBA284B8E0632CDB7BC5DD0E9B0DA3088D62C10DA3AD6350EB9F65936
442C20E14598F0BFA3B6C2011B842784111025CFDE17CD6A626FA2286373C66C
4E402CE5D8C9E4B322038E671631D20EF5FC381131B7C4C90E04DB61386B526B
4A6BF0AE1EF7FD23C8AF7BC0ADE591EBEAC608D291B66D9DA262C5151B948E52
9F0C7A21052F1A28CE34335D3EC14A4B3EC5AF48825E4C87DF0367ECC9289A90
2F0A404C434A8B61476E86FFC4EEB66D35926A5D147CE5ADC833BDC7BA5FA259
6A6F1195242FE20B57E4BDF333D06F1CECD61A9C9A71CD02986992B15F4CAD81
E8CD4B2A1E848B467E4B0756936D8DB0925290F014F7C5A6B6186C23748AC92E
29737ACAD5B256A95A961B1EA3EA711CEB56008CE03F862BB01C30566C90DF09
90ACDAAFB55D95F94E9CD79E67394AEC64377457821CDB3B15AA06EF3D02DAFD
91362FE6C3206B35A1BFF49DC4C5835EC42812B287F3D734E62C1E3E2E2BB873
147AE0CC255E05EB61EEAAC8991992A2A1A278B2E9A7E7C3CE68481869E5DFF8
9CCDBE8E8271BA5A9A2831669C086A3590309D998E63B72E34F91345BEBA6ACB
555778CC267DEA91A4C216EABD2AC7D6D521E9D0A70DB9A2BCA8A15A617ACEDD
E70FA51AB0338BACA1A1E179F1AF0EABA623864E553A21081F8D700072E3F501
0A9141AAFCE6733B371BF36034372DD8479FD479D9E3C3C95C47088D3CBC8C8A
942A84DE642196A64D1206AB59C5FD3D761B784845155F0FD9E90F559E0B05E7
6D1C9A6F549FB0112435D63CC0706491CCE788036B4867F90D40C1E4FF746039
9F1F08F988A4AAEFF092AEB20C9A785CBEBAC7352F57C70ED2E4642D19151B8B
EC1F6E1EE40F1B0E9BA0BBD3F6415A6301EC710FC3D22EC26F9B2761469B0EDE
E8BA22F029985C69A5ADE57429E440123D5273FD55A6DAF28122ECCBCA20638F
1A815D7F9C36FEA622FD1E43D9493B4E713CD0E487E5F85D01EAD4897E07633C
D81079013A159A4D598979562AE2A9B800166E14E49DF641E5329F12B7A6E160
3A241D3A427F9B1AD26ECD535E46C137084A835CD9C15E6AC9BEA869A5C6AF84
70D26527E73BE19DD38D43E043516F4DBAB90FC92048A0A1674F0C08108FD2BE
B5BBC9F3C695FD46180C519916C2A57C2909F2E640F993B4ABB749F802FECA58
D6E39A107ECE8A3EBE7E645FC02D08AB40A16786F6245A907E7370EAF4260A69
8AF73D1A4A7517CF6F42243C234413756CA68A0F125A0E7C1E1A1C4642805F7A
C940DF416E626B66428A89D6B7629BFDCA0E45682139F85FD44F45A013F484BB
0C079FBEAE60AC3DD5D71B748F6814D308FDD1F2E214177FB453CB28232AFDF2
26137440909566CB411F6EAD662D6BD1209672310016F5279CC754F3D13AD666
CBA8F8C56E27E62859812A0309F59554533FA55762A0903B56650D1C31F9314A
FA6168B74E2261A1B0741D368D2D66F5AA22A0B8CED85F3505DDBEC9D461A404
C48EB8D3F16196B92A39493EA6496A486815A6150C8063B5D2D0C03EFB23D539
5AEBC0EB7984D2AC4CCF96760637BF1042155BE10E5A7527B39B70964B3A8AB4
3F21B10BA574F44852596F376E3FC235888D9E3D24C7DC65F407F99A68AD7AAE
86F1198858FD994787FD2F1FD5B46B5FAC77CE35CF5730638B32496F7EA8624C
034C349973AC1227D16964F9A9173DE57645355991B4511E39D8B71F1B8622A7
A5D19848C5E11F1496E10B4AC47B7AA1240E911E90918329C46EF9898C0405B1
18619CB1786D4976E95D7F665952CFEE56BA6EBB99DCDE2D95074091ABC9CC25
42CD6C109F1DBDC92C9EA701260EAAD48C62C3CCABD5C3EE7287DD2674E895E3
6ECD8881C06314B934962984C7FE400CC8FD98385600773A0ACAE6D25FAA0A36
D430519C2A613E076FBA9A067DABC0B7529C9FF7C578B5B9A4E1A8F60EF0F990
4651FE75CB3AE344D9DDD6D66B643350BBF6D3C770F7132FA8EF7281043D30DE
FD2C68CB4E6F0E249628DEA912E47FC61D09F44A31F7D88B072B10C44A60DDC4
BC782A2A2621514057156F6626912E1EB334EF140CDFF87EFB45BEFA31708BF7
B4F1FDE43D1C1DE8C3966D8C9671F362A4BA881C2746ED44CC856FE7D20B0812
655A858689CF391A95DC4C962D8ECEA8E753C2DEA7E42BD8120CD8B11D5CD834
79FE9D7246A47C25CD7BBCC85907B3222A66756A22485E8EED2EF67049EFDBC5
A3974D98E575D191CA3722D2E3950782EB4F63CD5071D346C026A59CDFA3B4D2
2C3552E70D8797F7989036A06022925461B12AE869A75ED6FE1768B8E8BE31F5
33D31138797A24226756497B4207C6D3173ED4A0A7FB5A609F0CBC35F5A19F77
E45AB50CDF50B9F75F0A6338BA2148B768F0E8EA69D2C9016445144AC261E705
AC31AE62DA3B30DCF9A0EBCDCED96FF1576600F1389BAC04F9EFA74966960727
E82A5A72E24259E976E6FB3381FBEF9762C42B9D29F08079CB5D0CE2CEAF2D85
E987DD9FBA00895D87D346E8873C9F74186C527DCF2C26EEA6B5033525C1D021
053CC0B36644F71ACC9470291842212C02802E7B68329157C85DE0838FB8478B
1B94A3F1AF5D53AC484C56479B73CCA15E5A7A95BCA7166DFBB61BC0923B6B65
3D9537A798B6E803A0A99CABA87DA35B532BCA16C510BE8C7663ACE221E3BBF2
A45CE39B80FB268D543A28FD4096D7C815BC25BAA1ABE59A48F46683AE927088
B156A98D4A31765CE08C1F7C77D61A9DE10664F4BF13E2B804E7AB4E888FAEBC
F74DB7CB457B511BB1F67305D3A250200EB76C39EA6587B515F5CAD0858001D0
F08DA33F116141791AFD0F429A3E06DC3E207D47A7F2D78950A8FF203F2291EA
1B94B91F3029E27BB6169116E0B71E4D72F71089EF28815477997EEA26D31D19
4DA347C0CBC91F0BD11133AEEA0BD95D56C03E7072927F790E4981671C544F37
0D68355C2007E89333537459BED79B9B3EACA8B357D1EC4A3D0035E2A57BEBDC
39E7AB9B8A6C79FE20717BD75EC25A96919B0623C4B487F73D78D9C5A40096DF
7BA69F270BE9F4B41D0555E6B3D969E12C4E871B24F07E41630F1CC9B82B395B
DCE1885A1D5F3441B03AC6B3495F24579852564EF01DC4AD98F15D522BD15FB9
074ADF929B90EEFB3B1EF3AACA3FCEE17C7835239CD824655E26E5ECB3811D95
422BE5D90F0E736BB7657CF2A5ABC7090F06E79A8BE6B9EC347BED7AC15B9A3B
0CAF7AFA5D20A5428CD87225C7FF28FDCD4FB898A052A0B1A3CC17B24EC39E11
64A06C9A13B541EB4AD89289FA3ED9860D1E2BA4404CBAFAF99040CF04CE4DB5
A8C71723B45F3F89E3FAA8AD725CFCC84AA3BB820A654E2172ADD82805CCC3A7
52A37735B9C1F81610054A54D76965628B653812E20CD44F485912FF17454046
8AB1C1C5BB7A38244F516D156D282BB7BDFC55B4522C394B3A5441598C496AE5
6C594ED6F276069D11ED9BEBDE43C59E2F387F40A791E4A62D5AF6B69ABD9CFC
CAE361770F7112D3525944F284E22E30D2B418CAE285AA38F9FB436D3937129C
9868D4AAC414F307488A9B054FB5B4D0A2B019B3C9630894990B5B4CCDEFBA8F
A1D34686001ADF08CCB3417AB5591E6BF8490DA0C23DA2F68B499386161B4BD1
FEB17C994AB0353B91D6BC325ACA18621F9F14916D8DDCE627E3839477F4ABB1
565BF009732AFFDD2FF708C1A3F61EC50C2372E576B0B39D5736EB891101032D
9E0E209E64E92230E836BCE0075438EB5C1DC0E7194022C2794174A36C2D80E7
E32A732ECF3856D43066A459E4322DC29B9807118332CDDC0D88E7CC1CA9CD67
F3BF4F3FC525EABDEC8554E1B61C81BE88E2E32828FC6527AB2B1106FC6EECFC
2FD37984B6B44AD59BE051C0B91D4BB0C966A52E99BF1C1D6CC83623D20DE450
B1367CCC4E89D6D604E5946429B350770BA66D6FD926D4D51FB2F9D57ADBDB79
981672F5D7278419D03E92B51E62CE40C25D780A08D5BD796ABA334160229587
F4DC11F6EC986B036931B2291933374888A6584744692F87A67A218BFBCC8E4A
144C3ED9B1676110F9C89AB74DC4418F77DB1E421DE938CF01941C2768D80733
E456821FF981702745D81E16C76AB405E68746B94535F38840BEC013B783E6A8
729788509C64277A9AFD2339BDAC1F73578793DBC5674711E6744E56631FEB5B
EDACD00C64C344DC67A6461972EFB5549D56C3E372F126A22A87222027319116
6ED09DDFFCEACA5A433EAA684798E24F49EE478851762DBCD2B1DF63FDB1CE3C
F726D64933BE3E7B9289E87FBBEFB0C2AA8932A66D7782371D3D4884B50E1295
C517FC56BF309E10EB06135D9789ED82968EE23E725CABF73E2B96A365F93032
B68AEE779AE3F1257DF466F59181645570273E3EF05A00A57078A6C9289FBFAB
908E868942C11A50DA1A7208C46AEE9AE963718BAECBCD412C2BC6BC6E3463E0
B13BCC0C763CDD3627A3737DD41477A8BCF7CF9FF9FF11188360AFC84BB2DCD9
19A160C7AD5BB562C37EA88044B1746FF6148CE49015828E2C2CA02CAE79C84D
C4D6D3328DB47A624C0296A8ACD7D8A62118514F9A43B023DD3A0469D988EA01
221F330746FB913FA421FD461C6DD528D0DF17F15FF78FCEB2CA616D526C530E
1689FD1E7BF1B2E2DF13C4B64C9BFD510200C2E03FA0533228F6C30F8FEE5DFC
7A7593A18047327A70393F396D3850CB0EC9013F7EA391C8922ED288DA4ED0C8
166676C54A225B2A6F846CE65D5869318FE640DE6C8C6BA0910BA248F9AC90ED
7B624CD4E5EB652F778F794216517B1B84F0D0869FF15ABAD0083FF4BC53CB4E
6A826FAB2BDD171908E46A3BBF2B8B22DAE7BC3650E52286E6F70EA5546D79D5
B248F2812B349367EBF83D7E1F335DD114FD105C9F8815EE6D17F25A1C8B7DA4
2FD174A42C50B313CA3FB2B04635D43B682FEF799CC1DB95DE914558AE8C2496
F8015D26518F63510488252D55642E3F3B8CEBAA0B3BB333776508F468843263
A1D577859C49042A0D0EF87FD63870B38E4100D67ACF9EB4C072D3196F99F997
69FC61F47D6C101972BC861F80C36AAD3511F899A80ED9503DD3A3DC42C9107C
A0BAC50A027BB01514BD9BC505717FC200F6039D043FB5759B9FDFCCEF0A928C
3B4A2801E3735C1238FB68520A56BBDED554E575018D9AD3652C529DA22A5A9F
0AF66B44344F1DF681219626CE94996BE214AC88BF14CB44C210BF44141C7229
1EBB107B1FA81DD123F8434BE971D9EC8149468CC0F2C45ACCD1178437E17513
1C8CC487F7EF853BD1E0232AF3C4A10960AEFAD538B644942B6B97E778000DE2
F2AC2B228D509B0ECC3CBAADD93DE6987111C9C304CB555D6628A47709AD9CDC
3302D01D7138DA8832FCDD816A2AB41854657FC103FCBDD935769AE28F1BB1EA
4029C7C87BD07B625A477A93B93BA8E0E0B086C29AA069A41EEED25AAA351E18
B4EBAF5DB938AECA1124060D8D138F01FB4732B7E12EF2773DAF259E6D1B252E
4E34BB5437F75671944B1BAD97AA7AA98DC6CB5052261D715735810768798F2D
9BBD22DCB24CA9CFECAB9938F99A2394F2B5338FB07851B45925E649AC3F7C55
5829C9CAF71C5318B590F2A0AD9FD325C398E049FC951F28A391F664BCE4148D
37843E7BA13D63A2DF6044F4707F3F4239774EC5D2A530382DB6BD15030D7B40
622753C9A7F0B1C126314700F7BCCD3396B200AEC477909C2A7CFACF4E2DDFA1
6383B91013A9D01E04A412631402BCB7953E285FD626E103E3A60D9765F90598
95E4915405709607F4B3FEDC85A3A7325BEC212BB664805A6ABBD010D85C3565
B2ED2E163EA673DE40DDE9C577433F1C3461DA816138BBC8B837790C625E702E
C701B68DB40148C9FE39D955FE41A89345805ACD15B985BB2D00197AEE3C0F83
A50E05A8E6A0FB2038E2C4F614E59B395D1D9823D7D5F126D93214B50C987BA8
05BB3BD8F7FABDDB15C7568C36C9EC5AFA0F3B6DA5E16965289FE28186AFEEC4
5CF8F5AB034EDF79DEAAA1FC2146237C1D110D4A10112D496250647F37A36DE5
FD87D4DB565A8C6E527BF76C2EE42E59C6C6A042AC156C12A8DD4CF75D5B36BF
E119AC55130DF559F1BD80C5B936FCDC451C50C76BBEAB3E02336A4618FF7036
976633033648C936C547CD0C796B110C4FDCCA3F1B81FE358E963FB3DE11F7DF
F7D47C96C4722899060FC8F912BC2CEE059687FE5220B6547F10E5C09F9E4993
46B2E7B7B2D63FDF71131FFF47E4533DA66CD9916403176768AA491C365040B9
654679EE7EBCAAF81EF4540E579EAA88C5D8F52122B8BBB73BDC31C477A7F1FC
73B49906DB7E1228A8BB64EF2EA43D7C1FA208EF44EB316981B1CA39BEA010B3
C6F6AE2F5DB222525CCDA88656F64C44A83EC6AB38547FFF70A5B6DFBF7DF68B
BFEE25456BADC1A12FEC7F9E54E92E75E48291ABB565C1F8644CD5D9F6349E59
07563769751AF1D8076E19266EBAAAAF50F33052EAC512CA317372060AACB1AA
7D7D6159E8D91210F2680C21AC770E51AE71C71E6B7796B6B54F27FEB1D9FC75
A1E77B7716388AA987B266D62BA5841AF5ACDCB7E2CFD3750A6E07486D39DD38
FEC1C6FA2682FB89B797E70A937A6D0BC305BD5820C99145AA7E7B25CD2E2CD6
62EE77CD892A017557914059220B58617297C43DFA17B32B2DA549EB52152BB0
4BF5A3E95CECEA846B5E158A56621C6910F350B8EF85203E4DAB28B15D18FE1E
A497486BE613A4D07728245BAE9EAAEDC600B0EF658DD1A4DC8FF231881D85C8
22D90730ABBDDC0F2CF53AC189CA3718CB1767179A1B63E40EAE3829BF4CE478
41CC9958B70FFE475AD631D13A802CB7B6D960A86183FAAAA64996642E3082DD
7583FE4BC0A3A30649486C002BFB9868ABF2124867B579F69E34040E2AFF508C
E7AF4B0D544E76DD095956B0333D16019A6A972910DAAFFEEFAA0C2F8BC52483
BAB18CEA58D596BDED31A69CE0AE0177D2B99B9AFE5FEE057A8A193850B5C51C
5B6B1416CD777C55A39BECCA7E622D460701760E7495135D6EE1215286E75A2B
401AF8D80A714FA9764D1F94A025EF53C533AF3B273D004C22CB71BA294550D4
E89C73DFD6CCBAF383B70A5F55DE4E919ACD596A9D502B2FCBF9DC15B995D2B7
1FE253DFAC85CB745676F87833CC5803627C6DD6BE703B8FA58E1B03E56F779F
BEC972E383758D612268B74D800A3B6AB946BB2EA31EA37F257398CE1E359B28
940FB1DB960F501A93455644ECF8414F66199ABA373DB1AEAE6C06CE483ADA65
B6260F0EDFAE9F825D09A330FC50AD97E76719EEDE81E652B0347C8D04A059F6
1FB93A4880BAF9FCE4C848E41EFDCB5AA1EE1DB0E3AC051E6654EFC9BD00ECEA
5BA15FF061F873DA9220FF3CA685CCE2EF23F6B3FA846C8B8B8A7C02A5ED1742
EF3CB42EB0ECB3C9C5C3C3F9B01526D9D71A74984522CAFBAF6CD275B1AE5463
97527506CA0C9A886441FF55ECF8069E82BBCE141540E21EA8F9253E6CB74336
56B87E1B0A17BA09BCD3A2A87CC9FD874959462454B5D439C456BB55FB81B4DC
46C236DBEBC18195D4BA3F2D9C1BA99FCFC7C1AA02AC2D0BE25E49A815619A4F
69E6142B447900FDB1DA07A85508A9F2405A282E1B51C5C8A6EC490F540287D8
5B9F7C1800BA18A9437C91EF10F19C2DCDEE1EDDB0B6F3988E1DEE273B2E7D2D
F24878CAA34EAD81BDC76197D97ECDF3C410189522F61655505F37D6A182ACDF
7D3B1046DCB89904A846BEB906269EF691B4B66A9FBF2F42F869C1DE35DE090F
1E6616D745D03C080D30E00F6F434922CB64084FE7BC4F5B60542FBA3BABBAC9
3B61A938F68FD787DC530F7383E3B9EE0B0A882F18427AE27053815DF539E377
4A65EB9D4782B0B8251CFDF3D178017821BA6915C5F45D0E78BF2EC3E236B95E
F9D81C6294337F123C8606767394157BBFF48C1CB6341FA6E33C3E6D72B7E8EE
F44A34F5404C7F799FC22BD8197B11E1B0AAD54245A32F7803B9200043E29A62
AA6361AE5A39C14B12F5587F209C939D8516182CA5F0966CCBF971FEDE25E732
8428143F6B180067B2F9E68C5528E0DD9A56E20DB0839D442E4D291FC422B5D2
69C60A513AFBDEDFC1AE7597143D514298FA7C892D566AC886D9C2D17F9C23C6
8E21D6B8CBCB49FD9FFD260F56CD6070B916527529102FE9F8CA979043CC0A97
96E0080E45D33C5A4B75DA3161D5AB80476A0E2F3CA21869CC19CF9CD0F897F0
E26E2FA0FC5033DBEA582F8B401381B9B86AB1E1B7E0C048E100F1CC4208FA18
CCB93DDF3784D054AAF95DC58EE4FFDBE2D64BED64FFDDC683B50F16A3AACED2
042AFB7CBCC1F139B6B9F8600A76C34590309D8A9CBE69D2B6F604D5DAC09EDA
896ECFFB9944EB7EEADEC7BD012E823A370B138DAD33602D146F2F5391729B51
CD703B8FE781EA15E51C4099C3807A01337FA4063B87047466804D6AAF417595
F26A70D17AFBBC17A93D718D9E0672723F1461A24A7DDE9C1D6411B51AB0A0CE
BF5DACB8AA35ED15A7E1E66ADEB2CBE121AF0255B0D718B95D12BA15F70BD363
2A1C92F4250C9B2CA6F104098E3C8B459EAFB4BB58B4CF1E151241164F752BE8
A951CA38B2DD3CC952BAEC6B82B0817E7FF4C072291C5614819AF4018A9232D3
4DF984400017999F49BF967A9FC525A2C99AE6F8AE205FAFD4846140CA104AA0
B990D4D40BC6F824D16EBEE9BA748ECF58D8BBDA154BFC9348A604AD1CD16445
12270A0FA3CDB74B479EA63CCC96F4E35B7DB8A8D7F3E1C56E518E9C7BD91FAF
70D7420924EE41D979C33B65E0BD2587ABD6F672B517A89E498488371938C573
B40D709C838E268545E290F3722C395B2F0B03B4E05F14021486C02F033FC132
DB99C17A6E747D024BC3297C403B5E27054DE7BEA5F172B31EF41D3CE547C01D
3CC70A2BB212CBE6C63B347EFD31077D3463E4BFBC42C42611ECACC0E2A5B4AE
BB885AE1A0CECFD2A1B01B88B08BDE423F38652342616990D2B79D28D6B89569
EF8866CAECD62ECF4B157009B5269753BD8EE2983A0D08BA9B4CEA5467A69DC5
FBA4F2BD247BEED5D3B358EABC85DAD457C8351CA765BA358247310D2D65F7AA
1797A20EC505D212687C98FD2AC5B3D2E0EEE24F96DF450EC295CBD15CA3930A
5FE314E02D56E60B62165B5298B405C63355BA19E2A651B9017BC1B8ACC9DC66
78342C1853B78E219263F40C72D7984425606DDDE632D7AD1E9C3AEBB7236B12
0EF5502844E750853317185E95A7C6A5E07D3FF125FB925D71F217A74A0BC2CD
C17BBF1B99386EBFBBD3EBAEF12DDF571ABDB6574C2F14FB24A85619426BAC7C
74B5895B4FF67E59304319AC31DCBD974943595F5578683DCB14F67EB9C6EEA5
A4DABC16F0E4C27C8D9E5A46F4064363CAB921D804A7AC9160EBBD60646692D0
8D5570311A0715B1723C47389E9B815E0EDB650437AE26248DF2F96E72785785
EBF5E0DEB9B8E376D6755D13246BBDC2B3ADB8BFE82A1E6D7F3FEA72A520DBC8
72DEDA90B79F113F5A4BE581DB49C5EB8BE356BA3BF562260792EC1857BCC050
B841774BC20AA9BD5315D9521283139769F56B466B95CF4D412DF23AB1A9406A
69EC3497D2D84B19F68EBF7125FB02920466AA7905BDA85F2BF3190FFF5B3236
F14977546B1D3C5FCA9638FA3DE2A058EE2076C77C33A93F2FBAECA0A0EA9F49
CD28BE483D01113B2BD7AD8D322D32EEDA3DFF2E98522D6C5FFA28489391031E
F6DC2E9040E85D23934571BE9450DA129DC0FDC4BE50D5A5CD8DAB4109CD47BC
0693AC322C021122E962CD756DE48DA93798FBDD034F40F04A45F3BBCBC0EF7A
C86FED4C7CA29BF669B44C004511B3AED5544B06AD48DAD5E377C2F375CAD13A
90441C679823AFA0B17751782660484DF2F9935BF513E2836DC85E77FB6197F6
BAE01759D7BA415418F3B808E3414235D7E06914284226C71D180233D22A706D
57DC4A2B3C5A519FCD390EEC64CF182A3E7CCC296C695BA3900D900AB13CAC28
42380BEF874C0304889198D2AA281E24ECA9229C18B4E61B6A9B78D9B44E87DD
F05E7E3C1682E8ED40482B367FF14E72129ACE0590E1B613AAB89F20B39ECB6C
836239546551F5E6BEC12C895C1F84907B95A2F94B004A05C3E613E093228678
586D1590F4C85CCF00AE6EB1675793174FDD8FDE863B80121B24EA380C737C34
0CC74CC8F267CDDA36431BC83D98704404C2E77DE577A8BDA175D7E82D2846B4
F9E855BCB5A68A509C2B7DD77D96A87A48E0F9CA568D45B8071F348960481D21
F68065CF24E5EE4ADF486DA47F265FF8FC9FF028AAB2FAD90205D363D14EC114
0809BEDC6CA94B8661C478C2F297977D3BCC1BD3719223639A74EF3B69729E4E
35CACC5C4642622FA9B809F7055335B39BF1A2549420EC45B86D4962FFE3DDEE
27EA40BEB9D9E288CEF25EED5F0A9EE41052EFB3AEAF022BB805B47677047CE4
581C8747583663B09DCA538CB3147EABA2D45B649DD784995D697C2C3EF61F72
0CE7F7788599AAF3FF46CE5AFDA10BA716069E43530B402B78690275D5030973
0449352FC8CBBACAB0DD9BF9D336F25E5799BB341C0177F10D9731227D1D3B43
3DD2B301F57E978BA76768086AF935F7118E33E36963118A600F83AF3F1902CB
9FEDC0DCD19B1FDA7E7ADF1E9249BF0EAE8BDB0526C6AFFF5052BF75D7D5D85C
7E9E910A2489F545D8EA6969304142EA66821482494629693AEE5A410121E105
B4211619620B2D9001A30DE416A0409B54607DBD9C681857CAEB67E8A213E472
2B955EBA0BF3AA9B0A2EC1A649C282598F6790F69D1C986A64F25CE29C161D1D
FED0AC279A030A92CEC7F3F1B26FF6E2D1797C38DF30977D803880A6619960C0
A619B8A60AEE8382D921A46D81835785B3FD79F75ED2208F2E90FC60916CAF61
A15C789CBBC0FE880DBA07B832A01384198E068B9B5C062C6CE0CE186CF0FABF
10FFEA6E48908043700037651B1F31AE3041B5D779A887A15B8604A3224BC443
B7B1339E01F3D6B02186878ABAD0E20B2DC4557602FE6F058A604593E7FD3139
EA35AB802943B5628BC95CEC4FBB62C538399C92F3ED5828C05A97EDEB2DE779
8F67A0F535E67498CFBE19D3C9EFC9D542C655506D870AD681C8A4099850DA80
C3CF521487063B96CE884A83FBB470FD8C56A7445BB38A7A303FF193BFC0E3CA
E896C2904909F628ABFE4B19015639503EA8DD2014AC204F060261C15195E091
C66BF20A50B94D712AFC36194FFFEEEF1074DCC257ACCE56149A49CB4B625615
34BD3376741E9AA2644EC087D61BD7F509234968915C6A9FAB383C2697A07C67
1850972D3CD9AA74EE5B60595061139652E3AA0CB0ACC846F9D65187171002AC
31193E578D71E5657F5F1463ABFF37AECD69BE9AD7B87EC13DF7B662B4DF892F
2A258F023C1E0DEDF9BA72428181FFA0DF53A7933882D94F90EDEAC8A3A8DCA7
2E26C987F09AF3C11C6CDB4B5C3DDA2A8BF0D9878CB87C82F9B1263614FC7DC7
3392FB562C26C291810DE035C150F276290101AB3D4640C494B0AFA172887001
E098FA34E89ABAA7573A8BEB32B5C7659AA3999D8CA1D3941D1FF042DCB78343
70419810BF94FA7E0D033E338E149518B5493D7E35073A22DF4B5AB8E1B0DC31
1FD77D52210EB2073CEB06E187F594B4D4D4B92E6AEC4A9F07841FF93433615B
89BF1FF37B4EF64B20C24ADEAAB40D5907656CAE0CA0780EB631A3DAAC7B4C83
F112CD364456A7F5BB6C3088238258DD7350819D14FE3ED2226B71E37AB4EC84
EC4C9C138F6788E4F97D9C29E03AE381D34ACDBB00E3CE315A4ADA76E897DB18
54F135C2B69D885DAEF783AF89593B1D6C7D607D232EA5942ACE88AE8582BA14
0101A62893AEE93B78C1F0021E46CA77856A05A144DD0BC77CBFAC45DB8ACC2A
1CC2C5D6ADB354B0D2F8C6C5D809F919A8D0EDE34CC6B6717E8B794AB2DBFDDF
3A89648C906439AACD2C6F890C9FCF40E7E8AF25AB31DCADB49DC2FFAD147769
C93EF4449C6E2629BE1EA48D1AD2459946C4221BAE0FAA3C59061728EFB3E131
7CF247224ECF9FFD37B9BE0E41C85483A47C5E99A7BD7243045EF3BC63F882A9
D123C5D6CE35E7D5460EF05B1A5136CF2C1DDEB46F707DCA822C764829548D1C
357D76F8E623370C82E423A5A11FA6C042AC6847F2B3291D30D4EEB934A01731
99B40BD4E6CF23E0D97980F20EFD24A6644AA26EBAF342B7AC45171F41A35364
E573321A926C7C3DE13338F52F2BE218677425005D32E05A0635997288AA244B
3925AC7F321E25CC981E526F1D803C93B2A2A07D4200535F51B9C90DE1AD4B3E
9909F220E99C367B96C474DF3C2D253D3AD88649A1B1B360921675AEF8F27C12
484CCE6E4534AADCC37DB0FA6883858124FE6C2AA0518EF8DE08645386A66F03
7C4184CA5445D5B4F43726D9BC891653DA63403A8008C2A4CAD064E43E501B67
C9D0D0C2F61A648D5B943C475363EED630B3B78199AD5E1B2A9E80327470CE43
4DC5B3D7BDE64177D18907706E2EC4109E8FCBFB78A3E7C9E61D62CE0FCACB72
E14C2FDB87A97F47425FD3CA692D439C3E3E835CF60B12EA2A790DEDC0FC1B77
F17B035AAC02B40590A2A6EE2542B885DDD5652727A5A54A8A597D69509DCD61
28A931638A04C43BCA562C916A957E21AB938CBA6D95C14BEFADB9037FF4E50E
5E91ECDFF46A74AC94A09D60E190C548172D2E1D8F21295F159F14A88F147851
FCD85007E977C6EDD006E0430BE8897C89BBE10C6B0BF0A640F2DAAC77D9AE65
4BD6E43146C9A543ABB1E059247E276E206CB00BED125C8F78A1633FAACEE651
FFCE139E58A441527F6EFA598F92F6DCE5584CFC53F55B75BDE37DFBFBE5DB1B
FCC5AD4B2EDF98A60301E4D98723B5A14A5EE325D1C4CA5023439ECB3CE97935
058ED16528D28E50E37BBEB1D1554503645EFCC23FEC5DAC77C9B5A9DBCD8213
21A1DDDC6B39335C89C874EBAC4EAF1F31FD2889F302A9C5496EDAFD874590C8
D485D93D8209C94E8875065A8D2F7D8A673AA4457916E8D9D29D53AF3EE71A2C
1C2758596AD40E704DF78BC16475A9CC8CC6267A6C8B55512546ACE6437740E5
4D5286927A0A136D522889627824ED0DA1BFEA292DB3254CEC2821B195C3535C
CE79DD39B987048E8FBE346DC00D7C2668E1663315B430D1C80D2D39F88E87D4
554ECED3662CC3F91C829E0F305D2D7437522FDC407FF8B4CC6F326D31DC3FED
9625DDBBEEADB867DDB7FF0678F59F7151A9CC47F695536EA269D3EE945D5515
4AD303047E1A3AF69A27FC38AFF90EAF946CADE0F509EAFD6CD024FCE73FCDAF
8BD20876DF126296187D1364EB31556E8D3B0A3B7785D00C79714D6FED70645D
2D05E49BB9FE1A167D17BC7A036D8AED54591271ACC1809460A8DC4554A38F7E
A5DCB240685CF1CD35D814B09AA8D57F8606188A156AE4BE6B40950D60CCC814
3CCD4A35302FACC3F0A199C2D6657E242BEBBC0D9C6CCDB639869DB9B645A292
101BDB4E2E6650DB6CA8EF4C2CEBFBE5464EF411447F3939586556DC214770C6
1A6384B76390DD9AA794403999F6B78D81ABE86B754F6E599939B1432225CA41
3EBFEDEAA3693ECC7071FEEB02814EE5D641FCF55E637D19C2A949B71B69F6AE
BEE72A3DA2403412987F9D1A5339FEF1618EDF8B9BB56654411A74A23840473D
FBA7A86786AFC924E8517AEC114183C3838D9401260A7432E96EF4D5B0DB40C4
7E347099B4953FC39864BC27CBA7C3E86BA465DAC7EC07F731E0BB8C7C8ED352
E0A1E6DA3E3E989C7E41FA568BA1FE13F9FDB3FD8B52553EC99C67B8294FB186
AF0593011D448EF8D16283F9B14AB9E969F8C0763ED425A255FAA7F439CDABD9
D54EA413DE4A23C97DF500C5D817F12DFEAF581793C1D178E74AA9D8ACFE75D2
9464F7A66AC0787218F676D60FD5560B7E841EB86445BF8D61754CAA63E52698
0A6F1295C15C74D8A1F91D079A1068F257FB2784CC8F66632695B5C8D556E0B0
D4B521F82FA31232BF9D0C730AA743403AEFA3C7981EF1C94F888877317131B0
45D369B670BA9FDE2EC82F38BD1E49FB206488CDF26B2EF184726492246784AD
9E50BB59398D0BAFD58E64BBBE22AFAF5278C9D30B99B0CC5EA988A2944C7FC6
5D53B5A106F63E9DACE4867E468A5EC54C6E8CCEA16FC07D58F6AD35B345BAB9
76C101780A1DD8CE08BC9CFD4C466847FEAEE0AEBD134F386030276B14D1BC62
CA55244B6AD971A023FA475E9784EF79ADDF7FC21D7643EC0724B2284CCD6B34
449587C854AA22C689EE739E003209C7960E66BEFD41F3367600140863D5E14C
5C8B11895AC0E79C0B211C49E3B7AB32220AEE7C75A5BAC24E9E43AD56BA6B5B
915CA7463366E498C82811CDE551ECB3C8DCC93024F925D8D7D2FA9B093DEEC9
37526816B7E00D14BF1C354506C4DCFBFDBB7CD5B013F3D522E48DA28A4D2B22
F8F3F724666B1860BA9D54EA09C0E2FCE8507F619CDA4BACFA4A91B093D70EB5
8740DCC4BA984C3010A88692D4F22EFC311E53570A24B86F46D7EBF24DC37681
F484DC7088B6E5DB5B3B7DDBED56FA3AE38C1C5E7D647747C929579EB18F7EF6
FDB6BEF9ED5ABA015083C5998B767DA61365B8580E9C4DE5B1E2F133686110E9
F46610DCEFEE96974374BB6E9D392B51363C384BBCDAA6FDF6CEC8D7538AF44A
083569519AF2F597A0F043F089DF2F2F7B5230E7D8E6A2F20D8B4AD01B5C57AA
CA10BD823F115844FDA9A2D92ECBCC9770D0132628D7CAE1883C910795C8583B
1FB0BC61C7A26294870255E4A960FCCA6B1B1A065B1C34F194BEEF04F6BF76E0
45E8814A4F2A935094EDB97DF199549D54852AA8217E48B2B0BAB6E4A896C2D8
3CE85563A9EBEC3B5A1BDE88057173C037A5F28DE172104A59134C57CD5CD030
5BBF875D7087C7D993E183960EC2B89D57EEB4E8BF20057979A98A4A1212660A
43380708A59D6337736BA2184DA061F6AB3B23893B9AEB8BA48A087BEA2DFF55
CF5E3DE25AC0B17B4CB3B7140D6E0B528CC121CED1CBC64BD28DE9517C0A6A4A
E409B098D1AB782C8AA31DB9E1DB1E435130296CEFC867E7D74A4E73C9B32EA4
93E60787AF090ECB75DCE3836BA35114D0B8D5DBFA2F1CA5C38629390622627F
C83B7542209AD8BFDAE064992A2C14B13F18D8048B24FAB3AFDD17590E8EDFA7
C7C277BBF9E386D35F95636EC4761340BD085085D8BEBAC637D3C1CEAF96B458
1E1C91178664E79E8841E7080BFEE466A1D97C63750404EC581EDD6D10F12F7D
242B1D2696B3210D7958A6DCD6B26725AB123E1B3B6FAE7AE7D71D41743DECBE
D602BF78B253847E5A682139F85FD44F45A013F484BB0C079FBEAA2EEA203950
EDFD6CEA20D0649071442B2916EBCE5F4B59C83FB02BFD3C100E7A65751929D0
797D1C23EE0302D585F58921929EE1D3B4A47E26C446E0B8F2BECEC0A1EE19BA
7AE208615F5D00DB8AEDBC8209595969EB32232512A128C91C36EEE43CB41592
BD13837B9EC97359926A7B217DB6C8F2F209C4EF07C1FDF20A19AADB222DE0EA
CB01167F0840F3EF427451F2250A597961B6636837828AA000941FC5F85C754D
5132402A0A94EA3D0E37D09C8C862EF87FCA9016BA8B65D9294431598E605A1F
EBAC0DA99529639EAC0FB9701025D55BD054E058D3E9197634BC4638F601D167
121F2EE337886D0C1D801AE1CF5AC109DEEFDA4C340958D49A0C8B4E4459B7C6
91BF6B1BF409EE8ECA30D88785FD165B58549F12163570DD778B8CEA67970A39
F150893C460EDABD875702C05640EF31F1E20277695CCC2E54A25041A959AC73
8AB6CDEA66784B9D7A0A2979BBD6460F393365098CA717F915EC241EA261F9FA
C978C8F9FEEB8EDE51AF3554AF92E3AC332E534796775A09A959DD8EB2DA6699
0A10275D0131A05D916D39A70A2F3F1509F1D9C57BE8500B09EB7F877B8E7C36
8C84661E8D470C8FCECF87E141E181D826EA0417668D9C930DAAF6848E3A72DF
D018BA844429BD3B5D4D51A7FB5A5279043E68FFB9229EC6DE4ED5A8DA7D9EBF
E810C504360FCB236B33EA5BA6233B2973A1A4A64AD1CB47E5CE09E60F083987
4318C8389E298F554671CC5CCD0421A0A59116948B1C5D105C70F57C53A8F04B
547EEA06D67A9A82BE2AA6D7C24DC708CBAD17ABD8F887E48F9BD42618FF76B7
D7477C08779C0180E034A90CB26BE538F3A4CE89B8E52E6AC57B6A4A6ADE0F0F
682711BC2892F73D16FB82BCB6BF1A16587FBD71F44A2A99BDBC0A649FBBB3F0
49FE4E20CBA5D8C08F62BA173835954D60C711C5DC5DED743A7ED41E852DC45B
CA016BD815E7E878D4122013757C6D445496CD9E665C4CB2B3CDA281DB13D9E1
9D42A419FB6AEDFD768F9E302BEAF9644502F3BF63BD012080A4BD18DE1AB635
3B8AD44469296B72FC1C2921B15AD68CAD72846FB5068313E89BA11B9CE8FDB2
3D7BC51D926CA86263840FFCC3BAF798B72E5AA300CD569E5C6147F75B3A9B3D
E7E230CC48F8B901575E018CEC212A30D4391FF1229E4F84AB4DF31358F024E0
415E7D9E558D3F664D554AD0EC1866268A8C63765C501F7926694EC48CB03CF1
EACFD31FEE3C7AFFFF0C5BEB68F108D352F1A909AAD94AF95A8D62FABB241DF4
0F40BE13FF9A22A528922308C00CCDEBCE60D893C887BFD9849978D5C13AD738
8AB725051F3287EE5C4D96208D8F82CF45FB16E4806067890E1B980D5FBE1C67
6D2D22D90E4F8C474A8EB547159F4D1B6CE505EBA5B75AE6550402232A65591D
0EF3D501D9F1A88D8BB0EDE87EF9D3EBB70EC3855E96425AA5F10CA1EF4608FE
644DA9ECB65DEFEEF7029F9A94998C6CB80C88E3959676E966A45C2213DDC3B4
1D526D99AA5755841BA8D28860C3CC71E83228072C5A99A72019D29CB845F00A
177EAD188847EBCA6CCDF281A3C0B28B692C979B4525E8416562C7BC6107BA30
0786B6BB9781640696B74F41C7D5E32C525FA470C0B47A34669D01AB55C1F205
BF58BB378428AF52DA6EAA8FCCD4AD3E5D9D90235EB33BAED5794A3926878C39
1C5A428CA13FCD6B0686B1A34F221780BC3FBEFCE9C09356A5FC44C25C0CE7E1
2929DAC08D3A78235AD9A129C033C684904AA737169B00CF160862021EEC1737
2AC18CDF5782AED3568854C75166739C81060C29A931834E700F144CB5F8A2F4
9AF544BA9BEAC2702369DFC8CD27783C6CE8F4217C2A536AABB74B1344E414D0
D88A66D6B4F56BEB9360478E29A02B878406E8E126B9954C872053CAAA120EA6
54C068E4BCC9EE239AD76BEED158DB3BE2DC4BA1DC216B2D085F2CE29016475A
DF2D88CB239FE3373A015B5CA29A7E732302A1CEA866503D32708C76C30BBAAE
0F953D5B8A112AE34327ADF4CB0646C18AF378060B81122B0D79595680FC3554
1CD093489BB97B6DF2154825B114ED2FE5ADEA266671601635184524E2C51E7C
30665C5E989B17A3A72248A138A3CA8622749CD7481FB8790F91FD8AFA989EB8
BA0CB3C5BDD0A24DDC0866A4B0CEBA0994A9165727AAAEC6FE417204F047097E
0424C253491D1A57B150A5B386F7ECCC0EE8E31695A336B7DD67247773786FF3
A19B5DB1BB9D73B205D69ECAFB65522F1E22ABED8404163ED36491F24D7C3D63
4B25C2C6781C229C589A8FC997026C3EA14F20143C90ED66A6D0F0B32466D474
BBF5C4ECDE16AF0798D746221311D99F7C58718C421391BC4E0BDBECE4A7FC58
DCC2F00B5F294D869AF332256FCB3EA78A9EB74B4B091BB5B674B0052E31A152
A5C611A52AE12A46588DF13131F9DB843759C1A6D0E62B0DFE501ABDEAB932FE
D29551A959FBCECF7C9FFB5692E26A9D38CEF96C7812E92228F323581A7798C1
58673B1736FE39987766E9F3CE75C377D3C5C7267BEFE151C52A60427176D702
FE3C600E00CE29C4EFA9548CB450E12BC8B4BEE5E7F22D32D9E97DF65B061285
7F360BA1F06AF09DE5CAFD23DC2500B8F38A83E4045F3CC8D78FA910FA0E9F2D
6F8DDF962DF5E90DCD355962158491A8FD8AD2C7F470E48D2C01FB96502FE6FD
8068F002D6E1D9C3FFE7E5403F30419BE11DA4CAB62EA76CBCD8DBDA1CC34AC3
67036829934D6A2AB11506ADE702CB2E8CA3FFB8ADD5C2470207B77940B72169
496F57C21467F2E268E3F2AB0C62F99D6FA826BB9A0546118C9BB6E9CA78AFB3
C7D87A1C043EAFD4622599D231A1D39AB6BD9718F0B6CF46F89985CEF91DCE1E
6A51F20F8718629EBBA2BAE136BD3099FE1295527FF4B743CFC5807C551651FF
922639E5077C139E36B5039AC7C193C88A044CF33F6A39388F6A296F42C63D0C
59C0E53963712A6EAD0F218DAD2781926594A41195535E594DF8CDBDA0E00E90
8F282425191A69B88CB3DA20717A0327796B3BCA0FFA58169FB2DDAED575F353
B391D2904DC557746508623BCEB72CF3851245881C866D3B80699D34FB28FA68
B37848C14FF933CE48AE61ED515C17366031C22F0A9189488F94228B01277574
02E83AA655E9465971C6B191B8D3ED752968F923AECB58B21017BC288EEC84B7
6D3154BC8B44312F358FBCEFE4FE72DF8A865940A127F49BD2B5ACCF7ED80CEF
4FE96FEA4B0673DB111E96164AF8420A7A563D795D8E9E60F522240ECEDE6A97
5007BF6EFC3BE05801B2FFB32162A41F2F33B0BE4AF7B655ED7915395A1A52DD
D8F6C69AD73771B8D2F90EB0AC7B89F1E36AD630DED2617A67C1F6DBA90D879B
D42618FF76B7D7477C08779C0180E034A90CBD04504E98AE11A355F36DDF7F45
CADAC577EF13BA060EEEE684D91E56CE2440A58D277753A4D9D6A7E2A9CF1B95
5DBB13725B28DE3AD77F1D2FD848EE14B51B2D9854876ED2AE5F9560C3190AC3
88C4D02E161B1383535A4F11AF8A174649A0504BBF5BA6C59C6BE0B2BF3FBC77
53450D28CDCB4D31C8E5E6DB585C2DD28B5C0305C968B4695E20A5428CD87225
C7FF28FDCD4FB898A052A0B1AF9F2205D2837918E4FE0D10528AE392FD75F5D0
150107E296AAE93573521ABBA11B6F626A429AEFCD373482BA3D0CBACBCAAD5F
EF89E5722C14B7DED7E9AAE85B0FD48DCE817A5078A751676B5DDCEEF6B61E61
A0008201FB4726A8155A2B4C4BFBEF1E1A860AC2A2F2D25C1BCBD18706A42F77
671B303190744202F279F7F5A42B5F5DFAF09076D8D365CDD8FF305059C2E913
B7978671AC30C411EB30791A3E891A8271EECC4DB35810B23AEF6DB43981B205
84B923BAA5A113EC3078334DFF007C86EA90528652E239CBD02AF66EACCC4AE0
8F00A4C168A79A60531E304C5FBB763BE8FDC7F105ACF0E489875D700C9798E2
6E941EB78EEAEF11FADC9B7531507404F40B917D15D58B8EF4566AA334710C2D
6EDCB2998220897D83ABBA76105B7FE07C48A6623B2406EE60FB2E7C173E96EC
8472C73CF945D5161E29D8F482480D9F9F3734A4011F8AAF2399AC929F5A689D
AF0791509D59014BF8BFB91EC4894F56036C6629655EBFF7C14E4802062E1051
FEDB49D8FC43FBF8D89084B2E2B657260B8A92BBE5306C4BC525C07C8D40D6F8
25AE58BBB9C9A1ED9C2463AA2A18D55CF1DF9078BFCB6E0C73E99FC91115FF69
62A4AB1A86F3BB1DFEF845E184CC059418337519B9164C0436AB0DB8315224F8
236E77E86213263B2F5966D95900FF2804C0425D5C5E5E554233F549FE0ABDAB
76A8FEB348EA8DD950547A6CCAAB17E693BE06105C36A2F911A1605687DC8E4B
C213CF90F65FF1EE56064A5B89AC68175B5A1D2628CFD5E287EE6513305AE5CB
4E56624BABB42CAD9DF64E019275FCD12C3C99EE9E747C5DD4F8C9E12F068BDB
6AF951B120BD7A6B6919F5D1D2873367D9AC4A08FD88BB5D371BBDC98966A442
AD43A138788C80E4476A8976A53677E7150CB91D37ED0D8F036AB4CA14DC3A76
4E15ACC917AAB328907F6C29F8D8B9EA340718154288E2DA45B424AC335873F8
D9FFF972AE98B48BCE35A227D390FF6090B156ED3277084F2F5D4017D615ED57
6CC04FFA5187978814AE43B55FBBFD8F3AF086807B6467EE0543113029499BEC
B534793956A7B68D4BC826FA253CA55FCA02115FCBD0E7A9F46DD5F54C1361B9
31B251D33BA27B1A6D6820346CA3D76CF5B74449517A15516B0116A417C37827
D8AD40CAF7B5F6091C49F52CCE7C5109A7DF95FDDF9360564EA5B099C094DAD9
DE392F1ADD04F558DD9D038DE757239DAAFDDCEFCAB930C9815B73821FCD181E
CD83E124AA58BDCB3EFB7C03A8DD93C27BCC165E2CFAFCC194C6F19B2493E5C3
3AF6762CFF965CD9CE3DD48F3E36147F570C0CF62CEF74104135F3697037B3C6
1A206983C6F35A52EC4A91B3A68D54A31B0DF271562B45616F007683FFF45D0B
415012D71DE48471F68993F979EBAE10F9DA2A81F542E87A46BE6E154BA67983
9EF2F332331C92E4F50BB2C5FE083C760134FEA9891F8C6319BDDB8CC319BC87
9CA2E63F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA03B2CB0C565D0E15559A8068828C2D7346B4181134CB88
476E325F2FD28AF472FAA69E55B90F31B270AC3872FF02FA8360952D93E3AB87
C668B0490EE305F3C00355E52AEC86C5FB46F8517795ED6B0B67E92E35200177
58A172F80111BF15341E42E6366E02817082BE6FE0B04249A4840FBD7DC5B41D
8D1A84EC04FD00801116633310DE6757DFEB1A87A7FE36DE38D01D7F56D4B0EC
D4E415CC9290C79FE24F1D3E480C41EB8241AB194C0896546D749C9790693A85
23FD07CA410186F4CBBD66C3960BCB0E709B75A9CE343DC452615EF60DDB7E70
F095A1D5114911AD646229028ABC08FB2713C4FA27A936F7574C3B70E3F920E0
E400838F718712D374D9AED7F0A85A6E2B9881F249F56881B0FCA0E538AED8CC
B91FB008F097A173E4B6F3271396CB9B90CE73A3467090058FD314F666C09ADF
8063C7B805C438ADBE8AE3408EBB68E972943531DD69B4A14D977F37DAA777C9
18817939857147A165FB658A4E7A74EE6C22C2737A810763CC9E385193A438B4
357D0866EF0727504C48C199E9782CE96C569BACF9290478CFDD203BA47E66E3
B89327F9AD07EFF1919E9BA90194E24A69649F0DFD0046D57CFAF336B7DE1C16
685B03F824324A65D98AF2785CAC79A4821E48802F50EAC63D9917C10E24B930
4C217CD1E361BAD8DE2B1AD0B30D5A2B2DC4A6A78E59C4B97376C79B2116A902
8A5D92FEA928C585DE92E03A7C0CCACAE3F78F40E9A45653BBAF2A5DCA560DB5
BF964FB2784C9E13F0795427324E80C175BC991401725CE4AD49B5EE0AFE3B64
68AA01ABC8EFFD9B0B6F1FA94A878BC760F2F70D4299A4F76115EE6135F0ADF4
FA3906F211147BA146D78C62B62FBEA3A04583F3C07BEEA1C710C9CCA91C3A0F
3DDAAA9B45734348FF7320A7806045871AF6D7D534C89BE5845CDDDA0862D3F0
D00297CC6C8EBFEA08384809CF652F1E602E7F256EDAF168B8D181F02C7FF297
B20ADCFA37C13EEE72C233C0C5299769BF8A3C47EA80A353B71E82D1A53617E1
E902D53E24B71DD4F1CC13482C48FD1456BB3981C6E8273A0A358EF12B2D5FA7
7789F403D80BC3FFB91EA14529BE16F9E7F147B0E3379E2AB5195667C239692B
0FDD0A5AC9BA68DC47213CDE3086E3B533A0D0F21FAE3978F76AF912A7C41A5E
D6AB07863F8456B437A5987C43E34B7A21AA7D151A5AE07F302102312A2D5C95
78091F53E88750944AA1105951D105D654A97D7A27B464BFDADA50B69463D3E7
F8D73B13087B24BB56D86F22ED3EACC46F750F405FAF96268E80A1E672C102C2
3DB580023B789E755A847993D2CDE425513D140A3B9599A6FD7B8FF7AD0711E9
D787E7D4BB47A998B4D17E3B952A14553AEDEE67197D07A9AADC15BC4240CDC4
A30790A98F2ED8F648FE2285E3198C3D6227E1D03B98C42383BF31B68F6A6309
C9BC01248EB29CD9930C9E18593DD201B93D885973935C91CBB65CFFF40E7A92
65B6B00FC75D50975BDB44B280115C1BE8EC6C778353C94B5495C92DAEC28588
C18237F365AAE54907573C2C7A684FD028A3447B46421CFBBD4513BC1AFFCEE3
084D8D84A638CDAC6595DD5A8662D03B248E7E7501BC98B7DFDB1BCDA764C176
6BBC863C4AC914313AB457F80767FCFB1BACE58B9B77225A134F852F6EC3B1A7
2A8B86C23DF95F6CEA4642F2409E506EDBFE9AA185487FFB36B2867E0B88169A
56393222CAA9B96151BF32A15D91EEFBEDFFC59EDA04A147FB51227A5AB0C571
D399C546AD2D172C31869BE10461A0747B9A8649B6F2392F12E2508F95949634
071E3405B3E415E94614FA8A94806AAABDA31A9C1A23E7A19F9ACDC867116F01
A3C4BC74CE6EE6409F66D517503270F802BA8FD6E1149715178A46263EFFFBE2
0CF045D1F128CA42C531156E0315F306643F0BFF06EB0DA016066AFD326D3EBE
9F8964D358AA76DE110300CC7B898FBD8BAA1809CC4CF8879A65088C7381B902
9B67CE9029093A96B71FF1281B0D67D4D3CD375C79603EFA6E08301F9A896A60
017B4E5A7B06FF4D1360CDDCEDD19C2E1628341167A07B6BA482AA6199B18549
1196BBDE507BA37DAAB60FAF8B43F9409392E4D9197B434AFA1C9DD3E81986BA
F8AFAA241DBD42E7FC2458BE65CA610638E803F42A5648E6561C12F0CDB0BA12
1D3B83F8FEED774D50DFF8486F20890332071C3280F571B74509703FDA4BB0C1
257FE26C5A5FE4499B09CD8F1266A556C5CF9AD095E0BD9530D515129F59FC51
0A6ED78095A53472074E1C95F4A4B761F25B493F070730D8E131C3679F9D4C0F
28A95A2F084A8B71B870C2E63B9C2F296940CAE8F8712E1BEC7272951D9CC4EC
BF2DC87FA1E1D1F946A8D7B676212A234FA3858DC3C5D587A2DD44238D023853
4D64E7EC67D856934FA7BE438211D2B983EAE3970CAAD43ADAEE90F3C443165E
311B64791190BBC0B763C1FEA34255810B8281AC54B0CC5E38C143355AED0333
7DEDA21A5BB90DAB18D604C6598084DFFCBAADFE1AF8356BCEEEBDF0605A719E
D40FBFB782A22C8D118F3CF7203C7C0C191B6A7AD6A85E8B1E89DBFB2B7C07ED
DFCC655BC55C28705A1149F9A7AC96BEB1B913570A51B2526FEDE0EB000D232B
73FF66C3BC59D0BE4278F30F09707252589F8A99057B450A38D203F15211DA39
F2E97C0B73419F816A5CCE657A26E927CAB2BFFBF4CC1A24A2A50AD3F431A4B0
997305F7C70A208BFC470AB52A38F08BAA4051D825D512C6F5B230868A44331A
C21B9ED5957A5C42190679A0BA48AF346151FAAA3330B730190B04D58B74C3A4
A0927388A736F8DE5374A7A85C6CABEEEF7FA4EFCCA30C35F607F5C12CAB5108
9E209D997BDAE4EF14F9E60E487517C8ECCA81ED1DCF6F21D60B7E1633F36B0D
94CB7766E8A5AAA2CEDFA0B0C9858FFF4B55FB319FDED48FF7CACAF338F46A19
7922AA63B2DADEEA8C4193BF94834F9F1A8646DEB04036D735233093AAFA54FF
A50A3C775B46790D67CC06C00FE801392BE09C8FEEAE1803EEABEEFB1ABC2BF3
64CA11C477865B61FF0136346A52E994D5242B0EDBFB95ABAD9978D951090105
823AC61EE692C31077AF65DDDCFE0B5F87FB1A9C5363DF6ADEEEA9082B1AB148
1638005133233547EEDE16EAAC1024DFA2E161FB63651D8395A435E9CE18B233
FFC1BB425B1D5F66AA868C2BFE56CEB9D39AB195BE5776EB8D864CE0BC36AE06
3F809086C9F9444DE41B5C85825B7FA03AE2B2BF8873C5E936B1A4043CA72EC2
190940128A106C9639482E44A97188B6D4B38FBD79364F45DD9E54B2B1C3C2A1
2597527255AC7FB0583016699A3FDC333B26080381352B13A323C4EB10A7D7D2
067EE56B77B4C936FBF48D27831269D43CED51FB514D0FEFBBF1F53606B8481E
CD5FA685C54A5E0B7581449B981266F35A1D775DA8BD6974D336DA8D909A72EB
FAA7BA8938D226A76B011D9FDD66C24C5340C6FA7B1C7CE7AF4D7985886E4D96
10EDCFDFC77C8DBC0E74540D9AA3C82AE44C3A37CF0E60BE926315049E585406
BDAA236D4BB6CCE198C17646D4023E6250749286220149F2371FE7807F8382AD
9D1E7E446E73FB596F28953BC78E36D444BDCCB32D592B00EA16242C2CC6BFCB
545137EB3E37FC4FCE8F9492E884E432F5332C61623FA8FF84A51B6CBB0BDE4C
69A4A7173DE79A0DADBA7507759609B75542EAF6CA2CAEE117313C66EF1C56CD
1A07B9F0582B61029C9FB50CE54BE9BAD9B7508388DD936D10C99879E4C129CC
139E86E1BDC3F13FAF7100C965DD353C51ECB1A45073DA24B6836FC3CB317718
EED1319929B256187EB8DB70BF5CFC1EE11AE4C309F99ADA972B1FA530D1B50C
8AD964B732576A4881AE9CEE27DEB404C8EB3847E38FCB24EFE322B1799E5D92
114AA2E311704738970E08B9BE213DB82D09D29D7D0447C4F5C8A89FBAB2E58F
B5AEB55BC09B1253748B61B4E00C448F263398B345FB3276FD3F0B755A375F5C
9D4F03D038DAFC2F7CD07020402FF8E0B391AF827DAB714D59E44C0E2851E6EE
F0CCD7039E630D0A7BB94ED4DD307A0797DFC4C677A03004CE2C9768561BF120
1B86813C6B89EA16AE1955D0831AD6161DCDD67FFB74C773637429CB45EB3ECA
8DBBDC9E20AE49D3FE7B47F0B4C5BE36297E9DA5DB687E9C63387A79B103E808
A439B92D848938782002AEB7F969D2AE5F9560C3190AC388C4D02E161B138353
5A46D63F2A5F9CD71974101F6C389CABC69B231B03313265FCE384DB558D875B
609A4EE86A1212B92B903556C5BD4C21308D575A409EFBAAE5D96D65773EBE8D
69A606A5A5C4DB8813888A023B8731F38AC5186F78CE942D14E29DD64668BE4E
014A9BEEBA3881959D8D90CD5F09A8700CEDA94867E63CC03ED3A5C17C70BBC9
515DBB6667A7B770F638AC7D852B7B2250F6CFBB5669C9112FBF7351DA0EA2A7
9E72C1E086AD76C19784527E7D439BC23540E72B22C823310402B8CAFF2AC2FB
7868A7FC61E6AD2CF9F44BB7B3572D01FFFF3BAFA6428355378CA104CC80E922
13AB956A672678F2EAAA8CFFB30F5DCC23DF406FA07A0C34B0DF36A8825B776F
AAEF162FA24EB17C99F0EC33C8ED1F95FCB151594CD686B891E16180CDC03DD8
80FEB0B4AEB313F302A0F648EB0013FB2A796201976C6401CFAC6A5F3EF9A928
0384C5533F7843E6670B24968D96802A0425C1A4F2AD6C62F7B93336ADD7402F
1103168BA16770B47D01CEA50E0D6555854323FE00320EEB90D7BC8F1293105D
38E74A9B760397A1AC78A54A64989C379EDE20E41F813357F2002FD7D3BC2795
CA29E31301F0A58DD1A03FCE8732DE541E5E8A41FC87E1FCA5C890ADBA295200
A2222E49919A201DDE448D6B0B9DE5BAF6B39679E5AE4670C0B0B61E49E23399
4DE3021D1A139A968AFC0E3313DA7375B4F00FB401D2AA2D4BB0E6A258BCEF5C
D9063DF88E60ECE319AC80193A8EDB7A5806F3DEB61383CB768E1E738FB619BB
EFDFBF09F285EEFDAEA9EF40CC317216B6F631AD82CA957F7EA4AF071B063F2D
7F9CC94D3224E75B5764B9DFAA97EA454B7FA5E395968EBED46020CAC298DAE7
01CEF14BFF0410C07754EE0234181D07BB156DE7712A41673F44DA2E1E7D41DA
632F653AAF9CC951A3385396491BE6C582C7FA09872A6623397B3E63A1C38B55
B74C9B0A9A6BD49C275E97C008C191C4E9A497534338C05DD286A6CB3FECD914
946EEE02B60B1C15988847BCB5B01B04F5C3A01B3BD24390DFDB799C42241AFB
BFB78BD035E2CFCD5D5B16623F75A9F5B96239829EA13EF47CA4EC558439D970
94864ED9B6A4AF1802A3DFC06FDD7F50CA0A9D42176DEA4E100EA388CC3E5C2F
3604019C1E6EBC56418922D37F9EFAE47FA56D8115A2DEBF8CDAAF3BBEDB05DE
5BCB73C7BDB04C18C76475A9CC8CC6267A6C8B55512546ACE6437740E23D9A78
B7A7808A55CB323A05ECB3A4DD40E0A0A26F9222F62A34FB9469E4CCCF24ED62
5237EAD55FA9C1CC2E42A8484EA1B609F6A9259F92472E432712990194A6BA60
11B9B0A39590295049AEC2B509E09EEB88297CC971EC22BECA4634F060085FE5
EC3F1666585B4F1FA778D482393F036B5AE64868FC6AEED9AF95EC8F2AEEFE4A
95ECB4FF6D21CD197B4C7B75948DE075B321B73A951B8723361D96D504820171
47AEC0EDF0480A26C76849D332F7372BBCC25FED541C36130671C924761C3BAF
25E1DCC41002C55BD1C45D2C5729767507D93B8C0D596E109B6E13A3967DA998
AFAD854F54E5FD4DDA0AED726D4253B9034C538F6BD473E34EF116BDA16A8764
526105E28EDDFECDA7AC572AA553CDD41FC44AC1959D8C8EEC585AB9D410D861
6D8EDA82DE6BA704B529D187450DB7C072093D71DF4725B4AAE22A971E9E5544
B2F519FB3855620F6DD5BF20C739F5308A5C440E7D59B9B0E4A137400AB20C0F
2AB7DE32112AF5F778DA38E54F972D6A17B932EFECCDDE3DE2B3516355785CED
7E829F5B18B621B99B494EBA7C40428095DBDD3B158DCB9A85A656F047B16448
D99F49900ED5C092C74CCFAF2712CA6577A5548AE1EA71F6E0CB7D06904327EE
B6A027BEA7EE7554248140D0CEB6EFA6CD054196BF55440F071138FC4DEFD4E5
96353E2A05960C9FB1A3BC9144CBC59F5951625C55D35947AD320756156ACF65
F0F0C59395762E2CA39FC9FA837F1F4E20F5E34DC52CA32853AE7AD9F459C540
82DD302A15ACF17034C74A577196A5687BD9F33D193276CDAA152C0C500791C7
6871C4C51A42EEB3AE4C6CD7E7B194162962680130D78830BDA700D2C4556A6C
66B986A8801CCA840CCAFC2A8122B0134527426997D57118492E3CB877FE38C5
8A7F5468AF52FFC11B8C02B9583B89E182E472DBD90378CF2F2CDC50FCEC4B5D
63D167BA0C58945E6ADB0C8D23AFA307C8FE29500285533B6494E6E9F1316BFA
ADBA9135D64A7DDEC789195D75655E0CF7FC61D97D8DB121DF70CF32BB8E6121
744435A51359031183C974089DD58B98A57999E34BA06745AB4541FB185480E4
7C868308F3906BEEE44131B11B2B14E77BF56D5ACE6BB9D75F9EFF928D2EBA42
7A287953A4F3B2AC44F53C24F832DA90B09507D70105B72416469B69CD02B3C5
65FE949A30F08F9A68541FC740549496AA776FBFB5DDBAB7FA350C8593FB3FFB
4653C9038539930EF45FCD2A1B26325BB60D366F1F70596EE39E400A6F1CB0D1
8DEEA590BF99760E2DC5ECDFCCE4922C000B0537FE9DC831CFD40AED353FFC3E
2F617807E129EAF9B11D39365AF6FD13BBFCF23842A49DB132CDE66F20BAEC00
A6C08497B4850BDD181EB8A96ABE64730301A06C16AD61DCC0C9EFC793B96063
7F9953C07096E17D78E2F610139F45BD0530C8A76E85F59EB0890ECBA12DE954
F331781732ACDF0AA00C21B654B16D6E82C06F383ACA8ED1EA15E3217EC749F5
20C8AEA79C2D61038BA7A2B491D3EB726E6171529E0E1972EBF20BA99B973D83
3C01353746B0C864966FBEE8989D3AD64DAA7BDFED532F10127F21A29973A308
FC31A15F849F425C90DF7BEB2428FC6571A5EC40CD9E45022A81934CE5B9973A
DF81D7EC9667A1172F7F563FE06CE01D7DD7C58AB1CC518FAAD04030816665FB
7C139D5F26181E5EFAF2AA379E39BFF15B3618C288691D35FDF7B2A3B17C6456
A86FF9C72B59ABFEC94F920166606FA10CB83E2B3AAE03D9BA8301AA84D8BB20
BD02D19F898974A0BF0515018956A098FED59FA752447824330F5052B43E42A8
D9BABC1C3DDA7B54BE6CD7067EAD6A5C182C775FD8878D39F160B10D4F5E8E6C
0C7811EC057BAEA084D203E197CD50146460DE396ACA0BC78490F7C5C62DF833
DB9BF71445C13667865BD39440DB44E1185B218228603A4BE4454CA625FF4A75
F5B1EA3715FF4B2EBA5E902D9C5ED30617417F403ADD5B2A3BA3D4EAC7FAAB2B
6EAE8EDEEDF2704C327E35FB77CD84072566D3586E219C55EC4EA46E42986A20
4F0B48F45B093E4C104C322503F37A5AB40178F1064883284776748A2454B0E2
92178FA07A6772E96B5D7284B8EC38354424BE3733502E1F59F53F8A82820CBA
3C57AECF77F316DC4CCBF875257FD719D237283F6AE6A12B1CF5E83FE0C7EF00
5C040A9C6FDBFBE1B6577633973D5A091748780E2C87A69A63A297549D01CCF8
A92C81D0504D7CF237213806F30D13DC8B1A60616CB434CDE7436FBE5D612352
A2C34A27E772F3A28691A931DAAB33E447B03C1B1594BF94FF43DDA214D11E1F
AFF4607B74FA41F9558D344EB4431489AD6E8101B910BC71EA0645F89E12CBDC
98232E06548D553D4A6EDB24F8208EBE13214E89E02320C395C99A614B1869F2
07E6BAFA869CB82B6DDD4DC930F61137667331B98B6E645E4CAF177E39995BF7
AFCB5A1BB9B1973A7DD95352BF1532EB87DC7346FD25DA57E45C340DB70968FA
AED1226A949C78D176733CA14278ADC5AFFD881EFF28DFE535D6FFA7E6FC5966
952482A2E7BC031F7626389BD3E392CFB2EEDE173452C0642747A82D2FA95D10
FAA84DFFE90A240EF474ACBB9E6B044B24FEBC86A69596D8197F076418114495
04B9A774CCD7674847780ED76337619F86AF1FB6373D0CEE6B46717AC75D8D36
CD1DCE4AB6E7671F4276E6CBC2A4EBA4E6AC80A6A0FA6BBB20F0DF2534AF569B
C8C28B4B643B809E119B8985C068941DF37927BD4B4A45CFAC6CEC9EB9F571A2
7E3E6F30AB83C9D7B714F88844A10F1BB7CF6F7B6ADBD131BC23B3E4DE6BD052
FF44DE28535DA5839017A170E988F53B487900CE67B47296B5AEF277024F7A09
98F988C930E00C41B9413108F3DDD1C99DB7683A108DA1456DCE772F4B24C934
3E42C3D897DE532796B42E8EFEE09F90FEF7B4BC08EC3D1F16089A6C4D67EA00
50A03BB59E446913C4321E200B177332F44DC0F2A1DD706A226729F308EF10ED
C419BF3A54256E363F1E05B58EBCBB2F01E3735C1238FB68520A56BBDED554E5
75018D9CB5505EDB3004C44AEAE92C7D6E49A68F23BC5D249C490A2B9557A092
45577F997AB5022480252D5611A19651C125AF1B4CEAA3CF90E2897690D4338A
3D9785BDDF5A16EB3763E9450DBDE6163D435C4B87391B48D38FA188E3795D4E
ABB2794D20E516EFD47AAF5F4FC227188F0A3BFAC85F27BEDECACFC93D546623
7119A44710846BAE75AF0EA820F2C4A2EC29E036A55D98AE4F2F7798E4406FE9
39046EFE39B6B9B33D252B140142EE927CE5E6038E71EEA43D61A73E72A9B12E
19EB6F94A50C01C37395C798D286DD7BC14D5A7A87D004F59B8EBE03E1147E98
C60CAD9CDC3302D01D7138DA8832FCDD816A2AB418528E1766E398C58FF8074C
8E860FE132AC46A5AA4DD332DF8B56D90B90C3F3C665E41CBBD9BE223629132D
9D763C754944F1C7CC6E7EE5D312C42CFEC3F503D98CFC03287B5173497398D5
059866ACDA6D7CEAC92998DCCF2233918B03EF068D17E4EB159CCC21A57879D8
E1AA7A5AAC91C47C7C4C9C8FA62A078F4F1683F37E5F7B8FBF2192376472F480
A08459D6E042863D685255A23A4BA8B7F64A4213B4FC74A1DBA9ADC2B4D6E38C
C1F7D36D1F030BA68A46553A8A85B8F34AFE4DA1EC3AC2D43E99D9499502EBD2
0E34B1B3929EA15A4FB8D129DA0E15E6784B19658D931C372B3188E10E451547
67656838EBC4A3150A85F0A0444016A191133F19542995636B1F993002C70D24
32A59B9D4E948DAFC6D574A33B9CE67A5639E34BD712B7347FF6E9BE216CB5DE
5D367EE01C808604D05FA583966846D8C0539B41792ED8CF731016C85A4E041C
26595301ACC64063909D6C1DC84C274C90004F41A1F9C33E7F945275CB4A4692
393F561AC3395F6D9B8AE4FE3EA08680D7B5695918C2B3C35679A49FB39892D4
E91ECA2AE96F0FAC59B411CA72663A044A853EB94D553D5688D7B0B0F625F831
BF96045BA65956D3F6C169C9A3E521B05ADDB38514AC894FFC691E00B2E00D3A
171F46D71F84BEEB85E4A31E174DA9330491EE2EAD0AE6BC9EEDC8F92D782766
6A8DE5559C813CD542561E3AB5F5AB0D1D920F208BE4A7D5D37240C8D5C3F893
CE2B045FAA6C16376D4B63AA2A08EBB83D288B240920710C102E07B7218CFDA6
DD200D31F6BA872ACBEBA94F1FE5920A18A63BC9D8F52122B8BBB73BDC31C477
A7F1FC73B49906DDDAB223D34FA3304DE0E78D628646C32C1D95C0DAD9F35241
4AAAD46FF165FE342BBCBF05B837E703278B2021035D3EDCBF582182FBE2B7C8
7D5FF063561453FC99A92F0240B1D86DF4B2EC81023B5B9E354CFE201E2EF620
AACF1B388C76A39DD9F14D883A4CA48B1597EF3E34068C1FA45A8E98921EEAFD
82A9516D47CC0D6183D68AFDFDADEAABB8C4E8075D423F40FDA9AF3EFBDC504B
F7FB1402B15EE37DC5F4533724D785C22C645809C6B3B4BEE5E23F140863D5E1
4C5C8B11895AC0E79C0B211C49E78FF8DB7B467C0440CF4F07022E542342964D
3E11D278289F2511CBD3F7BEF02A7AE18CE511645F9E76EFE6A335AC1BA87D1E
B408C340D047061DBBDE1BF5AD5D038BD414CCAEF1F8A76A367BB2EA3E23ED0E
CDF2560422F2EE18683FE6FEB1DB4D034DB5A047B8D574769188C0679A67BC0C
BC2D312B443B447DF41125FA6BCC772A6A600B81D865B2DE12D3184BD3E1A1F9
4AECE2622F721CE4470B19C139B7DC98CCAC1F5F95B5AB4446AE0761DDA83571
6A7324B7C95A560BD01C155439EB43D1A040652B241F3148EEF22BEEE604EF95
8923630C1C7B9AA0F2E7EE0E9ECEF4E846C3B11474D80FD7EFE56186D215F35C
217591837B822BC091A27912F60DE02E09F6EDD7742B425D059D8D3F20870038
B6EA3C5E41A3E6E6EAE70E620648200C2A29C34AE6255BC79B73AE14B980A7C3
576AF5BF936C3FAA4CB2620D7426002161F983AE95E542E9243482F2A80550E3
A89AA8A18E4A00E72032EAF44C1CE735C9A03F3A4EB501F760EF762B15051022
20A5E811A7002D2B533ECF1EF2168513008BB3CDCE8EE707017F58E64D5746D5
A01E478B28EDB24633F4C244B9A759775AEF94EF94D9F2096E76F1C558F40812
444C6F0F4DA8E0E4542EE86C72A3EF8A138E760F4241574033C78F337F8C10B8
FECF198AA5C28D09422292380844FE7D375AF0766CF9A6D08728DA3D95ADF1C5
C812B03E2569E0FB2832A07A9B319C38D4221576C131962BCC5728D65B848209
00F41101A7F4A280ABE1C7F736EE916ACFE714A26619B139838D6763946166B3
965C5D073D78706987CB1F75EED6C4EA57D0ED7352BFF98AC161CF5C41C774F2
615D70DA5CBE51E28CEF57925D0526B51B63AC5634E23FAC712E3305DE9A02A8
B5684BEF87D9D231C885FC05480274A9C670A2833CC6DCE45D2E4898BBD96830
A1150137E9C9E5B4450986908EC3E769861BB34154B0E15C8D0C00F4802195E1
AB97260C39A7B1CC65F65D75B08114658BE9CB1793DC1A8AB86F3C805DE30E34
133531868986018BAE27B30DD60D0CFCBAF733C7BD42F9AEC3BC9F415DDB8C04
802FB9189F4E66008A370B2E870C73347FA3D20905B7296B33C3E8D68C9145D2
93C3265D9E1365AA1EA6FB69B9F02522B55EA091E9C9E6D7EA17748DA523DFCA
38F91A9A040F719BEA95A88E93D1340884E7311A006376660DC7C687555DF9C5
5AD867DA9A185F8661E7B3514429FF1591E4D18BF9B3F3E0842FD91082BE0585
2F9C004219582D45949B8C3A7907A725B1DFF661EE965DD7631276D51652A778
23CAA8C4DFF3B421DA520FF353E08CFBF052D1DB42A6D6AEBF23583DD2AB3D8E
32EAF2227B84AFA00EE219FE58988F029DB32C082DF2DF135FD3D7334EB4183B
6D0FA46C30B826C17BEC17DD0A5538B4E5F0DD4C43EECF4E2BEFF8B2A6827B91
9DA1E4E8DBD587CEED995249F7AA057A0B018AB2C135E3CC3E44A87D566AD7F8
BCAAF433804EFBC6E42630479AF4935D54BC20ED3F90905788CEA450619E78AB
817A619434CF3AFD65DA452D7B64C01A2E0FCC48AEB365AB904E7510CF6D039A
42F68D7BCD3F235FEC3508245F6CCFF9BDB357FEACB54829D2C52A65696BAA79
DA93F231DC31ECFB0A6E97B43B95A34D0CDA1CFA9EB5C42F5BD4C3856B447F80
1D04B53F63B7D2D3D418C6F4F9B4F6F579BE625BBC650C9AAFB69FFC2FB08C3B
2C81CEF0BF9D132E61E775C90947D34D0C6B943BD43421DFF5DF4FC11E3D7929
636961E11739E32828FC6527AB2B1609029765F9059895E4915405709607F4B3
FEDC85A3A05062C0470B2468FF726EB83685DD3FE1EA4AD7249B90528EF5283E
B88A741B55726E856480D78665A9FCBE22BB152A3FD81C9D4DAB180E9AF0F086
519BBF1A8D8338D597457B55E5BF32A1B6D429B395A4EFF4CEDC4DA822FB1DB9
96938278CEC384119B8ACC7CA60129DA5FC57C513C28A96617A5B4D5E56A526B
573978FD9D8AC729CB15EB8234EBCBC7B71352419DE2E66BEFC630FC3431FA13
B33224AD22104BA2EC72F0C22C0236C3DCCCD0C800997CC8EA9F6CA9194A2EB6
40F2E213494457C432214A3172F1155EB06ECFAE2165378F8EC2FB09DB3CA8EE
884B5342D76AB5EB47B07192AB3401CFE6A3EE03B7FFB18BA9B7C89E6D427D90
984CD2FE0735D85FE0D91CE194C231A4F71C79DB9A8B2EF5AB6FC84054ECF8FE
4CFF1E869D0DAFD74FCE21C0D67CA77DC30826C6FB7B6B90C34EB8F8813B7E9A
85C4F4DA6EC56C15743A6CDF7F5847ADFE3A5B1CCB1373549EC1F59B7E17AF41
52C4E08271E4379D0FAF06FF03EAE8C30A32FD81A0F0E3854B2893844DF4C0F1
DE4D2A09509A367E1EA4256144C77A0A32C67C93C174E0455D1887DE9AEC182C
F4AA7F61E3489BC474AF6F0E7E225E2AE712B55E939204833689C473319C6E68
C5D12E8D4B7BEF8873E2414668CB117E2FBA75B139DB3509DAA7764FD7CB3B12
1EF070EC400AD25BF8174F9B75E03271F54DC0E5B599FB86CDFB7300C56CFED9
CC26CEC2E1DCDA657C148465612C8F33BF6CA1EA512972EBCF666593BD8DAF24
3730D2ADA5A7480C1A7F0AF8F17813D7CF2F8A1B6F0912F50F95017EED43D114
4629AA8E5986E33392AFBD88E1EFC7ADD58BA85D4FB629D14A2F2603D8D6D7E3
DECFE2C7694669121D5623921B1DCBE64808E61F481BF9C30DF4DEEF6335403E
9A23CCE21EFC903C873415EF910E59364B690E72D49232D229A3A43A98760A52
91E50B5916E65AB744B6FD259CC8D48D85F6692F09886881AE7918EE898D9D02
774230A5A2427347E38AA120BDBA9BEBEEDB2AA4221FA7506EA38F5245B9414E
5A82A5BC91D827BAC1341BD0B0F2FA27D6525D42C1805FA725365624FE7F7BDB
53514EF978BB0A4748F9B6D39E2AA059A4D52A0E0346357B33CF86E3FB319F98
5782FFEB05794CC8977E665AAE580C403F3547D36E0DA51E215709FF69322D42
C893A30AC0B431C784A1C4DBF2811D2A5440E30E79AEA3845BB2AE2F8F148A17
EF4A4CD214B123B2112202761FBF8EDE7754BA6F61F640E7D8CF7849612A619F
0CE8091A9B46B56901765463DF7FE5268A5CEAA157B29D91568E4E0468143374
900425141B5CC17A4928EC7C480E80CC34CF05BCDD192E3E7782378DA06F9D64
2B1EB0B7E8190B9E906361053170CC66EA57893C147218C52EFE35A428554C7F
9BE9788EDD3A24389AAAA85EA573546B97FE15F640911E342A125982936B54E5
829D8D5794BD49E7FDC803C255B82E0C5EC8EACBFD9B0D3C22919926FB2F0C58
66991E7153E4A19015BA6DFE8F95C241E45AFE5AEB4A57FE91AE11EDC6234DDC
DF78C19DE250326517264296A8A601E5917DD6C4A3446DAB7BC8EA6B59112A2A
095370B5459CE184DB7E576B958780A86E895FEE8A417D7A89BAA9DED47F1966
37DA0993CC843F6F27384596C29311D705EAE46199B16CE7ABF006984134B2B6
BE771101802CD7ED614B5781E6100FBE69DCAE470DA6C2EAF411387C4538BFA9
B4C5E99A67E097972A3F072C0CC2914E82DC24FD7E0CCB35F1739AB29802D2A8
F04CFAAEBD9C1C8B89ED7902A5728F9AEFC3276144EC822607609037C1B7D618
595F3A13FF625FB57670B10818699425233FB91255207009FE473E4DD36BB615
164D597C095D5B0698A9D5FF9400045D2222EAE12A2CB9940DC68329BC8D079D
8C0386FC64BD8C6B3DF99D14037F8800B4FB830186A39A30F903FCED1D163C9E
7EBD76815B0E7D7B54D5FCEF382799F62A9A8FF8262E8DE16E9245C61CF3F64A
6D92B811D773B475C03A372183C536651BCD2548B1FAD83FDE5ACF3EB0BFE522
8B76C00058434E3250B357733D5DB12B55DEA614613231330AE3C852F9D90DBC
398E17AC4579E594DDE2FFEE62511322031F5F170F9AD6521A445244F338D090
137284F4DD0C3FAA11C15489C09F2183036CEE800D650FE2CD2E74C038665ECA
680DFB18860DEA2988E749819787F04BA7A9CC3EDBF9CDE4662892F74A378B30
8F05D8E2964B470316617538D36D4E606C1C21120E490E3CD97683EEEFCF8379
41C0D95CFF948D58FA78440BDE4C69A4A7173DE79A0DADBA7505913A435AD8B5
690C5BCA6D17B9E51F0E0BF508297838F369D2AE5F9560C3190AC388C4D02E16
1B1383535A44715543D176ED2826617D5DA71310A2B896A34B9B470BF1008A02
9240B7D211E4989CB5899488CFD09CF0357A80117DBD4BF9F8F2D3E22851AEB6
C997A7FBFF980AF05D4BEFBE256A4D1691C07BEB2428FC644DD9E7F49CA94439
534EE75D8B82DBC7BE9BFE27105AF56AF320A5D28216384F61DB0CD008AB7A26
A46FF9CA83CE825E3D9C55E3AA1661331AE72D19680C28C445067FCBBDEA52C7
2153C48DC62B435E2D60435497EFE30955AE5E69FA4F596B104C5804E7FDFBB5
D0A20D24A42B09646C1228B9B2F296281350C23CEE1D869C4B895052A1A72169
927F6D6DF2BA37169928E7F06723F1FCFDB67163E643D728556B4481C7F77B18
BBC1EEB43200DB0EC8C63B283796A9AD847424B4E6508546C36223A3B17CCB0A
851D898AB9A7EC2C36181DC56F9B0188798F80A08872483E1E4A67FD599CA9D3
36C4B63831CB8A096A6895B0DC80A015178AA05C8B7BD6BEB8BF7939DF42B5E7
12DE16DC9434569644C46A0CCA7A85AF2B849B3D1CFAFE2ADDFA6CA71EAD1302
61C16EF3151E82DD5152818FE0921D1A4713F18099602C64E0A89BFA287A8C99
46FD16E663D804A178F70AFFEE98543BAF160BD12FA07DF0B9E3900BD08EADBB
9EBE4B1882B285A51BA3F73CDCAD65BE718C0072A840C5D661E367A7FF504B33
9FC63A949259C2F56D30F9058FCAF64E87DE2C6F9B77F6BBD226B7F3EE11C7A3
9FCAC85B3C2FB346325FEE873270026B1A2535F6E004B93C9B9F33508E87A81F
73D0BE06E4C236BB43AC58E8CBBCE530216B73DB0F2D11A1630CEF88B596D7B4
A8758A7C7BE59C3BAAFAC2B21E1342FA4C162BA962D9A47CB566C65AC1E163BD
B0F5F53D076AD232865CB82EE1F8D35544B64E76156B4542F210A318517F2D3F
A1C9B0E0B23CA94BA1C20D8BA16FBC5EC09C44C7CF8C55A9DD737F2069BF92E5
D83CD8447B926452AFF608EE55FE5E327737A979838CA4C7012428ECD18DDA85
175E3CE67FD4A6528AC35815D8E5027B7D1E0C22A83AA19F30AB25F328B5826E
CD04108315E38FFF635A3F57C728E8D8020D71C1703C5F07CBB2A02178A4075E
65CE9E1CB9DBB7294A9FAFFE206FE7EAF4E6B898ED0013F468820228E5DB7AD2
D6460D423F35946C6E3002646FCD01738AACB9AD52BCD0D6CC119ADD20EA5D10
BD495D1151F4BB20BEFF60640B1310D8904E86F36597FF31A19579D7B53E56DF
597CC819D574CC5F92CF60BAAF68CAA1CF848879209D000B69A2BCD67F8870D7
C001A48C056080BEC29B6505460FFC57E808EA2EEF3C8F7EFA7C6EA84F44E072
E382E685636C88CDA67539FC8C6A255773F6E68F8EFD78694996ABAD2CF549FF
E58BFDFF5FD8954C0B4A8233C0AA25934B4283C233C8744FD5EC84144B2966F7
2FDA255DABF7DCA4511480B9077A8806EFDADF015452EE319E8C91DA19968541
E940E2965DEAD4F76711CE6B9D74B592C82EE4921ECAB22C58A1678E02A6C0A6
A0EFFFFF314E732C8718551CE84A79075BD2A82D92F9EECE654439E3938412E9
15764CDC8133F2C9D8AABA6CA585804A8A79863246F13666CE4476840B8938C7
EAD7E49B3D8B81CB00C4A9B3C0852336D2D8CEE36C9A2DCF16ABB0B90E9A38BC
9114898EFD2472B10CEB31F4E58CC760BAF73EDB09A33D06A35317623DCC6809
6360101378CC2850D82B5B959D6833903A296C641CC83BA1B169B1729DA75FB0
D29E8C36CE391BF12B2EF5C248D81D3B166AE6DAD659F29E62C51134B7EF26D1
0EE05685EA4B31E5396C4284C4D078BA585CF8613E31AF65E3DDB4AEA10E8E04
BE47D63CA76C9E30FF31BFC9CB723289282191932D1F99D60C1A2322EED3BF20
028C0019ECC8CAA5E074585831046046171C89D8AB26B7ECBFF4EBCB68A2D325
F02C783D03BE8FDFF84EF1B037F6E883A41645C1E4CF533954DE79106F5E856B
754F198578E9172B317EEF73133F01DC645A15AF4C6B62C52FE635D7DBE1DEBA
4603B10AF17641058CB2242C1F00409F1184AE9E93C07ECA49C57F61EBBC72B8
5139BA438440B2EABAC8958C17C4A40AF0E997EA64A4510B8B9D669D175789AE
40E77FE5E754546F80ACD3D9D6BE2EAC235BEDEE368CA8B609A0522D5180F672
8ED8E7F75433FB87932A162CCCA0114944A1AC1E57C44511CEE46206D78D05B2
96152A7B9819D4C64D1888E8786B47C10CDE73950A2DBF81F7C3B10A749A1436
FEB6757C92110510B81B1D598AADA642549516E6C4E63F53D19C1DB569BB21CC
18F997D4A44DA8C2AE04EB142AEA90A4CF8FD85221D5F92139BDF11DEC505B19
20E5B08A7B9B2E80E84D859005B46DE826491E802DC10AEC6FD65A2D5EB64B46
FA556FF6AD04D46529E9BC9A18762418A0B9B7173E5BDBE9B8E19C68C16388C9
30434D7BB1439379686446D03970FEEF003D829A6F7FC219B8D459B9CE6237DF
30A76A344E5F9FEDBFA6632B0DC2EEE6A5335BB7D472BA06ADC04010B860F00B
C188035621B4061D680CF64AE0E7C27027236C04B7C52F26EE84A8D314F964C2
E06C29DEA4407A0D26C030A0094691B37A340E049FD1A02F8EA4193B4A494AAF
EDB39F522B70E2A5A994F0B05AC2BCFE82D329D63272C339976E9A138108F567
FDA124069BD4FEFE2F23724315738C62BBA2C6AD31A0D44B1E9FD3E9E8CFBC33
9C4CC6448D322774EC3C021801FC7A6AEF112861D3AB7D4D65B68DE81582F0FA
4728B81578FC2EB39C989C6B5132DD0AAB719F6B84DFBC58782E1C0A4FDACD3B
0BD316883791F5417C3912D85A03F9A53B9ABF4E1AEF6728E8501E4A46DF541B
088F55D76B2F86DDE919FDB952BF65CA121BDB9CED994238C39531CDDC197EAC
2414615844E45FBC7E5D5A2A65C07D4FBCBB8FB94BE05DFF2B3AB32947B28A45
D6F516078C72A4B155A2715B713EC35F93B56FB8B5C997DF742A415DAA0CE1B8
745736395AE93E7547D8218353614511C94D025DFD9425EEF795DD0DEC27563E
8545D12267B73080D802BE7341B5F4E5D10AA56BC35C72743413D41A56566E51
11ED7DCD009BB3E1D2C37680C27310CD065D11C45046EC33B07469F871F52730
702BFD50EC8C417FAC1D67BE98E348C2215C120A7A8707CF061A6389C844A4C3
429FA2BBD010E0FCA4EAF813D7316BAA58EA64499CEC98B4259A02B03655E8DE
2555294390E2C94CCC44A38C2CE2AC5E22AB57C488C71684F8683A835B98A1D4
AE5D9CA434A535EEA888124800A936B4369B8114E1BDD480913E76BE4F94D9F3
8EE28CE56EB282F24B9846FC97D61B3C91D81F3591168B49FC8DF83B637F19FF
B7511DE223A0A261324189EDB38B2CCF66F63AA2D015BF620BA53B1985060B87
35BBAF575001D84F164206B35C10F88133EF9C99B76DCB93A2298E39F5018DA0
5556BFF71ECC844B2B718598F0825CDF2E174959844CB66C168D3636E4E4CF45
4DC4F17115FEA54713F4AA8D5FECEAC8EE88C8830B526ED9264D4F53C250FF60
71ADA96AC2280B1C9B1CB4E9913BC51369D0BDFCE84254187F5974B1DF0E0975
D5431D458B5463020876DFD11AC91B0FEB0A7935943EA6979B84A0351E4D8E1A
958E99FEDC664150D66C7614AAD9EA02AF73118B7F14E573C039463C85D6D80D
2E3F6E3D9B0F29434DB0BF1267DB235577B68003BA14073E2702296B284F8035
E32EEE1A78FBCD55AFD5FB30944EE4F182641F051980E48C48073CA60ABA155F
4A03A5FEC5A8E14E5A17FF67650C6DD9E879857B6B39E7DC1FA69943D9D567AB
BE704E78D08929B89F606D085A4CA5F1736BA41D0AF9AEBB6CDD5BE0E1943742
3672A26B560AA588C1F1CDEAF6FBE4F66A5AD022E53DCB7581DA05232AB8B9DA
4232E01FBB56286E4979DACD3F5A953BD9E918D5E46449525A4C3045EA0D5E6C
596E8FCA11443552C4912617C174C73A27D365CEC056F55822EEFE030D88B74D
7D219548C58B3D0F73503CD738F30753FAD3AB29B35F40CE459B572C9EBD2E37
B1FA6FDB0D247F4088BB9B710745EA05678C33EFB95FD18E974B39A53B5DCDCF
D9FB21A2F8D90C46AAE06345800DD13C04021FC924C88B19890571C60820CD56
93762A7A83FD2F1415C012F74E253D45C14DFEE0D28DA0068316D0DAC23D6366
E798FF67671C829F078DB05F16800C801F8773BAEE0CF615967F7F4DECD492A1
D02E689BC105CDDCBAF905C19B77D2A48075068836C3AC1B5C6EB75D98BBB45B
91E0281845DF8F8927A0D306109A42D636B8C192807D64F545448A59934D3855
54B68FC19E0BBF9C71C946EB77ED556CD01675A5D45FC8B9C7A426D5808F63FA
1F4464E1DB4923E44B129933E3FE5CFBAB9273AFE5819BE1D31040559F763E95
CFE230D66131ACB65424CD4ABD2941B3FC7E9136CFFA508E33FA5DCDE5DD6888
C06405C6F085E4AAF0C12EB5696A397E65E99AFE2D1C610195FA32E61F5D12E4
3E43F6E03942B8F08EBA1C09FD0CDE4DE8400CE73E82688ACFE4B44F523C5A8B
E52B960F67D6D533ECA263D30C85CD8FFA9E7B298A7C7106AB660583C0643D0B
5C78D282C98740F0D7DBB3E16A98F1E92AC4A52A846A49F1A7D264A22CA16444
33F86632004CD3F88A8F206769D0BD38632F5A010B73598AB20A52DABAF7035C
85986DE59AD301B93AAA1D453D1D03E9A3CD593DFDF0E8A27E608DA36E59F2A2
7E27CFEA1835F9F2D8829788DCAB55135EEC17A1974AA3B7E7C57463B7E16E47
69F3CFC9ED065ABCAF0F93C8082D9E9140E054811B3EA3F5D23B9220A659E447
17F4094C26E91F97298F2523123F4F6B60F5114D530140C5071169433C427EBF
C14C67EC12ECA650670FDC930ACF1672F107191BD84EACA3B6BB0E0B6F65BE4F
FEC8131E028862C9D15D146B1F79468D135044625266E58B9BA8B150BA383D0E
1CAD73425414B54116E310D38F7CE7F38E962762CD95B4BE8C22431014B54551
378F52F29CBB2867253F7CE3745FE9FA4FBFFFCAE245A23E831BFC845C6E4F28
AF78A3991DB149BFA1674F0C08108FD2BEB3D82C1F04204D895014DD676B0A17
EACCECA256F6E83983804EF368BB22272D3602677A195ED7B734278171EBE88D
F199C29064CBC0503FA4BCED3641265F815F8E688B971A1A0604930C96B3945E
84C8ECD8521DCE96F736636170D639A2D05633BAEFF23090284721E088F2CB79
C9231A47B7EA9354CA2AEF866BDC207C26BFDA13E340864F2D181B83DCAEF214
F5FB004EAD6EC25FEC2461F4B71B7028415CCED34DB25B1C87ABBB90196072F9
15E90592641FE99B4D86F2CAB2B61F652CCA07DF0D7E8DA9E0EF30E5FD6C70D4
7D31637BC0CD4D63B9214926859634E33BAC75DC4AA0C96E6DF7A1DFA83437B0
F0E126F26BB682FE26B34CE15E0AD3762D59AFBD0E4946BA02EFE26B967C16CC
36DC88D33F56B50160CE98F7750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACCA
398A0A72ED24B70A451B58DB04A1F2B707077BC18F64C3C140F24A30B1C3E6AD
87C7D4424486F4D2504B04499D46AEB5421D3E8E7A1D220FA7F222E1B74449AC
FCB8018F4501532698437E994AF19D3F116731BB0705FF8A83B0D6078CEC212A
30D4391FF1229E4F84AB4DF31358F02642782402E200EAD4F6F489DCD61B81CD
B85804A5EF0400A6DA05386BEACC3228335BB67811370645D5A38926249AA4A3
259B2FBC52122E7974849DD398C044CB32FEB6B342B7C649F8CCDB28BD192CAF
5EACC12D2733C291265020D6D591D11D35F3956CDCD2C060A03B7E47417B0D66
BD660253A72E63479DBFE0FB8041A873898332BFA3802126A755F8B481993158
04893830B3542A09B69E1B10EDF703BAA08D393AA0BAC2781D8B360E5AA4DB6F
0AC82CC3D01782E74D45DD4CCD6B47CD7AB46DA299367E7CE865130948DC9281
3858A464130EA68615B1B71B2C1089EDF134C6DCECB2AF4C92191A5671FCC39E
BF8C4D7DAD62E2E8ECB211C93EA990B3B3C43B7AF86F4EA140F994039981BB6C
E76FAFC31B07FD53BCAD43C323C3125F076F94AF3F824C3144D3611BDD489D92
5CA5BC6330437DBA100F5F9066A8E3611DD5FAC104D598B3C4866A2112D15D02
5321F8E68DD62EA5320C3DBBAABEBB8F51F3D994762E9918C422D1763BE8FDED
2C5136936F195404E168882E7A8D19838D3B0D2E3FE7A0A34BE969061BF88AD2
6FB7EE9A331172C242FCC8E3D582A3A1F88FD55596CB7A4E5B5FD274BFC497D3
4B019485623C247C2ABD9120750E6F5E40B38FAECD02D709420B491AB08C7392
B4D5B2921DDF3451A86AEB413411A7976AE3806CBB2951640D74E59891DDBB45
26022E00B5448903E74BC62AADF6FB326BA0D4D95BC25B242C73A631A39F616F
15DBD7F7BC33B34BF3EB64D8B41E63A28E978DEF311FA5E35267223F46AB148E
74D8D1B986B2EBAE550338A48685ACABC52E9DB146BAA39EFF9CAB6331CD6CB4
98E5D6819FD5F4918EC3C243F5CC01C97EAE2410B804A8AB652BBA09D9C8B1CC
A0CD2BDB620EA3957A25F3CDF28D97EE16AC85C1DD35B5A2895B5A959C5B314C
085369E8CF241F15E10AD8E576C2AF0E5BEF9A831D78640977B1E0C1F913CAB9
E674A842D34E3387B5E2E43F1667E68C7AB39244761E67CF6610452C321698CA
1BB453F4779AB7C47D2C8CB5019DF8BEC89E092AFCD310E2261C3CE14538C0AF
F9929E7CAC5D9C0EC47398803781798C2429442F6DE6C21CDA2F3FC264823E4D
CE5C2766A956E20C8740A2E0C4F98F31010FE749B17BB4767969F31016926D8C
D25344DD901DD2E8EFDDDBA23B98859D9C40EFEAB8199805349C02B95B0F449A
03295ECD9E4F597AF1AA212E454A0510C21F03FFD947982AE814685DDABC351B
B189283C4D89E5ED4EFF7A92CFFF1F823951E159D1E464B6759FAA76A8E781AF
7F521B825BC44576B057B1C37F4CDA0F8042925C94599C82A40C1EA992DA5190
4988737B72851A2F053BF783540F0D12D7E58D777D53156C19FF61A3EC3BB3AE
81689CA39653614C968DEA7BD54C7C0A995FE1F23ED1AECC1CD2B5D2419C537D
0BE6C85452E151564F74EFF9943B0CDE05E8E86E63DEC3B228C43BF958CE6B77
1023E07E856BF4974A24129D52821A3FBF9FF3D940D0507BC9535550F7A41048
5E4403E10BE0475CB7A9F58CB4DC54E109F6F0FB14B0179AB948D6A913CDE445
38376F3F6D3EFB0F4AF1D0A32032C2B06F2660F044946977F307206E286D96A4
6E19F73EEE205A47785E24B023844AA45F1706D86AD54B23F81E17ABCA040700
7DD5B0E90D0A178B081331A44262D42DC5CA2A4103D5F478A555A1C4F9309923
3E752076A887E4905A4C0AFCB0214166DA53F99E96005D40B3728178A2113554
E954B2313E9557A034DA56D8396B2470522A8AB994683B1E295F3D1AA26ECB65
C4A4800765F48FAD6D6556644763297248EF116C535CE08AB87F82A7C9A8BF03
AE7EE47761E450C65E13CE8D91BEFAA9EBBD3604B1F255178CE8319A6C94C4C3
2336D13964007E138C1A024CED301C7852A67D54CF98833F82B4F4C662289D31
1F57080624EAEA09785BF8E7F0C6A24350BFDC0CC28B9995686DB7FBD7EDA764
F3295CC931D70A16B779818CA103382B94999A399F3A9476BD22EABB4E3482F5
B59BE4785025B8AE6BF7F0E515475D8230F99EEA459293D5F4BBD55D3E11129C
FD0A302A018F0D84790D46E11E027981959D74397B05AAADCEB728A6854EED3F
F3A5158E5BD9B856C3C4BBAEA96C1A1EB92A5807442D43E2166F903EB181A4C3
437DFA4180C4420A3FBF4D059C06CFF0AD50200A15715120AC0F79DF85EACED6
DCB311CDF2715B247B9987E5B45EBD46ECD34B129045857AFC4009E803E9C7C8
0F9F2E3F8ADD425537E5B1DFFADBBB4038EF8F1DEB38F5697AE8F39BA406B5F3
68CC014C73B1803DFCC01FCDD51BD674C56D529CE75F11B8148EBE55E6DDD6EA
C1C96E56FEDCC68D949877706EC904E3FF4EB50F1985652D8EAF9F2212D33CB8
46FC740B282976D119DD12942E9A4968D84C4B1F3D6298E48175A8DA0C1ADB32
E9D9A181035647C30DA324C97633BEA474B90CDC6074C78BB5AE37956E437C35
0BF9961B6A74551418BC88FA0C5EF772
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E039670DCE4A33E4656E1CD16627247034E9535C344F9276
BCD1184E4CBAFCEB9A744DFDBB2B24B83444B94A006DCC75C1747FF301150AC5
0D4CF146F4D93B1B3AF560AAD8F7A7490EAF6000790C1C1D0ADBBAF0EB8787DB
C419EFE2BDAA0E8FE3A8E1CB81221F5C1A14D41ACD313D783C2BC59EA0BAEDB0
B7D8AE9925C9A8170AC68B213F2E3626DAD8A6F7825E17723ED1EAF9B88AD6A9
CCB5F6F72FC0614C2512D989F9D80B15A0764CB951D16524B621E0A4FA9D6017
4D4DBF909B2858AD23360C680E94E8B190B1CA160E70DC726AFCBC56E7963B09
2951E7F28E41B6198EB076A4029497905BD4FE34394358212CB5E6B63474D602
FB6D02F57F18066ED53549CF9E7C3EF75CEE70F5BDB495EFF99DE85EE281228C
7336E07F172F3A50C3275885620061EB2DF4472122948167369C36F5B6C1A7BE
4066E1E941A608D1ABEE882F8B8E7E3C02DCBDD7E2AC003FF35033C237D55F6B
18117AC178223A52A656B1A57D8BDB3D7B62537DA14915258826A5E4052ED21E
50BBC80F93F95F2F4AFE08768C4489590992254C9ACFDA5D5D5A18E5ADCD42EF
2EC8AFEE797BF8BDE5D7CC3F8237395F6037F0180333B6DA2C1BFDC4E3406847
5EF1CECC81F0CBD9533A766C204BBF08C343D3AA6D7065140BF2998E6C318682
6954F8AAB871ECDD9C87C2352AB057C78C12B423635C615766761E290D9E1774
A0955F7A1770C2F25785DB6F15A159D900FF96495BB9B54ED7A963CA7625C148
E6C5DE3591CD03E726B1EA1DA0D2D3A0C45ADBA046345E1D25AD1A01EC4C3181
9D2DC7B35CF2D9F0F492A21BF11E2EDC39FF4DBC037FDEEC19CFB7C208155162
65CFA9E68D9392462B76A67EA8D37038E0B9D9C7A888D0E914A8193C18E7F401
C44816311719E11D1FCB91BF653EB0FF18A376FF6FDE547A4CD3C7D183BC25FD
6D5A812EFB4132ADFA39B4F873B845ABF2660C7253EBCCDAA30204CB7959E437
397D97A33B2F07421073A39F761F19C2BCC97B7E3E1222DBE1385139E26D2B3E
168EE1B0AEBB2ABAC2B90A514D97941B12553D8BB26DCA26247A2D23E1068AA8
DC7910808480E6965705C897B2DAF5748CC962C2E032AD6D106CAECCB3A125FD
03C5DE5384AEF8B6C7C5DAB64A0F3DBA016C3F154D4E5B3692276D8435C2A3E0
1214CC90D74A9FD008103E9C54875B2146E9F849F9E4AC043A1A15A971EAE3AF
9382824A4B9912865C6FACD2B6555E8736C105079299E68D61EEB26E5F3981B8
88B1A3EF45EEE1119A77341C19ECC2E78F6BA5E79950549BDCCFF714A5EE013E
80D4E092D8B192E25D2306A9907DF8E4AE45EE4BDB168DBA8E27EB9DA43541D7
D09EC95204F7B23D88EB36BC2E699A11EC1AE28E0E6F2B383713FC7758362210
962B3400AE0CDF57242EA8A7DA9113C1877640C27032E69A65588CD61115FC96
6FCFE51F06B2E037FB2EE97F5290CC0000476C0235F3CD2DC61DF8EC42A55A21
F2525A8CDD9D762EDD8A41EE4E5A335F726406002FA2421F5675FED3B4BC7779
14F71E8C1191FC3D85580E60350C3A635A2B883261095DEE426BF12F8A8BACD0
154C4727E881704817CBC33E6444B8070D31E6FC60F8C7961BA96362CA771E3D
B9DFFC97B554FBCB62F90A0A80260CCF63AAE519616F25D3466870C3B0F9F47F
FE4EF9561A25F70102C8091AF9EE5D5BAE73131662CFFF5E427A5F5DBB56FE1F
CECC86E287DE2443F8EF01D255DC5C45C28FD9F66E5ADAB89EFFEF7EF9EF46CD
604D79D4F83161C24A1CA3D3503C52AA8A07127BE1AA3359A90834F4A5C6383B
C454E4389A1FDB3F30FFDF2121376CD97019E10B79180B078E5C8EC998673E8B
1A7FA3C723DAC77B64A179ACDED0CBBF76726AA2B9E780D6954E154DD58C659D
576EC783186F66BC0AC8953B06F99B4CF1A5FA7ECC1F4CC63F2B9EA92EAEE2AE
999771B71AF9B30F2DA4BA4543C27621FDBA8095A57A0ED59D1FD8F749BB325F
A3283B2D61796769BCF858C4EDD356EF78C8112FC5D496ECFD6D06B9A5AFC8C8
C46BCFF335C364E266DA52913DE8E26E48E8AF62FD65FB576024A490172DEAF3
9BDC40B3CE28A9BFF70E85FBE7E7CFB5E768340694949F1BD28A6201A92B2B37
B9D012B8BC5C0F3450243B70B07A7F9E0672714E2AE73E4139D9E1523BB244C7
8E629FAB784FD76372CA9417FA67F292A501D5EC3AA812E09406550B33757833
953343D5DB7F056B3D608F4089340F038C4A68DEEF068032B92727291A6F8D05
3F2EB3FA8BF2C5D6EFE5B2BCDF185179C3894F4E5545FF91A27912F60DE02E09
F6EDD7742F9D186D57B74D8268BEDED04246B2492652DDD3D3E53A58039F45D8
7E787DC0EC3562E8A8F95F922F3AE74C6B43EEF7035544EB76199525FA7D80B4
A7D80DA766DE4ADA28877B6B867613D53FD6CF230F4B050403F9641EAAFDDBC0
82E579A06D8A3A323458808BAD06081F0D8CD5BB65171F3AF111E2722605554A
462713C29C6E238795A66FE9C57B4981A6CEDCECFD566DDCD1B92E0D08B03A11
4275D2FD721D8FF2CE1C8897DBD79DF9243C4E6488D2D3CC9C266FD12E129320
B5159FB329E4D0744DC2F3EF68DE59428D533DB0EDA6484035371F2AA523BA4A
DE325CE7E648920DF308FF968BCDD2C3C8C4A6A8D661A6CC8A1F07F8F4CD9BDE
3CE0EA3FBEF65ED35C6D8E31D2914E409D64B390B0B11E041001D41BF85A2BAD
AAFE357B446B13C8880EF8F7B56DC959DE82E9467C98255B361BFB67AF9124FF
E8EE27653324215D2855B6955770F81C522441AA67B18D8FADD66BAF9417F5CB
6B3A9186E34D1710C01C839A5CCED84E6A9B242B04ACEBD27260F059F014B12D
4A1C980FE488F8D49D3A4BB2B27C838A1EE98409EE7CAB38570490E07CC72DC6
67B7655B5AF313C62F721FD642F61A533698803DFB2A20226E582EFF3AD88628
45C373426BE65CD959E960C59C49ADDC24B5E43E87AB11CD2BA1966F4EA30DF5
66B55D4BDA83DA7A66C7B79CDCF20805884943DF21C1F7CB9221317C8F77373E
23764E9A5DBE640CA98585DA2A4AF9DE5A504609FD4747AB61EB86AFC45B70EB
42F8CDA0BAB89ACDCB1E9411784F90B6F9F596730F28FE49829809557E9227F2
06D6C63C6B1A85CD6A38288D1C1A551889A3D80A0C925A38C143355AED03337D
EDA21A5BB90DAB18D604CF9A4DC9F45190E73B45F78AC1CE5BA5CFE547A418F6
F122A2F250E805C5A55E36BCFC73585F0C578B53C31C3E2C6EAC73507D4CBFD1
6D0B592E7A24A122ADD6648E6681439BF1FABFE565F3CC7111BF7634B2C0423F
951E6785D3FB5A046D818FBA90295153CC3FF0A4FCB3B2F24922F77C733167B2
CB7DA20C340ABA91FF0B3C926798326EDCFA642CEE775E9EF547255845970C5A
B0DFC8CAA76CDA4FDA13B91D0B53F41B0F31EEF6E5CB36F29D51120BC314331F
7A91B4F74898E2FAD14576F81B1D688DDA5D3614550395F5A21DBE11C89C293A
D6CB2415433D3E548B9BD474843E3A99ED6986DCAC79DB20904E41A09E68DE8C
8BF53AB40E03103A5A199CFC46CA3D96BE9DF0E72C6C5FFA28489391031EF6DC
2E9040E85D23934575F0665477F1D1B294824781CD883EABB77A8D8A93CE85FD
A9F9F66D9078BABBFE2E4AF4652A045415357139734003FCC7B68477A595DAC9
53D2D9A84688526A8006AA67BDDED5D220D9CD208CD8CD85CB0D4F824D86E193
671DA5585BA475D84C286D85B6CDF0F348A9853F0BE3BB7473BD7CD3F9F720E7
58D344A4CFB4F15A942D04E4C6E9A1B08B3C2A698E4F95DAE539B5E403A07714
21FBBF38BFC8CA5FBA4E4E99A88103935A91A910B6AC680A8D81030FAD181E79
1B69F4DA8D9F0BA385206A85A4ADBD8F3B8243B1847292D7D4C7EABDB0E40641
84CC0FDD2BA71AE6808D98937A7AF5F2E15801E0708687B05220470E309616B0
A7A154D9577EB6EDFB9F157911E60BFC3DC5BD08876048521F937A458A63396A
578F0213154790D5DB7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC0124B33
4921069ED4EB4830E5E1BE4EE7195B4650686FB865C1D7512AB6E16FAB0A633B
D4BC90EBEBBBAAEA670B5196A07CD13F4F32038FC8BAAFC17A8E9B0CE1A954DB
D97AF3548B794EF9FE03CDD2EFFE47BA11E5BC1B486017CFC4341EA63944C6C3
3736FAF77CF6B26F1A455029BDFBD93BD0FD77ED5438028BA7516AE712838BCB
856C1CD7DE9E9C0848692C38D1E3016BF4B4E37EEBD2219D8FA49A6B1525AD2D
1F56968D9CFA81E0551A545C20E21D6D22B965F0AC5D56AF4491B6C4DB377699
C84E1A158E799D50610BA45F2003568AF44E2EE4DC9907271EEE88240C4AC5FD
A25B65AD51D3F9F90AE53EDBECA7711B75C6AFECFF846191F4C6B573815A3AA9
7B5374F8BB006B180067B2F9E68C5528E0DD9A56E20DB4DB3FBE96443C3EDB23
C3544E1DF0BBEF26102990E067B8C07EE8A0BB368DBD6E533D154FA36FAB2CA1
95E397F971ACD9152362D162698BC6F7535E14CF202C75FD9C72602A065760CD
6959497D1C453008AF26856BDD3C2C6412CEE556A76F3259898B56A46537F645
070F1AB8B6C116F03BB593307B759B93432F1A710625681DEB0AA33A96377F04
8A63FDBFD917BB718E9C44F84195CC47261D453B7609E685C1A00D822718BBEF
12CBB30F4304FE6A96644D376A01518956381347C7BD2E67F7F7AFF7656BCFED
6B07D654AE74A7F8B19F9CC9AACA37D69717C8BA612B65CCAF94A1B90B32120A
BFF80827DBBE528FFED11D4470276B176E704F3E22C9B97CD4154BD644837243
16CF0A0F1770DABFA09730FEC742F9287F2792B92AC122AA903C3D3F360ABEFB
007D46720081C49801814BB3BCA93946148F1ECA353AD07CB5125523DF789441
DEF17927C9D06F57169144E77188271A42DE0CD89406E432FD56FEF121AFDD16
58A7FF5F8BF26006164709596C0E78321C9CB5060800D617CCE9F638ED284BC5
997AF8B3AEA37B570C5A08CD028CEC212A30D4391FF1229E4F84AB4DF31358F0
220A9C72BAEAA3AC1DFCE60C71E20313F9E3AD9DB070559D7BCBD73D1561064D
A0D11E8B2EB840E1818F6F1CA1D2BF156521A0939E9A444E468DF4A833DD510E
A6B70885A134AE14DC6B1CFB81E838B97BEC540629204632C45B68C653F933D6
CEFD146C84A94AA7AAE84A6D87A7317DF34382E4302DB3EDE6A964FBB99F8AF1
70A5FD7DC04A51283C822A47B5069F7527ECFB9E79DF4FFBF19FD0FD664AAD88
699BBDC9D3FE09EDE49A4B4785A6F1FBAE9CC0B3B1285D1EDA04B7D11568CC27
1208DE70870D97AAFAC76496D80FBDE4CD2AFF544E59A633B5520AD35E512373
2F66788A17E10B2C434A2821DE83747E516D0557F47087834CB6BA824EAFF494
AB782067526084160AFECAE8B1362BA3A2DDF29C622FA55D54800823824AF57A
0BA8B0FBCED45414AD2285ABCE7D352FBDE6EB1E0CCDD7FF4B5719114C0DA6D1
B0AD44E8FDB48008504174751B3CADFF36A58BB760E6EF9DA2B8DBB44BF54B6B
8675A676DA0B21819E209EFB5641184DAEAFF3FC3E99EE5D9196677E02D47DB2
4D4967158F415484BF9D6A2AF4632ED451DE2E75ADEE792D7D611BD1053C2B9B
1397823F52848AD4A1D16EDBB8CB4667B1C9C8795E869B9B7338B4092A8B3139
5D9C7991FB310C65922E86F99352A290855C049C95D62D8089E4AE7B8D46F33B
1E073A8738C05B8B1E7C3534BF816D19A02789F1E1BE623EDD5DAC3A49FBDB14
0741D2C8AA4AF19F22592587A05FF0A32616DCC21B126F607D31F950B24B2C90
42139D5E7DD43BFF1AF691487872585C17344CC47AC7862F32859E7D2235E520
6FCFAEF68CA01BECA56517AF0ACDFD9C0B72FC0335AA7F73D90272AF096968AB
75F3F1EBB30B5DDD623272B453337003BE0392AF8359E416849A0B2DEBEF4356
2887C2BC9484005A11A8D4F968E95FDE6C8C6BA09493239E7D0BBAD6E383CF9E
8D0ECE8EC47CB9D61C5F5940A8EB8342C2773CE38E1EC3132A28B15C075DA951
FA546D18A604A0CF33C594D5A5B386A2B36900589DDDD7C0627B9B1A8838AD07
317657050B505070A9C4DE98D7A9D72FE8977B2DF4970EE03C65448E5F85C74B
44F1E843EACAAB6E2ACEEDF17D2D7FE4232862C16D1DED415D443183D46B10EA
B91C83A0C09316FB0A6FF881EF3CF35546609FCB048910F3D70211659CDBCE05
F0733AF96931066C16E1C212D194750A8A223D02F28A0B8845A09F0FFE11CAB9
73A92078EE12F3DEB4E33DCD967D167E9A300155C920430B9B73AF085CD308DE
598078BF655B04BC4D5EC219D9C8CA25E69488DF641E3A087A0EBC9654A68D6C
CE78CB5D59BFF85288F1BEEBD85C8A2EB583446E2BBF2C8521AB6B8FC85ABE68
9B800B8365F09F8ADA0A53258C6A96EBFA86A669F671B2056B5206CB2889AE83
23762D2D4B60D7A3E379BF000C72C3891E4D22B3955CF3EB23AF2E20702F9888
B531CABC31F73E1809D293E755EE7F9DB99A4CB309AFB6D06F28AD54C9C388ED
9C090F240D1CCABC97F3829D48F5E78825737DE521197FF039487CC65DE1D661
D58585D675467E6606632B9E52BB4148521096B1240EDC18A069CEA146770040
3A1960A08E254804C9126F6A007AD697659D0F4B9B7BE0BE1E7D18DC0DAE9A91
044DD214031FE8339581A9798BC43C8DCCCC0C922AEF593F091226BD53504A41
4099BA8E0CF713EDF6820E69D5CC3D80B2834416E19C17F6D8445996EFF51667
A11F7CD5CF8FD053E67223B64D740B7B53091E8B252D3920883C966C6C44E7FF
C2E83ADA764F9A3C307263A6075CD4784CB7994F0C9F5DB86C3109AFAFF575C2
96EE579D2F20575F4CA3B9DA9E2DC2EFF49CBED9A95C1D66866465AD9DFD2D25
D7026D8483CADDD89086B1034E440AF248939790081C2D4760DFBE929FECAA9E
183FADB03DB2896A8BB113136337F88C41B0FEEE9F64FDCAC4A7034BD05D83CF
C244D7DB0CEC691FA2A16811239914290A07373ACE6F9ED34CF5FD1C81292D7E
C99BCD8E7AEE127E914C372C6E2DD84989E78792EC3F51F453D2C294C3516F1E
E4C13CAAC355E995A962D992766BBC57CC16B87F75A33EFEF432A1E2A8E5FC47
B8C0712569F57D1429AE67240FBC800AF56751FEEEB699048495B7F23D344B5B
3F2A805F8F3BBBA4BD19649A69BDA5C4ECC8F04DE5000FE419755D087A3F3D52
16D8AA3510EEA9F221993D48754421E6444BA95515862E744155CF172092269E
14A11BA6A5BC7DECE20029034C88696774E6E31A0BE95CC782FFA77F2824E605
1A7F871A464773DDC78289D2EC32B466D21C9B802FF1810458E2756AE9680676
164D7B4054DD4FED1E8DB315795037F147ACA3D0692E755BCAF6AB8F5B958F7B
91385E510CDAC287EBB03172319F54E9E05755F04702A145F80D07676331178D
2CB4374636F2E5DB8CF80B65E415BDD44B433185E5270E3D59FA7958AC9BB93E
2BE97037023BD77C5AC2AE459D0E92C1FB18CC4B968D70DFD13C6223FAC9AD31
25D7FFACF79771B4E47D07EA87335F94152A9A489FB0D7EB6E4AA0656AE18670
DAA3BC88E7A85599FC794A93D3BE83D6FE5D06149532684067C78D1E6AE1F11B
D1DF347889436C77BD8C8D332D0BCCD1046DD47CE6505D1BE30AEA47F9AD8CF4
505C45A38D08DB2EA29D2C00B939B1A48FBFCF71D9D041AFE0416F4F1A755E97
F12D7026336808D20F3953C0807B3E840E1D1D755B40C834FA1B7089B2724E56
2CE367D96B03C0B14F5DFD867ECDCEA7739106F97A0FF2D6894AE97057B7FCE5
DA36C70DEF611A5EC1AFF25CDAD43BEC7AAED1F6BAD964197FDC6B983373AD7E
52F1BA59AA153AEFA72AF88BBEC2E2464A4535B20E5C30CE4E498AFDFEE90938
2EF0E686A3BEBF3DDFEF4727AF2C873A42C13AFF732ACC9BB83BF2862E7DA086
EC6968B878036C6EC2CD975545CA4ED25EB096A30560F002498AEB3445D8CF8C
EA7FDF03568AF44E2EE4DF2DD772CE2772DB7D5B3A765D09AEE0F0178E20124C
FABD7C46FB3284186CC6BA6A41105AF4BE60E0FE5C1E439707D78A9A97D2774E
F4D5FBC8032955669B0469E3556AAEF1929CA192818AA9BDE03FABE59313873C
B1AD4DD17A02979C16D8514CA4A9D6C1CF093574382D325641687B4B622D8651
9A9A42FB03DD17290E01444DE0216C33604AAC54ACC206DC00F5B58A70D546BD
E99255756E49A8E7CF22C48D74DD85E83A3C976FE83802D4CCD9281B61F1B899
CB78C94227A3AC6A6F78E48B81A8CA11977B624E6175E9B3AF676603DD8C5F5B
037022B38CB7DEAD3AA065390AAFDBA137D3B30AE2D428B27933780412D9766D
A1E06DE0CCD39F4F6C393C39A8EB2A7B29AC7409B9F4C59111DFEA8B5DC7B742
EB20E7EAA201549DB7B98CBF9DF7C77342796363A7B6B294CE26DBB9179DC20B
FA57853D65DB474E4CEB98EAAAE80FEA3557FC29EABE8FE096ECD3B8D6F6F508
EC1F59EE227E4F6A352AE8B13FA1539967C49407FF5E0D54358CA6C8C48F7238
147E51E3B5F1A3D1BDD00765D8ABF6FB6645816F11C172CBEA408B2B3F92ECCD
384633B1CFBE950D0C420E2AAA2D24D2B7482692E8C4487E1FF5F45B9A4E0A50
A5974ED4B92E67F46388416F4E74B4C94398140C11B0D3D8C485E662CB55BE23
01E115BF38D18AE8461F466E20761518F3DDB1F7B334E90E1996E4C2B83A5863
391C91A7C76BAE046587EA1350C84F0ADDDB4FE35701CDDDA2CE68D78F0CF9F0
CD0870270F0F40EFC13B6DFBC3D285A49C54363CA64B3D00E8B27F5559C0B2CC
64B17D898289F9661544D17A9535FDD857AD224A2DB7270781DAAA348B1DF881
AA21E8523BC287BAFD0D4CB5B549B69AC94FEF47EE1DA53DD38776B3E05B8A14
55911AACF57CB21C581FBEA5C97B6B8F4763D21E005D89FAEBBD7D8B06F3FBFA
E6705C3F01CDDFED987C8BA8B72D68CA6B490E990C49415DE99814AD4A079839
2364FE0BEFFF89A5599AA78B7660ADB2A13755A5048E47B03087A55E15E6BB75
DA4C90636A011123C4CDFDCD5ACED4224C927D32A783E2060C67CFFC61330B58
9DAFE477C1EFFB80CE9FFD454DBD6F8D606142E4B244E66A85437E20B97683C6
9DA60A90BF33E0D0DDA4D02A93E18795A8AA1D4994D871C6C662572C23DC7D7B
9AFC3EBCAFCF7D634D4C558A8EFA9EA15085BFE8588C946F09DABCCD5FE74AC5
D873DD414896010FA22C764E0B6B9844980A089F0DB4798087F2B4F1766E859A
3B1664A2B40A16962B16BF6F1B477E9E7884FB22BF1B10178ED4A484DBEC72E0
B3FFC47FA639D36DB36A36ECA3A2B2AD548B7E6BC11F3404DFB91962B727CDE8
B2EC957EA523BD60F37EE2857AFEC47E250048A0E2C6D6CD198B29532908C44B
42DA92FEAB15171D205D87B0405EABD1DD34C94719878B9D613AF0C9401D35B9
F3BC81EC898FD5AA0592946E26AA2690EF19CD745C092BA787903E034A2D1417
98D21C74A0F0666B13E895EF114C3F5A3DDB5381CFCC78F31123A59E84A773A3
DC1830E33B1895F8F935628480AE0BDF7201D4C38744B2BF09F0F5BD70890100
0DE64F33B95D5FA87CFE2F881CA08001300D51C912BE7CBA6297E68387A161F7
2C87517C880AAD1BBEED508E7E03D41B3D060A92B1958407869740264A8745D7
1E9F46002EE1FFC4DE496A308467D2DF590C33B10A5336BD1E521D18869E4C61
65F558F6608D57E9465971C6B191B8D3ED752968F923AECB58B21B311C6E7987
55FB13C9221F730F4CE2BECA91F339C38F051954042ED8855F3D5E9ACFBF5A65
8832D462D39FD08006EC67483124923A2145E64953D1431E63A25EAD33A6D0A3
DC9FADFEF45E209717A157AB0CF1881601EF2293105DF203CAB41F0E6C48E170
4F311F51451DD607AD96DF892AF19D50CFF1C8E6F121CE477BC13FB3235F53AD
83EC1CFA93D5D6087892FEE1D0B7EECA805A8ECC0464AA467025504983813DD7
F264D0CD24F900DAC40CE1A01CCB18F9F1704B5B90966A67F84AED0E31A74143
E56931F2D1075EEF8C1225F96B9660E087FEBEEBFE490809C3BDD72737EA6DA8
147E273879B9C1E83A892B9736062109974B99C3A0363AA5CAE125EF0F3B74E3
5560D0B8E80E8C8D9AC87926FEC30CE2BA0C6CCCA124165898606CB73A83DD53
F4D15F219219825BEA068392E9EC12F726232CE65A88DE5D265331409E9C3FBB
2C0883CB5C5B316AEFB764BFC86DFE3CE4A2AD2F1014CD74242AB02A32154997
E95DC1364BAB09FF0740310E86A38C6001D1538724FB731C3D6403E3C10BC977
ABCC68ED6F3A25C50BB0CBABE5BF2E6C34ACDCDED7FFF4837E72EE7A98A872C1
BFA5A90471B7D471C3BDB86F519E59A0C711944F631669E0D271F30024C0488C
71FB30791F330A89ACCD0234199E1D6FA71F8A4F048F596C8FED28F07755AAB0
ADC58B2383B63BDB575DAE9F7E9405A46CD16E6C06B01CB6F4617F7E89159585
FE433559D3EAA329DB6E6962A14358864BFE617F341FF75A1C8ED65AFFB7BC41
2A55E7207667A9E7AAE4E56BBC0B835DFA93AB4221A0D1F6BC517A913EE90FD2
DA342EC40809CCB56B7CF0858847C5892228EA6BFD853CB859085AB38822032E
A83C4E0E2E64636F77F4A0CEDA6815412C9200C5AA078BB566934B9A2AE93014
5C65F0034DA4A3A49D63DC034AD7F900090A037EE1DAF46C232601AFD3FAD238
103E10FA29A1770D38441A486C7B34AD90BA1FA4C3229B27B382D584E4E06BCF
F708B6DC29E0E0E03461C073EA895A1350F29F8692F0931B6453892F0D0030FD
C24A8EDE5317300C7A64086AF836B0755A18A2FFEE66D5C981727C612A133B05
D9A59F1EC2EEEF10B1F05DA3F61BD9CA0F6E188D1D17E9DF008A9A52F7D58401
1B90DB7CE477EF1006AEEA4251019D9DB3E715ED47FE68CAE79898785FA360DB
A40DCC1F7945FCC3F5D9B0066B051DD9E902E81F262602C9D87938B75EF30E0F
A14DA5BD9E017D60FC01124BABE23FF62E75FCA2E874A39F28909744DD2A0E85
4D72C2587B6CAD29EC5BD4C3D437A962DCF0CEEC7F65AB8458CB439BC970F971
2F01C681C5905A6024BD3208FED44320B723392E3F9B20EF75A6099B5ACE61B6
E0B19B92671C4E22CDA2B708AEA93947553BAECD57F4EBDAA673AD0E3ED5F7E7
086D0D8109FAF5273613D3368B9DCD15C20059F4AE94766A257435C53DF6B013
8A284A29A37284134AB99755852DC7319405FE473DD7934595BD991C103E9BF3
AD15E500D54F410172A1F8FF0BC592B34CCE89E60D54EE0982FB0432DC7F3222
F70D637355379AE65C6F45F790E12942D17E4443D8E8AC5ABDEF81933B95DC58
23F569E692C0FAC88E53A6E2A1CC08CED58694BD5993F661B75F403B0327A58E
94861527D7189B29296AD304E50151C166892AA2EA7387CC066E1DB337F411AA
33D18F78001B6CF1EB96A7D775701841336E06093D7B810770E8EBBE1F29DE7B
E080555DC0CB4D5F359941CF174D9115BE3F5F21BDE05757D3FD361873A3BF88
95DA6F09568FD192E619591F4674B74BF4CA9EE2A6652DE25916753BC8C79949
8EA80CB2062F319454FAE4B64A622EBDEA00FFFEB8C51B57F75ECFE7238BDE6C
6195EE87EB93711F2A49C15DD57EA42ECA4E6E8D58BD7B7C335DC5F878639CEA
E3E2E03FC534751C24EC1C8BD852A355CB6F4CDC952EECB9CEA4547D57B9EEB3
ABC95968E8CCDC7BC2A8FBEAC4A8017A6E7BDE6BE19ECA64E74E1870D2C0207A
FE2AC4355EDD30E62A1FF4A14E4E214379EBA92EF2EE4E7B73DD295274E1D416
F7AD7339AD8F13E83EE1FB4E3367DE4DB71312CBB85ADD21D5A3509CC5563083
845E02E4DFE54656D599F468223E890E50D3D6E572A05AF4F329B3BF19F5F289
AB7897769D7C74C0FF12D600355A8B683939396EEF9288431B264019F43F5FD9
C71A33CA2BF8CC642FE76223DF030DC8CDDCABE73337AD9D303C1AD9AE2D07C9
CB545B38057D64A90C41E349A0441092CECF2BE970E6C4DDFADAF21BA9C0D030
F2F68C45ED7A97E0AACDAD46C96565D2A528C6A92646975A56E261E3C16937CE
A1C949AEA315D42609A279E8E3D4698F925E037E82E12B021B099D63E7D74A4E
73C9B32EA493E60787AF090ECB75DCE7C6FF16E37D5951E76363CE7E024B0EB0
82DF83FDE3D055C571BB6CCB2BF3DE8FCCEC8F095F164208E827A9C6017F08AC
DD3DF47B13105568834430FF8C5A60522C8532AB6C7F92FA8218DC8D54D0C604
72D21B79F7049C07EE9240CE786B16D833E8E745FEFD1863457C2ABF892D6322
3BCD6AAE63AB47DFFE7430382295E44B46CCACC5FB7EC73446083C4150686DD9
88A89EA4C7FB495CF36760D1CA5A56CB7EB397CB229FC7A76466650B00DCAF38
B8C9332CA8DC2E6F451974F1CEC84B04C87E046D425D2C67D68D0A054F8A3F6F
F85F5F8CAD41225BB627A6D60FF613EF2279B10F44600CA4BB5E63C8A2951F77
1CC656327D1134617F6B1B60CCAA6282EA013B359983AEF8630E66386F7FE09C
53EF74CEBA02F544269DAEB43889C7D20B7EEBEBF6977DFA340BB21236E42B64
F1DE8F7B8246C840F68A08DFEB68B4A892C6E4B4BB39726EC682E85BA7C7B988
B0CFA983FCA43C19D34D54AA899ECE4676D86C0801FF95D786308774B5A16856
7172A98D456B58D9BA157CCD651AD086E2B07C5DF7D0D9CC2DADEEABC2CC812E
F947700A630BFD6A51E3BBF1786B432C43F3C7361171FF479FB4FDFFC81474F1
189E78D1764621CBAE00163B9A8DBB7DD83111643D962CC8B5A461462F841C69
7C15231814EA2F97D671F5E751E31ADAE0B467F3CDF0CDE12200B62FD5533598
246A0003576DF2D32C346D6A51ECED2875F7F94A744C65138856D90B90C3F3C6
65E41CBBD9BE223629132D9D77EBC9D0C31707470E0F5DFC1FCD7A928DF0CD38
8ED13DD12AF5BA8160DABC41DA079DA4A751DF9A6109796D18581C08BBC8AF96
26B1DF061FFD64D5E9727ED81446B5F0F9DCF26A4DA2D231954FB93FB790C6B8
EAD46FE7E186F8A19F77E45AB50CDF50B9F75F0A6338BA2148B768FE2D526762
7FEF41D96344A05EEE4C43E2AE24657176BDA87E537227DE9FF96147F750256C
E1DF6441DBCF22615D39563FF74AB96D945E03481E0640B8DD548160E762955C
B7CE178C529CD741BCF3E19A3AD3094F5C09CC2F91BBD3BEA22E12E9C4197D0F
3835C0942AD6487F50CF80C9F8C3C012829FA69B8F87FBA0F1F8CCF619FBA3F8
7C05915E0B9DF531CD017AA860B96CA41C168548C5014D086304643B80ABAE1C
B6A67ABFAD25F281D32B528E113D50C16C7ADA4B3A932692615492C046257CAC
1B8BF3321C6361D12879D78AC6396BC3936BD40FF1476D13C94EE8FB43AD7CEB
AA1E8AC903FB1EF52F939E9170E0056F21C2C0139D85FA6FFD6D1FE5FB3CA1A5
07FC6FE52A7FCA8C9AC9557F97784FBE0050F215500F281FDAE57C111E11236D
9752D9686B08933405DBB607CF1A015698E3DF11E5CC965A61D7320109A4205C
FD1917BB1DA9327C3606A752F86D5A8B2FFEBEE83ACCBC73C481D1242B24B072
7ED9A42949C0DB281F577FEB3FA5D85CB000D190FFC22AF831712233AA23BA99
4FB0C2B8AD9955777CC388FDC131444CCE5F7F1A98BB3A8572F20EF1C658416E
23478AD56C865CF48739976AB5AC152FA12A69C8777A0C5ED8C8CB4191E950DB
CCD311A20B14B417714516AA361965E1876B223B74553E18AE14EF37FC9FB823
9868020D41EAA7F6C1A9B682B344B7DC94AAEDADF812941C266417C8A24A4EEE
010E977C6C61D3B4B6B0FBF3AB9663873429AC429977FAC1C877ACEB28FC471C
ADD1FF0737BABC8E1328AB11B432CDDE1BF3F0DBE4C9F38DF4FE6E983CB566D6
3D97119CB34E5B87902E04E190BDC8CC0D1357BE9CAA1126E0B29CCF37CA4419
9F828A69CE468362C949A4A723CB17E4E79D677AD54A7FA4821E61CA438B8AB8
4B9C06208C49657151410D1A7C631959ACE13C19B474AE0A92A80ED24D98F32B
EF868FB88C1D8DE829A43389FCC27560074CD7A9D04043F8BCE201DCFDC435D7
522163B2871DDB76497570C90861F3ECFEFFE8E695E526BF8394BE7D685F4AE3
5AA17151913D7CB33BB94AFAD750F6EA9BB43271084CD876A14CEBEB839CF883
412B07E613C4798B2BB2DB9D168701DEC925490C7D9A722117650C8F7ED57684
A4CDF5D554B1CB65AAC7F1DF8E3F4824B954594A1F97194B19FA8DADD2164043
21C50764AE6E78BC4E9790236910A06B75B6011FC24D5FCAFBBB1509D7071570
9DF16093A1AEB5365720129762C3528793C574A33D7CCDB6F875BBA9E474804E
B59474302E7A8703A70517C9FE24A6930AC314870AC4DD9CE100670E67B8FE79
0851B16E71241433FEA5650A3E73173D272FF301608967581C38905B333CCF34
4D42512CAA7E5F142C781072CFAF2D3371632319B253DBB32F790308BE4C8F5D
B698E081FD5E431E713D3FE047C72AC601456C76D4296225700B5BF6002E0860
30A0B1324E44A1AE092A7FDB9B3BA6BB7A3CDDCD4ED2E3DFD19A39954ED266B9
B4E40E5BCC6F9D38A98AEC711A55C6C0DDCB787DB16730051EDAFC10D2A983B5
A2CE0505CD251AFF6E57D012715E3B92493BB601205A40E58A483766BFC637D0
C4166E42246934DD00C08EF218B03254F3561F5D031336E30CA4C05B1532C6D1
5624A83CB86FC4DABC0E42E167293ABBAE194FA860BF629EABFCEFAB8D28B360
BE94F4426E5D273581A6D2844444D82093FB03482D81C55D82385C083D07AF13
3BB1BC941AFDD9F34D5E0E297D26FF7AEDEB09DFB0B956B404C74657B72A77E3
3A5F5ED930E9021BEA3D463E8FA8B45EA921B9FED12309E7F74D3064BADECD22
08915F105B9B3BFE688D3C21C0B994F3E8DB557C4E8C34903DA01C0392D34BF3
77544AEF916D3F56E6CF780B37CE39F605793D904FA4650A892198944249609B
D0FE79F0F3FC3A15E19E12114C8E8FEC927143EABB7A16445864494B181A579D
373539E8AAFFB0E83E3E95F08F5FB761C442515ADDF084844FF1B1F58AAED892
FF4193C2D86BF671648E5BD96008A6B5354DD0405B5C95624723F4B3D3771D39
AB8B9BBDA8C46E2CBB9D6201C7DA9C846205E522DDC3FC90FCCF6D6AD0B2AEBA
2F8E57345DF144731DD2332B0F7F5E84C46AF3D4CAA30A41A99E5E09087A89E2
55BCB6B83201298C08C58265D8B9959A9855B99748A4BFCBA72B340615323312
8E70312D5F48C59537B1582FFC314CAE502517B502C0036C47A485B062196657
C6B0CA8422DC11C6CEAAD5273C12EFFC2E3FE1428B2DAA1853FEE27EF30CB0A4
94BDF0EA9B991D38296EAC8C586A47FA1F63A1AA4A80655D0AAA3E907C1DB5CA
65E297B0DB9B140DF4659E33C22A315C72B31AB0E0721BF6B14C2F3295817E73
A240269C5FA05E957A0BE481889125A9F918B0D589B3F75130C214C2D98C3CD0
7C942610177BA2E331993DF752B5F9DA89772567B5B1997AD2FE0801171A58B9
43DF0EA5AA57BA530330233066FCBA83EE6C45350AA213AD5635D93E01D1FF00
39569338D455D8D3FE8A18A737F324C6059B531483B686F719BA31A4270C71CB
B107FBB3EA012B818B682AC6FD1663FF007576DC5FC6BAB912D35F1184DB824E
F99B489E54142E2270684BA59F008D3EC824C5F88DC830599502D7744D6B5E6C
7FCC1C073E436593FA7E500695EBF7538738098E8D5A38841482904EBEA02580
0872D6EB729465787DB5585D9C731EB49F2F48C81B70AB75392BB58596D9F820
955718607D6154B1F70DA6ED4BD6582E09826E1D64D3E97CB7BC932223C67D27
171F259460D79F3EB5418F210BACAA8C1F5E8B3A6CA06B306BD132632FB4EB92
1EE01FDE8E072A7644F56B21B1EFDA76346D43B8FBA26A9AFE2B570B65078176
2E7B55D1FBABA7F297F7B18FE6A222C95206751EA4E9DC946A608EA2655E2E88
795E67DFFC22EF342EA39CA8AA7507C6FD532C57D134087CC14AB94788C300F1
D3214E4D20A90D6BBEE6C0ABE39767BDB7BF9AA37650E6A3D1A58ABB54F1F5BD
72D086F48AE37050F7776DD5EA62522A8D06A25135505CFA9D5C15A03FFA8F08
49DA66502A9BC805EC4CF4412623C384AEBED728FBD6C6064D137FE6DC30ED0B
263D1A5C73925E0C3FC122AEF8B1B75E0A02E4EB6F6E4843360310B0D78825A4
10A5F3FED4FE5578165BD4F7D12916D852062C5A9056C7848BF3BCC1B1452E48
658A2D23DB1A0AB93A240D22A5A3D353A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58D60B471719313DE
3C81902848649B8F93332BDA82C4109E89E74AA67EE6A71034357B85B6650001
BE80A48A2B187B75386D23C7203BF06858F3DFBB04B2A3F6C00DE3EAF4791087
531B1E987FFAC89B13CD6B40748446A7F3AA81126A7DEBDBF96773D2F86DAF0F
BDA9D2E7F9AB662F5C5FA74D8517BAB427D2B3258E4C4646F7AF1F6F88D1FE89
234DBA4AD8EFF150E92112CCBD815A60CA119EBE7E37AC81F9D0819DA9EE1F6F
67A0D65D35E3D0EF63274B611B201D7E280371E1F963484EC4796E7CFA879014
52811837D40C7BECBE1C6EBBBF065C283B7C7B3BD085EF1D7944260036DD3A63
9A660A25A88E5EC19575B847323A08AC7AD4E9217EAF912C86CB6CD5BBDF876C
BFB011B6C12327592F8B086ACDB860B1B84DB9BE5929167694E1FC7E62FF0800
968648454AEDA4379B7D1BE6B07E1C5BB164A3361765B4356C4E2C8E6ED843D9
845455F4F39629920D97C36F4AF1E5E72A5E71387BA13D63A2DF6044F4707F3F
4239774EC5D2A5353ED438B15409AB90833C957B8902765548C8E22E9DEEBE73
5CE28EE4ABC81450157CB7DDACCB72A0FB560BD034F31C23B04EE90FCB4484AB
2053E8DD69A2EC54915EE69CDE1336040C536CCFF439BC8E43553D800CFBB6FD
875ABAE3E6DAD7E057361D7CA6285803894F6A33B67D29ECD0A841751F69F516
8EDCD3F3DF7D327BDC7B8D4D86246B3091906127EA8E50EFCA3430DBEA873AC7
B461E0FB63D7C1CE62B8FF34647199271693ED1013818E5121FABE4DCE1B5AE3
5D7122F1ECB6AED5544B06AD48DAD5E377C2F375CAD13A9044182BFE2AB22E27
7B1AF591127CA8A28EB491FD849172DD9D4F594DBCACC60041E039B805BAE98B
8E3A5A1B7DE535607DB32A001779973DEAB1CFF05FE0BED47D9B290554B076E8
575ACBF0888FAAAF03996D966AE4E2BB70E64EEDEF0CA24784A1DB7F945DA3C9
310C9020849F2C6234B253A36D82E0B00686B0E8BFE3F4AFD1EB2B2787C65B14
7FB7AA49FD7B056D8E1B1611D2D7799E5286705C46394020E39A769D9235CF73
5AF23CCBF2CF9B24F12BFB5ACF759FC36E69B32230D2A51482FBA1FB7D44FCB5
48EE2EF56D3E57F221A0D224268AABC24AE22C90AA37B1DA67BC83A83F169F62
6A33771F450D9C48289DC7F17674418D5DE5277152AB81BEA51FA99398860E1C
252C17EE576B7ED658ABFF2E9ABDBB7EF226F862C9EC8392AB9CBD174CA5E3CA
4F221585703F20FB70E37A26C6C3F2E101693C9462E8708F3A11FC2712B27C31
57314BB5A8D210044D0993CF50A0ECBD1743751B2A5746D139A591AA3CD97B86
2A90D62328EF718ECDBFD7503A0750027042AE2D2DBE35AE5B6CEB2B2A3C2A50
85BB0E87DFD0B90AC7CF3725FB707ED9526ED054C471B82AA52B6C090D4A8953
7D321DB5621BE2BB042A97301D2FE70F509161F730765D9FDBB769014EB777D0
3A2D20FD7ED73DBE1EF745F2E3EE3C0F379E76451D99AA82119E8EEFA0F30FFC
24EFE5C7FD42DBC5FD7EC83D687FCB4D1D8550643AB0BB89428A16AB1066530B
A1C89585BE48B92FA6A323C0FB989D53EB4A5AC25A0858B10DC043C84036588A
4234FC70CC583D630C563D9C33FCE5BF7177876CE1CFE159231A026D3A3F8904
7579FD28BBF82F9DEC7BD65B80885F9C3574339A61253C3234BF4864C7109103
FBDF1B4DA7CE2B7194624D33B42527A190E9EAA689EBC39EA345CDF83CACD2D8
70186012B0526E8F49CE50FF9DEF3B4A4C1BEB3848EAA347734A49C409A00967
4D3973F49E02479CFCBCC6F3F4448229D15D0FFA4E22B5A0CB4FC82C4BB848D0
7EDE0C150C876A61EE0592365D4A01DC96667E2896098DC756EB95C1625B55A0
E9FBCE5C95B7240F7804FB337193FB904015AA56AE725E5AEE820FFAC056863E
893BFA770EED87D94F45B85F3948863924D5F3355F74426C91FADCA29EA131D4
82990CB64C201664D2D13D7772CC0518B7AF4FC2F56904C2849F7F05BD9E5029
B6C34329FA3F773B665ADFF0135A65ACB5311765991CF95780825F9C769CD611
F343C793DEDEFB0A2B19553FB4D299C662F932D9ACE5DB35BEA759F586AD85B5
8F0E770E97CE991AFD7C74C059790FBF0497F8CCCE350E08DF242157F4D3DB05
19EA9095EE0320B1B6AF51F7F499C10BBFBDCF134E1D1EB8B314610183673442
C0006F857EF419616A0D2E3D646143431C318824F8E14C709409A166796ABF2C
FF02A492B25295679DEC771D6A52EE169C6D6044F0629A5F980593A1A0EBF1E5
32E38AB2B0CF3AB3029E31BA333586646EEAD71A17D09253A010AEDEACE01E30
D3CB3FE2944C3A15D42E7F981236E31F14BC8FA2BC3BAAD162DEA2677D403162
21A59C6AAD10E16FE5C7A72657A80F1CFB288A14AD3493874D67FB56FED2C58D
D18152F75E9E3A6ADA7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC952A2C2
C9BA623D7424874E55FC5358F9F242AE84A25D03167D702466832B32DC035DFA
F601E2EB6615EC361900BAAF4D8B1B920CEF7D5709BC60E2B71D71304795E3A4
A5C17DE6823755F59BB9E3A052F69C780568CDF685AE08E368090C56CC9F59ED
573A530FEADBD8E45BBB76C8EC67F7132885ED7689F4D0D4F5A7BB174702119C
2D414E4812B2BD61FB558B9D8E869262920ADAEA3372171FD26DC9C4A2DFC815
E36687F76589224B0BA4B135CC8709B34137EBE447A68F1A9E858F9874A3F85E
82C396D9E2891D8E0D6E5571D4EF19FFC3A7C06483A7FE49E9118C94F79ADB28
0E5CC38F2AE4E4FF707C55BB3148051B2B6F2E8AD884FC8A2D3197A5688E0D0D
7CD1CEFF5E355D691E098D1FB675E15D34781B178A186480F3532DD7FE7613B1
A5B4DEFBCB892CD8541D4066FFB88BA2EE4ED4246CA01552C68F3E43237D8682
2376F40EE3FDB00E6D5249BFEB2939CE68A552AA47F3854D2757F509F2B1769D
6E78D66C3C9EC85EB4131305F467878052E009E0E1AF6179EED109C2306A4A8D
FC475F01E5A312BD9C984EE52E2F74A4D2FBF20E45EBA5D846EF69573C5C757A
1F1451EA13EA8230F0AF49C0A222FFE340112C6C063B2F9C67B3942225BD45F6
FE01CB6C10015841B66CD6BF4C7642FF2FB0900BAEB2AA27813C1EC2319A6B3A
A2D5AAE86F6D08C55795337D8A456AF592730E8722A632641B2778AD606A02FE
2D7F65FC9B12C8E0531F33227904D8D5F5F2750CA2C6E1EC6F00CB6C62BA52D1
7FC66E06ACCE76602A065760CD6959497D1C453008AF26856BDD3C2C60C866F2
43547ED3120BF4959153CBC63778C1315F65AC6BB0619C29348A1E71382C8468
9EFA8B5C6DD39FA7CDDF9F9B2E3719BE0D9630D6F1F89DC240E5DD1E46D4206D
B45BAA486A85DBC2F45566226D9EA08B48360A2A440F05A240072203661C62E8
CB19072CA76705E81701AB06B2E626F2383C1CAB8F5D9079CC78A958BD373873
43DF97B3D34B2D59D4B2A379AE1347C5A1FE39542C995AEA41ED4A22883CC403
C4D9B3656E83BF407D06A0FA27FF47F46CFA54D4184BA475B5D0F2361EAADB75
74BBF63101FB89443353F1F032FF5D7F7C97A02506798071F35E24A93F4754E2
8F4ECADBC97BB43F687E2003D74DB38D515086F457B5AEBA634AE5C759717330
44D6473DFA561FADB35D9A3FDEF856C43D283247162C392D23E2A535426F3112
E17476602F3D7B5AA66AC7125730106E7C6755853F3C54A4A5A823A807BA732B
ECA0EA73E1E82D7D4ADF9D2843FC809A040B9287F0C71D93F7C2B3273825EB07
1D57E293719487CF5D51F3F8FA688FA1B9F01022F2095323D07B0B85927A34AE
B7CDCD670DB229D765D97C9F848B58E6A98079BAD89C257E8738C6C6322DE5BA
2529610091D8A9F09161A41BAC6A15727CE914A1058A74F19CAB46BEE6168EAE
D2B0EC9606F6300D6B12BA381DC1EA42375BB856547B82DC006747FE5D968555
10C332BFB654B8EC5201F17A7C3397C6BF0D4B077C4E6BC4A9B3B3E4C9483036
1C8115DC829905CDD01E943AEAE7F7996570C3B0F9F47FFE4E053DA704E6D9C3
015A23B111A08ADCFCD2CA43728C2380D4F7E5191554672123916E7F4DED614A
2FCC83798997B6AF9A887A21D593537B2F15B5E5D41F7F57F05CEF3838ABA82A
086855D63DD58DDB133B33C3F21E04B04EA715C84B6D69CFF950270D3D9187F7
39D08BD8BD7DB82E80C5C78220CFACFF1538E9B8032D1946A359281C29D5AC09
09EBB172D9C690A53425CA7CCF57F56D75777F663BB0DA931A45289D2735B978
9FA83E1FDAFA7FF188F74F08626093D94E0561EB786F9F7BB862DE9557DBBABF
3A9BDFD6C700DB2889C827204956D533E0A0670D60CBD73D1E1B9865CF99A18F
AE3535115200C6D6D2BC9DA0BAB7DA969E929C05A9C58F6CA8228F29E7E73BC9
CA5E20B1B2C5ACB704C3DDF8F92AFC1924FF85BF0BD5547FBF0ACD890470AA5E
160BB1CBF198EC9C64B9689AD5A4315AE0F672BEC79DDD855705AFCB9AA4030E
2A40E6AB74022C86E54E3F990F8F10D28EC176F81A2A2222B2117545EF265D6D
D1B5139002DD5225DAD211F5C72F3127A60A33D311387BDED23A61B0572821BB
E055765DAB0DAC8449427E9AEA9C41AAF3214DC47D57754E55CE6588CD0FDD9D
151FA8ED469CD6AAC616784D91B39AD85200341B4B33127E9ADD95DC518CB551
334B31801C22BAC713DE7CEEF020D643C8692113CC15C94DDD294049748B473F
D5F4AE9C316C05854C9877E9E4121D68FB545124ABDD73C8F73191965753E040
4213C6A94A7AC4F217E3AB4BBA8870B2F58453EBC222CB1270F3A107F5418942
6BE04FEC25758A69A016FC934705542C841542BC1FDB26DBE389CED1905E5CE0
EEFDC575B41DE40FC8E52F0331B58CD9A51ECAF70E97AA2B3B5EA40431A79BB1
5A93FF08E3782FA0F3150E5621B4061D680CF64AE0E7C27027236C04B7C52A3D
53785FA63388E0EE37C82618BCF2BE11F46911B3329A3EC78F6A911EC2EB5598
4542B7CEC8CF6D19962FBC57FDDF53C16F183E9E658A4368AEC49715FEBDC8CF
5C4999A26AAE7F316592E7DE134F775A835D46A69D1C4ED9F4A53C5CA6FA9E91
D8A28C719F9348509C0E17D632FB620E077EC8EE339C4804180FAB47078057D5
5EA08026BC0C88D7C77FB1097C6B36D6495916FD69B176E7FB8498B2C8A40E6C
B11C31D9C29C7AA3B71450BDEAC4AE6E2ED2B5C32E6E5FEDBEF4DEE936B01E6D
8AC3C275EEA7DBC3A8C76F4F6F7298116E7FF68A8348389D3052344CF3509035
46BE455D07E984809CAF607B7B16433C9775A3370AB3C99088BA3E5E9954C28F
54CEDFC72A14124976B7337FF348449C01E851C4736321D6DFCE20133FC6B8A8
AE43F782C9C7F3EAAB68393918581E5D402BDB2555294390E2C94CCC44A38C2C
E2AC5E22AB57C488C22E32241E3E2F47B265EC4F5C6D3D7F2A15B42461B54353
F2C60C9667C727E4FD346CB11D121777114AD0F0BA58886962785E4CCB6A2039
BC15B70DF7A0EEDE6E2A44D4BD37D712779C8ACE51DDE1FDD856FAE2C86A1A03
4284BFD04CF075F70A8BB95BF53E8BA3FE48CD123E24A210114AE2CB3B276FC7
A03B593C2123C513B4202A3015E8DEAFFFC0A69B14BBD009A0C0F023D4D6706C
CC0540166DA11ED9CBB29E514659D45B139AB83B87241B6FE3DBAF1F6D0503AA
0DE9C012E610B9840E263707E73B9BC76D256FCBDC8CABB9120CB6FE9C2A2F5E
9385BA8C88A3D7750BA2C340B265B989E10F811FFAADAB3C186FE522C6C82B9F
5C93E475FE35EEA451EC5FDD0BB5AFB31BA272431AAA0DCFC1B35B907F5C256B
9AE75E68192943D8E26CCBF43EE9C02CB6F255587300FD433C3B4D9FF47B54A4
EF83D3DD20FF35ABD92E13ADF85FA7B62AFD402ABCE47880F9AA8145A18255BF
BA19DF9635CD0EC25363552AEB53ADE69B38794E048CE0C6DC07949849C1ED2B
E9BC38EE8787EFC7FAF8A4D10DF88C738EBDF0415685C86DB4032EA0C0ECB7BB
C044D8B0C662A0B19CE44106FB8ED849FEC7A065461871F62A56555CAE6BD34D
7EA270E629F307A64B286C02409330317B4FC830F5415581B93AD457EB25B2F7
F992188F3C5E9E5A35D543A9700E1CB18BEF7A4D2DADA9C2961A75BF513FCCD4
5751A59787C7C761BD35610617C6A55D5AD394D2A1DEAB5F0549479E200D0CF4
B7C375321C5B541002722DAF3AE4D0F61F922CDE36DCC0F40361ECC45C4D38BE
8911C50F4375885C19FB751B46C7972BDAE3C044E0BBD0FFCFB0E17D3638ED70
E86F742C3B5D9421E2AF8F2412E78CA82BB0BDDA16D96BEDA842C9B8078D60E5
FA106E39801919E65EFE0005BBBA6A3CBB9136B2830227D9B5207C1B5AED0187
CBB418B5B2786E77B69ECA81864B4F28882C7503F11BCBE74EEC946B4412B039
8A980FF85A6100CA4EC3B133ED8119F306CC5F2623BFDAF5600168775DF39D60
1BE6810E04C1EE107555A6B9B15BFD37418CA33E352E161446687135708C6BE0
71B51FDE425A0AA57249851AFD775E2535BE0A136231B269B2B71D44B77142FC
C0C09F78B7A7808A55CB323A05ECB3A4DD40E0A0A26F9177819A5264EE7B1DBF
351FD9F074C98C6D159862B0A8DC79CBD08EA5AC1920F4E395EB7A69DCE16AF7
79DB5A412D41A3701DE89F53C20F1D823F2EF64DB77DDFB68AD1A8C9415419E0
B7399145BA7A01B9D57754D643A8EA8130DCE13A19A62CFF57309C7872612078
DF99DCD01E23061D33CCB7730A625DA384A7CD8DFDCE93CE7D08EB6DB08FDB01
97F1ECCA581B102A8C283F3B0F9995EC0B1D92445FC32005C6BE4758530F02C1
0DAA800CFA681EE7ADB38A6CA58290D557AFA6B2F76D3C2C0D7C2FEF36DDE11B
9E9AE8E9D60E06A3E169A1A02B17E1E5A321FB11D21ADEFC852D2E598734CDCC
CFD8C05DDC3040E38DFB588B4F4C828D7FF50D459FB6C913BB52FEF3A6D478F8
2A190831DA30BD1A0AC04F2851504C8881A81C1DF0788F4B1460B49A9C1002E4
C38C0D8088CCC17B6CD45436165101ADFDDA5711CF4DDD77C9561F3682A81CCF
964AF821F94E9C9CC7BD30C73E7F151C5C6505DECBAAD14037A5E7FDB9D0A5B7
C5A4AAF583DF1E93211411DC75EACE7A154765411925D03D58A22DCD2AEF5406
DF4662C7C9D24FA7770BE6068F5403ABE805AB2A81CEC34D986965169E9E7AB8
A1ACCA1756D2D72F0D4A81042FCDF00745DB00FE7A2187D2562E08382F94973E
E4F7F6CB903957FF97719A22BFF5D31C9C6C0FF56F9B3DF196373664EC1C411A
4F04267EFF030EF48F8A72C42BA53B14487D1F983A795F6783F803312AB2DCA1
903A7216A3CE3E2D27533ACF63963449B77B31498F1C66256C554C63BEF3A1F7
0EFE840959AEF3E34287BE6E17CA0E265ADB2CD4A90DB34E373B20F891363858
27B7980C2FE0ACB1C7819FC6B424F1D39D11670BA89B298DE40E91D1CBAEDE08
6F5B7A2CEF0B8831E122CFEEC2DECF76AAB9B3BC37CF3D8C47D478FE1788AF76
8FE9FE3A7434E53F28C04ABF30345EBA5995673CB82C886682E6E3EB568F46CB
E8FBBEB119C6057DBFC2B0085C818FDDA774EBDBE7A953AC19C2AF85CBA7D0FC
FEE888CC7FFDEFCBD57372571329A18FACB03DEDB6AC72F21880180631C81482
322560B68B06B993088E210C91279AAD5922A3546551F93A009A8BCDD2C3C8C4
A6A8D661A6CC8A1F07F8F4CD9BDE36362F6A00D43CEADAC9612A2D0B045892C6
85D8D662722A8D7116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E55581FB844F
62D48618611F1FAE737BD2925C54BCD4ACFCB26A831D89D241613946E097CE77
A82F68C92DA11EA6F45CBC8D3BECEB718B49F2297D416D2A3401DAAE76C78739
194EA386994A41063D2E2E868BBDABD1252190201338B976C4056DFB27F05392
1193C59DB289A41889E30647A4DFF91B1D7636794038D4BC5D6DABA9931AAED2
2A7706ADAF1B24FEA02222D4B0EE989B48B94474AEDA71D4FDE8251B5C7BA4C5
3E71A504255AB985B37051E2051697E7A5AB01D4273EFFA969966A789FA2F37D
76D4E33ACC3053926BF4350D36D28E2E8B90CF14F0639B23BEDA16D96BEDA842
C9B8078D60E5FA106E39801919E0A5A0E5D680DEC393ED6DC3040FC2F1DAA952
BA4B4EFA54808617B87F28E6C6EE881A8F2F137A3962ADF24CDE2109C4D54D66
B5DDE6B64A27590E6CC234C4F66BFDC300B51202BFF8AB5B5A9B4EB45A97E404
E705015940765F5D0754B270FA7C180D3CE759114D5D58C58CADC2E836378BD2
EF0242021D85C50EF4F0FA7E8DDAA7E09B0BCDC0661F6D8F43A7264FE50D3A4F
194AE8D5D20A730474C71D425F9409954DF168966159B2A302B801CBA53BB3CC
8EE6C44899633FD2E401CF66BCB8365EF29A3B8B9E5B2D53EF2921E8BE24A159
2F6A0B472AA97B877C586024714534463F25D7CB28E1C3E568D0E8F5DD1D4E5B
A8A68ACF4E48AEA4E44DD23AD5437110523A7748795527327559465FFB90BB57
BADF1019900BD7DF733F062BC4DDD09A780E3211EFB72BC5B2CF545D57AB4B9C
41F16E8FEE1661A8D1A476FC1744FF59909EB59D1EF232060686D3DC4FC1E20A
83DFAE731EAD0363A7BBEC37D95AD3847C8260D9A06D9CEE4499D8C2C46D3302
2CDD5486E73204CD30889F575471AA6CF5F9D27AAEAD9CEFBA0C15C9C22722EF
EC6BBCDB14DB7688A8A314499D796AF9C8E75B6C6298719600992548A68772C1
CAEB0A3EA12C1A1FEE981541B50456D7D18E788D2DF9753691F48105E200C720
37F7B8FD8B789AEFE644F929E005007E35E1A53941A65F73AED95051BD333C98
8C2585BBD1019C73C077FA15398CF620966AE73D22C7312708911CCBA944F844
E44FB47949643896ADFF67741FF8F24D7ADE3A85139AD06FAE9113F3D8561BA3
8C75DAB52F0F1124DFBD404DDB9649BD8A846E6BD3D374BEB6B9DBD5C10FF386
1DEA14910656948887FC431311F9A5F0D5B1E3F86AD05BE9F70669113065923D
7A6457012D7D59BAE248FDC2B1D1D07C190A30D72F4DC185613B31DF5DDE2713
3BDEA6FE7C406DC55C0F4705EBE271BDCBEBBFD886BCF57CE6AADED282DBB600
935FD62F962FF4C8BEFB1D63627913E323C2C363E3D499F3DC7411DCE3D20E2E
9F6703E65EABB0F94ABDD9C681FE691EF3090EA8853E8A160507A7743B4C506F
4F4A5A37C01FA41DBFBFB965C82A676036617E269E4E9516BDC07982DEC8AD1E
D4C507F8928A47283186D67327CD487B978FD50D9BCA2508355C56B75313210A
EC71AED98317186244404D4812EB1E27AE1C7FDFA6452E0BAA0519CB64DDE628
2787A7F448D78C3ADB402FD0AB800B022A9B59AC93D44CA1463EC3CF8DED9A2F
E50C8A915F9509A822FB278023E56BEEA38DB11808A2A6AA2D5871519431A85D
597A49335CC40D38639C467B51F09D2625AAAAF2A089D94C253CDCE592272B6B
3F4D15533971E855DE727A53B5EFC3A96E559D7356F5A810B1C767D7D6063025
F94638F565E8882EB7FADFE44E39894CBCF394C781FFEA191AD06ABEBE440B9B
4484E6018A3DC0501293A5FA8796AC1ED4DCAA4A65894CE21E1EF7CEACF4063F
1B86C7D5C49C840257BC69181660A7140AB9DC46A3E01092F57C1CE1A5474A92
C4CB86DB7E570C1792AC0CF18BAF9E6FC668A573248CAB6872598F862EF87FCA
9016BA8B65D9294431598E605A1FEFE5AC33D4EAE5F2AB5F1EC097F812672369
8234387F8C1944A27A9AA8A21F616EC20C91834AAC2A80D5684C5220B2B99D09
865F4E86264A28C739FF0A626C59DEC2406C0020E5F0CF45E34F3E676F57892E
7B84E9F184214C79017EA3BF11CA27B0493E7015852E7EEB380DF5047B9C5515
D9521283139769F56B466B95CF4D412DF23AB757C998AB1EBCE160ACB6D82AB8
1483F5A1915A280689D022BA7622E2E44E7C653774029E709393A4F8DDC880F5
AB92AF673E323BE5D63D0929903FB45F56B11CC71E80A63D1A0160817288A83D
C3CC63DE40C1316698F13C82A72522EC18F41F738AC7FD3ABD6EC50BFA7ED45D
C363A633B445704A546A9A1AEAFC042118AEF126FCEDA04C4F79E92444AE54D5
C6FF284FD81E544D200A0A4826728B75BF20C63B321F0584F9623A71F05B694C
7382FAD60205A873CCFE928E92132194E96EF9706DD439CBD53194C7DE43E873
35570FA82647AAAF3DDC1CB2A8C5462B4C454DEDD546F479E7D69BA4A8758656
2F7EAF7EE05CFC1D03708D1935EA2E69C1EC6EBC648DA1E2FB3A0283285985EF
99E3302B40CEB35592BBEB7BC05AE1507B4B1BC1B5F69AABE2F964CBA4C0ED54
16A20F102C82B88CBA0DEC07FFC5DB8427CF5683A5EE4D7FAB4C37B6A8052362
3AFE9034E573034979B6D0F7D62021E05D26262D8AA4DA1DB50DABC0C0F1EC42
48CFF24B78C4B4DEACF10F27EED9832D3215B3B1C180712B4A6F4B7EA8705E0C
914E2EECA87BD9E1FAE18F1A7D26F4B731C3F387F590C69C38A5817C8C965A59
3B9D9DBC5013FB08C6736BD27044CE41C30BB402DA4D3FD3FC0AF52F2190F679
B4AE72EBDA867E2657828356256B69B89D275EFFE5BE1AE9715EDE6761D7D722
DB82FE8AB04756697C6B1C89C6D96311E088FBDAE805AB5ADEB60FEE09F826DC
F07D7418CD75C377D3C5C7267BEFE151C52A60427176D702F5F979144FD3EE6E
CB3F8B59115379A09AEAB66EF7165E039A98068F254ED1A91F7031FA0B828C89
F0402B564833C129C31F9E8C66735C59EA38E3BCACCC6F85A6E455F52DE35283
00002FEF053DFECF68261DC400897B7D2AA9416453DE7C661ED5D3477A95C249
80073E63DD9C91F36FDB4ADBB1652A3583ABE38CE55C584D2618007F433D7925
6754C40290FC6BD7E6D48C69F042F7A5179B5F745C8B4C943BE06E64726A02C5
C91F41CD1B73300A2CA19FC526EED1027787E23EA108C7FBC17D2C074997AE69
ED04886A269544DE0EDDA501893797CE29995D5C68F55C27A9F0DC4B7EF5BFDE
9EA4A64D445BECC73A40B86139A2B545716DCEC01F7A80C3ACC17CB6A528591E
F27911265DA8B40258E56469BB61EF8C8A95B45F5B930BBF7F25CAA524C8B374
AACE6AEAC8CB4182A887EF4B294D82147C048B07CFE453C8070B0CC35C26E832
23783CB35121CFE17E2DA671A7FA88213B596074FE4D777E041408A3372CA1DA
C1ECB83AEF8ACB06C7977F5BFC46DA5C7E7131E0EFC7FA91D2E9AB6B3ED5569C
5C5673B886473693E4A54487A84A1FE0826D7F99326A41155CFC70A17B565BA5
117DB4AAF5E956EC5D20F1C64FE1D7838C72F9D1CA0C650C18287C6E4392ACEE
9A1C8FB7FD9395E3BA7425B7A59A362B11C163A54E4CA1005281F055219BB2E6
B23B1DDA74A819B97A3F23EDFB82C88901DD8D0F3CDF16D6CA98017C7C118D8C
67F71A4BC3C8794BD9AEAA4C02C18C315CD2390E3CE5611FD77CE4D5343389E3
DE1AAC43F4EC19D387D38B78DBDAA0645B2FB1C9E82B2C6B67B0552D00C4D311
4908981F51AC4E66A3F8207BE596545945C5EBA0E4FD6B949B546AD49D1BB161
EDE789A3E2D3B21F23C56F76E3568322057E16C7309215718630ADA1BB60B87B
9F39D486C776B1FCB57C5F991B521A4C89C522B27B9A66BDA5717AEF7388F7F8
E97844A475CBB069CAE6BC5F117865AF3389F9B24A1D21A9CAC5CB8DD60FD6FA
D3C8ABCD673A03A694FA7709C320C49906EF901997FA7F292F76A8F584E39836
743766E384E7646767B2D94549A80ED3563868A3DE6E265309F86289FDF3A4EC
26ED6581AFA8B6D5AD4F28DD5B022349FF221F58C49D240F662BB23D7704D4E1
8B68FF3BD876AF832F13C8343C21E274982FC4533EEA16716151F6E7C38FF3C0
7247CE5236EB13B7F1E8A15AB9B0819C35691F9B90D04ABDE47EFEC71E4973F6
29B392CE3475109E23F15C46073D42A8AAE4A6F8B0B2ED3A99469BCF9EBD067B
0DD696F94F94A574D4E7276F96E891EE4B905F728630A17798176EFC2CCAEB2D
E003E4825A689E15BA0AC1EEE78408B2D37A45A80B6EA8EC9363C4496E88651E
5B92E3D19E816587D025EA6DC053011212523A5C86E50BDCE0E5B5EFEB67FEDD
00215C3E170D67E4537DA0FA7F3A8100A905E88E03863FA67D3BD8E03F418C44
A895C52FAF16F69FC8885EAD2CAB2644F1E25DF5F6EF5B5ED34534FA6FA9F76F
DD45FCC5C10CBF2640628BA4D6D643D5C428B9DB6DEAC8754AE29EAE5AC87616
C0C26855C794EF8018E16ECE31415E2010323BF7B94C460C35EB72CBC4BAD470
3A5EA471A67BECB8728CE2C4E7C3E63CF5267AB9DCE91B5AE82CBF821D0CA239
4715CBF564DA98410DBFE40C853B5C7E05E982BBEEADD7A39624091AFEBBD951
E04215CA250B7C6831F55435E628A295E895BAF7072ED33B200AE21D0404DCF3
2BCB28A7373F882020C7101D6D06E838F7245B1347921D8D93659EC8BF5397E0
939B1D202003469068A5BD2017D3094B67D6A21F2D345D2B920DC304A252193F
1D935ED5268A6AC194D216CF744DE8FC7FCFF15F02AF05BE0EC725003E6D283D
4085DCCB8A2F8972427A47CE65C55791AC67DF9ADFAE75DFEF9EB200D9C0527F
9576C9CA4DCA2FB7C7EBBE81ABB2AF159E9E240E0ADCD0DF9EA71FD357BA6B94
419F2E7627042F143B3959C09ADE231B76140270F0A05D53FCE4F35F1FE9E7FD
BFE860AF590E6F180B5759BD37EBC68AD65723EBB35773DB0933927DC21081E6
7E5DCF4E44031324D58247DE6ED8D91F32EBED2672A3B75FACE398892CC20AF2
F22969804D5A884CEF35791B1630B8CC42EA0FB206DD0229A2B37F520136C4E3
D2C9EADBE885AE2AC1E78BFC240BAEC20AD4AAD8378F4376FCC0454612F218AD
65564EA5B099C094DA672C9D042051FB5E063E72A1418AA997C16C2988EF7E01
48A1DF74DA038B947590B4BB05D4EC307CDE098225A478F5F2F4C32717B3CBB8
7C15D695F3947BC776B062381C25057FEA90D02F10F828CA80400840A563CE46
48B26718FE184DB3337DECDAB99CBAB90443083A74742E895C8B2BB07DDA9939
0DD0CCA242798CABEC88FE22762491796E95C793C00FF6450174D9096CE251AB
40E97F9CED602D05F6835AA84C809E49C4416075E1290D0B0309D7EBAD12E195
5C958FE636BFF1F4A94CB02B67C9EFE3A2930C444B7792A4619E3C6AB2D1B333
9108E2D924FB26FC7F1A6123A48DB52722FBE54A90B12646B3A5FE44632BED79
898DE54B590F421D5BE7BA35B34EB84BD59C8FC9005C544BC83CFD4BABA328C7
45443F93B1C31CBEA19AAE4FFC83A933D8DC9C2609A3FCCC76F5ED4C048FE634
30BCEE7CB73499DA0FA50091FEAF534CA528E5D88EFD8566893F56B21E34971C
27E56CC157560A9FEBBFE627DFFC6E90B9C4CA0704A975D2C77A9E4B76689F6F
C544FDD4A65861C14C1436BADFEE4DF997633E53480A1DD992F8753156C33321
D2C07EC33F36A5E3BE297EFDF302D8E8D5CED4481E9736FB436F629EAD2AB3BF
6C3781D123D7B13FA06625BB41BFBB41433632A244D2CE10DDA45FF84DB78BEB
13CD3E0CA363E13729C17C71597FA2E546CF55536EA2B941512E7F57DBEB3C0C
5724BAEB74A9F6C44159C4273172CA7AFAC6B628B895011B8D2DD6CD203D4094
F98FD9046E7E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E6C64A7C22D64A78A
0997962F15B4FF0502157BE9B017A0DCFCF0D9BFE8B01C6B3DBE65473EE16EC1
039ED26276748A72D9586113BBDECEDB4192AE9991497A922907E0C8678FEA5F
B6D820FE9E6F5613F30B43AB82895F7B7C0F19A84DA1B7F2BDD3E8ECCE1499F3
925DACEC43096D5C4BB7F6C1FD5174F5EC78D1B2379918C8034B08588C4DD53C
18CA4063BCC8EE90AC1756B426A936BAED123DB1E6548B37019825227FD74D17
B8E54FAF294389E385B61A86D2E91844C22A3CDE0856BD8640D2B9B1844E06C8
2D36CEB7BE8A5C27AE952F4946D01DD1D65C1D50D53EE0E54A1BC5E7269F5317
D031A400EE8C4AD035FFAA147F8069B0E1781EDC78E93F64C1B30E31886B7B33
9B151D756D0FADC205A0A26BCB8C098ACA6C8E1A94F6DC023BC5B37314539BB4
25959637C0BCE46EC223C08E02CA7A59F4864B176AE297116D9396DCD9134130
8ED6D2C3BFFDB77D17D0D9A6112BF0D1484EA741D84587FD64889F349207CF80
241D991BBD44DEBFDAAF7F5C4D7959D642B442931D89A2D64E9CEFFBF0E3792A
219D478D9646F0FAAA527B45679B55EF87316782B17F7642785A8AC29D45E34F
C40DE4F2C1AB3B8A063D0C75AEF4964669597F39996A34BE0B0F5BFA99D987E8
4774F6B4620EFC8EEDDC45179F7225B6871B570EBE05C9D95D8F947BD62D495A
09910970249C242B5765DE750086910D16FD291CDD155AC5F7D9DCA52F5EE2BC
41E415CBEC45468CB3D4A12AC59FFF274B4E1CA95D4E35208026AB554031EA65
F4862F2CAE2F8B6A8DB26A1287AB3DD941A92AC57A763145CFC13D346DED4E5C
41BA28ED0B2D4F7D552B0B81B93BC82B897C7A9CE0513B4F6ECFB861950F9DE7
3BB4354FC2FD02F3F6970F6306B22213A308C0C5BC567118D0208D3C2EAD0BD5
AD97E55CAC100AE563564FC1ECF7B8F8CB85EB85B1FE1D7C558D596C7D0097FA
31399B2B567240E389590D1BB9D82D6C8D5A1ABF35B55863009C4117B56DF72A
4239D252DACA3195B1DB317AF64FFA94EBA52406037E2B86C88F3E83C98EC71C
B8627476F53A2EB15434DC3DB6BB2FF28A98266D9C2FCEBEBAD94363664E9672
63E234E7803297A2737C39EB7D148F457E28F6963344C2A01874EBC120B8A728
EC0011B6E29D31EC6838AC8D43CDB3A383FE182EE89A49C28C2D635A28DAE4FC
FB1E1F43E822EE2721E984E4FFF861E8489076F78F91B01E61A2DD28EDA14B5F
F1EDCABA25574158A8FBD31182935B9F6428D10FB47BD327A0077445CDB87807
064C538F6BD473E34EF116BDA16A8764526105E28B42CD1736E18B657D33C2B9
836FB5DB6A0D80E2FFF61759AEB9872AF546AB78693C639B5AAB5D013CE6B3FD
BB24387A4C80ED8F1CDA2D49D7672E195B09727629C1A7442BACBDA9EADBAD6D
7267995C72ACC0658E69A52A6FD054AA459B4B19F3D15F6C7215840AB673F35C
1710F0BFA193308D8D8B1A8028B073456088F14B0E5EA8266419754F5108CE1F
B984C9C5B21CF8236154D849C83E34DF5388EF29BDF6223F82F41B3259A86D65
41C9150BDA44AAE85F241E3F8F815FCE7C8E07C2A4258E17D658232EE4ADB9A3
915C53AD8A5BE8C2B56F53C1931C7FC6AAF62759CA93717B7CAFDD08829CE775
C1F5D2A21749E38370B5E52199FCAEFE1B7B1EB81FAB00C2CC543AC02886D400
C91B5F5A7979906E7215776C277A087496601C3069DA27795EFE5F6E32A89FFB
C59649CC759617E70E0C738C05216EB395BDC03A687ED357992CBFBF2CE2833B
62758EB6457D12F88119EEE99BE63E39D377C6085617E5EA9D1991BB213AD960
278AA498A967D890C29577E13DAE3392E4D5B7DF63406467FC8E6A63DE565844
A601FD91D4876A83184F0F93C9A09C65A698455D1EAD58E6E6772D9F4081BCA6
83FFECEE5B7BB6173763C2E6DC19453BC3B926DD8420D84FF4FD6D3263FB9E97
AEFFF80739C334560610DD15BFC537D546370C27D93395AE375A34487E4A6B30
A7396CE6843E57FF9B354CCBEAA563A624148953187801CC5CD18FC784F3E7FF
E8F2DB95A06D8D60239EAADD0D24164AC3F8505DFC7A4862BCB56008CD11273A
EB78CCE20956F1F48D71825B795DCE254FD11835AF4899CD0B44378CD3B235D1
BF759930EA2C17E56C256BC7D144CD4193EBD65A905E50DB692AB573347274AF
0EE46A887C53B1B7D289B8CDAE74EE3FC78C98CDC980D0B50FA873765FAC542A
CF3BC988693C547BA8224B2492EC2C5AF7D2458ED57817947BB237807480A48C
624ADC97DA44BD9FA34500F72B7B38CEB82581732326526D9439800B20C7E958
E434402D7B35FC32C14EF2F6412C5AA2F385A84BB64B27DA576A7BD8350C2860
90358BB952AE750CFD0800ED2EAA1DF4D0E3D7D524C711D490FDB8A2A0FC919E
9FB3C3D2E60EF60E536988E2D43DDECC9A45FB7AF6125AA712EB1370A040B5F0
2569854EB83C9FDBEEF1994B9D5F1DEDEC68DF370CBA39313F827CCEB26C18ED
C22D384218A20D5D321A82DF59D3ABFCD57A0AF41D8F227E899502C57DEBAD12
1103551BFF1CCBB703ECB074D6258A8689F385201488BDE49708FFD98F547943
2E304CCABC3657EFCAFE9DE81CE612656952E4368234CA0EAF8E4C4869BF957D
21ADC7D34BAD59E86A86E2D092690B2F7B00D1057A21052F1A28CE3435385ABD
69FFF5A9A7B1874BC65B1F468763282BC437C15500C357B350D466B4D20EE132
FE168BE61D4FF95136003330697B0E81958D7D8343C840CD6FD8CD9CF8AEE920
CD46525FEB4BE079BFF644AEB6B8B421E14F973B47F318D424859429DCB4ECEC
7DD282636A3D07044AF41D3B0E1CA012094938952793C03F6195A204957D175A
D4DACA36C0C4403C71A36FEECBB23E7D2774D28AA4C90134399ABB496936E2D1
390EE9BB7953614354E1D423DBD40763D57C1CAA5CFD9004575AA9F1AB91191B
962D632E68A4F965AA2AFB5669696B08202B034852C673ECC4B0F41AD0561F50
EAD7CB37952D1A0E9F744FBE8041D01ACF1E5774AEC12CDA3F68A61B0DD5FF9C
A582782EEC425C7498A7B5262D6F945FD708A4B04A9E22F5347DE2BE0EDA3BD8
97156E72985C4E6BD2E7C6A96DC29BDE648CFAA305BE5821CFB8DA9DEC9B6DEE
0EC34592289E850BEB242DD9DFD4EA2DA553162A2DB3EFD07706D953C5BC77E0
1C5CF828ACB0730F46F17A34B04C110AA8EB461973BB8A678026968855B88283
552DD3CD9831BE0D77849EB7E26BB1730B9E3B03982F0297A1FE852B945B10D7
40B1E3F135AF77320C9E19C51CDB28026A4E4AE68BEE4E418C9D3B15FB9ED133
0AB93E9A8D466EDF09418F4680EE25E1D6B414166280459027A3723BC597196C
06D15BED4B3C59B2A879FE85E298C8D2785749531EAD8FE255EE7F9DB99A4CB3
09AFB6D06F28AD54C9C388ED9B5D6E2C50A6E3D62384F9ECC1679B6514C107D7
B3A617CB3E58021E4F7A64B77EA34F99843C388AD5EF92932B85C5468C4C6C87
CC693DEC50289A51CE9FE17DE915993051873ADEE581FAFD1F33A85B6169D479
4B1D739408D98E581783BB9D29E08772D7252FAFA67396872257020B2F818D8B
16068294BEABA5CBD4F32EA6822EBBB7B8C80D080C4EC92A953711D45B6F82B5
A3EA5231FC9E447D59225DAA397A7BB4C82A4F1EA6C7682F1CA89CECD219CE3F
BC1B112A60ECC73EA9E5580A8247A32855A2BC6E718511E79DF1586378263B64
C3CF49083322176397107930FF26A1AB03592F9372AF27DDEAEFF8B80E1A4986
E2BA1FA26A25992856ABBD718CD5D9CCEBBD7DF399D750A9676AA0B493D7D546
F9D46F5873F4E4017972364FD6F21BA9C0D030F2F68C45ED7A97E0AACDAD46C9
6383D2045F576D9C446DD56ECEEA07228F0B0DD146071562748E5CB12B8789A8
A267C1EEA6D458112EF1FA850B7FBE19390E4B63696553E3B2843AC6516F43E6
C280FFB2F22395A029F7CFAEC61194397D4F36743FDA257F5F01E63B272FBD24
A46D9F5365A783EBD5BC945C595C9F9E34CE5F96174DE5818862B948215A40A8
7CFE2F881AC56B2A041FD896A90E8613DFA8EC49288F55CC3673EFA4F5C603AC
C0D73ACF38F23DF776F5F3106A9747916B591EA73B5CF621EFA31491F5716595
A08356F07039761C9513E087DF8DD4B02241AB3B1541899171BC12C8A92EC23A
87C3DE5937D454593751EDD711F21B6DCFE6A1DDF9B89311C8D330F0AD6E3986
5395536828DA89CD961A38CA6FC4604D4C1572EC48939DEFA7221CFBE92AAB64
D2CBF708EDDB1B5DEA54A92603EF47888C851EEDEE0DF9862F2CAE2F8B6A8DB2
6A1287AB3DD941A92AC57B3890F7AFDAD204076F8CCF230961BE8AB89D792D69
00C20979445680372EB8A34D972A13ABA38387B2D6B7121641C68A322971F6A0
B8C2FA887BFD5F3B2C23FCEA752669531DC6F43B3E523AA8313C2A4ED52022C5
D8E514830B60DF7A27D153F5B5FAECE0ECB558341F4CF2448D0B3C4347FB11B9
8441AC98E80F6F1927389F1E876DE7292FCBE0AC3DBD4F5A7BDBDA43B38A384C
2DBF592B09055C222138D2BC8E401B5D986ADA9C7B016BD78E48AB404DD29609
76543E664CD26055E8F13843591A8845A976231FB4599FE5AF10E3513D141C31
DD7109BCA7E9DA9FDFDA70174FD46DA36BEAC07DF24404E050CDB6C3D08ABCCF
393561712972B4422D91CC4843EC97AE75953CE32B661EA9C1B94B2EAC616248
3BFC6A074E90F0395C67544DA793044AA4A7F090ADAE3FB781C6580DBECF4D6A
688A36CFD52E35476EDDFB262C71A697E8B15D380E731E19AEBB6A5817AA9927
4DF957210A401145ADFAC3E74D0C26166D5A49AD37BCFC2E5AE335976E04B58E
74EF3493E1219B298DA01C6F8EB2A860446C717D6BFCDC0BF1F6D7E6A9E866BA
E054F5EE51C829C26F9B88AC114AB5B024F120A3F47243D609E4F31AB7E5EF97
2F4B5509417AACEB544E53701C7819926D034CEB66639B4FD8C5C33392FB562C
26C291810DE035C150F276290101A89AAC22E3BC4257933F986FA58C106E98B2
56E229329FB2A4EE929D0E702360464B8C3411B12176D834E8F8609A034F8C39
7A34C42CB977A3CCD90B96ED207BDDE15712A0ABAFC23501A34BB3758EBD90A3
0EEA3648C55D7E4CF46321A5D3A5906E2108DF5E38FCD9C55FF4147243F04530
18AD53F67C2BA8AB5D4CFE4E217103A3A34AF5F237D9D5639E3D24E6C41BE139
B761890E3FF013C7077A55255230D00D4C62F1885A3465B64BBEB2771D9E8DA7
A93CF05CD8CA02AE363A07636134DA706107BE60290327BB57599BA20E77F724
9C753F46700B475E00D41DC4E9B7035647C141740881202D286AFCC07C9AA589
241760F1E8DC707AD40BD7C35EBF67E940285E59CE23C3733E68667D61D91219
C131EE556BCC9C4374EA6B2CCD2D2E25AA01AE8644621FE81A4307B9643CFDC0
45380001DE68ABE0CCCC8EC2079FE9F74D53DAB010AA035CF2DED35C74E7DA1F
AE6C0E145BFA019E1685D4F8227777FC7DBF49F20E7ADF22AE9612796DEB9138
059A4C12D101264C3A61A645A681C23966AB83B4D93D4FC5D149A2A4D116D45E
95601049B03FFAD238726AEAFA203ACF976EFA4056A749DDC15C7A56AC870774
C97200F0601ACB1C5F7856FA2C8C10F6B6CF80898FAB4BADFEE9ED0300A10545
3FECCD0AF58C15FBDD5D36338CB0ECF40BA236664C8271D5613B831E9FA76E06
A298ABAE1A432799BA82C712F86A496E7C77173A0CDA0BCC46683C239700CA3B
4334D268CD33668C976DEE2B6D22C154BBA43B1368EDD9B86B39E7C589EF576D
93988FC7CBCE8F8EEAD34495BA9D9FE70A9C4D0076715533B2F948ADF90E8319
ED0A6DD33C692252237B500D16D93E9EC5E63A2E348BFE4F69D333F2B0E7F1B5
B2EA1E8C322C161A6A43FBD8DBDF4A3D1C8132F311B70AE10E12E863CF044F38
542BBBA7AC857C81448D5B0F13DCD56D6897F315817CF8D7E20BE994BED0241E
39A771747F79A79D9BFE1996455980D1E064BF860BCFC54F567DB1759D188BE7
86BEA67E104BF78C3E4696F2C87153F6AB7F4B5CB19B83C8063AEC29A780F2F7
19812D43D7807770C927143018447A70FD10F36933B7194FD9F3E4EAF4D145E3
0BD9AF179FD6BC16F15A36FE45E57BD5CE0C7A57713AF055C0A0F972EA179296
CBD0A038B6BA98B6078C9FCA1556AEB8E16DC9E282E127BBE03BEA8601B45356
F811DEEB1B7B1AE9597BF43606F42819D52B47DCCCE8D129A4C05778EA6E4D98
630BD629CEE07E06DF83614E2E11CBA56062181F7F08B749E97F6C22EC02CE64
CE9F9DBE52947CAF49A78FBE0E587CAE703571A817E2A7D1FE8496B76E5248A3
CBA0E861A239212F05BA154584A312D0DC1C199035B90AB72D759A2B9606E8E0
74B6742A1847C136340CD545E0375B4E9E5DCC2E4B1C631F005C08F425117300
1AC87F440F28CD183D707D3F0E3EE831F67EA52C8B139B17C131887B15464E7D
C2E8F4F4B83CFF8B1EA27CF25FC106EA688D6DD2CCDCBDAE0CBF85858B9A3020
F76D668D0F9BE3736BDD36A22E617F623FECC043475A0FD680DDA11ACCCB2ED4
351666F90CC1B2CD008B5941734D404641B17C758B40E87EFB947F6EF31DCC61
CDDFC39A2771876139A151A2A42FDCE3C59C556E5235557DA055A16C35C9E53F
11D28E9670AE565FF9CA7C5AD3F494E59E191AC6EB3D7FF335AD00BDF147756C
177D2FFFAA8396C204EF1D71A8944F2F414D6447F9187E9D4A38B2A861EC78AF
F94209889A98A0FA33D9C337F0D03AC1AD45D28C63996D4F888EB2B5E2F8CD8F
21B4A6E6FCABA356F58CAA4250A681E27E2C4AE26093689327A256571CE9457E
7CE100D81925A8BA85A9363FC5924585E86456B993FF4A3BE22F001742B77917
1454EE86CBBA0E84F9060C62A6DC2F31E78F5416F58A9AD099D024AE7F293E55
725E4B32103B1BD1720380BF14DE59470962F632C45DE55DA2940686D6A0CA26
D77F403C06D65B7394BF1FC7D06D38669637A90BFC57B1A5CA1A11C56146853B
EE469B0815B9832D70B0FBD115BE7EBCE816AB40D2ECDB17E15F2D6D495F5022
34D7275F749AC69C7826A5EF683AD4C7DD7D07CC91527462F8C8B2DB60A318DF
D08CA53AFC3C51A1CD1CEE9A99D86612C4B98534A361D06F65A71B56E069B492
A5B86BC3DF5CC35CC5254CEB2975B401A1E45F30D3BEC68717E95B7597AD7CAC
DA2A6A4E8808BDF0A81FD6D3088895C3A2BAA31C54AC236B499AEFCAF7E22F41
8F3912D9BBD9393247D435B57D760BACFA908B124D93EA0035946C6E3002646F
CD01738AACB9AD52BCD0D4541E7B78F1B38562E968F162D67BB5DB67595670D8
2DE692F527D4E82FADAC6C38292458961C7716671EA29442E2ECB89C6B7E2213
C6BB5DA31DFB05876A64386E82E7D63B158DCB9A85A656F047B16448D99F4990
0ED5C767B148F7712C064081A7EC21FD1F6781D44DC2D13880390F815E3EBB14
C6AD0EA3E77DEADCB28F65FD2288E411F060F4C7F19A7195E992B3C0533C07A2
1CC042E626D5D4F54BEAB6227878AB001472B32BD540B24672F73F99BE8740A8
16C9CC7B59EEB58335FCDB592821C7797C13C4D8F52122B8BBB73BDC31C477A7
F1FC73B49906D8D54905803F4C580F80546B2D997B174FD53FA4041B0FD1A4E0
0A3D3E50EE934563FF9416FD0CE199660202304EFD497D46D286CEEFBB71E57F
70E9EDD479DE21D36FC0D0ADD658D704F64C52A77F03BE07CB52B6321F7F47A8
A716214C94E8BB270EAAA64F832A334E642E512DAA163EA27DFFFCCC05E8B729
072A4681FEEA1658DA75F4B4C8256B927E96167CD0DF22344570CC1FCD2159FE
FF9040255634DF0E134FBF59212F1F589806F5A9586A7469004DE7F40568FC53
8A0EA2E76E1F62790DA67887ABAEDF4BD1282D0003D149F5A121965CFC7B2CB6
0EAD23BF6B79E0791D1D6BAC0AEB0A22D63057F34DC891DE938EBACA06E09D43
8052E27B75787AE81EA98B34D8DAEBF3A0945A9F872338E9CB2776777E42735B
55DF5BACD19EEECF16BB5E61951DAFF2A3E9E9B46B9A5B29A2F79C887386AA90
32575B2891FE7BB08E2B6EF58B741F645C37EE0469468AD648DF75630D5E2991
2CD7E6362E528BF22104F881BFD29B6D9288B1F2C2AA5F487DF644CC73C1C801
444ACD693258A53F98DB0DF475C8D74928A382AB3ACFB615F3EEE17497ACFB30
D8128E3752762CA027DB8E94E120FF8B0AB25D953DAEBE2006856F96C8893AF1
1040EC171DE0B4C6A03AD8C04C59A7A86BF1BD10D50E329B7C8B977EA77A1536
0150DB0B9574A830F9EF505D1E7923E65853DF916BFAFE3341CFA4DBCB1CD87E
F0BB77B3AFAF00AF6D367DB450F76362FD9E1C29E1A3441FA4ECE765A6F5C39C
5A27A1661D9C192421E79A5C0BA3261CA53ECEB88F7A7E15CA638CE642522876
168F0EA388663DB06992292E4EE841E84D80C291C9516038B49F140CA8215BE1
67083176AABDDD13A6A87466BB5C0EB3D639082EBAC87CC6DFC9037D44F95539
FD703058CF63EE8BC26CE436CB8730DD1D4D5EFAF5FA6A47330C63B76DAC7350
7D4CBFD16D0B592E7A24A122ADD6648E60EB632C8CD853C485813E28C4028936
0E6C4A9A5C311A19A7DC6D9AF57EA283EE09BBD61FC4AF42608C6E01E005059D
D79D487A67EA1D9A22A508EEA8494F7BD45B8FD23E763B4BCB3721B6370725CC
F2BA061DE84855EC91939FAAEC6CE3913A5A406A455C4AE0BC827DEAB8405156
892093700FC74B0439374F251F8BEF1154F701F3FBC6B93DE6AB078CED5FB3D4
EC94C08179DF1D96F5D2C921AA36E77E24639C0A32F749D69F2696457E3F4973
4AE7CCE271D9F3A9068D32ACDB476F04E5FFEACBC97E59EEAD9D879E84D3ED2E
8B205541195129A01DF4507E086E6882BF37C3726993CE2E3BB3F4CDEBAC6A13
D24C034B8C32F9E827505B27AD12B9AA2BD0774AB3D74F9B3F6AD5DFF58FFF4C
5A60CCF5DD51CC3DCE518DD210DB1B63A7A01B3042CB34B1025509BC87450B4F
D9E8A02BF03897CDBE4141F92DB575C1BB3E34E3C41615A138B1F4A47067CD85
EF39D00AF0F37FA2971CB3884245656DE07AF6BBAD26B18AEF9346E29BFD4C1B
622E05E600E47023AF8046E8532AF543E46B58881A512884C04147E593985418
0966B29031A79FE3A1CCDAE03EE8CF0E20E7D4ABE410A6E4FF24EBEB2BE5F482
07C4F9F63C4253C69DBF98657427DB751702FF8E7DDF6E039E073F472A7B9D67
DE8F24A9DEED6D18D629AFF0357AA99B59A29F51E2CDA6EB3E3CDD069A8D0083
467D88AC57C62ECEF68A2F10B6125505ACFA3D838E3DCA6843B76B9B3F7CC59B
B58C7B041EF49EBDC17F49804D19359F53090C4C06B1E107B3C700F342975BDB
A5D48902331A045A4349F7CC8A141201E1EE4498B7F8AEBF68A600694C245667
C46D5168844504450958CBC3FD7EF6D0B586320E85CF476D0884C9F12ECC6EA8
BD938949438A3D3510D28B3A9C69805FA48E4A12569BB09A57D05DE428708C44
6C51F462BCBA597AA9B51673BB078799F0A752F3F7DE5CE57978C1583A2D8E5C
8C129AE6DDC88039288277AA477D07BBE62BAE6A38279A4429B293905951355C
4D4A4F65BF1A74708E4D6E1B63D9A188961A3A75B1638F4C12EE82A602331B44
A36FB4C3A6761D48BE17ECA852F8AF6C2441313701F966B13DEC5A5D7DDB8876
A06FFBBBD35F531B45B926FA81193C5C8E44E09048574455C2B8BA0F91B47280
B50C8BDDD550A7161D67A53165065BAD5B108A1E56DF6EDD500A80ED96EFFA1C
F769F4A2A6DD033D6A0D6D86FA2E2E897C1AD9E6A375D7771A6AEDB0E02641A9
75B8DF045D6052894C5915607E3BD7DCA54D8D3A8018F56200BF146F398B9FE8
29119A4ACEED02EBA65E3D0C3619C86C560FF935F7987487ECF74CFA1CC3A21E
456DBA063967BE0389CA1678E09D9D2EBD374BD0E2F84C305A7FD1F4545EBC55
591235C56A4CA40CB555A4BA1A2E7E3B3E9C27CC1079AFF08657A926F5506C19
AD3E8183EF47399892942E5C788F6BE145D99F42153A89FBB6EE8E13657CFDB9
4695D45D8582AE345AFD978844C404A5C631AFD59D6E77D53634C137AE6A6E83
FC0D04CA55D144C67177A203D53DC8B5A858574BFE1E1A7B100DFE9723A8CD49
3F5CA6351ECB3F8570D5DE3EC220C719B63A9693E92399D39EF436CBA30F8EB1
A6E543782DABE3FF83E68C0183FA16E59C55091C22CCF313C333CBF22FD74691
71E3F21E030748189C553B9F62C83765B0149330CF00D91AA88BD8E49C55BC1B
68C60B75E2F3010CC15E8199213E40222126B2F695F1A7E22D58E88CE48EBB53
9286CF5B19FC11B97671068172F99A7F085D9DEC3446B57146811EDD07010911
E6A7AC69B91B15400EAC8A99506C91841E8D1718EC76B4126B1DEFC3C980F9B6
85AAD8798D1193419E3A48D571DEE01E6C1591107758A825039FC672CD702255
BE42C0D46909A3D892F83A2264C4FEBFD78F57F16B0103D116CFBD51821884D5
26E8D6153FE5850ADC6A87A8ECF7BC89E2A66A0139EDB6BC86825BC9B0AAE1BE
C4ECFEB38C54549BF4C27D2C9F792B326C1DFCF240C9426E90F57925E6B90462
A69B5B7B8D3A99D320E3896277F31BFE9A0EB3B3C4C67743D3F1EA2F17601299
73548FA2D9F932CF0A4DC5BF1285F890D57422B6625469A79F286B1B6AF89EFD
59ACF8A7D257BB6C90E7CD54B4B4C1D5C999577B904ABE46C34F53AD927E1F4C
AEF6DB6D2BE36A796C72F8CC40A6E2310524A7D4AC3D9A6B746B400E29AB5ED1
71928761FD70A787E72F4615317C30E53627A041FB357CC41ABF6EE382C902AF
1A86C6489D50E804B90053F3A32166361D08A9FA7CB257626DFBE7C5BA464B75
AAB9F44B7926FACAAF72D74A4B649397C4C2ECC5DC9EA0984246FBCE4F85E31D
EE9E5C810306FCCC44ABEBA6E6CB975347C8939B30B6F69EEDDECF63DF525BE1
F2DC4423F5343F75C984BE7998B64260F3E65D0A734E7B87A3F3B07463632223
58BAC6B366B8377EA44AA962C408454303CCC5D900475B8C533E71308560194C
2F2259
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600
(/home/fenarius/Travail/Cours/NSIPremiere/docs/pdf/C4/dichotomie.dvi)
@start /Fa 137[25 1[25 7[21 2[13 3[23 3[25 18[34 78[{
 enclmec ReEncodeFont }7 41.511 /LMRomanCaps10-Regular
rf /Fb 22[20 111[20 5[17 15 2[22 23 1[11 2[11 3[20 23
20 1[21 18[31 1[24 5[25 4[29 7[22 22 5[22 22 22 22 12
15 3[17 17 40[{ enclmec ReEncodeFont }26 41.511 /LMSans8-Regular
rf /Fc 130[37 37 37 37 122[{ enclmmathex ReEncodeFont }4
83.022 /LMMathExtension10-Regular rf /Fd 160[45 60[34
34[{ enclmmathsy ReEncodeFont }2 58.1154 /LMMathSymbols7-Regular
rf /Fe 196[23 59[{ enclmmathit ReEncodeFont }1 83.022
/LMMathItalic10-Regular rf /Ff 162[23 1[23 31[23 1[42
42 42 1[42 42 42 42 42 49[{ enclmrm ReEncodeFont }11
83.022 /LMRoman10-Regular rf /Fg 31[40 106[43 30 32 28
2[42 43 66 3[20 43 2[37 43 37 1[40 16[53 12[53 4[65 2[23
23 1[42 42 1[42 42 42 42 42 49[{ enclmec ReEncodeFont }26
83.022 /LMSans10-Regular rf /Fh 139[42 4[59 1[93 3[28
60 2[52 1[52 30[84 68[{ enclmec ReEncodeFont }8 119.552
/LMSans12-Regular rf /Fi 188[84 14[66 52[{ enclmec ReEncodeFont }2
119.552 /LMSans10-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525 -608 a
SDict begin H.S end
 -525 -608
a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -525 -608 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 1345 1579 a

 1345 1579 a 1345
1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395
1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461 1529 a 1461
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1511 1529 a
SDict begin H.R end
 1511
1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1511 1591 a 1523 1579 a

 1523 1579
a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564 1529 a 1564
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1606 1529 a
SDict begin H.R end
 1606
1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1606 1591 a 1606 1591 a
SDict begin H.S end
 1606 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1647 1591 a 1647
1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1689
1591 a 1701 1579 a

 1701 1579 a 1701 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94
TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1701 1591 a
SDict begin H.S end
 1701
1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742 1591 a 1742
1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784
1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825 1529 a 1825
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1867 1529 a
SDict begin H.R end
 1867
1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1867 1591 a 1878 1579 a

 1878 1579
a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920 1529 a 1920
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1961 1529 a
SDict begin H.R end
 1961
1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961 1591 a
SDict begin H.S end
 1961 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2003 1591 a 2003
1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2044
1591 a 2056 1579 a

 2056 1579 a 2056 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591
a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131
1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222 1529 a 2222
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579 a 2234 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292 1529 a 2292
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2342 1529 a
SDict begin H.R end
 2342
1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342 1591 a
SDict begin H.S end
 2342 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400 1591 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray Black 0
TeXcolorgray -517 -517 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517
-517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517 -517
a -517 -517 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -517 -517 a -517
-517 a
SDict begin H.S end
 -517 -517 a -517 -517 a
SDict begin 12 H.A end
 -517 -517 a -517 -517
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -517 -517 a -517 -517 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with Beamer class)/Author (F. Nativel)/Keywords () /DOCINFO
pdfmark end
 -517 -517 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb
-600 -287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fi(C4)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fh(Dichotomie)p 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -517 322 a Fg(P)n(our)27 b(rechercher)h(si)p
0 0 1 TeXcolorrgb 28 w(28)p 0 TeXcolorgray 26 w(est)g(dans)f
Ff([14)p Fe(;)14 b Ff(15)p Fe(;)g Ff(17)p Fe(;)g Ff(22)p
Fe(;)g Ff(23)p Fe(;)g Ff(25)p Fe(;)g Ff(2)o(9)p Fe(;)g
Ff(3)o(4)p Fe(;)g Ff(3)o(8])21 b Fg(:)p 0 TeXcolorgray
0 TeXcolorgray 367 460 a Ff([)p 1 0 0 TeXcolorrgb 410
391 a Fd(_)p 0 TeXcolorgray 390 460 a Ff(14;)14 b(15;)g(17;)g(22;)367
516 y Fc(|)p 404 516 170 10 v 170 w({z)p 648 516 V 170
w(})p 1 0 0 TeXcolorrgb 871 460 a Ff(23)p 0 TeXcolorgray
895 514 a Fd(")954 460 y Ff(;)g(25;)g(29;)g(34;)p 1 0 0
TeXcolorrgb 1369 391 a Fd(_)p 0 TeXcolorgray 1350 460
a Ff(38)o(])991 516 y Fc(|)p 1028 516 159 10 v 159 w({z)p
1261 516 V 159 w(})319 665 y Fg(Comme)p 0 0 1 TeXcolorrgb
27 w(28)p 0 TeXcolorgray(>)p 1 0 0 TeXcolorrgb(23)p 0
TeXcolorgray 26 w(:)27 b(chercher)h(\340)g(droite)306
786 y Ff([)p 0.75 TeXcolorgray 0.75 TeXcolorgray 329
821 687 115 v 0.75 TeXcolorgray 0 TeXcolorgray 25 w Fg(14)13
b(;)28 b(15)12 b(;)28 b(17)13 b(;)28 b(22)e(23)p 0.75
TeXcolorgray 0 TeXcolorgray 24 w Ff(;)p 1 0 0 TeXcolorrgb
1071 717 a Fd(_)p 0 TeXcolorgray 1052 786 a Ff(25)o(;)14
b(29;)1052 837 y Fc(|)p 1089 837 39 10 v 39 w({z)p 1202
837 V 39 w(})1292 786 y Ff(34;)p 1 0 0 TeXcolorrgb 1431
717 a Fd(_)p 0 TeXcolorgray 1412 786 a Ff(38)o(])1292
842 y Fc(|)p 1329 842 V 39 w({z)p 1442 842 V 39 w(})p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a Fb(F.)i Fa(Na)m(tivel)29
b Fb(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fb(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(1)7 b(/)h(1)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
