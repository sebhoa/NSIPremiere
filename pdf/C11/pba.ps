%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/pba.dvi
%%CreationDate: Fri Jul 30 07:39:38 2021
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: LMSans10-Bold LMSans12-Regular FontAwesome5Free-Solid
%%+ LMSans10-Regular LMMathItalic10-Regular LMRoman7-Regular
%%+ LMMathSymbols10-Regular LMSans8-Regular LMRomanCaps10-Regular
%%+ FontAwesome5Free-Regular CMSY10 Dingbats
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/pba.ps
%+ /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/pba.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.07.30:1139
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: fa5free1.enc 0 0
/fa5free1 [
/dice-two
/digital-tachograph
/directions
/divide
/dizzy
/dna
/dog
/dollar-sign
/dolly
/dolly-flatbed
/donate
/door-closed
/door-open
/dot-circle
/dove
/download
/drafting-compass
/dragon
/draw-polygon
/drum
/drum-steelpan
/drumstick-bite
/dumbbell
/dumpster
/dumpster-fire
/dungeon
/edit
/egg
/eject
/ellipsis-h
/ellipsis-v
/envelope
/envelope-open
/envelope-open-text
/envelope-square
/equals
/eraser
/ethernet
/euro-sign
/exchange-alt
/exclamation
/exclamation-circle
/exclamation-triangle
/expand
/expand-alt
/expand-arrows-alt
/external-link-alt
/external-link-square-alt
/eye
/eye-dropper
/eye-slash
/fan
/fast-backward
/fast-forward
/fax
/feather
/feather-alt
/female
/fighter-jet
/file
/file-alt
/file-archive
/file-audio
/file-code
/file-contract
/file-csv
/file-download
/file-excel
/file-export
/file-image
/file-import
/file-invoice
/file-invoice-dollar
/file-medical
/file-medical-alt
/file-pdf
/file-powerpoint
/file-prescription
/file-signature
/file-upload
/file-video
/file-word
/fill
/fill-drip
/film
/filter
/fingerprint
/fire
/fire-alt
/fire-extinguisher
/first-aid
/fish
/fist-raised
/flag
/flag-checkered
/flag-usa
/flask
/flushed
/folder
/folder-minus
/folder-open
/folder-plus
/font
/football-ball
/forward
/frog
/frown
/frown-open
/funnel-dollar
/futbol
/gamepad
/gas-pump
/gavel
/gem
/genderless
/ghost
/gift
/gifts
/glass-cheers
/glasses
/glass-martini
/glass-martini-alt
/glass-whiskey
/globe
/globe-africa
/globe-americas
/globe-asia
/globe-europe
/golf-ball
/gopuram
/graduation-cap
/greater-than
/greater-than-equal
/grimace
/grin
/grin-alt
/grin-beam
/grin-beam-sweat
/grin-hearts
/grin-squint
/grin-squint-tears
/grin-stars
/grin-tears
/grin-tongue
/grin-tongue-squint
/grin-tongue-wink
/grin-wink
/grip-horizontal
/grip-lines
/grip-lines-vertical
/grip-vertical
/guitar
/hamburger
/hammer
/hamsa
/hand-holding
/hand-holding-heart
/hand-holding-usd
/hand-lizard
/hand-middle-finger
/hand-paper
/hand-peace
/hand-point-down
/hand-pointer
/hand-point-left
/hand-point-right
/hand-point-up
/hand-rock
/hands
/hand-scissors
/handshake
/hands-helping
/hand-spock
/hanukiah
/hard-hat
/hashtag
/hat-cowboy
/hat-cowboy-side
/hat-wizard
/hdd
/heading
/headphones
/headphones-alt
/headset
/heart
/heartbeat
/heart-broken
/helicopter
/highlighter
/hiking
/hippo
/history
/hockey-puck
/holly-berry
/home
/horse
/horse-head
/hospital
/hospital-alt
/hospital-symbol
/hotdog
/hotel
/hot-tub
/hourglass
/hourglass-end
/hourglass-half
/hourglass-start
/house-damage
/hryvnia
/h-square
/ice-cream
/icicles
/icons
/i-cursor
/id-badge
/id-card
/id-card-alt
/igloo
/image
/images
/inbox
/indent
/industry
/infinity
/info
/info-circle
/italic
/jedi
/joint
/journal-whills
/kaaba
/key
/keyboard
/khanda
/kiss
/kiss-beam
/kiss-wink-heart
/kiwi-bird
/landmark
/language
/laptop
/laptop-code
/laptop-medical
/laugh
/laugh-beam
/laugh-squint
/laugh-wink
/layer-group
/leaf
/lemon
/less-than
/less-than-equal
/level-down-alt
/level-up-alt
/life-ring
/lightbulb
] def

%%EndProcSet
%%BeginProcSet: fa5free2.enc 0 0
/fa5free2 [
/link
/lira-sign
/list
/list-alt
/list-ol
/list-ul
/location-arrow
/lock
/lock-open
/long-arrow-alt-down
/long-arrow-alt-left
/long-arrow-alt-right
/long-arrow-alt-up
/low-vision
/luggage-cart
/magic
/magnet
/mail-bulk
/male
/map
/map-marked
/map-marked-alt
/map-marker
/map-marker-alt
/map-pin
/map-signs
/marker
/mars
/mars-double
/mars-stroke
/mars-stroke-h
/mars-stroke-v
/mask
/medal
/medkit
/meh
/meh-blank
/meh-rolling-eyes
/memory
/menorah
/mercury
/meteor
/microchip
/microphone
/microphone-alt
/microphone-alt-slash
/microphone-slash
/microscope
/minus
/minus-circle
/minus-square
/mitten
/mobile
/mobile-alt
/money-bill
/money-bill-alt
/money-bill-wave
/money-bill-wave-alt
/money-check
/money-check-alt
/monument
/moon
/mortar-pestle
/mosque
/motorcycle
/mountain
/mouse
/mouse-pointer
/mug-hot
/music
/network-wired
/neuter
/newspaper
/not-equal
/notes-medical
/object-group
/object-ungroup
/oil-can
/om
/otter
/outdent
/pager
/paint-brush
/paint-roller
/palette
/pallet
/paperclip
/paper-plane
/parachute-box
/paragraph
/parking
/passport
/pastafarianism
/paste
/pause
/pause-circle
/paw
/peace
/pen
/pen-alt
/pencil-alt
/pencil-ruler
/pen-fancy
/pen-nib
/pen-square
/people-carry
/pepper-hot
/percent
/percentage
/person-booth
/phone
/phone-alt
/phone-slash
/phone-square
/phone-square-alt
/phone-volume
/photo-video
/piggy-bank
/pills
/pizza-slice
/place-of-worship
/plane
/plane-arrival
/plane-departure
/play
/play-circle
/plug
/plus
/plus-circle
/plus-square
/podcast
/poll
/poll-h
/poo
/poop
/poo-storm
/portrait
/pound-sign
/power-off
/pray
/praying-hands
/prescription
/prescription-bottle
/prescription-bottle-alt
/print
/procedures
/project-diagram
/puzzle-piece
/qrcode
/question
/question-circle
/quidditch
/quote-left
/quote-right
/quran
/radiation
/radiation-alt
/rainbow
/random
/receipt
/record-vinyl
/recycle
/redo
/redo-alt
/registered
/remove-format
/reply
/reply-all
/republican
/restroom
/retweet
/ribbon
/ring
/road
/robot
/rocket
/route
/rss
/rss-square
/ruble-sign
/ruler
/ruler-combined
/ruler-horizontal
/ruler-vertical
/running
/rupee-sign
/sad-cry
/sad-tear
/satellite
/satellite-dish
/save
/school
/screwdriver
/scroll
/sd-card
/search
/search-dollar
/search-location
/search-minus
/search-plus
/seedling
/server
/shapes
/share
/share-alt
/share-alt-square
/share-square
/shekel-sign
/shield-alt
/ship
/shipping-fast
/shoe-prints
/shopping-bag
/shopping-basket
/shopping-cart
/shower
/shuttle-van
/sign
/signal
/signature
/sign-in-alt
/sign-language
/sign-out-alt
/sim-card
/sitemap
/skating
/skiing
/skiing-nordic
/skull
/skull-crossbones
/slash
/sleigh
/sliders-h
/smile
/smile-beam
/smile-wink
/smog
/smoking
/smoking-ban
/sms
/snowboarding
/snowflake
/snowman
/snowplow
/socks
/solar-panel
/sort
/sort-alpha-down
/sort-alpha-down-alt
/sort-alpha-up
/sort-alpha-up-alt
/sort-amount-down
/sort-amount-down-alt
/sort-amount-up
/sort-amount-up-alt
/sort-down
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: fa5free0.enc 0 0
/fa5free0 [
/ad
/address-book
/address-card
/adjust
/air-freshener
/align-center
/align-justify
/align-left
/align-right
/allergies
/ambulance
/american-sign-language-interpreting
/anchor
/angle-double-down
/angle-double-left
/angle-double-right
/angle-double-up
/angle-down
/angle-left
/angle-right
/angle-up
/angry
/ankh
/apple-alt
/archive
/archway
/arrow-alt-circle-down
/arrow-alt-circle-left
/arrow-alt-circle-right
/arrow-alt-circle-up
/arrow-circle-down
/arrow-circle-left
/arrow-circle-right
/arrow-circle-up
/arrow-down
/arrow-left
/arrow-right
/arrows-alt
/arrows-alt-h
/arrows-alt-v
/arrow-up
/assistive-listening-systems
/asterisk
/at
/atlas
/atom
/audio-description
/award
/baby
/baby-carriage
/backspace
/backward
/bacon
/bahai
/balance-scale
/balance-scale-left
/balance-scale-right
/ban
/band-aid
/barcode
/bars
/baseball-ball
/basketball-ball
/bath
/battery-empty
/battery-full
/battery-half
/battery-quarter
/battery-three-quarters
/bed
/beer
/bell
/bell-slash
/bezier-curve
/bible
/bicycle
/biking
/binoculars
/biohazard
/birthday-cake
/blender
/blender-phone
/blind
/blog
/bold
/bolt
/bomb
/bone
/bong
/book
/book-dead
/bookmark
/book-medical
/book-open
/book-reader
/border-all
/border-none
/border-style
/bowling-ball
/box
/boxes
/box-open
/braille
/brain
/bread-slice
/briefcase
/briefcase-medical
/broadcast-tower
/broom
/brush
/bug
/building
/bullhorn
/bullseye
/burn
/bus
/bus-alt
/business-time
/calculator
/calendar
/calendar-alt
/calendar-check
/calendar-day
/calendar-minus
/calendar-plus
/calendar-times
/calendar-week
/camera
/camera-retro
/campground
/candy-cane
/cannabis
/capsules
/car
/car-alt
/caravan
/car-battery
/car-crash
/caret-down
/caret-left
/caret-right
/caret-square-down
/caret-square-left
/caret-square-right
/caret-square-up
/caret-up
/carrot
/car-side
/cart-arrow-down
/cart-plus
/cash-register
/cat
/certificate
/chair
/chalkboard
/chalkboard-teacher
/charging-station
/chart-area
/chart-bar
/chart-line
/chart-pie
/check
/check-circle
/check-double
/check-square
/cheese
/chess
/chess-bishop
/chess-board
/chess-king
/chess-knight
/chess-pawn
/chess-queen
/chess-rook
/chevron-circle-down
/chevron-circle-left
/chevron-circle-right
/chevron-circle-up
/chevron-down
/chevron-left
/chevron-right
/chevron-up
/child
/church
/circle
/circle-notch
/city
/clinic-medical
/clipboard
/clipboard-check
/clipboard-list
/clock
/clone
/closed-captioning
/cloud
/cloud-download-alt
/cloud-meatball
/cloud-moon
/cloud-moon-rain
/cloud-rain
/cloud-showers-heavy
/cloud-sun
/cloud-sun-rain
/cloud-upload-alt
/cocktail
/code
/code-branch
/coffee
/cog
/cogs
/coins
/columns
/comment
/comment-alt
/comment-dollar
/comment-dots
/comment-medical
/comments
/comments-dollar
/comment-slash
/compact-disc
/compass
/compress
/compress-alt
/compress-arrows-alt
/concierge-bell
/cookie
/cookie-bite
/copy
/copyright
/couch
/credit-card
/crop
/crop-alt
/cross
/crosshairs
/crow
/crown
/crutch
/cube
/cubes
/cut
/database
/deaf
/democrat
/desktop
/dharmachakra
/diagnoses
/dice
/dice-d20
/dice-d6
/dice-five
/dice-four
/dice-one
/dice-six
/dice-three
] def

%%EndProcSet
%%BeginProcSet: fa5free3.enc 0 0
/fa5free3 [
/sort-numeric-down
/sort-numeric-down-alt
/sort-numeric-up
/sort-numeric-up-alt
/sort-up
/spa
/space-shuttle
/spell-check
/spider
/spinner
/splotch
/spray-can
/square
/square-full
/square-root-alt
/stamp
/star
/star-and-crescent
/star-half
/star-half-alt
/star-of-david
/star-of-life
/step-backward
/step-forward
/stethoscope
/sticky-note
/stop
/stop-circle
/stopwatch
/store
/store-alt
/stream
/street-view
/strikethrough
/stroopwafel
/subscript
/subway
/suitcase
/suitcase-rolling
/sun
/superscript
/surprise
/swatchbook
/swimmer
/swimming-pool
/synagogue
/sync
/sync-alt
/syringe
/table
/tablet
/tablet-alt
/table-tennis
/tablets
/tachometer-alt
/tag
/tags
/tape
/tasks
/taxi
/teeth
/teeth-open
/temperature-high
/temperature-low
/tenge
/terminal
/text-height
/text-width
/th
/theater-masks
/thermometer
/thermometer-empty
/thermometer-full
/thermometer-half
/thermometer-quarter
/thermometer-three-quarters
/th-large
/th-list
/thumbs-down
/thumbs-up
/thumbtack
/ticket-alt
/times
/times-circle
/tint
/tint-slash
/tired
/toggle-off
/toggle-on
/toilet
/toilet-paper
/toolbox
/tools
/tooth
/torah
/torii-gate
/tractor
/trademark
/traffic-light
/trailer
/train
/tram
/transgender
/transgender-alt
/trash
/trash-alt
/trash-restore
/trash-restore-alt
/tree
/trophy
/truck
/truck-loading
/truck-monster
/truck-moving
/truck-pickup
/tshirt
/tty
/tv
/umbrella
/umbrella-beach
/underline
/undo
/undo-alt
/universal-access
/university
/unlink
/unlock
/unlock-alt
/upload
/user
/user-alt
/user-alt-slash
/user-astronaut
/user-check
/user-circle
/user-clock
/user-cog
/user-edit
/user-friends
/user-graduate
/user-injured
/user-lock
/user-md
/user-minus
/user-ninja
/user-nurse
/user-plus
/users
/users-cog
/user-secret
/user-shield
/user-slash
/user-tag
/user-tie
/user-times
/utensils
/utensil-spoon
/vector-square
/venus
/venus-double
/venus-mars
/vial
/vials
/video
/video-slash
/vihara
/voicemail
/volleyball-ball
/volume-down
/volume-mute
/volume-off
/volume-up
/vote-yea
/vr-cardboard
/walking
/wallet
/warehouse
/water
/wave-square
/weight
/weight-hanging
/wheelchair
/wifi
/wind
/window-close
/window-maximize
/window-minimize
/window-restore
/wine-bottle
/wine-glass
/wine-glass-alt
/won-sign
/wrench
/x-ray
/yen-sign
/yin-yang
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def

 /pgf16{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf17{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf18{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf19{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf20{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf21{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf22{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash
3.00003 0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto
-1.65689 3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689
-1.65689 -3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689
3.00003 0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc
pgfstr grestore newpath  grestore} bind def

 /pgf23{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 192 /a140 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023877B96EA2AE6E5E42682E9F4BABD109F039E3
CDCC6B0F9404DA157F91B61905B34C39BD0543872FEBA04FADF1DD613E1E9822
560851385E512B3754A099D21B332D2C9547EEE2B94EBC03B2D954DE0D64D28B
5C0305C968BF1EA14529BE16F9E7F147B08D71B9332ABB7B5EF1B8B60A8D19F5
22B497164EA1A20E17E9B45FE94A09D54FA74709C83B0824F96BC972F4FD728C
1C01ABF68CBC18F27BA5F35FF436A222112483C009C5F28A6210F50CBBD24E7A
25DA207E57EAD2A8E259BB81316A46B899E51E71DCA5150C8C69AD2DBF2F550B
97363BE865CC688F97C0966148ADE8F1040B961FC81EBFE1E10404D957D32EC0
E5C10A1D8C8DC24ECFBA232BCD82723E827ABEC71BEB57F944F1A1C726FF9FEC
E62D8A1C6BA486B696F1ECCC7813BEF75C55E8512D7CC1402F9FB3887B36BAC2
EA34EB9360525F6F3BCC8BDEDFF7D9EA11A625246A11826200EB8BFC8F9A8EF5
3FD6D7953EA1A55FAECF1A219E47A52FFE24E3531FA8FCB1710F35801F37CF23
03A86D7DEB879892766FAFCBC690D867194E1466F494C0D4A9B195FFFD4B8C3F
65BC7E3DC1279C77E7B0C631381C28DC8BC182C22F3A7C04
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: FontAwesome5Free-Solid
%!PS-AdobeFont-1.0: FontAwesome5Free-Solid 330.752 (Font Awesome version: 5.12.0)
9 dict begin
/FontName /FontAwesome5Free-Solid def
/FontInfo 9 dict dup begin
/version (330.752 \(Font Awesome version: 5.12.0\)) readonly def
/Notice (Copyright \(c\) Font Awesome) readonly def
/FullName (Font Awesome 5 Free Solid) readonly def
/FamilyName (Font Awesome 5 Free Solid) readonly def
/Weight (Solid) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -97.6562 def
/UnderlineThickness 48.8281 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-55 -127 7797 876} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB42825F1EE6A16966D49AEE9CA4A40B7A
AF5854776BA4F7EEE4EF09BE48B41B049B631B57F9DEB79BA1DE47B7C025B39F
3CC77C4FBB15C9BF3A39C8D400BD7D15BB1412AE1918DD7B05716B41DA299FCF
AD90249E2810CCCF2846402BA975F3C22EB71AAFC24EA5C6A66D5FB86DEA0D82
A1117C000C5353B2F32B7DF144A69030C8EE0F6971BA336C4C33911E390912FE
FBA5EB88AA67FBD2C8AF8DA2B0A0CCA150F57B850632A58E909DF61D04D76B71
0786C246898D6969AF821D21463B5D770D11D97904922845C026679D889AF774
20B847060B20FA78E265C44C994B20AA9A4749F76E07EFD1CF7C2AB3A433EE2D
A07495342763E2716751093DDA622377EB0C70DF28FCF95DABFAB8884E12E40C
1235BEB723F81A20EAE69E8CE0BE778A97C9D5C1AF3170E6855510853C8C4FCF
CF0D2CE4C6C0710B9584B928C9AC5C465C74B9178A153A434B3F87F01214A69D
4429BFFD0A8DA733179F25B6C15391579ECF0E8725DCF53BCAB814DD38EC0F29
8C225618FA305C623812A1D694E883AF184A0ECF699C9308B3F28A3723530EBB
FAA9CD28A1829FEA371AEA5F8B54D11BF76E15C00CA32DF229892701A4475A6A
734F01EA4438C7E68F17ED1D48D80DA35279189F2FB603FE8F79BC05000007A7
084F12572B7EA09BEBF580B44E76F45650E9E93430AB22AD4292B47B5FB861B8
C20EA254C175EFF7C7CE33228E608FEEE1D9CF299CBA5F727FB11FCD01180520
E9C7510457A9256815BE73930FA7186312B1F1ACF157C44C9BEAE51EBB523877
0086CECA8C6FCFEAE9C0F8156A3FE9B991EDC0CB72C5852F7169A8B98FB8F29B
5A58DBBC136A1E8D1B1A79929E88BCD3886D355A191967C791EADB7A9700D0EF
F276C337E561338D7D02F664A69A127D56BDD67D63C1DF32A80D732FE753B297
08EDF2A1CC7E4617933B49C02A92BD986BB13E68435FB97E81DB37BF578B3AF8
2417947930EEB8A75189696D79615D68BC4BA9238AB9428860AD23E7D8219844
0C741FB72F30CF733FA111B43F33E1D26F464F5999FEBC0888B5E4D8B0E07567
9D90551CDBEB05F9A30F43F45B5210A3007E4D03DD5E05805D3AE898FD752841
54198CDB67A5AABDF7C9F2BE384A98DD9AFFF4E8CCC98FCF480830FA681BF215
3CB11265AB89ADCF53BE360B58DC3621D580F2C7227882B61D155B79B2B43266
4329231C7269A3F30930859BF0A4D5D2CEBA01BB4059A587C6C785E009F19C15
CA40C512E9F5030743BEDD5606CB1C540D829DAF394E13CD4A008EE7F9F1CFFA
95B5C8109B0A8685FDF03A978954D1325F66AF1265829E29C353B84A33388574
B4F73E25F490B88AC3AB2F544988D5CD8459AF56C77885DB50B673602CA70AED
778E4E15F24CEE13A730F1E29D1ED0B74B2F8486AF729E2F0490DD6E2F55F3A7
B4ED7133B02DE4581066B984FE6EDF491454E6CCE895A8A75E0F8E0AF33A7359
E5EB03B1EC74E1885C81F49D2E77939ABD2C66725FA5415CD9265AACA265041C
E228BAB08EDACF4E0AB86D340F5C6FADC65653CBBB25190AB307D29C6FD44AD7
341A399CEBC01967EA5C42552AD19A3DD1DD1BAFCFCA4777528AF5E958E68450
4F95880E2E5594A3FB0D0624D7AFF119981EECFEECA15866AF76B47D283F238B
9D4E9AE5F8549417968001184CE886C1D6AA8396C25E0840EA447F0C2586B021
81A4ED566DE0666A9AB45924378D008A62C2E63BF5394EC9B051E293C9224645
DE121EBBF97E9E1BD85868308FC8186F9BEDDC40357AE239B4F02F00158B87DB
8F9947BDF037FE0532D15D61B38C2EA75CBE50D3330B105E913A071443887BCD
CD7448FB9E03CBA4D711EC4C4CEA1E80D648BA01D3BB41BE8BC9482B0C2A4653
748459A474EE5871E4182A2C14E0D2049F6BCA02129D8B1EA98379E7E8BAF0DB
C2115FC8DE189423A6CF96F3B624FD11C23CA4DAF3293F3FC3B9419FDD02BFE2
01E26AD64F64C6845E0CE09E122DF40D6908B9B6F873A6B8359FD44A37AD1EAC
E2F4E3DC35B12328553CD5FDB59309C317BF49D9A819AD1ACA97D248D8E02DBE
D74AF4F10C41DFE0D90932FADC7ED477550A79F5303533BAC12475EF8D0D1AC2
13E5D5A8A57901118F637BCCBD9AF21516578DCFBF8165AC8C9AA3A601A52A91
EA1B72EF8D4858694D1A5C7C04D68947034889EBB9BC0F6F720F1EAE6D8A8ABE
296B0861C666C1369BDC7BBA46457D3A99A66D975E7F5D1C6DD77CF0A057BF12
7F001A096FC339820E946F636CA2F5D39E4EAC88B2148C5219B1616C53425AF1
1E4A708EC4C3A7928EAB51AF51978FAFFFB2FCCBB6ECBFF8252554B3FDEE05DF
74CA5CFD7B1FB53CFE9E0DCDDCEB8C07F41D8185B10E4287CDBEC9521030B0A7
E706F1865B67C03D749F36AE2F831F159E38017AE2A5D914C676AD9942323C37
95B25E6B0144E78BA5B588222CFF13A2EA3BED7266F79A1074E5DCDBD3BD0AF0
9E1C44241438B8F9FEF51A803D8B74307A3ABC05066687C6800FA1DF62767E92
83811DD10C7A8F6ABFEA1995C317DE4196273C3392DBD9D660030FEECBA7702C
F79AE7F1045B750E199689646466844787CE5559A86835FA39CAD7468662E6FC
B83F6AF669B77400B0511D4510ECD44638EF26170432230E05C2C3DBA6F004F5
F628A1EB008CCAAF16C1B7B759F2A1D0269E4365D98318B0590C62BC52EF9840
999A057D495B8E319EE95C7BD3610F8627E11056A3771AA7458DFDC0443B9054
FE4029D89CE1B04B586869A9C6122D3921EF880C85269AB7635AEC1B6ED1AB71
EC2D8EEFE718975C8F5AD9D1310F764975FD37AB2C30068F8A47BF90C52CB9E3
5496507D403C747874F039959F2B78994EE9090692D1A94BEF2699D17D1F332F
3E93B264B70F73A7340CA8D266EE7799C16443AC8BD2A467493362041E0E3533
26D45985A13FF7B254242BC110A7BC98A9C4645A1BC4EDD802F0639789249100
CE1C557C43EDE5F78AD7D2E36F1107FD8520E12376757500671332190D93976C
C114BCBB0F6B6CD17EC199F588E24327FAF21F0DB8BF26E6808F50DEE9104E34
5D0489346C5A8665A33DCD4401036768758EB25A6609D0088FE1BB01599D8E7B
2FC035268BBA5D1A29EC35C44B1677FECA73E372EF928ED8B67077EC4C55274C
CA4118EFFBE7DD150F7F44E95AD1409C79838CD93764A09AF78BCB2EB79D6AA8
64B7CD3321789D289486659947AB54B4B63DAE783754FCC5FBA74AFA3B0FD4BF
8EBD939A31AC63434F225EF6C99022E39B85A30905EE0EF94F3AFD23DE7299E6
F276EDC265AD00768F3D384F17C236D4555C8D4AB34CC356D96CC4C3ADC1DDE1
7CFC0D7F17C55984B8FCFC72FD93755E84060C2D0E434BF17BCEB50A19790442
09EDC8A058CD39B5CA2E94FB163B4D769E88853C0500373E41EED4EF76557E4E
37BFB3F46B102B250350DBC55F85C82DBF62927C152BE84C76DEBFDA3D795F4F
790A61617F84CA29117B37470E41712F26DEF812CEF41D9D8691532EB72D0E1D
9EF04F8DBF54CA6D66609A0C7B2FCD14BE8F36414462D75F21B572C52EC09EC6
3E7DDCEC847CC6D3EFA2D7E270D930B74376BB0BA82AF94210D51D8204B74FB7
EE69654ACE4577EA85945CFA37EFF0DC5E7BCDAC54CB217B4836CB34BD71DC33
DFD45D383D10779643FF5D0F34B27AF365FC93D94196498468DF8F322E83462B
651C3EDB9C6EED0DFDEBF1BC061ABC48ACA527396B848EA31010DD1995CC4D17
9B4280FBF081B3B3ECECFF24FBA611612ABA11799B791BE95C8905F1CD1B36DE
4FA2573A8587834B9E7004B5F9D768E0AEB93EBE828619524A495E471F42AF6F
82571AE77D7817392A34217C36626D61F75CEE8A5D7C283DFC0BDEACC56560D2
FBBDF51BE7935248B80D4C72A7D75B511E0073A6BF271D440B7F0C63983E4228
92727C7ADA9E27436AA13D9D59E6CB9826C28125E4F9767C3BCC9830F846A2A7
435D5EBE8C5328444CD5B411CBAE3F63171DE32E73D8406A0FEBA498C4E7CBE9
C60B9180545CD51AA4366A849927DE7B83C38F9742E2395538EE29F0A18888C8
FCF0821DE468042FA2FE0C58AD907E93996D94F11F35CDCB7CD14973B7C807BB
1A6CA60883A1D74C3D5F8B26698ECEF7F9B307A9B85FFC3544A0A4093DA00841
0B68FC6B485775BFEC07AA0088CB2D95B1DC37E2437B7A0B13F8BE2FC74B7A24
071B1DB55D67609244BFB5E1887A10C711F0E3D981D7B9024509DA0C14700B6B
3B945FED849189EAD0BB511D7462BE2346D3BA172008B648F1E75DE5B7EA9818
DC9BAA070E04E84DFBEEB8B24D7391FF2FA09F28479007D6FCB926C75C5744E6
1BFFE5904C904C845ADC1DBEDD8DC9CA3A8707D86580C01618776D11D2E86B00
51EBC700B8EDDBD37F78B4B616EE8F3AF2A642B42A13FE5DF058495D1BBB8F01
D7B201219F99DF9ECAB7137F91911E33BEE00B5569886D97F3213D239DD049ED
6A815EF2B9C9C7F76283C21D44BB92897A206BA348EDE2FEDA5621B98650389E
9815E33A17D7DB25EAE6B73230607EF4320A5F03B65BA29AFEB1E609D9090D2B
C12E2ACE102818CEB577840F6A5D09A026F49CC9C67C271BAD106CEA4393C4F6
8F4D7DF0745B3BCBB34E27F41AD6DE6188FF19570280EA1E4950A0E57D0B80CA
4DC1EF8DA79E34D72DDECE2F2D5668B7C5D8B045753B93F43138DC03291DA92D
80EBC10BCFC2E4A4F1D6298650A753B7752DCBE3871343C697C30727022D3347
9434F81CA244113293094802F0B1D3937A7262039981801E3EB72660231A374A
85994B597B17D7D1EA184F04E2973E9674CE5A5B59E5D7C601D8A8A75C2884DD
77917F8FD492E9AB9328EF8E0901DCAB65112CC98E753385111906ECE632B09F
C6E4286156CFCF39F47BF88EF729EE261B767023B0433B9467DCE6B319E84225
E8E9E069D5E80CAC68864456745F608AD7F1DB2A7057A4B60C01E3B48B4F0FC0
A57E6F7D70F0B3099D68828CEF3EB08DD085A46F6AEB847A082D5EE078CA7B10
CCC4335309E6FE477EB7936ADD7770BA3562A4CFAB546D823B7A7685B098DCB5
465959409262902DFF5443B6961E262DB52A34A69D9DBC915D1D979F2D09E8CC
67956FAFE2735096C69A00AA6C9C1421BAF69E1B8F89CF67E5250C659A7D4A19
AE45B58749B3073662F947E7F5BF97A4823DA48BEFE6A643A56D558A474C4055
E9834136244EA39AFDDB3B9BA2B301853A589B355A9B86904D328BF2A61BE758
B1842235C4A4EEE260976EF1644167C2F4070EBDD0B73478C1BF2719880425CC
E4CBFA670CC1E1C6A8BDB75E7B524F977A90FB269661AE8B7C7A351AC33164DF
69839EF4CCC948B1971BDECC3EE24CA73AFC338206AEA78EA76288728ED74CA4
08020B80A53BF23DB3B68F3D0F58E2C7BE658851767A4CAC46F14215BD461B56
DA6E3BBF5DED4486FB1D6C2F60660F14709295FD7B6B4402FAF6EE84EC0E5FCA
8D53CE5CE1FADECA9A7E610105FA17C45AEA5831EC20510FF2330B331C40914C
36F29FEC53C83BCDDE52A40C1DC2C833298BA9C66845C68C0B47D6DEBFFE3F95
A90BA074E34D5AB46ADD2ED15125C4382A1C95B5F9412BCE7B2DEA273664C0F8
4C7788C6F3ACD041B16C9A99A6254FB9B899782664A7ACE087EBA0D48EA7C7F5
D84E04C04694D7ED240C57F885F794BFBD31E89BA753ECF83F6AE705F410368C
0B5213BD561B753676339F0B9FE90C60F82E180F7AA4A9EC783AB037D2F6F2ED
337D854B81D02F2E65C6A913100B8839695517D60FA5B6A125B952B64A1142C6
F39428D8D2B8FF4F1CA15C3E282A1EA0FDDEFCF0434C4123173E38AF82040A4C
F077A335C829D8626D775E72B5502F3769AE6FE8FAA616B8441E702567E898A2
DA6AAC3A314D5DCC26C3721108036A248AF16FD36E00AFC5AC22773740AAD22C
44F44CE2A9EC5A1378354D0EF515DBC0B835738955AD76891B054759FBEAE7F4
717A6118DF303BB77FB7C261E2C91715BBE32E595BFEF8219927C96E0EA2990E
8D729C3D9DABDD29ABD05C1FB213FA9C410C78ADAAC2F16EA19B997E5CF8EEEC
CB2C21340919244745429ADF41BCD1506CB773E28FADF673D70A791711AFFCB0
7D8DB4849837336C3D6DCE6264555AFDCA900E3DF683E54048E01613116C2784
94E20DD2EB17AA2B5CC304906188199CF23D9D54D3DFDF55EDE035DD3563EFB2
74CC50F61FD3428C83F24809D0AD1646380585D0E5D5F28A9353F6784D3CC671
B0FA6F59F3A0347D547C728623FD39A54642E669657AE1E0362D4838EF8177AC
838E414CBAAB3D568D946FE8CA8C25DA2D751FF514A92199AC13F78FEAC5D4FD
0CA34ECE58A8FA8E722FF4625129815E150EC18AAD461DC2DA8C1E6C552D5002
8AE2476F9084AC04C97D6FD5D963A652ED4EF778D021ECAA36830D54A5F9858E
0733034D1F5BFDC20AB2E4902FC4D523AFB607A1A4217F2378650ADC04162F20
8865D6456CD006527E6EF77735F91EA6049E418B901F10FC0A3EF112641C95B8
56F0D87D1389546906D15D9BB1C1A9A946E7EEF8D198562366FC4A89D1C27D33
6133D5488E21C16CB8B66D003CDC73EAE1E5D9EE754660EDF4F9491192A438DB
FD51CA5C5169A2D621134EAD387D472B72A00E3FCDAA121A5A6B5F8D8D6564F9
2339FF8F8305D0970C33AED35D2365BBD9AD50C43666B33ECCCF9754363F3D5E
83EDC43FD61B93DBB81A89763FD4520AF4792C4DCEBB76AA9AC44DFDC4FBB142
0298A665045BCDA5C148E123AFFF96CFD61EEB9C900A19314829CFFC11DB597F
7C55A8A7CC1D8C1245CFD89E7D66E63D1FC972D86D80FA11FA9DAB4BC9968770
BC41B17717A55E5D8A8F06F8378F03A9D9D83E683BBED9AB71BE8C8E5C24E53A
5AFC5DF3401222F292CD0FBAB7F36A7A2E4C582CD4B7ADC254E87493576F75AA
AB9DA284490B1A014F5A9DA7B45CA4D070D83F5BA00415F599E0D7FA55CAD906
0919527012138A4EB36CC9176966B8D949F5A945E578C8DD29FF20796AC3D0E2
9B043E8D6A88357867F8BC52A5786A474539D5B40C1FD85C8B2BEE6A4AB398F3
5D2E5457EEAC9330C8D80DB42EB766C43EA8EFE81CCD0BD4C498F6F335E234DB
1B602BB51593039FC9C7CBC249D24FFBE824F874DD9A9DA5141D56AF49EDE3FE
8AF0EA8374D52E32FB981A846E5CDD5A826B3A045427E0BA44142C86AA0CA4FF
8EB79622F7434C700922343340368914BF3C97314045FAB692C18BE004A54A0D
C17540E09C4D4F7048EBFB72CFF1B8A6BE5957291D85E8E79BEACD319A591395
C24E19E8039021E9AEBC99D1563E7E339C2766450DE25726880A186739D38514
C08684263CD28B3A9C6986635C5524BB6E47E0A2DB9B0D329043D7770D33E11D
8FE67452DDB881B1C1BBDCA90CBC58D066A2ABDBC4A1E40FF9E6585BD427A744
1C6F57CB0B00AC580DFCE9C88735827DED65838696FCF9B04DB72D662C790D17
BCBFDB3F8922EB6414E7B192F9691A2E501EAEE1155688F1F20901EC87FB8A49
B81F8264E12082909FE635AABB7D3A3EDBEBB1782F83B5BEF0A11E716FA25C28
ABE131889B1F40D167EA995B12328C9EDEB28E1288EDB9DC7C607DCC6C3A84D3
D77FDA860DC117D6A8454EA11DF4A385698E0F2EC1F8469AF462256B85AA8408
E17C483570E2A362AA134C1D4308FB33E41F1FED17606C08CD6311774C5E1D01
DC294C6D27A2D8AD61CB386C420D073AE8A3C25ABD8648F82E612674D4F563FE
43F3E76BD675023214098FD9C9446A52633161C81B232BAED7A6B30C9DA7CD53
7BF34087ED6F63D6803874807993AB1C4191E6A14A7B954B28230D53EF75A00D
C64561F449D6F8390151441FB33550D3C88C2780B7FE21FD6B0525A384A8CDF1
9E0C8A7E776E58C6B20E84CA30ECC8B014408FD307763A3CE4A6EDEA771A3852
812A689C42CEDF7DE0169562EE357855AB33E44815DBD178CB6EF5493B4E713C
D19D2DAD25E883AB72BA70A0CFC94ACBEABDF1DF2F17EEC4EA0F525C4A3292CD
AA9E33B88397280947D9D6D6A3E7B3FE99C3B9473D54D8A3D0C9FB55FFE818E6
2D95D1A9639FDCDA3491CC164D07F2F4BCB846DBA54676F40D5F8D550F8ACC4B
E179EBDF4035A37C5443A72141EA551B10A53614DEEFBD46B07386A035608BB2
F421AF4A8BF80684D3F5BB34389E8677FD3271DB0E3AF79BC99A620CA6E7B65F
EFB6E88B7A49D7E74CE274CFB186696DB406057930E7D0AE58544692B5ED12F7
197FDE155696C3D4E8F5546BB41A5A210B69CBBE12724660F56C75BEAD533D5C
6AA0454CEDA92E775A490D72647A7E768F5004D14BAB14A4305B3D64638B6D95
265BDF72C8C9C1F2D315C1EDF38051D6AED7766B0C73701B00850E5ABA2C9696
5A47CC82355D942A7CCAB32DC10AEC6FD658A290CDCD58E5516647AB2E2CC448
B1CCE2D71CFC1AAB938C32790BEAFCC312D204566DB056FADB729564274E37B4
51BE3002CCD5D959288D8E87889135BA6DA942BAD05BC87AAD56928C24D1A37A
58F513B6F57603FF47FF88A439A7AEA49013C20CA744F9211B9886C0858943DD
368118351F048079AF59F37815ED4F2F37A4FF8787FACF011320139D158B9CA2
FFB4B8EDD899E447AB390772C8D454F057B030B4C94657C5279043B23AEF6DB4
34965158BC6EF268311FA02A4AF378B0D88B9BB5867002E14A2DA4C24B5910F2
6071D6617AB838822EA1B465CDBD6441AF02526ADEE264B1AA68ED2F8997F1A4
04853E30DAB29449B42D35388C5D8C263245707DC0374123068474042DCB2011
E076528708382B1DA3670DC982C71F0EDBC90B2F44CB623A7F5B3021C71EF12B
870C62147F7532DBC90698A22D9E9AD1345ACE0B0F653280B1B27C7B6949BCDB
9A59034887368138328FB60C988A9F02D64CD38ED65508938449EA342F21C854
82B32DD6F44FBFE7B79405DEBCC5AB0E3F1502DE769ABD9ADF77C26017573248
3FD05EF7FD123562D59A5DEC2B5353AB2A010D521E532775712BD4F5DB1F7986
030C5F96C2E836A0AC87F4E304CF614560F78988BD59CBDBB954D765955F91EC
0B2285F59D38F449979326F189B9B778BD55A1ED8249B91D2C8DDE8808DC922F
B82851E82A2601FFB05D90A5A823129900636F1B1109A51AF449D6A25A89D51D
B8856C7A0AE64E5D68EC13829547FBDB78EBDFF55E228F39837160B800375848
7522103074F7CB3A5E4A41125B96B6B31AFB1F5DE90C8DCE0ADFAE54FC8B20BE
F8CC214D0EBA1B16ACAE93A0C123C0DBCB14E7E32F196F53155F389219C8D6CB
60D25D9B006D1E2FAD8B39C2992A6DF728EE9EB97F55ED1602D8588AF1EA813B
27DB94091A4DD09F58A59CDB325F71E1100D002271B9B73BA27E1295668DD048
40AC254903FDA3D4B177CA2DF9D7F1EAADA7BA2E8F3308AC56574643B9372388
E8214DFF8DFF95672E2E467338DD78658D30E5A4D27431B1DB18CCA974673C28
6913F42D49935073C848F540B0DB71B88E4AB1E137800DB5F863B6323769828C
53AB083CAD660AF79E4D36B4A04E5063BF12FFD959B3386F3B40A0DC20C1D5F5
59D3917730E10C106A9720B6B7F6BBDAA8818280585BF5876D3EE9007444F9E4
7FD0823DD8467139DFFA34C959CBFB2869B750D087DA50246B87E224B3E8A9F7
205582D957577235DF806B51EEECD4D817E396C4CA3E367CCEAEBF0F006739FF
A7271DF32D5AF5388B012947C82CC76213C0CCB2545012713C7CBD8B129AE436
8D48704CC13132E4B4D71466FB6E1384B061824E7B833E8FBC7A5EA4F7162D03
05F93B5470843F85B06FAE5E9E7A2B0110D5401ECF2DD1F08D3896514AC3C075
0938B8D96E90DCC5A7E098E36713385CD9A2AB1A9CCAF306EC12F62082F9024A
0C3EED363F7DA89E4ECCE8712DA380969D432D227A24D54A22570A504018E34D
96AC2E27D3BB8BB7613C2666ABBD193E255A5A5F9BD92EA316025795683F27D7
68C06E0A3EF50E40B9B58FAA70DF55B9B7443DF787D946FA3C70396E5BB38875
4AE1823961990DBD611B6D70E5692E9E99F6A90DC8CDC752C1A8E924544299C1
8A0A61F5ADD2BEAE1C9B46230481C8B124110BEAD4038DDC5D7D165BAB011AD5
27E221050F342252196B54691321B2165E7253A9C41F502676E8902838DC3B4C
A8F027AAC3DFA31B0D6BA8BA7556E7DC1FE4052517107A32A50F1E62FBFC0C36
86F6CCA05058DA20F5AA72A63F597602AE501A231D325357A24634E254EEA87A
D11067174E47BD24C1843394EF7727BB9109CEEFD2232849FAB1495E0C55BF05
81F0CA160B8537E1E7436FBE5D62D71A09CF87DC55A3BAEA363AF841F9E3D4B0
82D70700E9FBD91045D47986D4959409DEF77C76EAFA146B03A33BE2E8A88736
72C1EC19B23657D34685F351CC0D93D513E3EEE1E90E24C73839B5599D48DD23
79BAD8BD2C90BD52FDDBBA62374BF35F9666BF2C14A63613676D6F3E6F6D86F1
AE28A6B253A107112EFF140633606026749A1436FEB3E6A4454D6FF2B35B0031
AFDEFDE65E02AA64304F9728E902FFB1DFCF8FC52F40EEB80ACA2EFFA90CF8EC
D225A46DA5ED77A1594C9F5ACA5EE3BCD51584855FEE93D8A53178218FF31243
73C9EA0CF12EB7D4F9620BC078EAE5B16A564333DB11687FCB4D1D8112EFEB41
1A32BA1C00842B78D7003A85E0DA3350F3E5052F21B8D00305BA98AF862FBA5B
AEE72CBFE212137A07EEA25168B079EA560D4770613039407E813FCE5339E173
9A53127A03424E2AD58E924F94D9F38EE7F72624B3A8C0D5431A86AF0FA336B8
CDA3661022981EB74341E013E9681A6D7C5F7472B6C0E6BEB99E4432E703A682
2EBBB7BC03FB122DFBE1D2E4AEE69B2FD47EC0C3BC3506372A3CB0669819BC0E
A931DA293B0C7369A11FDC1AC05DE282619F0480126A31E83A51E877E5F31ACD
BD05C06D1C6C489228AB7E562B87FF8A0253C03376BD946A143915A51B1E5E7D
F6BA6323EA3557FC29E98E5AF32D4AF7739604AA78066437CB4D69CB47AE0130
EF67A7AFABE28E49FEC7EA938ACC3A315E523BCB2EBA36143280C65FB0CC1E86
D6957FC57709BBCEF1D42FFB8C7AAC3B732FE81146F9E43B0720FE01B307955F
6284555019495ACAEFFCB6E2FD051D5EFB17229D5B4BEB894DAC343737B9E9E6
D04EF08171541089CF31EA626B47EE5C6C46E504120A38C83212EF1647F38810
45717894806666C1B9316FD6B88968C67AECF1981BEEE4273BFF14BB6E61BAFB
497EAAA779D21AFCA612770E188125BB5AC7A57F25C572EE12F7E50B3DD77778
6B7A9F53603756948A06BF04D894FF62130D611C8CE906146E0866D0BF717F23
4430A8772203F3CE7570D8438A9981B1148530F233D6EE10BE2A94C323374861
29E5B25869E4E6250D89617479B6A637C39924D85E739B239F1D9519FCC4A3A4
A7F37394810E33BF64BEFE5CFBAD84BED03498ADFDF01B1935328249AD9A703F
0CD5F49C670D1747A32E8C0A77E7F8CD2FBCFB703C0E3EFEA78F4EE0AC723693
EF4BAFDF84D8BD5565BE5CC90861F3ECFB5AC63FE62CBC99C0E02D1CC26702E6
8F7BF5AAB3F1D52392951B81CC79F4ABDD8F9038CAF15B560989C7A89CE3BA5A
DCBF48BAA70D18E86C9CE91D3EAE12F48254753EFB11C847E194013CAAA17C95
1013D63E53FA54889102E86A960BDFF56A762C1A267CF8E6C925A83B845ACF20
4AA20C31A589D07207BD2DA7E53849E375B3D1E0CCA34E8FE4318B2F4FE24177
CF2FEC7E6CDF34968DEA733EE1E6BAF46655E88EDD1276660C3F6ECD1B77BE20
6ED379F1C5B3203B46F9E302EDE49C62BFF46B68AAC129FC2988F002506202EF
945208BF2C2387D370DD6069227F77C1A9E505542ED950A6D66AE823D871F57C
E2CB5B5EB60B278CBEA6C7619F7250222041A63CDE9473219D6FF7CDCD485AD0
6520D6E8B1B40F946159FEAD878DCD1076B37736C208EC9F5ACA0DAA2BB203E7
227490B419DDC7ED82A76307B201BE216FF5DF7CAE483EA98453060FAEB53038
8245D8BF6282D86AE417B2244BA942EF6E95B907FF9D9E2F1CA0436BE596BFE9
5110869521223FA2BAECF6042C13B657841B996C35411084610993D03F525F8D
8C09BB0E65DA90A6E9FB3FCB4948386C497BF58A33B5520AD35DA8A8EF430295
387667BDC45ED1F4FF5F2EF1FEA7DC1E2E87DE443308EB1391BB3DC34BDE8EC5
EEE1780A78C587F31B62E3BE18EA1ECB4EFAA85239B8D88AE41A25F0C95C2DDC
3E252B1F7869DB3ED1B6827637A8037A41413DECB376B636651412307AF69D6B
CC3158BD937737ED6FA58D0496515D1B2C654824C4E32C3021EF5291662749FD
FF8ACB5E5AA1BFB81C6F3D46B6E75E681929404487D1C4971FF04991D44FF6BA
E1E0064BF347DEE8ADA552EAD4E0D3887330D1BBD45CB252134D5A2787782D4D
C7AC66134A70FCE8C60E9C0E64772DC84619730C97F54CA87E8CD357461D762F
CBA050ED0F6CE2788B0B3CC56D0CB4DFA3F95B6305892A6E3D9ADB1E344C7853
03AD96200061D269A3CB2084DF6ED038EBC27230FC2303654E4D1D93A03D03EA
E12FFA6B5432BE5777AFDE970F05CD202A35676C071F4EF3E84242BE3AA852D3
52A092CF380BC3822DDC41E023D1AFB90C5F8742746D378D38A1E25B2A8B2D09
C6BEAD19350759CAF0E063EB23D7C837214BCB72B086A48638BFB42CB8071B25
878D824BE50193B8C2D1AE87892ED4735278976C60C521526269D341B35EDB45
865416417AB06811AE523AA438C714B7D0A1013F7A12A8FA566BD9B0D7A6FED0
C03EFB23D40E137F6B0646E6A6698D1C5271D998208A83DED1855D6614E60546
612C37B6AD9F909B0D3653490AE717FA01146EB93CB56A138FC58881870532BD
BD9FE993C90728B12C2B5214B3BA392999C0EB58677B103477A5E89394FDB053
5D5611E1A9DAEB0115E4AE5E31B5232036BC9F876A7730D984FBAF9B1E7D5564
9C0011539930F4B0118E50A9DAB081AE71482416C0C900D8C8BEFB1D63627429
5C610FB2D6483D01F9E29D6F1DE7DB6E24C1190CB6CDC0F70BBE951E4A202AB7
92393429488888D17A08E14D1718F12948D8399179B36A55DA18F331B613442B
58CD59141F1E30EEE6DB872780AE547DA5926A020D142EB069092D906E635EB0
2E01028BB588829D2AD52055452EE14A35302FACC737EE0CE593EC8C41287741
B5E64B0E98E716C0312C847892F04FD3753587DB2DF74F80A4DC676846330376
1896C5CF57713459EA50D0221FFF60AA48B80169F6CF1E9FE4874A58358B7615
AB23EE4AC912B6E181020D6343BC07BB9100B1992D407177ABD6032D6E093A75
79DB5084DE450B4FD774FA68D19828430EC6591FC47CE0E7431D2565FED5D427
299EDBFD1CE59DAEF9B1263614F820BDD7E34D4C9132C0AD46595DA14C0C957B
9900A2C241BE2B06713CE5644EAD18848433C973328D1587DB636AF6422F76D7
CED6F254500270DB3D91FDFFB380F4D1773BAD8A581358F333545B79AC713B8D
C6E7D220DF53552CCF8B83ECE85179060D25855E995D175E1436754482EEE9A6
3766566E456099191DA59A2FE08ED4D9767A9391B36A3C522A18751D08E37551
73A99C36A0F50C4DB09B830F91A4A323BC5D249C490BDDF730FF19C8CF6ADEA5
DE2C91C9E4520FAE933548B7DD2CCBA487DD73C8F7319244E9D4C6CCA52D1956
91C975E8787E78C0510C2C3205A1255A9EDBEE23A55FBF6108BCB66F093A4640
8FCD38B85D1D7CCAB29BEA050E4CE01B4F9572DC886D1EF523365BA4D40488E7
2C81E3B4A0AB917247805FBE1862C71784982FA43B4D0BFFB7349F60E7C1A0C2
5D76CD888EBB407E92769952925D1BFAA6B1095D8F1B09C3D33CA685CCE2E85C
B93B7DF2D3612738E1A16AF88DF1AFCF1CE46BD66272E9569E6BACF8DFB0CEC4
602E1CACD68EDB5A267CCD5E540440EA91FE99F529756E29E7F095EE86D9CDEE
C4F3052A543F35C9BEC95AEC46C44D49BA47846EAD27299A5146CE181D5FEA9C
08C1265831EFA46B49ABCF4637D1BCCF1C865A3CE1C16B93D922CD70E5E0F552
42EBD34EB3481CB18B254F43C08B7EC7B79464F66CE61D17F6655D1BB0DDDDA3
D687A3D4E157EBE13A77E2C46A0DEB152CDEBD6316926330A6CC9644A8A3A0FC
B33F3EA9EB54E9B465EFAFB9C5F395D1B75BDC9288ED9FBE0F93390F38EFB709
1443BCA512BED90F03DC4316C419F497B099C30FA5E9AA8CA87029002556580A
FD8A10A4479EB1B7ABF80D8F86934480565EAC2124372601376869A676906BA3
131A423CB76B265A9F5C6241457830F8D218C7C782383CCFFF71FE94DC8B253A
1FA097F446C902A05B72A03C060780333AB3CB545FFED95A978DEF2CFF3EA00F
107E3B16C44830E94979CFDC16F4BB8759AFEF42B521467A7AF4AF41F310921A
DEA87C0F323DD22335BF360B756FAB3094EDC855B8A6E00E9467F7F0DD27F190
B06EC053D712A353AC9F0DBAC2932B59701D6CC7768CB7980860C4FB2BC02732
C5EB8F7753DD2A8F46556038EF0E925972E9E7D69A1186AA832CA4C5F74F0AF4
0A155C0CA947B40CBA85C8FDB7B7C62B1E485F8620718BC6C5B704B27204D2DF
5E31B5DBAD63CEE42C1981EB8E18B30C0F794F3ED20D24B5AE8557E83B04EB6E
09B2B1A6956BB3F1767B97FDF225685FF44647987EEB506EE0FAD158FCD53D79
FAFAAC35884B0FF9C7FCE5A0FF974273D18E6C7DF710F40D62F8301FA772AB42
EC156FA923DE877E5D7DF711C33391EBC607F7047DEAD4CA887617E208C8AF7A
BA7A29AB18FFBCAF961DADF5735E08E49CDC8AA291B82AA3A234F6B3CA6255FD
68AFC52B5A86058D6BEDB164E81175DF181C21CBAB14E584FEA7A71F8B93EB3E
519B1A8B7868C178B357C3EA21F7482DA5262CCC851A59590D851027B24D42FE
33605E3C8345BCAE8E072764A30770E8DCA38A96BD1CF65BA9DF1586628CB703
D4931F7388DAAEA5A0AA4B9C15979081BA7DDF6A14A3C86E4AA8ADEDFF5272E4
F8F2349D76D0857809129BDEE930A2DEDE8DE730602251BA508C906762197B8A
43FF551BC395F57F63AE49E45DC671B524AC4B2B85A573FC1F4AA296903093EB
24996ABE684AB09A0216DA6402B351B6558150E2B17E6FC286E21A648D752E99
A7CBCE637B36266F0005BB25C144079A9E06D1DBA4A8A230A1F01D735B9C65A7
7E9ECF4FE40547253D3B0B5645FD12419224B691FB11A0ACC50501617022EC7F
92A6D278952CEC555C741990F4D467675EEA598397C311E01CABA814BFEDBC04
23C0C477112C38AC578F54A616286F9358300D1C4CC9A3A2B130711BDEF0921A
02B0D1E6068418F41A007E6631E0C371FFC22BAA0AFEBD61E874EB2B8B198783
5DBB0BA3985FE9C1C680AF5AEFC6AC2DD202145C62805724E909FF5EEB4E8E0A
8FB0168D6A4DAB61CD00B594A3D6D3FC85D0F3A9ABB5AD0567AC878EC44A7215
4FB9F594B353A1133B5C47E0933FC342E5C740365C74683CB88971F0B7DD61E2
88E9C187F8A913E41DCE0D27389846DC924912DBE88CB98862618CC7ADD917AA
24DE7583D0985BB39C0DA0F9952B72C904E621B5887D09DCD1846987428054ED
5861CA5BCE218D0342872CF5A637FE2AA29AAA0E3A664DF8142EC67CAF164B8D
B98C29E25284C7CAA40BB1E55AB8ABB51A8F113C338E7B485BD847522D4EAF61
C588EBD478D1FC534C1F062A679076AE5CEDA8522B8EF5BCB00635315C3BD544
F7A8012A82065A128D48E72C175AB890364D42369CD443C844C0BD672100C6EC
3C03EBC57CC745AAC39F5FB6A40CE57B86507B7F934E000F6CC08DFD08CA2F18
C61CF995800CF2B4658372D6FE28B419FA213B46F2B700C5D2DB7B00866D8E21
29281697AF6CCDEE4EEFB8FF73B94633C8EA929163EF360443196FCD88D4D4A1
2FE68964533A57FE05E7CA830163AB27FD7C001FC45FF92A8137DA09D67B2C64
0A3E19DD134C93EE043A853ACA9B28384BF244A807198127965B892B93C6600F
22E2F4CD3FCB4800F2179AD7AF31FB4F9B35D221A151698B803A12BC14F39818
BB636A24AC8A56474AD29585475B88F687BA24426B162C392D23E0CD279F550A
FEECAE2699AEFC4CD1BAB408ABF0F7CC074CAD45F164E85E2BD3C3439D0E7F78
808C9CC47F91B596FE57C97EB0DAFB3121188E82ABDB43FD0F216C053851A423
D72368DB1D0D9AB4F4DF0B9E4BDAA0E9F81054B42A6BAB0B71D6CFD20E2E9F67
0226CD211AC67AA28D36BCA80B6FD878D4698D1E4AB5FE10BF35D04A6E6C7251
902271484F2C2E0CC3933A1F5C39BFC5CCB48C39272DACBA73DBCE9C8436FDF9
6A5ADDE486B2EE19E531476DDD566202B157C4BE8DE18F60F41C29980E8B3343
550BE7B3C7F55F7F38F09F82291D173F33CBD3E07FA1D55A37E8BBC29C261AB6
84901C5C5A43ED712ACA8CE065759675A0507B7DC70DE1120707A05E2B9646DC
C15DE303D52EBEC5FD7A62AEE73F1387881D33688F9FDEC385C59339860BCD8E
DA19C69B2AED11087831F46726B22C6DB6FC9B6BB32C023464D018EFB6235DC9
FA6F9E72C238A7BD0E5FD2E9D3B5C19C7AA7F5250442E8E9D562C90945404C59
30435F201E46DF12ACFE83998EF7264776E3B18412695A898D2C0BF24A91156A
A427FE30C9A4869AAA1F0D6E8E16878F50F7F3C2178FFC40381F36DFEB6612EF
33A54D2139764F530BDDFE895790E6E4333E0446D2CBFFC85BED06CAE6FC2FF0
08B6A551B0C55D694E335BF08533B95D4287D3020FB2DF83AFD4BF33AB8F6495
6A1DAAF04FE0920F7EB10581F0CA160B8537E1E7436FBE5D607198E3A910F87F
0E7745B6E7E377278A356F2420F9CC5B7F2B9272A0735C681B61295A610BA028
97083FA96A6984E73C21F2CED0DC463DE9D30C60E702F76CEAFCD1246D85D937
8747452C3A6FBD76EE2C4A30C9366D0A65254F7C9906EB3CF41DF8AB287F2E13
7651A8C95AF97E44A31E70C66D023F34D6E89A4CB2C0745582D5D6260EA13D49
E4E2D83D94A993E8EC3F63F839A4CE8FF976139FB96CBA4C327B1B0C4B5B5968
17F23027E2AB371CA5668E1E5AC382DC237A961672683689CCE33C388F5C051F
926FCC512635E0360F6F5C58D9F0D4290877519219B5A874946A495413E20B4C
CF58F0043AD5D5D1824A3B623EE6308B33F865E8C78B039360220D9F348853CB
37ABB658FA556EF3327FCD9DE3900F93FC9C4729C67763358A988191709AABDC
0CC33A301A4C2F744079F773980C40FC72BE8D6FEF72372CC051A9D3A0DDF18E
61F20E2DC1311A4F0DB541295195134581AAA81AE1E1F727C30B163834B2A684
1EC26AACCD06FB688C3C4BD9808AD376A2B74D323C798F0C6B2D74672BEA355C
276B7A70F8BFA0C568BC935909107EEEE00BEB71B6FA1F8FA0EF6CC43578C70D
EAD14B6427A20768AB0C9D91087BB3C6E242E9CD0C07FCF91F8808CBAA47B7E2
FD58A48A912635D0AE7CE0625DBA2B19AB62D75B5D6291C0BEA63E78B26E677B
F9804BD0F1930F00B79B07B185884671D175F5D015010B3C072D5E4E718FC2C7
4D71B86C3109AFA9C2BEB02474C876DE136AA6B0EECCCBC6EDBF86444477851F
68D3900AFD7B9F79EC9496CDC6C6630EDC58004134D63CF46DACBEC1C8051CF1
06C8619AA1EF1065CC4536857B02E3402C5F0E61D32245B80EDC94665E6E1695
3FE8CC4164BC3652475F29A5573A617E327CD1FBE74FC3164857BC43BBC3A010
318DD1D17BC1BD3FC40EB7229605912DFE2F036E84ED69288B450265BA65C7CE
6759373CD50C1C7D4A3B4660B7E6352B01A7DA45DF91698D554F4734A3549110
91A94EDA4C803E1D7D2B8C90FDAC2EE8ECB4D538C212568D3890232BE6C15C25
9AEC31E56480D7B3E89F899799A6D881690F8976A674122239AFC82735A1CF4D
1CE19E46C61A0FFAD161A56F1882CE75D5E9ACCDF2C02B249A60867D844A052A
F3F25690A5D28CC031BBFB55EB2D87FD526AF52D0956C520A7F60D2B1A6B5305
F02A5A73A2BAC866DB19F5336B6B5C8514C1B8578337EDA90BBECB88098FFA75
CEFA67FF202F2ED74451FDF611123345987F024EBE1308A01D054321E6F33FDD
C455FD33FB4E7F6110695C665F4568315A73718B35844910C4610A6D0235ED4C
FAAFA1A9E5EB376EA8FBD382CE9E7C4BD3EF45CC8131299C8BEE0CF718A649C4
42A60C09C040E46BC71092971962D004710A86452A3336AFFF4D2FBE2A358B72
5EB5B233C836A0AE17F2BAEFCE229F903C60869AB18F1E3D53447D1108E05547
B9533973DB8D8C0A6FF7EB345034D6FBCAF77A08AE9F9556CDFC06B8E84D93FD
A5120EE98A018EFDCC78FFAD85673116AB29F05E300B27F32610502C269549AD
368A60CD66E3A9B917754F31F78DCDCA0C179B7644517394AEC079434CE3B676
CBBD39CDBAA5BE0EDD15F267876084247FD094ADFFF4CD9460C85EA5E2613892
55ED02837BF1B7EE0271E2233F7E80E7CE6B7B701A2FAF40715C1CD466145F5B
BB97536504D777AE66762BCEB8AB14CF2BF3702140ACC0B60DE4AFB70CA523FE
EB9A62DB1ED2A57CE4D3F81A8CDDB5880CBD84A0AF979E544F00DD5551A98F33
8822AC3E430DFE2CCEA36DD2FE254B67D6A21F2D33AC04AF662C585B89FFC998
D19AC35D7FA6A6A0FEF2F92341A948A8F8DD351882DD73CE7D40CDE2C2C32CCA
C2E066651BC345FDBEDA14D79E285BBF2DE14B097EE47C020FDF32EF7B19A1FD
8D9CE53BA9ED147C11CC61531A430598881E5E00F9762A049FB0AC2E308AD305
19137E708D0ACC9590B7D181F4BA1DED5DFC6C27EF2CE1FB1F743CA7016E4183
312F60BC6167CAC651681C8A24B491EDDA021DAA988CF5CA0B30C220A2DECE54
2254335D9505C9A962FF3A7D45FF770281E24A9B5A0ED075D4506BE4E3D2EB51
D03994AD63822A22A7B4ED36340CD545E299927DC8D49C6355B9CDA3F3A11578
0B4FD994B74975423D3007A2A0806DDA31F02F8422397F787290D7EFE545FC23
7F12812AEE0B4F399AF2E10D2A6A411E0F9382BEAFB05011EF7FC202D5BF17F2
E1683E2CBBFFE1BC2790E31142F43DCE633AE318FCF4DA3C26263A8012A67C84
D35DFBC47998037AC550D6372A415AA104E92B2F4BEAA2610DCEF90607132B66
A80659D1E8011A2C6F1DB91ED9D65A25842E65EE2E7BB01514BD9BCA0EB7680C
8678E1C3DC0FE83EC18C1D706DA93B6918BE02EFA064FE65EA9CBFF54150EF22
A5C294744608561DBE5BB72245241A064B9AB3368E7A6AECC2EF28F24F95FC06
A8F4DAF08E7CEBCC6FDC810CB54204E5B4D2D7798FACAD3B7370933611A6C356
08B0C54E03B197865B66EEDCB85F0EA2FB531E159D0743ABC7BD6923A2E2D8B4
05DC67F7FA6932B3F3C6D6D3C8C6A90BC4FA26B3392490EF19AEA0AA826D1C3F
AFF112EC20B9452835C09E8235CDCA3224261089F5EDD56AE7BFDFD7499C6CD5
89DE2AC5258B4540CE04F5C530003E5FBBBE17FB0ED537AD1F9820AFFF4D9613
20F53F6C106FE7784C9136E8D1D848C6ECCC6F2E9D0F7EE557944A35D79EF246
5D3DAE1BD9EE4C3FE66EFFF003845147DF0967A2E0D894C2668BB220FA7A3CCF
DC0B7D9F13FEBBE645E902D6540558E8378A12454E80B1F5A7C90BBB6B0CE4E9
5A6A8B33B8253276096DC4F273989EA7969661CD349E1BA3B61AC408061C00E7
3AA7D7B00599D180D5FE2A1E41E35F1C0DCAF1C24D0AF11A161E21A6AB4CAA2C
EDB78445D02BCBF9146D4B3364F6B34D06B116185D4DA410FAF48DAC9A6433E2
C4E3EC10996BABED6E1E460CBC2ECA045018B639B06F9DCFF23E73CC286A2603
6D290EAF0AC855FF91BFD566EF7A1B0D2FF79919F839FF81A259197BB73871BE
0874EF011BE0E24D0D158E85402079DF3CF06FAAAE42D0F64B255601703AE6AB
93A467AE73EFC3332285915E15AB12271E6E12FE6FF643B6B833A40B47B1168C
0632BB3AD6E600A47E7C02D31401B1563A50936FB3EDE47AB7CCA4EDCF839C0E
CA39B970DB7C6032F887E36190E875E3F0AB31D4ABE6865733C4064D8B664667
EAF60A8505E00CD209F6F365763EC4B2E0B65D0B44C10BEEEA054EF8B9B96E2D
20C50960DFAFE7AF4B325533C5AF117044D4A2B8936BBE41247BB7C601266ED2
B909E24CD141B6157C5BC2F0CADA32C45DE55DA1E1863211E69A426BAEBB436A
DA07160EBBA4FA9A103CB4AD047B4CB5386A9FDE5675AA4CABD5D84F0B692670
F2ACCA99724FC2EE01FD8C481F0A3C456CF4237138BD5158299C46914854C124
09F6804FFE58DDE52B3F80B57EDFA00EDA06D6961CC682212B951ACA115118A0
4D86FE7B53D82AC7FD782FC1837B108B4CD4568A91AE4294DF01174A8D77A8B0
79A6A93055ED598D0D5EA9018EB30BB2B1A6956BB3F1767B97FDF2256859DADE
FDC5C07A9ED6C46282927088B156AFBEAB639ECAC4FF36DCB44124FF3513EBCD
4FE9A0BD4084F3A3685AF0DBF56B95FDC268BDD5AE92BA4267E1400A25A680F3
356BBA444B89904515C8518D80E84ABED150C5A5621EE76589BD8E8BD13DE2B9
6A0B40A9A43ED9D36055F1CEEB7DB985EDFCD485CDFC775DFC6FDE441A7BE3AC
172D12AE96F5D60ECF77EBDF9FD11CC249B9ECA67C3506E0924CD2A906E6EB1E
12A6B89D792D6900C0AD42BB04685A3C539F5F1051460362D6556C618EE07955
77C5C63C2B0E000E57AD679ED536AAD6FABD7F73EEE63BB1BCEFB64AF67FA2BC
887F3DAB21697F451A8177E424BB89C82B078FF29265A72C51E4FA23D2D844FC
6C24C2768B11F0271139EA424ED8CA75F8702000AB03E8C8B32205E51C059C1A
8E3B3E94B7C5510EB26133519F638D09F761485057BFC6FF021416FF12A6C27A
315A9571FB18714EDE7725C8D642D169A457591C22999FBE2FEF42677C529649
B5CC4D62B44C017B65D376515AA0D7975BAB77F28BB70DB9FF24EA3CDDE47642
CB96345F311648D297FF23EBC75ABE184E2B3EB75F1CF44924C75CB605EB4B1A
15DF82CB5F80C692B8F644F3E7934610C5FA4C656EEA8A4589FB98DDF08ECF32
06DF013E0C3F20960B92919D51501A4485319261FAEC37FF325F2A480C511CD1
C9B88442FBDD83503D1088C3B800B6E90AC2795D83332539DECEFDA706557ADE
35009EB3337A4DEEC948584C89057334E7C2FA0DD7D0445C0CA503DCE4835092
F4C25A48A352F97D142BAA2D7CCCA66E3CC6C328F1CD6C562BDEF9A7D5DF58F1
48D403AF6730E3F337A24BCD555197309D6D3CCD9F8704B062BEEDE7C92DD03C
1A8C60E6B62E918E80A35A5E970DAA2463EC79F72D74A3519D00239081FDCF9B
906EE809FF069ECC3FA8E42873D67EC2F5CBC7FA718C00E35FF643E7BFE8302F
F2BD47F24841A4A285AC46696FEECA67502D7C143E287AB79AC00D2A004A1591
13B7F3098535D75C92EB379AEDBA8BC7AA9E581A3DD9230A4CB6CC9C3B28C88F
485BD8AAA162EB802053D8F9A22743FD30822B66FD58535F8DF459F987D0E992
7B7F75BC0482995C51E6BBBDDCDE929FCAC7470D0BCEB436743766E3820AD9F9
06C7334F8CCD3A80BA07E9AE56AAA77DE1738E9A4A4D99411A07EF9D22EBABAE
0D4EAD08203A72A4F7E29133F0C37FEE575DAD8DF42D54E4C4120892EBC0F85F
5B0B65CBA2001BD839CBC17018FFF27707F4D948CA4D04C5BE13CC4E508626FF
33812F64C6E118D43C83832F227BD254633BBD91EFE985376352F58199509058
37513F9546DB4EFAB4FBB152028059A8909845C2A0BE9CB07A9465BE54D6532C
73C28B8115CAE7800FB5104943B2C35F0B44F078E3F2A8DB5FB1CF6F3638813C
FEF69B8ABC9E6FC08F7FB4022270559497CD5855013A159A4D5C15A4C160EE13
12C979D9DA9EAEF9AA8C57B6ADB650AA5D6961B87CA3CF1565480CC0B86812C3
015BB9C41B20BD2BF4BFE16F013CD0B89FC3A30ED91928444F32D311455AF3F7
B40C51C1A8369449470236D719FF6467F119FD475F9AD75D13D3F43680759C53
18FD602F9C40A7F869E0F5079650DC8F94B6921924B199061D047FD5EA78FB55
C05E95E160FCC123EAEB131B17067B364E0F7381E62B464780FAA79948BE079A
91D02F47F9813463B66AA62A116184C6C5B704B2770D1A1E40164ECE1C14AB6E
C776D9482C82284EC93E83A2F86BCA507EF983AB01D8D142CE1AC572D50A7E18
D422A52DEF62E9CC7A4C5A08DB57D45E12D0E2A9D210579589016729299C925F
3A088B78CB7F97E4D8AC7662D2C08E8FB1A81D6663AC4B02883395F1B64E82CD
17A1AC060A17B849EB24169DDD6FC1A01C741A7FDFC47D591E52749178D0AF78
46103266B08E065423965F9090FA47A4D6268AB4285361C495ABE03EF7B5DDFD
B3415526F9131552664043BF0B5B58D89B692475BE4C36402506193F1FFEBD0C
EC4705E8C5A846C7C44FDE5D45BF586978A89CF1DA03429794035506719D2B65
F3EE79866938AC10A9087E1E4585E2A6ACCDF4362ED5405BD9799B7CE688717A
2BD984384BDBC67A13459F2A93810F176B5FC1351BECE278DE178DB876C9593B
4FA4AFDAA2C9B47C63F57B1105A8A6665A975C7489358366AF3B19D259C37A43
6F9771C1C0D75FC746C8025BDCB3F9D8D79715324D3ABA38C1B33B585A029B70
F4F099A2D1D7F775BB024C1D889D8A5A8B7A696A9FAF073CE78791C700D49409
CD3C2DE0CF07829B89C596599648357BD6BDAA8BAC3FF70DFD0B03969BA51825
BCFB703C0E3EFEA78F4EE0AC723694923CBCFEAB7A17E4831E3C9D7699001933
95F9B89617A1CF9B98D6C762131E1DFBA5041E12BDB70D1E79CF293CDFE711E9
880CA0D17358C4A35891495E39BEE2AE4770E845FA75D74FDC16F7C12380AC1F
7C1C713FED7A7C8CAF94ECA6080C3F20BED95BABFDD42D3038E8C97BF2FA2159
9D6FE457350FB57C035F67269013F651AA2E5F8CAEC9D6835C53B327D89EF38C
AE453C2D57AF9592B4AB8F79B5522C0493AEEC2F8945783A3A737AC106B50985
0FC71815DD87A8CB6D232E6334D3688FD28F48DE5E61CBE2F070C16D88781A89
A41A51549B1F5E5AF1AE9BA1F755AD3F923B9EA9629C9DA663CC9481C0363030
6E6B4631CCE454AC5F434DFBD7B2C2DF2BE16278B151766E1B174824F59FE93E
4C75401FDBDBDEFDBDFB42EEFF2C755F0C18F3822DD4A6D3C4644AFBCF516114
8AC28ED56DAD4D58BF616503DEB0F43558C346979A8F4CC0D8925CB7CBA56FEC
EF893267E99D2E3685D6350B12F94822CCEF7FB4FC23FD652DF8E0381C67463D
07044AF41EE1849F715939E3538A92472BDFAD334ABADDE2FCB1BF17BA630962
72B30D4982435FA198AC8C8169AC63A5DDFBB21C65E834AD2F2BC502A96C815D
7E3CCA60A1ABCBB980D1315277821E7C20DAA4E3FBAC0CA1E1FF94ECA94CA1CF
A72528C4B205C2E424AC7CD05D2585F5965362DD09A5E34C8CA29571B43CBAA9
ED10CA008619187874775B6F2ED7A4B321EA3A1501F4414FC36F9830029E492E
FA548FAA2DCD02B0EAA8897F9E44E230C820F259C641D160F82C924D3BAE8E7F
8DF9A8869044947CE709E5F572701A3C85A505C27BFCD683B81E024447FEAEE0
AEBC64140389B64B2C49D680F8AC65FE25D9CA920FED2D9B7E48358CDAAC203A
62ADA5F784907E29A1EE6B1E7C8CE4B07931A1929E8AE06C32B258AB1D8A8590
6A93EEBAC7663E11BD72E7ABA7B2446421511A68A3F2E4B17731044F2A7BA7B3
AC72D8FC0CCF161A7A17C33B4D0D31F37D7DF1ED5D706EEBEA77F769366F9CEE
7DBBB9CCCC90B8843B2A5EF0C24D0AF11A161E21A6AB4CAA2CEDB4716B491A24
F2CBE99DAF861394ED682BD7BF68133FD1477195AC953C1A046A23D410646498
2E4715ACC6F8770841FCD0648C2939DE7354FBB41990B8FB28D578FAD4737DA8
036602D9B929FF5C89F389183F2CBCD00B4F09F1F894D5740CF84CA98EA819BC
A665C97D8F662991CDECC3D44423F534302DB5F9ADECEC131372397BE2798DC5
46A500C63A541D3BF17671FD43C1F0966D4A7F54A7BB353ADCAE63427B07FEBC
5AD0D0829E6E41FB715E15A5B244B294B5D9B2843FEFD16F9125ABECF0CB8589
79D45C48100D409244E3B92F3660844DAF940421FA781D95E907489B353DFFE8
40B688423C3ACC13EC8E627131AB45782949D324256ED16256569AAB3227C5C9
C377DADA99BA3DFD65E2AB7FFA3D0E5C98932E05EE5344787B394B6040C5FE8C
473BB6F803275A6BB5ADEA1F6D8FD6A8213FBF8B186BB9E3F6C85E86E42B4179
B140DBAB955C25FEA9827479170AE6AB695A05E1C7A440DA8749FCF325A4DDE9
4933572DD72B20F242D8A2367F796267AFEE58446107F7D88608108350947148
EF65F84FD35AD8C7E4084658825297D0F8F7A656FC662297C6D7BCB5BE9F7381
08A19EEDF220D5E4521B172F7FF0B32AE7BF96A0A0D8ED7A29A36AB210F9D25F
2326C35A3B1D3A6038DC521206E27433B3811E933EFE079F26E1047AF10B5335
7DFC4A2F2603D8D2963705EA5790FEC72ECAC30C35FD1780852ACB09A8EF59BB
3C3EAA7CC90CB9815BE7A76EEF3B3435695ECC19A940FA065E4DE3B34FA71620
0B83DBA7B83146B2914CA75DC93774B9B039D48C4A2271EE9D690E22595FF45D
9745A5B7501D1E708F72AEC944F2B256ABB8EF345623DF51BC89E953E1E2F296
255B07D723DC008818336B5047857684B312EA100A446FA234185366058EB798
D9035F01DE77FED88A06C1587D1F82D049A2D1E6C6D2933010DDDAA5745D802A
123952FCA31629F0954CCD7808E026A4B5D7980FF35362B255EEC6D093EBD7EF
97A93AE4A3E5812B4006EF59FC53249905D4C102DFC3CB7280CEBF3E7002FD24
09AB6C9FC24420925F01DD80A54683E962767BDEF178B16190419E5892FA2332
4314AABCD3AFBA75DFF9F865C8CC17A2884DAD18E0EB09FFF006E3A5CAD549D2
B0B2AD15187F8EBF757A4AB66131A06E36F445CBD959E396C85116AC7E229222
A49EA47315E9810EA5B01D222405BD7F49B6D4D0CD90B75D3BC68B8C84655B8D
25B123A5272185937D480BFA1B9D9600E9390041B2C6AAFFF778DFA2BD6A74A2
BF8BCB80B1BE3C7B4D56B769CC74247839F954724795F8A504159747149E8338
66BD3CECB0E9622ED06DA24FEC64AA1A5B3C72BD5D5CF67D826C6A9CC79A7851
DDD3608AD84CA5DE56D71DF8537489F2D087E6F8618AA56335BDA1ADE6F682C2
DAE1B08D20275AD3D0DB2BAC39457DFF2F3E617C4E9E9F1F4E0BC81203DC0328
C9D9178337C2077E22D20E55D6282BC2E65D19A15803A6C7CCAF9495A5EB24F7
7E15540688334556AA37E7658FEE9869A5D024061813A413A9FFE782A0AD109B
7D4C3CEE8A9875FB3AA771E073097585BDE9D35FC85D7E94AF21AF58E11931E0
8F481CC225614424F18A9D030924AE01A9714B87DAEC6542F8328E297D257400
CCEA3C47069885A9F261AC5557A602EFAF9AD252A1F6EBF7F6DD9AC390BE93C0
CADFD8E05488062C8C94BA0D836F4126BFBD48C173F21E8C3591A3E33917A0D9
51FCA09C91F77660B5C55357D0754B5F8B5BBE6E87331219618224E66DF57CD1
8C1047F699F1547603A80BAFFF3A40A7241CFF200234FA090A417E78F9D6A10A
365985F7D9A1C12DE2998762B6C788B98F89B305B1BCA2F003BCD7E584163E3D
70EBDA8BECB69AADD4B8267893637369C7729F5A4CBAD8D78B0104975D0ECC8E
C61A221855941919118819BC06955A1DEE8764F4E855156D95730D344E14F72E
3EFF1B86BD4C981B3109A19FC1BF7B4301DCC4ECB8228A7D9FC213A147583C6A
B209A518C223EECF558E6418C80F47D2E56BD7E375132CDAC1CC275051E800D1
BC24D2039547E193AFCD45AD360A543C7D00BD0EC04AE863A04DFBF625A80BF2
A041082E4D4A643821692E2C7FE44C832B9BF6995A304DAA5B9E8C142981B4C8
C8C863824532B16810453FB990F1E06217567E423135705F330217E29DB4F262
050A11FE8B19BF8D4D982C5337146157E63AD5F0AA910EA6B02A72B5AFFE0A91
A7FC5F76F471A46E916C8753CAFEAA66DB00EB4AC62F92DAACA8CB9C8B8FD3CA
45F85F9D3472B51A20A774383FD3D3A1341D47248CC76B930E62B8EAC67042E7
B5F2E05817100EEA6E6D9A00344156B32593C2A9DD645198858503F7B0B38488
C4BE66613E3B6EE2C2157AFC8FDC82FA01216EDBCA97DE0561B376D4861E8616
FB4C7889A31A4EB49C93B637D314982C7FD5FF195A597ED1A516061F918A31C5
72F1164F3A50ED7B3E0DB87341A15D8BBECCB8A6524D8CDDDB70477D9C67D018
9C6EB9C734DF459777340D76C4F7F2F325F764F78C99FD09BDB65203AC151FC7
EF0EE9DF6F6C1A311EDD7F5CD921B809D8D3AAAEC15EC92847B6C468C5DA2C61
244C8A754E31B070083FC266EB5850D333ED1C49CBE7C4D97C0FB2B2AA0931F1
FA223D4921E8D5EC4875FB037679E1AAB7228A32C872E22224738D3C9F376AF7
2407CEE5FE4D089EEF4FE147E4DC41DEF73CE3D7B529D57F922B7F213DCF1B8C
F909690AA656952B903556C5B40E9C97FAF6CD671F28825458A7B01CC7E710D5
7FADECFFE327E1D3E9A257D084970B88109850ACD990092546AF937F0BE8B413
430455CC262E93059A5B79745D40451FBFF2874D9A640A94D0F3EACE5042B9F6
246AD099E125B9014610AAF821D09533D7AD4085A84FE775BEFF8070829B7883
7360339348D8A86EE3FDC79617CDD3E9568C0E6EFA858EA4719B2A623EC9FCFE
5B319DE2507F55CEB554B32D13B7735904F196627E241E7F33E44B1BCAFB40E1
4892D6804000806716AEAED9929C1A0241AC3A262EABE2E3D891A1CC59666D68
E6433B41086F2AB69CCF5E5792EADB2562EF83C9B918E4B808DAF4862F465C8B
54A63AE2EE076A49A29126C5A4879F715939E3538A92472BDFAD334AB425E0F7
97054A2E804194CE5B022D9E5BE9FFF5515C77D78490CE6B997D699E5EB8209E
B1B025A80CAE34104C780DB2BD058A86FD42730DA663EDF485800E59218D7B8D
B684443D4B9080E3759D343D96ECBFE6077BBDEB5A6FBBE404E2A5F6FF00D2F6
62E0214E36E44996C2889D3C44EF68E4E09A0E2F9E60D571A7346C3AA1FE8151
3EAA1CCE033BA003B913E0DF73571A10BF623F5E298C4A1C423C6AA43E13AAF7
880BA5B302782B601BE98546605EA17487120DC1BCE608679DED6BD42A9B56C2
87DF2BEF1FB6302D44AAAF2B8DDC97697AC3FEC999B4B8304CFD3E378EC828A7
F3EC6E2568008F6DFC7CEE9233AA7DBEEFE263B5FB83E8BAF9435EB69716F053
6D8D5AAFCCB3016C566B04255A80C0FB2D38CC7A99DEF731B340CCEC2DD795A5
A71F8B93EB3E519B1A8B7868C178B85DFBE09EE530BA1D9FE09883E39712D02B
B2FE3AAE46D82F1ECD6E4B0CAE7CF1C956CA0E8B5B31C515E1E22B56ACBFD61E
967AC623E11E14ECB5D75B5A0154B072450D2C3FA6B621E8CD0D840054AB340E
5B25A74A993D115D3F29F665C1F035C9E649899F62330FD3CE45D0EBF96AD373
B546D16B2963081E0A2596E303870CBD9A5362AD2B23ED258FB5CB99345C1B68
409271EBC504A6356D561FAA30BD18C764BA6AB57981087E3BEB557E9DCE8A7D
B780D4F11D2F853285EE3CC0F5E858F4CFF207E67AF587343AB6A2F1454093D1
B68FBC0D53C386A53E3314F441316250311673077594770338A896F9BF96F9E4
3F51F478F357336745BB03148728FDB1C1721101606C72FF2EC1A4E8BE81D40D
D4DF41DC8E6923A275A78BF3A39487D1A192699142AA4684167F7E934AC46E26
815E147DE3ADA10AB0A17851972FB08325041B938FC36867A627AC5B6E78F30F
097072524DEB61D73839C43C354501DDE2AF10D76E247ED2FF51CF4040E60F2B
1E6293D77F0D9152E6F2E278070B1FA8D793B1DE313D7862AAF0E6BFFE18EE91
8E814A200FFD1DB44BEC8C2D88FD550AF4B902B396867C9E62A56330400816B9
EBB8200F2AB7DE32188E910E7A529C86EED296CA41673A87B4776D87A317A389
53CC537F7030D8A0AEA21800ECD00A8CA9E14D48B3DAC8BC23B0EF1E766643BD
7B40C57E3A1A2441BBB0011D875C0CACA1D9959CC050EB936FA92CFB8D5F2314
3745E1899670DC72EB5AF530BBACFB08D365307F89B4038C84034F154D279848
B0559CB2CC21764369D89AC6F0EED9A956E1F4703E556A0EFEF88912B215C175
70F6849D9270BA85FC78746416976328E1F0DAB541F32B121C810226CCD80AF4
16C079A4ECBF9D64F64B77D3EB2CE5F339E8DE7FE6079D56717F73674677043C
D7A203D903D8260200F514DC86A8029E891F7AA1F2D684980A55961609F5C1BF
0C0B362E4CCF5B8712DCC813C73E5A2C42248D3C84DAAD94B29EACE9B166645F
CCF1EACD354433779BC372EBD7DD1DC5B6E4A0B8E70B28F80FBB475A2E6A040E
021389E89D5B697FC8F4513EE1D4D25E949042DA15744BBF9CD44C494D70A7A2
37AFFECCA3325E9E505C13751A69BDA5CEAC5FEB5380E83079F7821A44C2705B
0AAFD2D0C1D2E86B3A5608D50778A51BBF883DA448E31527F62F479E98418A0D
6EC7D4506C16759781BF9FE9ED826DADA49E8FC108FFB050674B58E05684E9A7
9FE1F60815BFF868CA9FB21718B45F1D7F03B11EBD0D0D2547F76C8C39EF34A2
78BAAC6E0BD0C4E11BDA2F6E67FE186988526A8006A3898D03DD7267FBA19417
F8DCE55956FA28B3DB191FC2B7B737E6ABCB5B075EADFDAE61DC0CEC89926B61
4ED01565E2CAFA4372F97D652C93F6DBD8BDA0A0D353C40E14B18D2B6BCF7B1A
9C9B8CA6BDFC7EA1F45B8D2847E7D7CB3F24C7CFAC0CC95021DF41FFA15BCD2F
D6B1944B2FD5A4B4225A1C2317C2C5DDA74A29DED7C0A6A2B53A3D6F726200E9
42A62844220A3F9572E2A90BF1443E4553AC906CDFC033FD887F11FE6DB43D7B
A5D98DE8E6B6EDCA297EE6D1ADFEE6997F0016AA809C8DD92412E6D1F3D17801
782D0C7921C43389CDADCCC2AAAB1CCC12AD368D753D56BFC9D8253D20088D1B
EFA38DF64267AFDBC913541295D0082639D8BF382F64C836C33A2FB5431E4225
129C65CF38824A89E3C200741CC03E3B5124E833F7B8B5C551B8E617B3A54467
66E5BC2C591869D8F3B709FD2CC88C3537CEB2B12338ADB312C386A3B4450D2E
18FF31B9CE2A7DAAA9467477AE40DD936C8634CB50BE54C520F4466CA33EAA7A
83E803CD667147E1D403E19CB8E4D19BBBCCA0DB4EA62A95C87322F04CA929F9
78564357C31F9C1A8A64C98FAB501E8B672EC961071AD7E249F79C7CE47DA66C
7D2891D6EC2684D87B06709C44F011DECAC881CFF2192AF8F19F82CA34251C99
DD4F9AA6FAE5F8FDA6AC75A07D0448611C0AF1EA25B7D69765823B05EE8604E0
446774BD69DE129DAB52394D2B2CA27C4CDEAC841F5BA41927AC3BC9E5890927
1C4BA31B65B632702C31FC2D25B6CFBEE80B1EB0FAC82AB008624E7852285010
C20CFB5116452518301F46088578E34678C78036B255BF406E072BD9FB5DA05E
0365227C79AE17476BE21E2F98C9FF245A9D5AE4A04B529CC5F78010D14276A3
92AEB452ADB5D7FEFB9C039984650C88EA6D4E2C9DEDAAC1DF294CF4FDF55111
1795331A7172595475660D1AF389317E06500F4901FAEA78725732E2B445DE00
456D2C4AEB8820227F8520EC2DEDB805385BBAD8C05BE2B369313CC5E760B82A
C23325A9BC8F0F4D25A2EDE83A892B973C38375BEDD3F058E6A873DB7BFC22A2
07397C066602D9B929FF5C89F389183F2CBCDF7909BFE1538F6C80F41B1E6A41
155CFC7A94E04FA7C76FA67A739DDED783A0838DBC0876D8B645FCB5728D174E
411E0C7813CA21ED4D23BDC410CD04B72FC754CDB848E4C0044F56461B71D2C8
D874D96193A2892D37EBB0EBE6B76E576780C1621225A259ADFB430289B7ACB4
4FF74149D1CDE37647092B477820F9B14CC64FDDC47DC8D7AD29D497C8D76179
541D92C77CE22E18AC24D41C88CFD21AAA820DB3B093224999A373A0A53A8D58
40D32212F7CCDA403B3F9339270E5A7C0F927F1E34E9A136FBCAB30EC2B8D7EA
A9745A3B64BE76B894B073B92684849CB0AC7FE659696388D9AD4DFE2A12AB35
1B5A063D5D3333E92AF5AB205007ADBE32EE16758361B43CA02DB2C0F0A8250D
0E56169CE9B7065C2ACEEABE81471E0F410914E3D5BE718E3B22AFF6955D9AA9
B45DD69A84758710BFF01F3A260675D3BE6C83D561E1332D653E3661F2D550F6
C64367252678344D3FF8E3964F70CB63321D993DF752B5F4D09FFDB67E3DE11E
2705E4EF82134EC415467A570B96192C79628BAAE81FB022368E925F47637C35
5348B42E181A77F5F142BB15F213067C3FAA93DBCD98E00C448F263B2B4AC1A7
43DB71A6F5957CD2E63358399EB2D3E6CA68DAAE9125CDC30E377B7845939211
0D36B603BC38A07E5C5D5E99A4AF29BBA1B322EEAE719C081AD29B41053DB673
67779829883982A56CC8DA8D25CA5115B9BE99361AD07946B41C50BE0242730D
FD1F5D10F6657F47A58399026F6D1ABDC3EBF91181CB30CA9D886F4382F266B6
EADC060804C98AD71474C52566828F41DBF602CED3AF80EE6D099147ED02FA1A
3250F71F3C5BEEB4FC890E2AE0096D63365140E0073F89A2CC9C869FC2DDA4F2
5C8C4CB4C3DD6BB86941754256FC5F537264C0D006978CBDE78EB27482C53D58
F76AD53A43E30046E87CE494737EB43FE9404D5357992F6D8C8B94279D75B138
2DEF61D05DDE28DFA2673083368652B2F46C6ADD5125CDF74583DD980D951BFE
4B62F38F99A2CF110FCCA88D299A5B73A81F8A8E32342EDE163E6BCD63BDD1AD
8E5D7824BBFA5D23040315E45F1353EC355E01AE34646FEB2B89F9B1844287AB
82CF12E2C8338FDC710C07605A7E3CF176D38F21931EABE5E2D21CB4849B5A87
1AE316F84A0257F0E345D0B4C12A18D08F7EDFEDFECCDDA38D4EA22B3F912EB2
DC12DAC3E7ED683C64672E270C4656056C518B5F7BC23F4C55272621B9E86189
2DE53E6410EB71E25C1F79EAFB9564F9DD4730AB0939180E4775396B9D6BBC01
A85A85F95EB9E16E22502EBB50A62CECCEF5A56712EE5E31D9C9A7F3052E144B
535EC56A0A2F82A10575488BD181C87EF69EEC20964F845E8C5B8214BF29ECCB
58F1004411957AAF9C33D3F19CDD407CB065008FF04A9641E9D176466B31AA78
63ABAF28FA6AA80BCBE8A09BAE1D0635C4CF1DB2F547F3178487872867CC573F
6F5F1967985C88C2C7002C0A7D6D9CAACDB7A82B585D1E310D07A8B3B284F381
40F05126FE2F6D1B7942425AF95652CF8B3D76595AE1784DF6429141E1E12235
4818845C56294B6D99F7B8634FABE7288C04EC131FABA1937F0AF8EE47D96347
9335B4A0FD935426E265CE71BBE908FA208D511CE3CBCA9D10A84D6D830C1372
26EB16D3762E4F749A571A3745838387B976C875B50929D3966C9832860E7F67
69564B052B0CCE2200BF059FC37FDDAD6C7B6202308AA24EE006185F4F9A8508
8E46C4C2D30C004DFF009713102FF6F0D8FEE52BB910495303AE34C2DD9C3DAF
7520859209EE0038463F6F088D0F9C296B24AF6897483A2F3A6DA97FE22A71AE
F1AC4E0A863F790FE3B666CEB767254F292D4397247D00F55E9F16BABFA1982E
84213F1EDC5D10725514567FEB02B2FDFE212B6607CC676DDB4ADDB047F5283F
EC6625C2A50C3165E4CB49DA6AEAAE9552A3198079368B50D507E275B4B4C2B7
5B54756C00005DF1D7B89D9C13944F52C8C9A39E7689695297603CB5EF8D5CF0
3997EDCE29D0A9F0F7A49B9FD26ECC6F8D27D1B62EF4BCFB0B622F24EEF3DAF1
920796F6674EACEC039D3783C859E9090355D108AAD2BA534AE131D2975C424D
D1FF4F9086F239DDE63EAB225F2857D45C0A93608FAF943F41B7B6C7F29214E8
FCF22144EDFE8013508BC04EEDAF601A0CC9D64DB333B10220EC63D0925AFD15
695D096825DF2FC703C80BA0713054FCB60B527A4AAC3AC93AC43B8DBC1FD1CF
A6DC325414C41B3C5B722259D6FB3ED9CDB35BD6DAECF82A1D7750F3F53D19F5
B8C7C9C2CE1A0BB156FA0A9EC0993AD377059598AA82945B30616862F0EEA282
75171E9CF86EF7743B6E3B898D3358330FC41601EB83B040661E9B7445B58EB9
8A49CE1D75638DBAE1573C58F64E00B4469BCF9EBD0497ABF4E670850928D9E6
A69CDA5E108DFE59AC99B3C31B4220CA2E449BC2817B1F5B4DE767D7B3745304
CCCC0D26B724B75A212B0C9AE8481E4318F1034C48B5AF21CBF4DDBA641A60A9
7987894D740BBCF660AA19921DE10E93D1A0EFE90D2053DCCBB20B24E56DBB75
2A5C092CC92337486129E5B25869E4E6250D8961734BD4EC08E1CA7265AB91AA
9A09552C199D0B25ED043A853ACA9B28384BF244A80719839D342964C35A4BE4
7172FCCD9302078128ECC67D04E9513AE2630CF5618DAEB5365720179C54F90C
EB871078D5621D11C403EEE634AD832F369A1EA6DC0FA3A00CB22004530E8F73
654FC071BFA5D479869FB018ED4756894A174CF2E16235BE8502FA9E4B6E6F50
966B571819D59A4E5A0227C679528C9D5BA28781C1F372EBF4DD01FCDEC032D1
CD3F6545062399ED51F4AD1AB131DF82F0B40B7A1530C9B489865522DED8F134
D3A9AB48B71E8FBE6A0DB8D1D774A7A7EFF533A5AB1FDA2C912562546B9FFC26
F6D3B7C947D04B6C0EE7EC1E2F0E9E2457463E7A4B3EBE0A1FBDBB9F71871E9E
A7912DC0A71AE4AFEF3ED1632ED8BFA0AE8260E236B2BE7A90A9ED738FD89A09
82FB3C27E56A46D4DD6C3A292D96E34D669BF548EC241A2B35B2B10C8C5E3E2B
1EC87E54E2B1DD43A458C4A3BA8EE7E3D074F0471625BCB886B6CE9F96C2572A
BF4A895B7B801881DA24C91C1965B07CB9C474398013F18D7EC508826A589493
862B50D997AD545EC311AFAD7D6632F177624FF004D1FCEBEAB98AC97FEE43FB
FB8DD3A2FD436C37B3B40C4C9DF8D4DB0AEBF35A2AE3F7D9EF043CFCA142C918
59D995A5D188533703387A2AB90AAA07D76C91648652BEEC39124708FBE73DCB
55B4E29E35226F28DB5DE10D63715A3F6915127017443FDB68BD776EEE1EA2C6
2D4BA45E826FCA111DDD916C4EFAAC66CC83BBA5CB7D93FC42992345B8793F48
CA8C22A25C9DAED30CDDB4C3BB8F96158E522ED0A3750B7ABDDB1231F73A920C
2369A0D6D4DAB7BE9BC4CA6DE3D30B1D0296721CD63D7851AD2FF05E3EA77B92
EF2249B814E45E92C768C40CCCE660E7CE09CB5340F1EF5FFE63A9BBE5460AF2
C1581DE6E87E1319D512BF4CEDFAD0ED4FC4DB40369F75EA8DFBA93BDECC857F
ECF31529847210F1115E536294B6179B1A7B62BF5192E9D7B19BE34C32D70AE8
4699D18731C0F066842E3EF09341E0FD76733CA1427B3359A8AEDBC9A62B4A83
EA97173400073C21AE54987A66CC81F3A127B0814FFD646A4EA6840203C8BD10
5A913C910B28AD3DAE54AE8C623D8D46CC7D4293D3F2682C6EB0C32DF2944081
B250D80CCDA3BCA6D3A523B80543E5C5BAB11DF8B9472ADB79268B666831368E
653967795E331132C66237D8F81688CAF059815186C73CF739AAD6452420E361
40620979205FA2920F5C644AB515D94F76AB33A85F5D17532F48C3FB2D38CC7A
99DEF731B340CCEC2DDE7BEA14B249862DB4B6DA468475CE4A11679F2B23E8C1
890AB5D33E48EAFD222E5BEE9FD68DDB77A5EE824FCF86A700E55824E00E0D4A
BA67B7A327429914C49507E9B2B1E29651199EAF216A0645275808F9D734060F
4C050898C15B409845BD274DEFBFF1D8F288C71B517DA5AC63292BD44AF2DC41
F97F21ED1DB3E9D5567F53ECF3CA6E2B708E9A1F5F3E455317872DC66D166F12
6237024F4D4697CDAE9CEE2E413043EDE9DDF178F2F8DF0DA3FFC26DBAC544E8
8B95C01F308DD08EB6CD3ADF46393E057F6E8BD0B8CE6D2DF2E112513211A340
D76E73BD0C8ACCE730B90265F9168BA831CCF52A8141B5785EA670BB335F1D22
1C7AF3DD198E6EB37CCC7EE277DA2413674511CC92AEFC1D09563D5C9745FBB5
6FED18C2B93FC881006ADA6944317997D469E768C4461C0EBFAFD242648D974F
00F81A74AEADA43D105E0B3F0A4AE833DAFF4D59FDDF2410E45B554F6167ECCD
CCBC37A799B58F047E1887DD6009C90FDBD28FFE71F4E6D4D1E7F57D7D43F8E3
C4E29084EC01EB2A3ABE7B8404DE866B320FEFB7B5699EC4CC5AF2D018F1A3D9
F9AF1F0DDAC1AB91FF8DB91018E1A1443CB8897EBB1FC1C2767911E265FF7BFE
1F8C0DB136501C69BCC4C6ECBF38C661C1658178E1C3DC0FE83EC18C1D756CE4
7403F0D6049EC3865D3E82B989F287F68EA4CE825DBC6FBE8886E0E298CFC60E
C533C57743808F92638E4A6C0E9494750A1AB429705F54B5B49FF2314783390E
C6AFC1092DB896BCEFA3B80188A60EA788DD63EF2E273FCB0EF512E80ADB5493
BFA396271E461C5432AACDDE88CF5D93893DF19FD283E1BC19A5F2E033A9E7A1
9741376AB931748C9F9BA10DED060DFC0524BF9CC6D4DB5D115606D7237D768D
25DB44D7FBE3B2A7C8DD95E06849A365F9AB409B1F64610341523137D15DF9FA
DA0222F246CC6AC35838D5C5C32161755CA37FF9328AC395A90648778B2E2DCC
9C7932A77E7ABE66678E0074DD9004BB24A5B0A8AEA8DEFA2A72763C1A622655
D8D3B063CC1D242A501B1BBDC6FC5320002C2B147E41694B03D9959B42635192
E66A4D68FDEDD8872948F79D51584474717D583BA7017D2C31FA4F88EE95D0F9
6087FB6B3913927CF20515ED111EB98D6953FFD8C9CA88A17F552F9306874999
25245B82998874370FF930B0A0DAE697F7F39CDA0A81926F6B143A25A6C48D2A
8650E05920B11492D5F22BB954CC84B925D2EEAB1745CA6A559BEF0AC63C9C7B
40CEC74589FE7ABAF3D9F1762CC0847DFA29A2F875BB36FEFAD8521BFD0A3583
CB45E6BEA7667EC576ED14C836DC4ACE2F183A61078B5C3578109C2CA6E2DEEF
A9099E54C7DFBA7DC05CC647FF24EB3974C265886288FDB9BE1ED38AA717F422
465847EAF45A2D426D82FEFB36A2A946D31979CD7E81F552B607814C210D6CEC
48DA422E3406555B8BAC41EB84C65BE3B036E4DE1A2B09D5D9F03F1466758D3C
D6FB5D7AB1755CEFBCB423E67B18643BBEDC5A915F5C39E1CF7CC308883F159D
E0855DC3515B7FE63B91DA5C91C5C213A951CE1224B2D6E9AB36FC7CFE0215F9
4A2CC7AEED974848DF9018C7EC83ADF543177AA530ADC514DCE543D10BC0EDAE
833A83965A33180B0AEC9A3A9B03A1FC4949AC889851CA0782E78355157D7CE9
88737A223D6BFF7C303BFB33BE530C547847A698F014DA6A898E9A42AFE6A237
BED9DE64D205F8D9E44EE6B885B31F61BDD8BC9A45D4E70B46EB798FC8D7E092
701641517B32D0B95B978379FB6E8E052F80E973E2739F2983868C888DE6664A
C316277D0CE8C58AEFD260393B0DD22003D2E9EE6C582C274D0628AD25EEB35A
C5458A55DACABE676B128D34DAD48675EEB1DF59CDAC54CAD5EFF289A9B2EC29
247404AD825E83F2125C49EB845BD5ECDB87B2AEEE6F60B7201B996A7C66E0B2
E15C2E789852B5AC855899672B7ED9325C8BBDEE9A3BDA1E69CC863659DB1044
FD07C22F29F49B0CAD35889980301BCEF0E65D00BA874DF633D8F90C18310215
0A98556C86EC1AB27CA7EAC37563DD7694F9E96DF2D1AE034C078C70AF7CE81F
F703B4FC8F5B40A37C911B616DE892D01EDFE92EEA4D44E9F55577D929DC9CC1
5F01F7AE7DBB42219D5F588ACDA12597527254FA9C96CE890A74C6B8C95F7697
7E198F06B47979FCC6C3D852B7E7C555D281D5142944D201C6CF1DB2F547F317
8487872867CC5737D25D55247BB1EF8F2164CFD3EB507EA58F34D89C30A2B390
77E60BB472F3CAE03ABFD55B1A8E55EAED9BCB9D2F8B34DC16AADC734D433179
941DB130A4F99898D83C705ED42A08930398CC956A3B16C00DF2988DDAF1C1C8
B657CF2D506B58C94B6BEC51869171F44A2A99BBD6C440DFC2AFEA75FEDD29EA
16466250AF1954FE4F0610CBAF3AED6C6F537FBF95D2C47D23DFF30608168919
7C3FE61A27782C24ED1019A11D1399F01463DCC707D00AE8932A6451747B7F23
FB0172A356855B7519621A9BC5B3B5DFB6E16F96CACCFBE56DFC9DAFD054A063
5565D74A287D5BFD43F0E329FBD4DB3D234940CAFCE9A1472E6D0C5F650DCEED
3C3DC4B9F4BA3F4BABD27BC16F8330A3A461F426952FD88AB96E5C82C85C0CBB
A9BDAD4296CEC91897A643C01ECC659F95BAFA45441FE11F56E225CBE913A024
9D80C01E1D8DFE852B945B142CC4E680B348598A3744487109A330FC50A95A0E
B9D5CFB8948C94F867FA620D00411E5F317A6435CBC02B7A4C4FF2844675CD61
4595153BEC635F902F85E776E518FCCD3AF3A939F36A1C65581A5FF98FEB82C1
6DDE509CC734C4202C854027B6822D0A24ABCAFA99839629C45972A39ABBBEE3
6D477F64CC768BB8F13AA33BC0BE7C552F40FFEAA0895020FEB0FDA1F2F52541
D8F088B8FAF6DB1EAFDC2EC726D61766EBAB82D300511B05C15FC42AC1EEB4EB
450AD10DCCBF38AC12D00206B6BC2F9FB53B640B7A98F536190FCF1EB9AC02E7
01CA4270B4777015D5A2E28C9E89693FE82CFB4AAC73DC12F10E9EB2D08B264F
93947EC13DF7B665C05B1CCD83B5639199A68B3D7575BD95466FA2562AC4494D
C0DF29342C28FA232E4AE96F51B0C1C6A9B7E683199CAD092D5611A19652F65C
2F15B238D27975BD858B4EE58C36E018C7D3A4FBCA73EFF9E32E17BE40F6C787
47E543B5B882ADC95831B8D48F2A08A17BA22DCCDACE8F26A83AA0054F3FF2E6
5C2C7CD975B1F9CACF0A3434316C38983BE32BBE8A4A77DA9AB5748DCBE1544D
BB735659CE152AE8FD1D05EEB57DC0EA3FDE819120E8E0C42B085B66DDA7F0F7
AF0E606A892A549D9872F089F84664351AB54BFC21D3BA3CDDD85018920ED595
6BC7C142CEC49329623722261BE754949F617FF82EF81D1A2E82FD579F5CCDBE
FF01A02D96EBE6F30D7F4F35D7019C0DFB0D8E059A9D5202F9A0BE436A649DC1
6921527396132BCB0121B9AEBA242F0E55AD5C5266CBE3728B6CC6BAD93F1846
E41606DD510D2C7D0BE9DD100BC05BE3B036E4DE1A2B09D5D9F03F1466758EE4
3825D4CFAC421DAB97B592374A9BF3C78A30F209EA5444059BDD7460BA7D25DD
0C40EE263966E1DF48C9489F0351D6FAD0B3185054E1625582C953EAB6AB58BF
DBFA8C3C93DF39FA87966F7897F5314981BF3EB429768912CB9101181AD38B4D
DCF3080E2DE58623B2BBB0C17ED08D6267A27072FDB14C78148EDC179CC8959A
3DAE4B8D2A0F63A77F07ABEA1BACD61378DBE045C71AB31BCB66C4C5010157DC
D1A16FCDF608429DC385DCC9929E1BB1D4C380EA59C989F8261082FD0AD631D2
E0DA633A6E52B55B304C75D03239CF41E482B3A922A5D0374D0D4D62F3D99F8E
1916F8F80D81970755B862794894449A6A3F4B8CE14AB04AB9A0E7897CE627EC
67CD39364B2C1303C0A8AC110F9A5347AE5C098DBE87B454FF6E93F270C62030
B1A659071DAFAB4E2881B49DC2FFAD13460FBAAB0B2EC44BC5FDB43D7FE734A9
5973A65E444B880F42F3E62EC84725604B266B8FDF5DF4A31E592ACF1335D15C
8042ABAE0FE580E0B8C4A6C01F9317BC4C9F63938E88CA325D75DA710174C160
B266057F4EBBBF2A1D872BD5C83848DBCAB18547F5856C3FD32EB2073266C407
57A05DCA0F6B1978FDC55115DCC6A83E38205CACB2605BFEDAE595738B082B34
6FE67180CC3A835B288611DCDEEEB596F4524E2A451A2EACA553C522E0B77654
D108B6C8CD70D04FC0F6BE278D4D1CE1593D63DEF772B67D5BF8C5C3DACFAA2D
D7725940927893B272BE1F1FEC23819A222594D1AAC8CD81508952BBCC9C3B28
C88F485BD8AAA162EB8020572920DD626ABFAA8975515A550305F97BFFD130BA
FCD869F009155E87FE3AF852E839CD5ACE6AE3D30347BF6D8E4333B9C9CFB194
6D49B82616CCAAB75137A312CD82D93D9AFE10197054AC59E721EAFAAEC5857F
176FC19609A1B9028546610693BD95F7E93B09B7EB900C02C082689452E60C3C
FEC8CD8CC96976DCDAEA27BC1E2B0D4C38BD0C67A88D069043F4BD5473D93DB8
84A7B8249EABFC662FA55862DD7CAB96B97609E86E93B155D243DC0167B40152
A6E45850D4507751BBA3989C995738A25BFDE0973DA60DB50C533581716700FD
203DAF0AB863994DCC2BF661736C057B86BF9CE95E9C11EDD77D562CEB1A0D3E
C5F1B1EA743DEAB4FC7D141DC99F7609372170A19CB1975BB904C458BB23D551
5BA63C2AD07E13F93391F24DFCDC473534297CBA6CBE594F2AC01D0DDF917B14
4423EFDFEFBC6A6A9FFAEBB5C4DC13B15102A1A7EAC55EF75A8FBD72D5658999
118608336A0D2950307E0D4A083E1B1EC95AEA2F73EC536A7C9061C0F500F246
B171B95B619F2D01D3DAD9120C7224C2C6ECED524A95C0CA62E0A66EFD9FD46C
433B98CCC0AC60048633B5CD193FA80244CE1848F1A1B1C7EA3D873773F382B4
D34EFA3F376C486AA54A7D53A6779FF7752DFBEE44919FE6E8FA877A8A828777
514064A50DB610D50B43CE4CA78F87D3790E0AB60C08DAB76EA350457E865FED
BE6432710D5A490BA8A0AD8FB6CDE3815F5E4EEA8D21E31193153758169DF4A8
90178DE0E5509AD9F47829E8BCD8C1D536364CC554F4F359CEE10E44C6533692
4514EC0A6A45105B9738CEB68B6A2723887E435E17AD2E2315AD800EBEE3CBE3
104D181024D781F120CB75EF11E395BD5C92E41DD20A80B62747633FEC6187DC
BF7F1FA6794EC4B319959677CB943985B96CA9DB08FFD1438C1DFA98C0E7DFBB
ABAB38C14A3AF332F4E15D804FC94A12B819BBF8799A87D44F2B532ABDC6572C
55A8ADAAD79303CA4038EF59DFAE3058A6A578FFE769BDE940DC778429EF6579
4790D0D31E53549635BB6E9431F4645BA81AB2E8227161EDFC490EAA263A1E18
2DF90DC8D64EAA991441C6CB7D9ECDCAEB8AE5E05680859673EE6A440A589B36
0390E9ADA8D594DA4D5F3D2FD8F9C55E697BCC9D1464632AB8F3E3992EABE0B2
E9A0F95013779F86434F49249522FFD1849213B0ABAF27BD4EFCC01F246A093E
F78B72B2DD013FB502F6ADF34EBF0C50121A7BABA636171E6814A1398DCD75BA
A59A215C8FC1470D926D6E7D4C105DB75C7897D01E67B3480D79366EAAAF276B
D5E1D989BBC8CE993BECD9A30AE49FED4D2F0FCA2BCD27600A5584E6D369590D
D9B1E85677D11E60D5F54F714F90D690640CA38DC804C23247620C1694B11815
F858AC406E1F9EDD7A369AE97F492F3F161094164C7F54CD183144AB772F5A87
8C87A991E6BD4FF89E060F1B93C3CAF37C6155224B10366A907C2216EE842B1C
24FC4634A51C2773E8FBF697768310F537D3CBD9B81CCF20EFBC6A6A9FFAEBB5
C4DC13B15055DCCE25DA868880F32324812A3F39074897FE605531D120446268
2E89D7C9A8DD908C341C55FE096FEFA9EF2AF92F32BE7D2DB9747D2E51E8975C
FE2A95052CD04DABAC6A8F1042FF691D57F7F1DC2F3F8FB20B3809BDA31E4ADC
1A2EBA0B7ECFDD328813DE1D442961F11D2B6F89D8CA8A2CF464AD68D7D6AF6A
8E340B6387284008D49C6CB7ABDFE29A0BE2811E4D1BCD995B4E81C9A3C2E027
CAA7E47CD79BA4E194543B81717EC830BBC686A00D258068BFAA0F540F535D70
681E7B9AE447A751622C8674DFAAC2342258F7A50E7FA9B2D2762E16E793E37D
3F7336F918E8D2B7867B6994E2BA21371ADCB9EDCF8EBBE083F8A9CA4FE72E6A
EDE4373E28660653E1202A07C5BBE9764345EA968E8B70CC8CFEC1EE1A89340B
E770E44A8995B2C26F4B834751F6FE712596ACBE7E49D689F55A65CCD6264205
6654D56C22EE022870674493CE8B815F2EFBD20E109AFAEF6A8ACD0EE4B1C5E8
F40682585F2EA2AD093DD44623553AE69D9E052BB70928EFE5A1C1BACFF9A2E5
AF5FF7AF4B8CCE095EA5A433E787DE9F322C4868E315470BD7619AD55960D114
9906D7E47BC7494B4403A917AC4C818EA103F1767792A9675BD1F1DBD790D615
61AE5C0616226FD7DCC201F5C89E58CFE0D78D95467A2294B0CD995B552D1DB0
833E7F24F4EBF2D95DDD2091457CFE3E242D32E730CECE906E4CB48927BD6695
FDAF4FDBED8297BC94C9578F8AA183BD0500F15833C920B217422F43524E56F3
47ACE3B70B99FE6E15CC3F5CE04190A053648E4BF0497B919A4816B3586A008D
953CD802D0D50B18EDA950C7D0935E2FCEB58C7EDF100B62781960649E627855
C754649A26D94F04A7BA01FF7212B8EF53FD38639989DB792F703E04C504269E
DA7C63CB63C2553F8D12679C504F64A334A8EBF31B241EB75D11AF2E820DAF81
FBD3B30D07D4961B80E8CD320B25BC09D7E5F122092411843C2D0ABC624203BC
9936FE8A6E5F6F6B41EED4FBCA86D0B49D1E00B23D2DEBB95C9B37ABE927D7C0
1AEC33A784DD4B817C5D4BF354F70900B8C22E80E8F2168FA6D73EE1B7F93AB9
53EC4BEC7A100C7CCF0206F4BA0B93C238476269624DD19D1AFE2AC20838CD14
820FEDE66AA40A3B2C60310C10FE8E9E6B5473B80E19161DA0314994D871C6C5
BEC1F0433677F105A5BA5CAADAEA2CA0CF47D27B2624E673236F2FBBF0F795DE
914558AB7C69C52992D93FC8A78E5A88858CEF9F21FE98FE445B3640FEE2BE93
2510FE68DE87995885A703B3C12B50EF4A48C2839AB4BB367E94C60BF44CAA51
3DD6C665499CC12715940D7D4A91EC015BAC8C6E052E790F5EFEFC8FE8B57C62
5F4FF7A1D6A5F626F377CACA8616749D72BF39B137CA80207D88867A43A9D4FD
DEEEFE6CF54FBA6D2E2BC302C4BB90C43C27E56A45245380859673EE6A440A58
9B360390E9ADA8D202510FE2D2F1E2DCEEC46EC0A4FD7D928C73A0E77A748B28
3EFB6DB46A204F0B48F7E00934508F8005DC07F430290311B1A7ECBE48362646
5E105C11FDD07D23E2F105BBCE9A5ACE70977AD8AC96C9258C49F992C7BAD1CE
55467162E0EE3A1B3099CFD272D8366C232B76FC0C4ABE2C5A450D0A9AF03435
E1294132AFCE64E59D9F6E3FC67BDE029490C31153E6E1F55AE7D903630C768B
0E8C25880635EFCC1FB30B630F90DCAA6B8C28157237FC958B948C7B89497C47
B51710D934CC37479D450969D2AE30FD9A2FFDFA1B8952B004E8E5F1500B346F
5182D81CE2A83171CF2BD29C23074546BE25EBB860942845905AFEAEA28B48E3
70607EC29B68D2F5E0021FBA407D765AEE960129F69BB136F6AB848D546F313B
660EFB9F77E223ED12535B736C8CA8A18A5A3651EEF6D32802885A54AC75F8CA
210A788DA71A96F1A3279CD5856B030AEEDD50B84FFA131076BA25E98E6C7F65
1074BC83E9BB476C3A4828882C7631404AA96B1B1CD6C9CA6EF42DEEA1724655
865B82D92DEFB47B9AFB0D33BF2AD98445AFCC3AD4D4627E62D04472C836ED7F
E13BE59EF6AD095E0C4710EB66498F516A07A1EE6BE912704DBCAC99D8B7AA90
56F0DE55F701A63EB6AF36FE2702BF89936C68A836D8F3FB9FEA63977F607631
CAAB9AD5C6995D1971CD164A033BB43D1744B9588D8D8BF33FB94289E2A79895
B9FAD0F13EB3AB4C73493BCA0422BFEB16C6843184208463E73BAB631ACE06A9
A9FD4F5F3E2F702D51BA8E96BAC33405EEEAF0ED833A0567CA015D3978A92813
4E9EDD96EBFEDEF0A55ADE38E1160368778A557ED09C2D35E88EAFE188864179
50D86DBE5E0587A1CCE74ACA1F54D398D8B0132DA1BBCC2ECABE772CF4D70FD0
515F26D772C5164C1FB86D4090A52F7D2CDBF1E507F6D8F511C83745164220E0
56867F21C43389CDADCCC2AAAB1CCC12AD3E0490136E7EC9CA9ED6E18D48D814
DCCAC5BC8C26851A50E4717CCA045B6F90344ADE1CEC766AC2AC95953057B6EF
780BD59AF906D3FAD1402C4D5759E2B167BB03952C823C0B76A2A1E49D9FBCB2
6AD548F07DFC738AED51FF2A3CFE2702BF89936C68A836D8F3FB9FEA6396475E
96C3CDB99303749F6A2E98DD78E13FDA6C35CBC02B7A4C4FF2844675CD614595
10C8B27BF11606A8A4E33E10F6F851C5E21A4C721E07453C7253F0DA055DBF8A
0A732BB8C2784FC53253484E7E814A7E4E49A4642EB558EE527E99124A81C292
801BE97C820EBD868FB48ACF2D5037C337BB10FE6EF2777062563156574C4BE6
07F5FD988BFE8744296B82E39D06968D8D8D39FA02CC1579E43448B6995B4128
F8BBC443DF969CD761001F8BB8F96B88AAB0F1AE25C8B2C32C2AAC9CEDAFF2FE
AE3D96DE0FADC6B8E49B8FFFB40462BFCEC1D0647D0C6097BAD02D292A8DC3CB
4D9A4C45580B75EBF86750D11CA850FBE4C524C7AB901AA3BF912D8433BD874A
2AB5DB30F0CAD2D01608E3116EBD83FD8652099B13DE7A7E0BE7EB5F7DA8C189
EC1A47B95F98FA8CBD1960B95D23EECED90166C4374967CDE7DE30DB3B320B16
8EFC4A16ECBB84D4998009B5009C78476994C0DD79DB358C0ADBB81FDB75C861
C708F3CC10782141AEAF920FDDD13E133E3B708FE70B44D15627F13A56B8474C
7B96D88BC01D1A94BC103AE9C86517CBE897B4E25B87E43D6DBE792D530989A0
E93719AFAB36B57A266DDEAF81A2F9945CC2FE2A7D68F5A1BC768B4044AF9078
10E2941C8B7BA2FF06BBE6BBC4676999A2BF5B57BDE47B618FEC0BAD0B1E2EAF
502404E05DAA3587125083CE8F97F8B9A87D11D4260640321814266824AFD9BA
988495E6611219C1404AB3944A50876B2E64D4B147061F76E55A39876619C2B8
34DA51DC30F047C54D2306691BE062018151326243A67324194ED6C84AD9BDF8
2420A97A70913A22C5151BFAC07C058F94E9D1D89967EECC81A3A73EE7536BD0
93DE3FB8C1F990E54D8A121E720BB9D55FA1A375061E413009A7AFAA7B96FC57
238842711C6C29A8F52D1ADC8C654310875B5176B13E1EDC62BE48A74DC4534A
85857C09EF80B6153449826A5FDA0C7FA7C8E739A8B36A63BC1A6F22B2E05DC3
09FE00285017660E48E603CDB01F061DA835C177D11AE9DAD98D3CDEFC7BEFCB
8110DDBD267178E57EC24A5E958F3BF1597D1E381263450CAB21ECF33F8D5C9F
E9C15926BAA66CFBE0957E945BCBE9BE5E1861CBCFA56CC449E7CE42A696F69F
AF33EF6B28C527C33694005C20610F4F7A5EE4E6BB5C5347197C85A056F6AB71
7FDFE0E2E53B8B2F8D21E00E60A097B3105C069877373BC98F21FF8F230DC51B
393211EB6B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D47BE08ED6CE96278050BA67680A3B973613647
A93FAEC756FC253B3693FA2D6491B276EF45751EFB306961788E7C15297A5822
AFC5A2DABD0DBBFF0BE135267EA6B9D1B4E4760ED14895FFE1F8C3F564830001
EFA901B8442BD2D98561BAB9A0FD939E0F856E4D2EB04A9A4496704109B8A84C
EA06AB0999427B3B1BE776004AE906D0F22159C051D88CF573A0255D99B56781
CF326CD11919AA40B096769CD6D0ADF3ACEC7957621084ACF21AF1F265416628
86B67FCBDE9370D4F5C6F5CC67EBB0A2727E074090DBCA459AFA1A4778AED4C9
AE5400775223E684BFCB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans8-Regular
%!PS-AdobeFont-1.0: LMSans8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans8-Regular known{/LMSans8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans8-Regular)readonly def
/FamilyName(LMSans8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMSans8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-446 -314 1510 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102E5EBE9986
D95806FBDB9DD41BBEC9E98875643E43D499FFB2E48F58EF7FA59843B8CC092D
AFB67604D9EE4CF2B87CD20222F6DC988B80418F8EBCBA06EB7577DC5FD0473A
55FC62B9B4DBABB8776941636268C7D4F704AFF1C85927E2D0C03585B60D5DDC
D07A1FE61288043CFE477BEC3F1A0BB96666D44F8286474186BD74037C208527
135C090597DEC81C9F985DD84C889A3A32B3805B9A653C816C523D14F6215B89
5E57100A2E43AD20344D45AC8419E928E4DC97E1B1B2285602B23DF89E149B9C
975AAB575A17772D4BD861C8DA1CF693AC37BA57CC51B9CB825607CFDF41347B
D09648E797437823A12DA3ABDAED3E3E1042F4B4BCEC0A9CB2517C0047ECDBDA
507600F57BF0F93B33764E47B5572573253F1439C293C4CBD1F018FCF994A313
30701B46B9E83B3C16E17036EAF2F0072D5CCC8AB293EC15697C72C097565D80
BFDA02AD9357437E60FB57F31BD6E172895D0E1212674C1401A3CE2599E7CED3
EF0A11750E622958C887E58600672A1AF43AEEA1D9BDAF69147E613C610E127C
9C8190A5B3F5F9A3CBC6A9A61D1970F030ED0D623FD6AAE34DD12E7F12B00204
42C239808277550593ADE8004B53B5FC0BB124F58965745A82152F9860FA6FFF
94BFDF287A8FC265B6B0411ACFEFA520E402DA17AA6B6D0904D8DCB1A56E96FC
6A1C7300A4455F6FF98AA6226337D5FC699B1A0900F049453DCF3FCDC8A3E397
C011C9D2E55D0C2845297B4C50597F58C82B0348AC299172DD191715C1FC81E2
BA9F00D26B3D3098006622D2740A0EB0743B1ECEADE8F9697C7F782265A58C4B
7D8B174654EC7F3BB8ACCAD729170D100F5DAC4CB7CC0EEF74D662EEF94702E7
9237CDB6E3DAF2C65E5A10DDD52EB236C227C3DEAB315E5CE479878DD60BCA19
564DA461E2EC66ABD6E7B4952C21C2D3E37C7B97175C5668DB4C64CD1CC23F71
36DE0E644436C67784A3CCE2F3DB601601B011F527AAC3DFA31A51A29C8C564D
794FDAA23AD6B4540055EC4403642C9A62E6138192E19652A050AC81B2D1D4CE
B9E40F7A0C351F8C72E4CBC21733BDE3623932A66FAC82D253D8251331B62150
06FB1CC2CF016E6BCC1D7732019B86C11D799B79F33BB09CB6771F637BEE71E6
FA1A18E90331A61A3162ED7589B05BF937ADBEC739FD624F6763A3B951E33C7E
F5F1AB73604DFCC2AAE3C9DAB3E303F8B56D1161CAF14DC202B636DB484CCA84
03197D7542BC10E7F9CF2FDDFE83B006FE1A6D13C6312FFAE07D32B62AEA32B5
8B8D127C00F3B953CDA49BBEB1B913570A51B2F96D302EF8913C6BB60B5D3924
78A32E11CECAEAFB7D4C6127C4A26EAC47FC77E895E36ECD8881C06314B93496
2984C7FE400CCA5A5007E9E2A5E16116D8483EC235D20B206326C7E4FB54256D
88CC4BD4DC84B5EEFE217BE0B436583B1D92B5C563266755B07C1E9658B8DA9F
48C8E10FB7F29D1EAE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA5D9EA54F207
742D31C0B69DDD41BA88727A80869626C7998F17B7D86D4D6F2D1C5324484C73
C05C61C3CCBDF28D048F84AA23178B60E4042034918287418FB5133B36447469
4193A44EE745F76035D5073240736B4F1BCE96F57A97F831842958E6B6517018
BFDBDC3423CF739AC5B38303C3D4DF196C462C8742A5F062F69B935148E81C55
7C4E1B77F5441CDA5FCF63459352EAD6B4A2A666CC5D85855641CB31507D0100
B13895988AD2D1F4DC2FB40840A0CA3622532561939CA66F3375B5C3CC39D956
0C010A1363F725ED71E3442C0A00DD938476920CF67869A9DDF5A299FBC13BD0
1C6450DBD0DE1D9CD163520429734028AA2CB185F711441471ED972022B4D84C
F007C1D9B1D7E625D684C53723CEDC5E42A4D17F35791CD367DFB3078ACB6507
E89B97158EADF677C788A0FFC3EEB38D5ABCA560E04852E7DBC79C2DC8561F80
5C0DA1E125B17E572A8DB0D0565F05E271CF122E3770490B395E4DC4AD00B46C
36448FE2DB35CB45276DFB339097E9EF935AE0DE2D8839376A78D70FA44F1974
ABA413D7143EE4742916BEAE0D21F24A3E4D146DEBD198727ECFF842EF5F146D
57D0287D62D1A34793E173D032F71193B2E2990ECE96EF6D712B4FD780875393
92EA302BFF0EAC108829820238728C6305754EF0BDCC8B7204CBBC597F2F9C95
9B69948674FA133F77935F24EF5D7522B401F3A783BF474B153533C05AF2DF8D
DA960CEED2FF28FF48234265B4759B50D24BD711DAC557EF4F768148C131B265
25D173F07ADFE2C2AAF32AA0B556EEE562106998F7FBFAF7313B1FA589C0DD6C
A9B5A8D9DDD843E6E80330277D6DD2356D80BC6180F2E924BAEABAA6E2628007
B37A2029F3D9F5E1728F408B89D85806D6A6AD7618A93DC4A85C4076A95944ED
748D1BA12F86DCE859F1F48AC037F26DEDB1C48ABA2768E9177E799855334DAC
3760EA1B589B5562F3D48655DACF49BA37A4AE429B79608716438BD99613EC67
5F40200FE34CEC934F99C14E909440B5457AE7487221179B9885F7A063D99B45
1BFD666E82909A1D82572176422757988D43159FD814DAF574818FC2CBB20431
9D5AC85C1B43EB9623DB369D2E0217DE72D65B0B051B0CAF9FBB9BF6FBD49BB6
7E0D942F8A6C4128F6504B102B0745FE0B75AC33767B7F328A8E8E537444EA52
7D0E05BEEAB3FE7CE7A912D2ED5B1A312F39F49CCA03AB14E973ECF6FBA5715A
BFC0A841256CB0CF6C3BB7835B7879610B1CC822723CAC55F4D5236628739606
D8EF5ACD55D67F59F402910C9019348D3DC98C095C782F79B396A22E1CF33672
06AA0B64A692241F315C706A63D4E868BCA7D2327257F5D1E734F6C9F5BFF0B9
49E663B43E9DD64413B317E6F789048BC0373F3DFEC0732A013ED31909CE83D6
7D926816D58D4E2306026405D970EBE10C56F78D26B63043DA04979255F46F98
5FB09548A0A791E52759DA17CF323880E5EE7E183DA41EF7DED51327B753DEDB
0BBB7D3F03768BAF8691733BF4866B4307B811177772757A5E242E9C1DFE6BC1
9A289A91A14A31E867986EF67FFF02FF5918214A94887DC1FE0AC324B8402527
50485AD8A5BE240B63473C5E2AE6737C28A3A5C25871D190E4758A89DC70366A
D98D5AE5043EFFB246B66F0E152F2E3B592ED9E467BA41B77D1F76B0F9D70399
4024A3214877736FEBD350E448AE18CEDF9A16487327DC3CAC470BC33A673DDC
442CE24B1ECFB9AA7B9F0E4E6C466BC0F5343D79F05E923D3E4219E0EF172C72
ADE99EA91ED60447A31981FA522250FA2FA236F9EB4948B3E81EA3AF8F31B1B1
D9F9414BBCC9C581C511E03F16516C2F90E2A67D5E1E56B3655232E12A593720
9B8A96BC02A0A3F6507D13CA75CD212E6BC289D87F1E08E6EA810D7009159F1E
F437C9FCB684F78E2D55676A7A4E1DF76574B9CB3B3BECC71B411C533A5CC6E2
35B63CEF024C8BA2929F03CAF403BB449F19BE418B41F69BC01816313959F99F
66693B69183FE722021FAD70D99E2FCCE6FA2197E832B73E12469A20CE3D0401
A7B165F5271B585DFFADA4DED6DE32F1544D656858D63D1A2CD07038820B5551
9520CC06361F075BCCC0E4C90A598B0F9E10A08965DF291829A64F790E760888
FE23E05C921096A1563109C189915E0CE863C36799BA1D959BF559D2B4ACE3B8
2F4A439AF0F1B4D45E4DB17DA98F338822A064FAE54A5D3FD3AB69E247AC2F17
58689851A95377CBB943C4B9D41C4A6A03DF00E2D87F00952D0388B1A525FF7A
5F91AEB765F263B1FD2AD2A0410DB57B40C31B5470133F24B7EB6B0A4C88BD41
5FF70F0BF5894EC8965DA246D11B291C3F9A95353F3123530617454823BE99C9
7D290292DA35B180B5A4F17FEAB60884397234D59AB7D172BD52AC78D6445774
8E0DCA7FB0CF689E38310E3E238ED8CE6105F38E5492F48B3201DD7D202BB697
39202BD31EDAA120CE54ED0DE7EAA76958C85D379F973BD6FDB5D9614FFE4770
E2D14124C1C392E98C29986B14D002EBFFC08628185D92C9E7BA356BAFC4BB81
A046D60B5837D5082C3A6CA52CA367F758F8460726FADC19D1339CAE67C84563
320D69DA7CC04FA9CD62FC8EF32FB37D937B48C2515A46A3FCFF48A60B353267
B2BE5B8178E6B7889A33771F86276E6F0AECCE8337F7EBF5AF326230B80CED91
3EB6E69DEF0B1B4749B362B9150A402C5C350ABA90302BB0F885ADE41E03AC97
DE639CC512BDC51EF25496B44AA2C809CAA830479D9CC088E1E84FA3B14E0B3A
B862C32C7D61E01C7084E3A0161D14E6B6923D472CB3620C8F08215E85023D0B
7359E0EBB5F06D010E6BF1D35B1BEAF4620A7A8F2CF6EA77EC690C25AAB02410
8A1E5025FA641AF333A71119C04E7C670E03482CC063B7514074DA21E7742873
7BE681B48CD2B5373E2BAE652F5EC1822325C767B37870CB666228744DB62F32
588C5AA6C52CAD68B04EE1C357E7DFCA59E5ADE840293284CAAAD5C8FA79C79E
C2E13B44602369AB74EF77341BF520553041CFFA987C6CF164C2564BD1502C30
42FC860D2A57D5DC569E3BA9DCE374762E175DC3DB37DDC78AFD3662E133AACF
5D118DE26D1A1F383A2E3003317B192D35E89039FD9BB9C374B5FEADBC644F5D
B80AD83E7792DE58F4194B85D2E9C5611A174BD260A65396CD18AB6DA3F5432F
46577F67F6E02B76C71D6809A3ADEC3800693DF0F4D969531C45FFAB9BE24C3A
E4A566D856ECF1CB17416E6DA3F0D737557A1B3BFFF929DA57993BF9D3E0878E
AF2A893F2BCFDE0FF82A43D64F460CFC3011AEAB4D1ED1978FC7659ABBE8471D
7D32C88BFF4EDE18EC80DF2A54210D9739022860C2C9EF3C05ED3F23674D6B55
F28153AEAB5BE44EC6C7742590737E7FEF50B56093A0781629093CD02931932B
E27741EEC4A0102A61086064FB56D54FC54129B7DF0DBAD03F2D8BD8AF3E5EB9
BC7BE18F5EB7A440C673D6251517FEE07A077A88210B7A95379D2D7E532DD155
061B09F0749544BB71AD967C4B8437470E4D020FC6E867725192E55BFC3C84FF
FA505C304D514E5473A41499E485AC556CAA8ACC9B26296657E7F047BFE6E513
E36230A5D2770A1D34CB9E4779A061895D94351B3EB1B3B900A38CC0E7B172BE
416FEA0D359CBE04C83230BF3F1AC0969FA9F42E8B65C94FE07B3B4F4D28531B
B0EA4DC019180B7B822A634C4E7192D8385D9396135C859A0A499FB002F71DB5
4F35AD3A5788C3B5485151F4DEAB7461609D1DB2E7B283104EC09FEA182E84A9
AD4497BAC4EEB67A82B811602EEC2931708C1B6589A066E3C09DEF8C946669EF
2C286DAB56E32353E8D911AD061A8C29E5E5B61343F51EA4B67E162F85B6EE78
A607C037732BD5972859B613755AA32928A75ED1629515FA33D5F39264ED6608
23484D9F0480126A31E9EFDFF69219562767BA09C44B8F1E68BEBF387FC14BC7
3C45930295F6BEF10FF79D278FFC3C51BE1AA7278BF399F131C6A1AFFC9A0D7F
F6D0C3F6913518950F8F70A8396F54891B2C02490D0C06B8CDF38105C15DE2FD
011283A92C6EF1F4931DE0B7C7E22A39CE53FABB454EAF6B554DA06353DDFA9C
87125E5C9B69FE0A5923903200521CCCA936D0011C53E7B33D5B50ED7BF3F412
89F48D0877B9D8EF7CCC237877477FD269525AB4625AC68DD3D87F43426B6437
127405003E194AD04DA05B8585940B8B01DB390A6D1415DAC68F0A72ED24B70A
451B58DB04A1F2B707077BC18F608B50A802C65011720B337658E1F16E079E66
3932EA165F4682A66030D729C4DCF2E9E0ED2A8A24A32CADD00CD19C53C42E82
1C769735FB865860424EA7F5CD9AC21EDFCA5E4AF324E6C818F612F8B4655058
AF93C2AE5D9FE9FF8952BCC0AAB8BBFE5C889EDAF00C9C984618D80BBB749B8D
92F22E3DDFDA20460C55C375A40A34BF6BD8F34A3AE9B7678F96A4B3894FEA6D
990549345DBD2BF8222935D6DFEDAAD93A074010C5626DD9470582E82C122CF9
AE7D390F878368BF418BFC665172859FA935BE50B2F7ACF320513D3154E07738
A2E39D6AC9429F1A35956A69F8AF8CFA76772D207D8683066FD5D51EDEB31494
A51025787AB6ACFF6967548E00ABF534D4380E4BBC018CCD4E1B9684D8855A6E
BFDB495DD527919765B2CB6F50AF0F8D0E550C064FEA8E67ADFA6C1FE3316D2B
9D748212D1F4F10F1F0CBBCB31825E163FEA3BE751DD385099AD8C9D1555076F
312278CBE2276D9B038B151CE7DB91CDC063294A1C509A5A29792615890E7169
9CD9BFAC818A5ACC13C5B1D171268B38732EB1EC33A1BBEAC0D2807D6C18DC6A
CF5CDC8A222C25D7D7F48A0A94D2B63EA799D533F1948A36F07F2E642E6FEE5F
D39DCBF8FF38808118662259AB0CCC303901A207C83125D327B2769227CF97D4
7608E12E15E4A069800228BAE3E6D4040A1FB1E4F79EBA25BBCAA1C4F19C3E5D
EB83811355CB98A0BB2B6D038B3E0E5E88944720EE44A47E6D5C64DA4CD033E8
79C967DC7FC302C4D295E606E3BEB5DD0B068D6CC5286E64F5C86707D726E8CB
6510CB7C057C2D55F38473D4E6923069B9D6F6420D7F2AB7752FFACDD5D83C5F
7C45F4A670030B0854D6E51F1B7D279051FAB8406A0F28C8FD7A0D4961316F64
1AF07BA94708F9CFA0F45AA8AEDF7322C3FEEA48C6B4DFBDB48F7FFD497736E3
20C2E418683FE6FEB1DB4D034DB5A047B8D574769188C06533227FCAD9D6B9E2
5671F9AC599A40C37B2439C06FDFD22C0355E991C525AE6E8CCDE226F4902BF4
6D68C5D30D64ED16B9DA0C6C6DDE7E4D47A224057C14583B86DD4EBE20A0566A
F29195C653FA085F712258B8A1B9AABCB357163C94B93A4C903A65E8C8A0E10F
842B11A789F23ADBDB369626DB03244237C980DFECC233D463546CF8E842844F
51FA314E48DEADBA1FABE0BFD016F19EAFFBCA71F5C7C882B7BF79F5205F9E9A
1EC74128D244818F88C0623EB67E43E583D180C5BFEEDDFE8A7E2F2BFB0BEC7D
CAF35123A7ACDC2F480480B6E53E3B08E110CFC9CCEA5DCB1279D5327814B63E
4301F91DE974B8DD75016BF767FAFA1E8FE0EE6A8E81E6A3BBF9C1524C164F29
B7619E86CEF1C8D3D84C9892F62613F3FC722D561C0F8CB185758B4AA264F37E
7F9262FC8C671FB33550D3CB1372C5763BB7D3096AB2F6E1A835006F1BAD3946
92F6539C5901A885B611744B36A8ABC80E5850F9C7257D03BAE3D604C6018E72
85C9712F76BFD82B5151EABE7353E85131DB63246401C56A3FBC11FAEC8EAFF0
9F46B07FB43B695AD1DE3E935E231AB657C704B4FAADE3CCBBDF8528E352D18C
95C6F3F033B3535A024461616399CBF1AF4356E7EF60BA443FE0DFE3C33A52F8
6BCD6B9E50884990554D08F54200A21BEAEE003B83CC929683EA64FED1C0039E
45D7A3FF6A4CD12A6D5DDBB402BF674E3EE413EC351715605A9EE21CF836572E
2BFFDD9A56E20DB76A8B55B4A781ADCE73A0EDF0957C9C1DE3C78A0AAF7DB2EA
B7BC46BEFAE400803D67E797DBBFD885DC2D0892F92F1E523BCB1AE8B9A31FAC
398FB4643E2AA1E3A0E2BA5F4498C221EFEAE6B514EF820ED6185E535DB5B40C
3D294DFF582F813D52392995D75B70F69B13BBA1A524C7E49F93B65E328BC845
27AC936AB56072F0A343B799141D1A818A2AF47162F944EEDE6EB00B90B6C713
679FB038E7F39CA5D52385DE69D0726FC65FDA29EDFB3AD1C5BB064CFEC333BC
FD5A093BAB44BA86FEBFCCBFE37C447A0870B7575D67832B87E025992C81E31E
226BD21D46FA245870BEF74C9E4F13E53738592F3693928402EF59D262694BFD
AC3E01A37DA199F763183218442729250427BDA1A81A0D8E75880EF3D7798AFB
3431A9C936BA966A5471C3ED727BE7E559B6E54B0C7A64D4A2C86BED25B4B8BB
46BA0B2A96E810DECF6C6DB8F03151EB9F049AAFEF477BE13FA0D8C8B03C7E95
61C08C78B828247251FA5672B756BA24DB51A2A131B516923D5CC746A429FC4F
4E325B88AC132D54A5A908B5F2A32F38960F407F17434822CE24ED6438F2103F
4EEAECD38BB01B2C6F44AB353429CAE52817C005CB1C0D2451E712783BF1258C
5473F6392DE999D149EB7516379A6FE7C3F1CC17443257F69DF430A749D8D6D4
C669B2628350B9A35A359211E502114BABC2D268C833BEB10F205B7C98854899
BDB7EBB001CD60D01E56D959600E3DDBB1E00F77A025329E966AE0B5008F455D
72387C1C42775FF674A31B8E86E7FB15BD745CE175B921697F9D9FF0803559FE
A211098822ABB685A7B72000C7B2DAFF6236CD773386E362EC7FC03D378C834B
1060E5A374553F2AFCB00F41988BC06104402ADEEB9E0891A62B5B795FE1FB8E
F40078DBAB966B9E1EAE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA68EDC3781
D69EEA4B6603E0887ED037B1BA381D130F993BFE284FFFFEB953A66691941FB3
973E9829A8FB165974EF45ACE597058C23D84C0FB8BAE6E8B396D944701CB4E2
06A23361C0DD06828CFB7991365B0DE01F3B42F0842B5F97C1A80E20385D4B83
145AF95FEBC160B0436A59D19A1E25A95E9789BADC6967F96E550903DF9B8196
9B92BD5E4DC2D5C51DCFE8289BC38A60B266753A0AFEEDE7CF408214A4AA87D2
D24B95D35C381AA7D2DDD0EC0E0A6820937C4EF7A7AB76DFFD907C8B8C50EDF3
82DD9A66685AD18B7648BDD7170DBF7DC6E91446BD309C11024D751597C7C5D2
5EE9D241443F85CC936AC92B6A60DF390CDC69EB0AFCE824D6275ABBA8F5B937
33B9276FE692D018A917B10B32ED08E7F6CE867514943204490600AD97453C30
9B2164090EDB62EF3DB681E7ECBAC9BA76988AF9D76C0CC64D0E5E8BFFDF68AD
FB8871F8681CE6D40CD7AAC72A99F351D824F86D33CC89BD70DD41F5E0EB6876
1C112AD3010556416D3ADEFC9229AC326E34207CF35CD7820B221FE0B71A0CA5
84024C9645755996CBA28E1B03E56F779FBEC972E383758D612268B74D87EB98
86385A3FE61B5BA1369DB20EC80C8086DEE33D0348B23A00B6103D5F03C92D88
5953DF6CD1C03F7CAFFD6A9C3B32235DEEAE54372558F00F79493DC9242D937A
210D35A2988F74C13F38BA26ED7D36C34AC14C42BDAD59A999C2D6657E242BEB
BC0D9C6CCDB639869DB9B64157F68340AA9A61DED2E1DE62B8ECE240DBD1DC8B
E3824ACE96F08AD7471F3A6AE580F7C454CD775D439D8A04A8C8689FB90EC439
0C88171BC21574A5D8F47774DE3E4F7620199365941F774F8CB1F07D5498B68A
580366ADCF316AE98921E493A2689450EB387AFAAB7294AFDC10B1F671F82148
EC95F4E53FD20E5A2A4479D59A73A9D0618F0E61BB4F263BF9EF4C056B20BAE6
9307301C2EC84FD0382A70848E0AB53C41A3615C381C5147EA040B78BD3CD79A
B95E63CDA6BC967638B244B8F8A03F05F01B3E96481D1B738D0627F2FBF79761
5694450C2484D2F89FE733D8A98ABDADE1C8034DFEC90D3E1942C400E92CE004
DF0D1F6AB3972215CAE0BD116522F39D52AE693FCC3344D4B1F6F9AD92CDAEAB
2DAEE928681EF627A2AB993F12E34090D278D7151D59D40D28184F00034AF1BA
0D985F14B9DB208D130BF5160D289564770D0A5EEBD80DF8662752F76649AA8A
88517E73083A5C8E612E3347CC295CCA92E809E0C72380B92F4B946A7BAF3483
5CAF59A28E19BE0B99F0EACAA52EC073331BABC2B016D44D8E284F66E2585DD7
181AE09F38A8152E34920B956EA14B436A6EA773D06645E292CED6B53805D979
8A83E2D5D4911DE42B2B781312D14C0A9051B17B14FB582DDFD8C365DA27E9AB
50A76B7BEBA99F7AFCB7180595E88BE0AA93A1CCF7B9759374EE3616F1BB7699
807DD31DB8AFA9ECDDA21B78E1D5BC70C8E580C38844229F82B839CCA1C0AE09
3DBA1D9EE47C2101B5B731B135E1CE6BB59EC45200EFD4430D13D9A09962B800
173EEC4EE8F59176658EF2812342B5B654E618E5CD3EEFFBF7EF4AEBF73E7FAC
41B5943794D85333E05933FED408128AA8FA7A413DD93D7AE8AEE5EF40BB855F
6102028A5E6BCDF281A3C0B28B692C979B4525E8416562C7BC6B7F6EA8BFE3B7
659B13AEA47ADA41BBA4474B7611AA8F352C05D180DF588DF93B6925100D074E
11C6D28804202FC52331D6B04D84EC272A85F97D2358B1DC13AE97EE468A87B1
41453D3D3AD224EFD9AEF1FB4B72CB30302F287A49407B6BBD52B5595B333A06
422B8B9A1BAFE11BFEFC732FE8A4A6E63B4A3BCDF9F7404B3A8B7DB66DC15C4D
BCFBA6CFA43C9DFCD712696B7F690799312E6D43624E87FC2C2B2FEAF5063298
B51480B7BF378ED7ADE96AD6748FC3E232C24B1428ED715A46B49A949A57ACC2
59A57EDC3CC7936E8FA1B18EF281D267E9F13AC2DFEFF928172C3287CC3B9E04
F37BDBBF4F5ADF386732F01C80CA09D45D51A6BF150E373526CF552D7A8DF463
20AC8450870C62ABCD02C4D45AB898E6C65C603B93B9E631A286198CA1CAD842
B231F989B35049CA78EF732317132659D260ED8D40A7CDC1FEAC5D42760AD2E8
5B0773EE1BCB9AB893B47CB379FBFEF01761257D3B41B76D0D8E0351687F491F
1ADC6BC40B355F8AFF84853C785241E1D90225FBAC151E7E0B19B4B10F383E34
FBF5A82D9A43BF1147961005065A79F196279087A3105438B41F2A3488471595
6E10F03083BB89F311F38E8043FA363DCA07A106C93D1677441EDA83014D7534
582A02C675ECB0DE30DB4D159B65F6E5571E7997ABF7A447BDF55731E6B46681
83E906A534F29DCF33411B194DEE2EC1B99F36FA1A1523B3E7C4F285F9BD614A
00DE6825572189A19315AD3F2E108B252D3920883C966C6C44E7FFC2E83ADA76
4F9A37C04BBE3A4BCCE3F55865F40BD16B00DF6CD6D43AE13630EF36C87BEC3E
18CBD5840C449117E2EE51E3EEE31CE465A89A7E8AEDBD5D60BFC1685D8258C3
499E312CBC8343D16BCCEA2FF7095CF0D1383F28A7F63C417E138400A942CC3A
6433960D33E1EE046A77D04437427245EBBB483BF04529AAAF9C00BB99AC1FC1
076060B63BA2B5866BF2DF4C69D5A523C43FE8BE4C93534D92A1F7EE43181ACD
124BCBDE9963587B7457D56024D95645ADE0D95DEA7488F0BBB5DBA537BD6B72
F43B9E2A0BE014F4E3FF4D2C88CC28A96DA754745A78A8D1CA6B77AFD930EE8E
E6E1550BCE4C8D55C078FD5DB2F6A639DF5EE243EB211E3D4C07A59213121D49
AE96FFE4EFE0D3E18D6A6A7FED708690C50DDC35E23519E8607FB26A2B460700
4E960613EA9518E17A619020E2E28F86F1994C370331B59F5D9488EEC1E95419
7DB9D021D5FC3A7279A4345FBCF25CD74F91C9239CF4C16C523352299DA2A220
9D543293E0EDAB19EF1603373D80117733976840A4D7ADA56835C3543CE38747
02EE51D126BA52B695052710CE093591DCBB139BC3097572AFCD9FD62125D6D0
7852FED0CFBAF54C32922B78C22473A46643EB24D790A249E0CA07F17E33F837
9EB87D967CA358CDE81DD29BC34E74E76C321EC112D917773469165B0B27CF5F
7135E69A4AEEC0DFD78D5E805C62B161701E73234DC803CFAF7C88ED35A539DC
0D9AD37FDEAF4B0DBC9D59A559B2BDBAC48EAA0CF06C0F45F6B26251A1FA52F0
8BAE1D64B9FC32A684AE896F3B63BE9141484BDCE75BEBD9D6B46ABBBA618BBA
0BB81D85EAD479130F8EDF79051836E66810A1779ADA929D290F7DF353A02267
E55B1C0FA3C2263FF9FEA39D7FE05A31A5C3E2176EA8216653BA182F835615F7
CA9CB0B17C8F8227A0EB3A11169E321DC669961FAE7D2C5D61A9288B0D36F5A4
3DB1D11FC82EACBBE9E029CC1FC1E73999C6561ED9A1C7E025C4632EFE47FF20
438FF0E862A507CCB8337F060FFE21FF47D8FE250804AC5A885463B7F8BCC002
7C40E0F9DE9385F79D598998FCADE704A105384FFEA5D9EA2F610ADB9AE7757B
2307A1BB9D6797DB5439B0DE80DB56E28E37B8A1E5EA3A48801CC51BE0E836B4
2824DEE4ED90AF97200A10B3992112657DB21DB557949B1D202003469068A5BD
2017D3094B67D6A21F2AA9CD176789C3625B1AB3426B888FA36C0B09E627C556
202E6EE6C415A228ABBEB01B987BD60E456345A25936885BAD5819D5447468D4
4C6D21C92805F4C71F424DE860DA6A9FD2DA950FD81624036741B04DAD715504
DB0DA14E2352F29C37BDAA040F5644D0FC640E09DA401F9E8B82E5C7FB106DF3
67CC695BC660D7704664695A83680221C6397E36FED5782563C2CAF198CEB491
BAD552FD0CA912D7A12E6590BEE9492DBCC1F6C1B64632B2FDBEC9FE7C7B0BD4
19C0E1F560332209F3BB6C732E191427FC63A7A675AE7AAC03CEACE460FADF3A
174028CBB2A2FB376964E4A17B88C2772507B4068D433DC3BCA123256EF3A379
23A0EE5973D33D03AEC90CB4833761BE0D28F083CC88399722991ABFDD8E2BF1
83AF14EE2C20505409D58295124AD4D3A37A9B8120B5AEA2CAFB0AD6858EE08D
AA4B54759B184B30DA0E998966ACAD7D02D559CB82CE0E04016C3AE50698C63E
32A52D0B10EE7934C215451BC9D441EF8278B9D00EA80D1C427F14B549B1E8C8
0D263159FB18C27A41CE503CA972A3213BD45B03B68B6BE3C94EB9F740712035
9E05B21093A62F75ACC6FE2E31C8759512B691F3A5BE51B3A5CF1E80CCB977ED
5D8F37B922515858D697A44844F2C663C70EF4AD2D5D52433741A0018C54C076
1615331EFB774FF0E28AEF7A13CE20C001C456C8E677232BEF8B5D749B9C5196
B7402FAB90009E74D0E4C53FB5ACD20F2D1C3B89D1804177877292ED879B038B
129055A87B1B55B3C07C499446B6720250258CD13E46E357EABF76D4BEB29FDB
D80CC2AB803111D25AB88EC0FCA991BAB36F860EE2D2D0919FF7D77FA6C43C09
71A263F829E50980DBAE2099B8A6CF2B43814F0539DB356B8F5A18743210743F
07AEB5A8DED24F62FEDCE93A17819A13DCA189C24257B2A81857BDC480B1EA55
3450E5876064E897EFBB82AF6876D6E1B21E22E1C003BA6D507DDF6348A2FB5B
9351B95DCF4C908E318DFBC5BAF5DD8E838AA5510DF27DBBB755FCF8D8637544
248F4DF42211F575FA7D9ADFCC84FBF13FC11A4061B193CA2F592C471FB73047
F2C0ECB0BEFBA37CBCC7A0DE20F697627A5CB22BB38684900E5C34038EFC2A84
2A1398CD0098AA5A9B1F303521BB5F20FFDFADE25F5AD955004796A42327BFB2
49CC6E4FCAF7E8343A5087059BF320BE19CFC0F93759C6C58A751E445C1B53B2
0482F94FA4BB5D4F400EE710F8C5B583AD7EB062ED4896BCD17274EADD1715B5
BB2C49EC8DA7B66BFAE6FE28C81DADA7046F0E77C5DA8DD50867B4A0CACD2F2D
E3B6429FB7EB71298D06C572437F24D25C6D3DE6269767AC8C8E508E600257C7
1AC139CA000B293D12E5797D09B504F072B85E8CEB992B23C5D0A1D3F3212BD3
519892743056990D2A3E3CE7ECB5AB62A2FAFEC4C4516A23DE1AB3ED4A7757E8
4EFDD3443E9890586B5D2007C198C5D25D13C524ABFC48D81D3B166AE6DAD65E
FDBC65BF856CC55D2B72AC6766790C81ECE3210433FFAAFB47F7245D182B5C65
AC04D5E62FAFECFE7C1FD1BF4ED315F7D4A0689DF68098DC2A5596CBD0C8B621
DCDFBE203E46D03CF4D270C2C6037CC365F8B761A85276F5E835118A584DBD87
5150EB9A6E9420FDF50A7DE0827EF64BF6205962D185F051EC5EA7745824534D
E97048C86E56719A898B9281FB64DC6EFD4437C60E5FC1ECED458CD1D0A2E22B
1D7AF107E28D0E3F82547DCE8AFAF85D0CD869B34CBD19E95406E4B2901527C8
153B6D31B9F3C0413F8815D06D5FC36307D8A6AA30AACEE651FFCE139E58A441
527F6EFA598F92F6D95231B9FBF4083B75C000F0A56FFE04BAEE21591AEE754D
F8B7E987674DACBD96367DEEBD1C88211FEF0356D2953048929BC4F33CD46C31
D39779BE3DB9AB5EFD9DC20D2FE81854A273C2802AD907E93B3920DED5382021
A0937C9E52E20B6F985FEC3F98CC4AFD52DBBB63C0DA21C79D59AF592C006F3A
4D202A0E4850941BC4A8BBF8E0DC88EA2446DA52244ABF32D353161A36DA2D49
1E96D2A106B3A9AAF86272A1EF176438281EE772F0FE4C7E0CF1935246F44FF4
AED9A4A2196FB25F41A15D8BBEC87DABD1D76311D567EECE1E42FE830D775031
078D302DF1EBBB9CC6BFDC6E464CDBFF900BACB9EB17DD19E97B2A6DC4B6233E
616B7ADB6943063C0EE61B625884DF5CEA145CFF73080D808F421D439FA56850
FEA5EDC06B3EBB3EE241319017D7CD992096FE4DDA936CC61222F161C4B06E22
57F6EB8031418C83E0A8AAA0F61F3B74F4A285A98E8C2289567906FE61337CAD
44686AFE62D900B1B7463B16492EC628DBE6D3D608A7BE0B7EE204C112A20AD1
BCE8B254341CBCE4CDE08008E366649A7710A01D1518D2DB628C3C99D0EBAC0F
0017D917875BD4F1848DF187E9DB879617A22F788B1D3F388BA91519558F5D56
4E695F084C94FC6DAAFF2A9D3F119E9C9E53EEED9787A7A619EA936D0B6239F7
2579B0E99370DA9C9AEBB9E138237A8AA3D32BF8D6E1ACA3F8030312588A121D
A10DF8A166071BE79D45CFE4070F971EBE827C4A232CD4F1778AFDC33C0B57B8
121AD86C5620623B98752E1B1CAED23C6AD9A3AE11C6BA897ECF13CA428076E6
C539F801DE5EB05DA5C62E83934C9095647DB2619576A07E6CAC46739D685FAD
B6B36AAEA183E79E3BB86BC0CFF3326D228F714D0380EC24A664A90082606C7F
1BB4B3427F73F4B790085D9F011420EFDB33F682C3FF18E73E79CA55CA4A8185
E98E9577DE92D32FE7CCE94227FF4DC5CBF25A6193C9CF70B473DF109A7C3D4C
4D2967CB7BFE0057FBAD53C403EC4BCD0B75DF8008633BCACB1FF8C1381E3715
DC8998AC0E556F16DB74C13D05E062FF908B5D3F367B5D51AFE225349BD993C5
E52388E98E4E3591B435E46158F978A43F9B7EB8B4768F074A68770A0A4E059A
A2C7DB1F9E870B800C9AD569B7CCA54D8487B1D3D921B34BBEE7C595B123A580
A6D198644049DED12F4BC6817D52589F8A99057B450A38D203F15211DA39F2E9
7C005162093AF7343AB6B84F18244527FD1A9882D4E5880FDF42B1E26FF20C75
007F00EF200564FB5482E70985D09DE4E3CC6CE631EC7E3D00412D24271B9FA4
FA423352785E026CCBDC51BE128255220DDDDB5AA80C637A695CB6CB78AC3ADF
0223DA6C547263340213128BC9D5A34D990381F5ABAE00B92DB5706028329860
CF5D2513062B2A4F53E8ABE6A6FBD131E1691F749DEBB18A5B5B90D770272BD1
C6BDB9FE7824823E37DE05592BCE6FD4F9FD130556533D433DD2B301F57E9701
D42D07B766627CAE032BFB0780502CA4BFEFD9B8F8A920E5A97A118685847CBD
B581008F0BB247F677235362473F7444D59D1A435C79BA92CA6DE1FDA94D06EC
532E7F720BEDE2D292AB7B01E9712805970913F606819A6424208720BA965127
2DB7C1C5F01AEE38F69A904DCDEE56EA78FE086797F74F876028A7162C2B078A
014AF3BB404CDF3CAADE7A8ED6135F0B1E52913C5B31CBF550EE7E64A3684B3F
2BFFB49B4B37FA670D5F63C7878F6672C51D672D6A84C5349A3779622765E360
285C1F860C6CFDEBC07D3F1415F381236D587753B2D237AB3A9CE8C36492E99A
ED33256A1A6F3303F2AB81170D6B547540264F9CD0A9842A9410A0895DF7586D
30CFB57A4AB8B9C17DCEF9C7FFDB640D5AF34C5B64A3836FB9E60D974D6AAA01
EB592DD3D81122FD57E41FCFE62C17E001C9663438517C100DEB0C7D98EB67CE
9C25F62632EB30BDE3AE3EB199A8A506B9DE4D054F3B943A621AB4A04E5063B5
2DAB36E5FA1E8FE0EE6A8E81E6A3BBF9C1524C164F2B12446F194C07D88DD634
787FE11FFA705AD8EB27EEA3AE3E376449DA4F0B66AFCAA928F06CDA1B45D2AA
0C022B64BA035E02E462F9DE3FF3A8CB067FB6BBBF8FF77FD758309CC82CA5E6
AE3F820183FA16E59C55091C22CCF313C333CBF22FD745E55A85BD6420F6F968
B2F6AE2133A32FD0C3EBBC3CE060E7BEA026619E1EBB71D61651F11B54FCE233
A82D98E15954AB01AF9AE53F3EC95992C09FA5BFE86E6EF6922E8C9CC948BEF8
AC77069D64A294FC4B927E16F3C2247BBD4A92BE6783A7FE49E9118C94F79ADB
280E5CC382ADBAC2897F69823BAC1B0B67C888528EDA585C83533D0E15B52CD8
232E2BB8D40EE21FEC76772B068BE06330A5195EEA4D59F98C4B03FB77685A0A
D426DC91479077EB72CB06520983CC6741DE803E5B6EB1E7F5517A8607148FA4
74546E37FD699818647DD35544509FBBD85CE5A22853887F68EED03DE18F36FA
FB39DCB99A05EBF832CC0BAB1256EBEB0D9B5DAB1C7D96028198DFD7488D9566
6626F2893A987DA9D0A45EDB6812A309A42859ACD3A12C462990DB2960ED2C62
4CAAA8C031D718CB10253D43D480E8CB37E31FA6A8206F6A9A2A9E1CFFF12053
489240F7B0D095E5B3AC70F1C11CEB9E9EE9523460F1114794E91B0A972678A8
E98315860D63EFE6178FD39A8BFC8C054700D386CDF3420F37BCB6A70B9A92E4
6CEBE92A653AE476ADAE3DE5D771C66E86F97387D4AE97D6E82427C7224F1C51
72E6D0D74FF48C306A165BEE5EE95FB7151157CD3032094F3668333E249715D6
CD80DB7D48766CCA05322D6308C6BFC2791F4AEC2207446F6E4B973D2E8B7D56
0376C0E8E99F2A2EE1D6F12A029BF8C06AB67C7BB260937BC426C835D610D7A2
03D903D4E5E221FE09DA8F0F6CFE3C91EDB41A2ADEBC1668DD7DD744370DA44E
5C5434D732318A14DAD84076D3EFC518601DB4688C47AC603543DD80A85BD27B
EBE97A909B36BAC3EF832D8633384E29387CBB1E1677A0E10F842B11A789F738
7FE701707CAD347208550DF890CF5924BC50D349A731EBE51A8BEC4A742712F0
0B16A6798D6760D9FEE55342DFF1F43B5F2C93E3DE4D211B78DC484B80201609
5DB85068F3B5F4FCFB4ED010744C0D753396941A903A9C0174C638C7E933DEC5
A0694421F7E826D4D257DCDEA253CC89FD9024AAC0B8B6A023886FCFCAF1C321
5B3631AE438C767DD9B71530C5F01BE2D2611CF9644C28F3F02683DABCF46FBA
30A15F3334CF0FD9366B5A94E01D4290EF61D185E06F8741AE6FBB6DDA9C8EBD
E42F5C0EB664806741C62354A35CEBABEBC3E7972D404DF023E59EC1C87AE564
889FC5377F0B6CAC75F4D86B9770C52BF4BF5CFC849CF2523466F8951DB52E0D
848C5D9668F6CC38917E21AB938CBA6D95C14BEFADB9037FF4E50E5E93449EAF
9BDC42C781963830BAFE4D6CD2356A3D2733F23563ABE93581FEE0B3C455B0D5
B1F30EC46FE8971B81C4AC560D9987FC1B454037C7BB317932882AE82292FA3A
F8E8451BE9E614F8FE024A7CF2E0E605BD8713959EB30A10F6D6500A617444E8
CC782CDC50FCEC4B5D63D71A24136570B4C3191D8A4E83102B81DC22CDD8965A
3DAB92D56D2C38B8BF73E85DA1EF9EB934479F0419EF57E1B4E6E7487F9FDE14
522F964D66F7F24141CF51338B430356CDA1866716FED77BAF3AB07D10B751B4
D088DCE3D5FBF7A0B1BCEFF5C2FC3FC6CA25DE86079D9FEB49005FF236732286
C17218A1C3F5D1247134B47DC120CC88ACA8C346EB436961C2AF7784A47BB023
B3ECFFF53CC3BA9CD9676102B0B9E22A4744EDBF299DB408B7B0B56832768B7F
6B8C3381BF4903A735B7746BB6812FE53CA839378BD2EF0242021D85C50EF4F0
FA7E8DDAA7E09DEF389AEA0AAF7AAED4A85C93979445E8D1E5A9BDD3B5487D61
56A332F6ED55AFB396E0C5AFB06E6C5B432D14B749A0FD6CF1BAC22B20AAF0F9
C2771DB146D3D081B83B18D4F7A808F1DD37AAA08EF4F57EA64B4B227379847F
318C431D3DA016F0C8E94A5C3AA242C9A7373C3A433FEC533791CF0EAE32CD4D
DBAEE2F40653E139692FA8C9525BCA925A37EEE489C7FC5E4422CB0728999131
21F70993A43676F2786D00CD23C6C8A987B9724E973A6321E5DC175A2ADBF33C
3567BCFB11F1D6D317D469F446BF8053797B53E64D40555EC96E760C8245A1AD
9F508D02F21AD30FD0099419E94B1EAAB833E4E31084024D0BEEE090454D6D6F
0B20513119A844E6A8FB598FE53D04C8821AB92B0F5D9DC9D0A91B93ED65003B
D0C4D6608F6C293E170F6D341B2BDED5E5EAE49A38ABCF7A3AA69F62A6FD057F
51ADDF7DC9BEC731AD6040FD9B804FA1419506786C8C6E76A951873B419669C1
9123B724B353CC0E698726402CDA46546996D58107C54259B102F4291FAA659A
CD0120F4830EFED86917C5CEFF9ADFD18C0FEDC24F718193599D9E987C17802C
37E47BADCC1E0EEBCBA3D8FBF7A0B1BCEFF5C2FC3FC6CA25DE86079D9FEB4903
E58EDC00A8415D70BD5463DC64D0B5DA53249395953340583C00360A382EF21A
8DD920396F7F52B7D55F12FC0DC685BCF9798C2553547AEBE17B1F48E22B013F
35362B8B81071A62AE7E7856ABEC91B8CD1DC24AC1E0C34544C409EEB53974A6
9D2FC7B2005207EE7676D8ABC72BB1AFCEE2C65525E3972E426CB8A75DB1D127
B4AE78A4E9D7784DDBB7A447DA4C9966E7932404B1DA364762A983C97520F9BC
879D57A8292DEE3122B527774A74ACF833A43FA3CF732F443D1B302755CA7C1A
3014CD8988E575FF7EC3E81A5DC54529103ED8E5126740D42167671A7E0B03D6
F7EFFAF597F2AC5D096A327C7EDB6CF1E4D7DA1DDF7CA8856A61906BB7222DE4
2F65F49426F8DE55EC36DB6087C93FAA703EEC7A2E1E0CC035BE26A14ABCBD65
BCCD8580E3B39391DA58096830FB6A44FBDC680C52253D043F9A642688D107CE
2BD6C418461F5A24D4EB1107F3C016142C1A8B337A0907F9192DB48AAB64B1B4
2EA3CD41B29EE521879E4FE07A9BE5700C1367B3DE3CFB76378BF839C4F64FD5
682CE86CA4A71F71CDA3E741DB59A96C113F239B3FDDB442396970B2C343CA86
5FD1EFADBC27F1D1A6D28C2DFD8FA0571D0F96B18F190DA0251A6E0C0F58C98B
26492559C69C8395B1FA4C2F65D032F694BFF0ED77A7847F7C747410CBBA2473
F5869ED7098A7A3D4787A965192CA6DCF61AB5B28E406FD90F58E589F61C4E60
87B3CCE265D1B9CA8F039E9969CC09F106854F50DEE5F66EBD5BF7B5E77D508F
DCD0BAB32BACEEC18D44944553A339A4F5D0B6AD45BFF4891BF8C1CE2789B469
CE5593207C521F9CD08ADE0BC698529167C5272B065645C76FCA01DE45DD5BDC
9CFBBF7D2C5DE29315E9606751D0AE2AB43E7B4E404285E818185E9E344F881C
242D395273D98D7A005395D8821E2A6B0A654BDA31E2C7AEFE726FD3303189FB
B23B25B8BD6276ADA99501947AEAD6D9670DD996AA9FE4D4268A3FDBF8F1AB76
D96BC48AB4BF001752E0793D5F65D8D54F988704260B0239602F0B1F0FEEEA7E
E276418D27F5CAD8E57397FDE2828C097DE4B61F61188A78DBAFBA196652FBBD
268450564057CC2A94AE03DAB88E2AA787BB7D77A882814A24E8A44E42451F69
4443F3C4E2FC9541C8344D357142F900C65F6F7FEE25EC23E5DF02A3787BDB92
4556202343547AE295A66B7B588B417BBAAAB23C2DAE2558E51B717F320380C5
68A69FB50CC2C87D18C2B4ED22A61D0064E657D284F314C5FFF34DA96582B96D
C6A65774C7A2BB95901F805C7547D83C70F475A2B456CD154DCB4F6B2E00FDF9
22E5AD3CC4B98CA26C0EC99A82329E2CDA61D7589E8E6BE27E0F8B23F904BC79
105C0189407D8F58A60C1A705D2F30D1986CCB57D6ED2C703750C1F5BE99B93C
89A55FAF85482DF365B85E6610F58CEEC2E489FDD33519A9F3D62B6F82A11C1A
D82C8C0D2C9AAC9D20720A9CFF0CDD3656500A2E7B835D6B8B8EBEEB770C1ECC
4FF7651ADA201BC75B97C02A98F266538B4F5CB6DA9FA35ABE8B3E3BAEA9975B
1C685727FBC0A61C540EDAF667B62C6B8F9469F2DEF33F9469908611B68EA29A
08C1E703C6CAB40AC2E6A67EB3B9C5365ED58416E707CBB5E92735B8A7D7C3CE
1DE88A95D333F5A93E0E8663E91CD966AA325E53B7D6B727F9EFC9CF32B177D0
293C2361739163497C331E225EA840DDACF11CBAEECEE06E17A0EE3A61369DDF
237C1042E7B643E1B92B17847CB544E01D0385CC1227A7631CD7ED13278D37B7
3B3EB9ED1E4D21B3650614D02C197E20321B7525E1D9E24E4FF765C725ADD7B0
D3D48837818C9E443E5CEE55F59F71F0F38F37050ED90715ABF72E6B2AC886EA
396C89FB41D00E53C1E49622A4FBF591A10F345A86ED00334D7EB856F7D84597
813143C6EA619B272A658F19D6B0B08EF396DE1A0D5308CFC19A359ECA8B00B5
9BF0D72907460348F711B16C66D238D0776BF1049ED782EB24229E1A12F791CF
64CF9F0654CFCE7A47CBCE1B4E3653ACC2FA0094ACB7915123B1430C26AE3DF0
2D62C5492B5867CC87FB813E14483B6B86962B4DB5AA828AE35FDF411C67C6B0
00E3F299C91B2BD788A8DFAFCB0BE38C7135BDA99A37D37011B46093EE65B48F
FE475CE2C8B096E95F14AD6D1095D49BD42E8F03735EC54ACF2209E549CCC5B9
CD6BE2DA76354CE0B7B098437FA6099DE75B9CBC6BC95872AD72C8A4F1198D1C
09F4F9746D4CAA2977C9008DCCEAD3002242E1C73391024EAD72FDB73E6B0A72
DC3A30E5A4E030C6F4F06F27ACD730C45AD590922CBDE170730C9683CAAEDD1E
1D5BE625782D7FB2C40ABD866C8FEE4830F5DB75B506C2D106B05D63335A6CE6
40B5DC604B5BBB9C29AD17EF16375DF411DA518E1D24BB7F3DA738BD9294D374
2F4AE77454CB3C8AD32686CF45B2FA95FFEAF947BEA0CE2BC63AE88998CDE07F
4176373738DBD3F0D34363429EAAEE65BC115FE85EAB71AF09E393CB587E9E16
F2CA5D158D9457467E95630F4E6D5EAA810E81EA676A2F3ABE3182C289CC0D6C
6F16CA1D4DAF1F586142B2524A7465FB3A4396382B88929108A8DC1D318480AD
2370D9A9B8AA355EE125EF08557C8677302BAF9183DC66E959787E9774320C9D
089EC538F36EDD3B07117ACBB1BE480370E650B2F47F17B895DBAAB8B8115717
E0DEBB56F1322C02E5810618CD209B9F2893B59E81369BBBE90BF08A336B7D29
CA6CC9136B4ACA36BCA85E7599E62B24D7DEE9E5EA11E77FEB8D2FC1121054E9
734B0A314330FF3DFB3C3F8A4F818EF515825DD2A736E37A6748653DAC85F37A
AD7291F49987F215191E1EC56C3D28051E64772277992C137CBAE5D35C4A2E48
9FC621E3725251E1EE2571B826496D9673C674F66CC3FABBCF1166C51965FA70
CBD682DB0DD48B1EC59684758411B95139588DC4E39C79F942647F2DEA2111F0
6336C3941AC6FC1FA1203B5FFB189D24AEB7E2F091C54A502122A4CD0BCC19AB
8FEBA7915B2CB5EDC38D612125A9132BBEA218E41F78D8CB892034CDA328D128
9252DA67BD3D85CBC2257647189AFD58B3DB6131ACF8BEAE8012F040141E6F72
6E187C262C9231CBBCA6A1B92BB98F32ADAEE1D07A1E0FF0ED27A0AA0897C51E
B8548364D268FAB799F4D3C8A292770B7EFF0B2CC68A5DA7532D59F08C0C9CFE
E354F751315B460EA0EB7306EA60CFDBF8F770F647D21FFC424C72C017CF889E
232EF1B8B16EF7CE5B2236A9FE37E181683BED544739ABC0F8844E19E769A89A
10DC867C2B091D79E7967E675523578EAC8B32B6C2E3C60B7512E9BB3398FF7B
8E3A6B54E1CF0BB5E6CA21A1AC76198D8B2848941A9058
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: FontAwesome5Free-Regular
%!PS-AdobeFont-1.0: FontAwesome5Free-Regular 330.752 (Font Awesome version: 5.12.0)
9 dict begin
/FontName /FontAwesome5Free-Regular def
/FontInfo 9 dict dup begin
/version (330.752 \(Font Awesome version: 5.12.0\)) readonly def
/Notice (Copyright \(c\) Font Awesome) readonly def
/FullName (Font Awesome 5 Free Regular) readonly def
/FamilyName (Font Awesome 5 Free Regular) readonly def
/Weight (Regular) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -97.6562 def
/UnderlineThickness 48.8281 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-55 -126 7797 876} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB42825F1EE6A16966D49AEE9CA4A40B7A
AF5854776BA4F7EEE4EF09BE48B41B049B631B57F9DEB79BA1DE47B7C025B39F
3CC77C4FBB15C9BF3A39C8D400BD7D15BB1412AE1918DD7B05716B41DA299FCF
AD90249E2810CCCF2846402BA975F3C22EB71AAFC244542E9D89637A8C5ADFBF
15353388B6157899849622386D6E6C5D21833A4E65E7303B41E883D38D716DB0
62F74345A65CE4761A497FB08B9A25B9E66664161CEB9D6955867270DEE0E401
31F86D29FB0563CD4FD29326700D47EB761BAD490B34237E79FFDC28E59A8068
E834CAA2B607622BBE67AFE1C272D107BA5BD8DE0EA4B2B3DC67E7214BADAD1E
A76E9B58977EA1742F4ACC0D760938CFAD2E3DC88D02A5BEB251511468988115
E0FAFAFAFE13B7605760EF839540003FFB548AD838174CE05D71A6768B1214CD
8D87B67A357B0EFFACA44AD60D34C61376F8D9ACBE386928B5E6BF6E43BC355F
0612FDF3EE643733F0204CD3FB2C78DB23A51AD0ED4AE40005B128526CE3D935
4E93C4CC2299B8A1CB98E0A797DFBDAFE0C0A9DDB400169F2249A36DEB007377
415DE7BBB3BA135ED8FEB0E93726B590B966EB542654337DE3757C907FD26FCB
C11E6CA66EA5C31AA4B2603B12F4A2CBD1B8D162459917F8E3E5CF568B184FCF
96D47BF50D4E4E478F955B7881CA0788A3A8375BC0DC89E0566DB2B05326F88C
961B746C3011918517225CC0D043CDBD6A20B5276442D9A6766BE68602F52CF0
DA9BE694589B774B9DD2943F3AF6A80A7F73BB8F2C045C4D8853613678D77AE0
6601BEA3AAB27EFC9CBD436AD6ACC0878142C2589B613311565CECC788612FBF
E26F57DD95926ED2C2072F15A3BF5B487BFAB8FCB844E50640DE71CEDEEF3F09
560C0ED85E0EA3D6A5ACE78BB9F877B6B44BC193E76EE8105785B12206C83DB7
CE846E264EFA661DCAB0B1943033E10F64E5CF3EB75A686936CF41A97ECAF39F
6E092843482615055C0B21D7D24912583E1D059942B1126D64818925C8F7CA38
02EA736D992B05DE87A06E934627AB855FB1A93274B1CD5D8BDE758866F65EB0
34006AA91C0E6D29E427F53E697C6B51484203F8D661863ABD443ADACF0A96B8
776C69F8E6581F6BA078052BDA698AD12C9B21AD15B9871A95EFAFC89BE25C59
DEDFDB8EBA86B348444F3808DF56063BDADDAB27150270CD89A65F0D9F7C8354
7713EF18FF48201FEEF9713893C0DB47C4F724375A5DA62080CFE862A102EEE8
879398F4062DBF8E8A654C5C80B96D1260C1AAFBFDD7D3AD39EBD925D93D911B
BC47CCBEBEE12F97F103B2197DF559EC47E8AB95D1E6D886DE4379C92D8725D8
58AD5B1101CB78BBEB4C9A89EDCCA957875FF1546DD8A7C2F6D18C5030CA91D0
E22AF3728FBE421E16895E0CC0B1B06D8F44658D920B2735F371B43A0A8B81F6
380B7792FF4702DF76A7C9F596A4C500D54153E806722B84450931FA058D875E
C8906237CFE0073760841AE34E952DB8EC3B60A58ED135F96E99F10358C7A36A
893BC16BA76D17B21D0E6763B4ACACEDC1B7FDAE26C6CD65FD84B47188773A3E
27BF2113EBD4EF47391A9B3DD12426421E9DE6711068FA48A2F5C619416BB442
87D20BB3DCA4DAE1EFBC1B2CE1781E3192CFE0E6D6D6236AD6A058605883C08E
E1463C8BED397EE9CF5E4B8FBA598407877AD17677100EFE007749F733DDDEE9
38D9D27B9AB0FFA12CAD128AC610A01E536FCD422A0FC60ED9622350B2759CBD
019C9F276BEE219DF476E0950534C98E9CEE1C02AD1A49CAB88AA27801B39E1D
9B95860956D9EA73FA8C29DA88CBDD5BA0D9B8D5445A52922349197FBED94E86
DF242EC2C9D4D57C9C0FEEA4A45C05B85EFBD5E355A6CE512EBB35D69830C5C3
54B7D914701863DF05CEFF71E0DEF44E22CDAA357053C056A47F98846FCD19CB
8883747018B59D6A17216D8A767210685EC057CD62D9E17F988611C211403C08
1015080B728E38C3D63C1E7015AC8B2254F20F935B4B701C6180C7D0E6AA8EE1
69FCF505C1A9AFD682995805F20ADF5145986312F8FB4390833BD4ABBDF792BA
D34A6F13B114EE42ECFB4EF89EE98D26F0DE9EAF4A07A2F40BD9C1A0F2FABA09
FE71963CE223651BE0B8569FCF31B5D28BC0FF4AC1B9B29921C1244B2D9B1808
9C4052C38805A8B296861BA710C53D64FC7015D430250437181DC9EB0F40F971
6A5491E104FED02BB16812BEA5D4CB270370FB5762D43A5F34826B6F6C553B86
EF5AF7A7189F3BF9D12978AAC7CD5E57D478780822351664C8ED3F57F52970E2
C0A6AD50B15E0E33BDA74CBB9C805DFD7B4D24F5995FC4E630CEC0BECDB1C0FA
D1C6AF03C2E74C1C53402995029A878DA656741F446B9867FC598BAFA1D9D420
EF2FC5E1D1FBC569F9776ABBE5E91ECC3E212335ED23C597E81B11478727A9F4
9793E0F9AD423F19F73F2768001AA0661B3FFA70EA6A5F3E4AE59F663E8EA636
1397BFBC68D2FD29AD4F710135F0111F4C47CBF4120F0BC4313D8EFF983A22B5
F1C3BB8EC74CC89A1C18F07191F334A38DE9E30182B87D34632863429F7A2AB5
D0716C38F92534A4E72F40BEB99FBEF0B918AFE46B202339F32917A2DFC195CF
6507BF0488EFFE80491731557E6C6FA6DA6F0F3A7963A5ABD005E90739363219
C2CD41E57C7E34047D27BA3A51834A3C29C418FAB56AB8D0125C86E99A5F04E2
AE92A7BB92C0C34BF9DD56E3CCA5D1C668FFA8DD5D0D6F57D59AD5BBF7EA2C65
12AA1B3C89B9DD07EE2FB7623935D7F830862ACBF070E0F9AB9B87F030DB0555
3177E41CFCF05F5B9A78A117E58C4946B5DFDBAD465B94F92B2852D85ED4A51E
32355418B3B788117D7393E462635AE44B46971D539CA36D84CBA981466B86BA
A27B7F753C574588112CCC9CD0B97FEE118E52F047692AF83794DDA3384494C0
73EF0CE8955C96EA620F00B4F44BCC3FF180BB4DC91AEE3B16E11186A4D6B151
1757B14E14813B86135137C88B0160C3EA7585AF58D23C00778FA2B530AE503D
7E10DDE76E6327484A5AA6913E9355FAA36DA1C4032838B984DC59EB72E3D847
7EE3DA85B5D08776E34FB0A590755D8B210CA2AD1589A32B3B8A1E3522FD4473
5F2FC0FAB32156413D3EA1CA015FD5EA0AB6C7C573DABE8629438D967FF15A24
F32E20B1BE37A7D7F20C6FE0C5DB002B815425176D86D35CAC59A1C44B098701
90FA9CFF0D696D730AAB9661250E019EF860E546EDC5E4DADC43E1F71E250656
F8BC5A614D0EA8E1FC4C2C10059D6B655A06766230A2579B0B7EDBD17A1D4DA6
3B3586CC8F1875DDC014A572D22A8920A15732BAABD428AEDC3BAB62F60EA18F
035C828489520E6934246BFA7C349FB04552E5D01AE8641944D4B9A2D46155C2
E9964A713FB52CE48F5B72969016B4BD26B0CFD04EFA8BF580326635B854790A
8EEC1567EF66B6421DA775166721E58D1AD8F5AB5A693AB30AC3631FE7C56B7D
638C82546579DCC9FC4DD0323EA910462ED542BB0595EC90DB7D75D1D09E9CD8
C9CE084635BD4C91A76306B8114355CEEF4A9BDF97FDC4D9E1467B325CD824D7
535EB5CA353B1B576BCE3C9D77D9D8366D15BF5F0A74C3638DE583C7C23A9E51
4D876BC5E7203BE825F5BDA9A9D8BB2AC0733D7D73ACF7CECD45C445BAD345EB
8D4E79DD485E9415EB8F27D658D841CCF45B284B25BBFD97E51294367E8F0C90
27221038BAF769AAAA0B69D88731BC7733E7C97DC5E67779C94B8F83AD0EF1D0
0A124585E6B64C373738486566C1BDA18BCF1FD12FE9A917C4099DCF65B522A1
A2F7DA21DD38A0CCC390A842E88A643AE28169B2BC69EB64FBE1D31AD0B97BE6
17AC6A5BF2D8CCADEDE3DF117C1F35ECB6A84FEA4FABCE38A220089B53D58FCE
9F19426FD1E680FE0F9DD1175B3571A3021E732D7CAFF0432E41F1380A1E742C
15D7314D556C4F95DA487E498068E233E68EA7B5D011EAB14F506E888A83B2B8
AEF4DFC02797444F711038ECC559205C781677A4D59C17228EB50C49ACE26B7A
CD09BABF19497D5D0F7112D35682847E0CBAA223B464F7AA3320413CA123E5D6
FB36181507FCCED9C2723F2FD73955295C234B2309487926892B653227FEE80F
5B772B44033058FE3011EDC7B58B43F0DF11FFCFF7DC382A727E8DD89EDCD486
59FC100890DD18CC7553360A5D54C62A987702E6844294880033868E696DF4AB
D351E41FC56676336ACA18B539551AD578CBA84AED09A418256BC0C16FB6F2B5
8CEF67F8305BA0D30899AB0F6A597352EE4E04A489D93B30DA5306CD871FE497
4077D02ECEBD682686AB64C36071714EA476873BEF9B0777EF2C1873139BADF1
C6AAB3CFA123C6F9B438D3855B71B75EEBCA8D90FA542D93DB79E4A57E832F84
C11420A7A1329938DBF4B0D517F794746AF9C199D92C363C42F7402C7B138AFD
22FC259CFBE14E0715BD2753243DFF7E7A1B0E8E4C2AF69B15E2BA5902A18C7F
843FCB0ADA4283B86C7A1F5BD13E54DE475E6B5F38F7158836D7970D16DC6C2C
3882851C21E8F6F8295668E4BA83B4EB06D36D14E95ADBEECEE10C040420AD24
3CB9A740330D2A88827F88BAE3E79C5FCA3FD3977F78A9E29E30DE85CE8DADCC
DBBAFB1D628108CB3A857A0D99A93DBAE6B756403701669FA1746E0BCD0FB116
E20AEE2B546F37530719591A95CDCE63D952F04CF449E1D2AA89FED27A939516
5DBBB3831022368BE4B6BB6048CDEE4F44B1A5A734E6B71C992DE92430ABBDA1
276E410D6A5AE741761246B9F664B5ACBC2980FF64C206B639481A5CB9DBD152
5492DD0A1ABF91C00BA7787E3E7BEA2C5FF3F1BD993EDA63A0123BE7872FBDF0
DB102AB6F074607C6529809B268CB7D3E043C5A12A92D8FE4ADEFEFBE316F2BF
CD94AE2775DB3D455063CE502F53A6DC6C7567FD8CABD356230EAB5444B46AD0
DC624F58225A16B24987F2EF0064FFB9DF37330AE7736D3887A20C0EB15545BF
6CD1AD818CBACE221599A37A3C7F72B4D6CFA1349E931634B5B5E960B8834CFF
24190BFDE356249DC21F7426EC997E31F4B0F3EF406BF739B4A053E88D3E8861
F8249D0AD262B73DED43ECC4FA3BD8618B5D4E652AB6D741BA008F9AC2A7A2C3
3F57BED7F14DC76911F27B5C3403E23240ABE79FB7EE4F69881C6A8FC1C77F79
81DF3C6634134EDE80ECDBEEFF6CC39456859827140B4038D684C9FD2918B8BF
829B554F031D71D38F70CF53C3FF78BE378B4AF4E61C94D12F1F52D7C3E6BC75
3B152125617A05436305218FCCE21655DC885B3524A7729D1E6D75BE10B0437F
44E64C8B5EF01D3E1C06FC75DB5EF8E2EB68537545ED66C28DB5C3BE517F7847
1E548C1D886B82D3A8248F39893237FFA4D18969715BB4CACB7196BFC3E07546
80D8F9CF7FE00992A87894240BFF0B9D3288439B0E62454DF0A870740B4F02CD
19F40F6F8C6EC4992636905D4C8D2324339F7BD6F143D2D561F3E78A06CEF3FA
E9F941964DCADFAABF7CDB6311FD79BC61F208BFF112FEEAFF7B1E03FE6284D3
5643461EAA080E2344C2FF98BE84EFB0E4E631CF38589B00C24982CDE05E3611
846C2F683A5523253C1297B57E8EC849959FC9BDAB52ECC75E69E75829B16B37
7DADA012DA032869BC4E1C93317278D393D83627576F8957D1B819AAE10E2AAD
29E41C6C2CE478BFE18F1D2CAC27CB4CD9592AE2B3F91130E3E8D0ABD7DC6D76
65E3C83582A84E465C3DA761353047E29337D627E4ABB2D6DEA7928F8B658E39
67C8F9AECDC7836CFDC811B53425A62720C85E873370F0BC2FA8E5485E3899BA
A86A696E9851DE5F4F3BA8BBBD42529C1C607BD736656EFC47678545E641A541
6658F2B5EA3BB4572DFF534EE567A2288A2D21A636F33633DC20CE0D04136FD7
A6612936DD199CE621BE3B21F015DB166329101076BEE28616DEB570C4C6EBA3
6DB522B457504C61B71855F142B62178651F23CFDAB7ED8B2D858E0B513318EB
27C5955B151972A9B733A1CA40A4D7900613C501CAEDBBA8093F0AAA0E2629B6
BF8F0DCD4ACDFAE2B1FB2CC113A12FA64B48C403A652D64E1A6ED6DAD4C93FE0
476F09F6BF9CC38271FD36020E29FD365772D0CB57D52636D7798ED781F81DEC
FE42B3143A99BDDBD860F2E536AC026E9A7D63EA61248C6300CEAD89955E3EA1
B602B4233F150DFDD824D1EB14348B1FC360E3D3BF3117E975A461FEC9D41911
5D6F10984F01495D948D62C0E43409A91B8871C75A9606E3957A7EE2AA2C6094
8179809415954FB51CD0F1730D6694325950A2F49CFD46E37B1806E437A8F58E
6D8338CD085BADF3A6F34ECC55D2B2C9331A4C4DB367E89B6506840D7EC22E8C
3B5334B5427627A1E7D23F45074E4A48307610E9D5C54FFCB4C11CB0D962E040
5A1906EB4B7C92548BA3E9F72AB7CCD8729DC4D40649ADECE5EE828975BEA430
4DCDD047A4659F6ECD0DB70B5C8C86B7A901F6A5CEA11180D3FE3242A01BA2FA
EB6012CA08A8AA3E24736B26A7922FFA870E1751148FB6F0F438F23BCFAB076B
675F2DBF3BB77E6F38FECE8B16F29689C5F36C2AEA685A7FDC40EBF4CF28F0C1
D6B12BE70914BAB4D7AC34C1B34AB9019257200D82A29E8463F0BA2CB81AD45C
10C19BB442A1AF3CB7BA41ADA7D30F6AC7FD8A109330D3F71032578434889E52
350AA92A1850D24691CA9CD3FC57DBBA8F7E412917291C17B3A7247746A88CC0
AC6548DD6B73D115C2D77BE4F6175A6156D5194A31589029E56ACB5622D55855
CAA3492C2E962FD1AD3A8ED5B448354C08903373505B3F8C83E8EAF967EF9FDA
BC7CF963520C7BA77B183E5AC0E7C1E4176E7A2D257D5B0468C680EFE70C012F
0DD62730CA47BD6E41C6831FEDA6BAB7C018B7E1433680CECB106B477A4AC377
4AAC5C95DA34636D49B879F57C014B9FC4F1D8528DDB10069BA4276529CC983D
5B2D1FF8B61AC7FEF8F67725E19E894D1363A6C69C7D51E4773C4F1D334D7093
761913FEE9EE3CA03D4467F353AD788F190401F76C2A506DE48107A7797D0917
2614C57F81DDB145E9D460A572C573296761CF028B03C10DB09966AEA62983CF
3F1519CEEC00C7BFB9E768C0CADC3D5EC8D6C7FCE3AC32B3155D80CA07333234
BEC9D03782244F4E2E82D63107B2FE855BB4E39C3B0C7643F95B883EC6DDA75C
F0A2DDE02ED95F57EE760FE15645CD45215A412AA14E826916B42575E3AAA66B
283D2013060A7480F451C1E03FFB8F69240C986F3DC164BEDB3C46FD984D6ACF
03746DBF1146C3EDE0C7A6621ACE7A5BCB8FE72E31BC9749E610D0240A8F09B9
CD239FE4295A1C54E969EEE8279B852CDCA48E4802CB1D70821939BB5A7583E9
B850257F5A4FBCDC27ADCDE072C0C12F900017AD6C9A98A22BAE29AC4FB8E90B
43C58F4CF66E204268BC48261AB5EAC44985F2B8E409E73E461B2985F31A70A9
C60A8285F18EA650877A86BEBC65D22AAD82BA0646F87A967FB0D690D6005BFE
AFCECEDDA1F3D7C82E586EA67A010AC6052A54548ACFE8E6B52C90F40A651EB5
8CD9A51ECAF20E82A18E9799108B764B5E96BA220935D13A6715B0BEF3240832
F4578998CF1B3B1ACD9ED41C781E0201B20C5E3CC7E1F186E9ABA57B9FE5C700
12AA55884031309C76618738308D39CC160C7D2B07195327270A05BD1C3DD1B7
66C581569A08FB05C3494D63FA5F9F7F756E3299B0800B85A8D3781A49252379
189A85CCBB914DCC78BAB6906E6CA20BDCF4FD673EF1F5F6F20A1793E9BD4E60
8BF6F493CB13AFE82FCF228227B3E0F058FE624EDBD781997071478B005067CB
41F763FC09B79756A042DF0F0C52DECEFD4D785A42716B545BD3DB8C49A1FDC8
42E89EB770D58ABA2A6FF34564E210312D6BBBFAAEF1F6038F07FC10D735BA9A
A1317F148FA153D5CFE2C08C47F05D37C5352FFC605C98F87100E30E57A7B9FB
492D5FEF97E66BA3E4D147A89E853DDACF5438897360D50CC0932402AA5C039E
02B7C7F7C32285F4A95922F60861D99911E33447D856615B62AEF4154AA98545
4E2578A3ACAB47535E8D4BEC1B8A3F0F223E6A0CC26520B4AEF2400A7411F1D9
BF7699B1932D538D3AD9C10DF31A371D49C8AE59C1AB6990C1D701A498C91103
1A22BBC607E84BB6C1DF9165E00D29054A5911CEBCA46A20102DE05AF4F63A98
520F27F656A41929EEAD75E317B6574DCD113B464DD1C3A845069AFDED9B92AB
E56B4CB2B53D3D6DD2B68F6F4201E8E71D4CA126DB00DE5CAD96B40D5D62AC4F
5C2EAE78A7C4B3055B16A3E3B166D0BDD96C88817B0CCF72AD751DDC5C8FFE37
74342D788F575C58DA5D9DB57B1758314AF80AE4C712B3A3FEB41FBF2EA37CC2
F783594DE38E192E60CA4AEBFEE15DEBD5C999572D275681B7F9DEC5AE5B6FD1
25F6E86386403BC56E116CEEC9338C2273A47AFF1A5CC8ABED1015A6B4E5AC16
4AFC4245383FF9AF0D1C7C6FAEB9C6D11B2A32033A16F4FE6AE08598572C707E
3CC5C40B83B4E2283FA61818266342C514D418E4ACDB8DEB5F187358FC661B65
E3AE472314443D4C936654AF92FB3160CDBE68ED51ACE5F41F96830CF1A5172E
08420CA5AACC13A7578DF52933A72224F925F3A8D8815BF40778BA6A3B9045E1
F2FC3FF4B51348CEB3CC53880610D70F071597ED335435646CF72B5F454D9A42
9FB7EB712C19A5E84268E873EB5C975F8410A77BB024882735F26D57D12C4F58
0ABB5411434BF8AF5B917DCF9CE1CC23A2FB117C428C128FC5438BA4B6E8C23F
8BB74D1B1AC5E1FD1ABF827FE884D9BECD91AB1E9CB4B50C50FD894E2A97DE24
DD3EE51109FAD70F6AB79683319344C43C513C35A9999A5ACC2905C9DA0DE499
7C5A7CF67A72492F3F161094164C7F54CD183144AC2B505F30503EF61601B689
5D47D5DDFB6AF74EA1CC5E93917B12E576DA9DF54DD43DC9298BF525779471C7
71ACF32E670B240A265C77BEB8EE794EBADBDDBD21A0B8065BC640A89E853DDA
CF54388976F0C24D57B438BF66A2820E6AFFF1E1366B17174C26E28B27D37DA5
B22688404F5B17FE4B01A623E7943D26FE078F52AE890DAB18D341DDB41F182B
7A47EE9CA3E49A4CB2C0745582D5D6260EA13D49E7049ADF9991130DC9179212
4D00B4AF8D2BE9681D4410342172682B6DAAD517B60D63BDD1BCA24B9CCAF92D
E8ED88E99D37D6A5171E4D5FE3010E26CF97B8EB208CE06528D3573775794DEF
AC69501F178C7FBB5314868323AA71613301D6A4DE134B93BC6265F469E3A118
ED153CF2C6979B1866AB7E6AC69D61911B87A6E3C51D2655B2C804E9D764A017
C37FF5841DFA72ABCAF2D3196A44D71E8DF860C8ED30C45A6FA8D641D195E588
693C547BA4EA75A04B5CA1B977C6B8F3DBC935163B1E813E1C18D9154D3008E8
C339F1748A6B719E675A8A36EDE8F6DC195E944C6B4C7C1D326469AF678848D0
EA70E5E9BD429D7D8DD713BA1357618AFDBAC7A2827CD8B3FDF8F613D00250CB
A8C540B2EF4B5C410574219353816B83F3F123332F60D9CBF9BFA71D95BC8A71
59F5E7576B1328AA70D2B8217522B96396E29C4383FF2D601041A574323FE664
1F3F2CC939D462960D87810F3AC01B767C3C170374660DE0F189A29616E9742E
8B6BDBF90C69DD346ADCAB06F55CEF52066CCE02A627B76E2FF33607F8CA64BA
5E639035B996D439E1AECB154C9CF36171E8DA3FC6DE822ABE5DDBFA39033A42
F990426339FD6A95C3F462988E07C99581AC34411066E68344A9F1578BB126E6
2434459B42CE530E7BE0B89403CAF21309356A7EB024956957B07D11A72CE1D0
0815F9D8B3A57EE90FD8DDFFCCCF5ACB665C8FDEDD12F21B86FBFF4A5199B53F
23486CBFF6091916A23871E4E377278A37C20C0F745F2E1B2480E258CAD21F2B
A3834999F497089756FFFFBB2D4F3A686D4B73094406F38C2677EDA1E6988FD6
1007E164E26BF622185B6038FA3D347B119420B8FC67DF37848E1E216E173C3D
40DE6AB73E6DC0FD91EC5F1FB19DD9B7522CCA662CFC64BC45ACCB2B04465FBE
A8DEC44C86E2EFF7957F0623A21D85FBD07EB4B04BA53758C5F2D57386CF43DF
10286732ABC03561CD9D11EAE67D7AC8C5A90D47F7DA125579AC4E5B510C69B2
1715F5B8AEEAFB7F86449838604C7C1D326469AF678848D0EA70E5E9B5305231
DA60F5543282F3012AD99FEAB93016C0AE6CCEF2D0C62B435896E7D07A5E1A3D
C584943175FAE2025B4873C9C949A2D3F4A5AAFCD959557B57C838629A22823C
B6F9CE42CC8DC97C171A657BFF310056D4234379F66DA98957838DDEF0AD7C4F
17AA5DA06CBE2C0819B2F80D0F9D7C9070C59EE456ACD9520F86CABFE102F004
7B3476CFB587AB9E2A8784D635D8F9AFCD759798E035F67919AE3CECBC6B965A
3A2A9957B73C149FF807614B28AF0A498A752C2CDEC3322C976F5C8A2E22096C
C51A9098113FDEB96BA509CC92D33221D520397D1ECACD8027F39B9588AB4142
E3C7F5F7CC8A7D848E5EB11D95969E46B3979D61DD175A54FA8DD249FAB8A65B
7F5935702331F706B129721A91336AB5E89D40F1B0D823D92F2190F679B60E4D
CD4BBE0FE99B65273931F3CEEC2B897404EF65448B816F1E292D186121ED2902
0ACCC12F6BD2687A3DE4528C9E61C9F6B656AB347814569A857F21811B7495C1
BC9B109D8EB9247CB559FC666649F755B02FEBDA82406B056292F40AD80A5441
DBB89C9816D22A872A7A397020ADD720CF96E4D87CDDF5584D7B3F58A867DAB5
BF1C64158209D4DB8CF314DE4EC1350AB9C6BAF7DACADC27CD465699CA1D5EF5
27BF0D0E1BFDCF3D7A718DAC330214E1E1AAE28E1F26A25721F1927A9B997C82
D38977D171B15DD33ADDC70DDEFB52A6A181E1010CFF41E45F6073E33CD6A320
D9CA98FADAE7294CC29F9AE6D97B9DAA18D0F837F9C9A1CE33EE4B71C66A3E47
1F62EA8EB5A0A609729AC7B539B77A5D1C995DC082F34BC83E5DC61628C8C1B6
D0E5BF214DDC13398479EB9D6BC53306906E5833073C205DCD9B96AD58B0946C
6CB5D73CEAEA2571B27421D56596E6D3C8361A1E24BE1BDF1ED890D5328776F8
B18AE46C1337F3238BF16E069C121BBFCA3FB51CAA63A2DBAB7353F015D11680
5B15434A019F770D417DC1009F9BFC74104AADCF7974D77190AEB6705EFC8C1B
91A7E4D8F38D8B653A2419C1AFE6AF1E5678B913F1ED476E389A9BB689D6416C
C9CE26BD93644E4C225FF7F6EFBD0A20A820B9A1F603DB446FF4F3481040AC62
70B239354032B42CF9083091827EF1C6A5DFCA240A5C9C5B7E4386A7C3EA4683
E13F89FAE4EC3D3E9D9180496CBF268855000902239284A91245881C8664FA7D
D08B9EA98BAE47EB36250456C487E6D71E3C77FEAFE0734AAEAC570E47C61AB9
BE927457B2C985E28D95F7928141D3E5403DBBB635428A0083468241DDAB2F32
540AB3D5904CC6334875A3707847B339AF376734B57F19741338FF84EAE5874E
7E5957E224EEF5122DE8D1DAC1983BFDDBC862112A1CE33CB3B1ACB097D4936D
69A0B280435BC0A1E7AC3B74CD541C9A9C9873D4D6C554639C29BC9374EF96EE
F806A967B12AAFA8982E563C83BC69D6272A06B996C5E600D61589324DA97749
0CE37C2B520C8B4F0FC69263DBB17615098FF9EB637691688FDB8D98E7B65F55
9576BE4C7F14151243D996CE91AC5C192D59FFBC51C2E3684FB04DCC95C18F4F
EE6BBCDCD6DAF7333487DAAB5D9E908EFA75CEFA67FF202F2ED74451FDF614A8
FD56753BC9B1D39A97CB6F6AD8C92453366AFD40E6539E7A0D283F7C07AB3D35
AE50092A1C3816C29255885DD337DE2F7E9C5460CD26DD6475231521FB620C2C
1C3923EE1733342A40D9D4223CDE0ABBD8D6B0FA4819103667172D0370E7960E
D1CC6D6B31B6FC543E08FAA61EB0CF6DD8F3E81B4761E155B8E89C2967D350F7
5F28F0675312EF67701FA2C60ABF2A1AC4C2E4DB65719A00C964C9360CB5D222
6481AB5B7E8EDCB9684829A82FF68B0557801E41BD95E41C04BF141BEEEBA179
C7AD98C30539718C087B5057BBF4C15739916855ACE75D72BD92E6C94A1F9463
53575D59461F97934077F4ADF6B27923495184E025633AA478EF7D37A5A229EB
EFEFCF0D58128BE8C4BF793DC3D223152BC11550E5EBEAF0C16FA757218D16DA
8ECAA2156C3A3DBBD88EF33834B8179D9123CFC679753D8C570F30C77BC05AE1
507A994C13F1F255717EFDE079EDD6F3AFA7767262F964FBA707D5E8A72CDB46
881BAA2E2EB6EA72FA38F1ED898597B2FDFB71C20B0639C3301DD958F079D152
ED7195DEE9EB06D4B929D0D7A5F74356B6F0F93491F6D985FA2DCE4D59DA9E62
5DA7395222C1E9B8E6EF48063D92EFF51EFE6AD62CE7EC7BFA4D14C81EB91E7A
A056392610918E369E6413831E764F46BCDBFF2BE13F859959D39AEDAB2A0ACB
AD2878BA1097B79CC1FA28DBB8AD5AE2791B97747B5E3466917753088DCDF889
54C1DD7186D87DE3C3DEFC57B42992B64434F1A0A377D6C45564F198E75BC2ED
06B98D0981EBF8360184B37358F038C4B79D505E4D184C08192D3E5CDFEC2845
847F6E1914199C8030FDC71E7658CC6516BD80B7BFDEE09BA959888D197BA257
663683C21D4B53C802A7EB2F5FCA7A731EA81F47904965BF79D0A4B3BA9B85AA
AFA6258C28F191A08CAE3C31C59D6AC8BF5468D7A89F7E2689D85C15628FA98D
00ED3F814D375FBB1EF3EBD2F39881E7076BD5C37B54B0A71832E536AFE0BBEA
57C107B1184A53DACF90EA8B351468312B5EACB15533717B0A470AEEAC6F9D18
562AA77D3C8D24747E176397B35A78890441545982BB25C3618E308A2CBCE7B9
B9082E6577942C0A2CD787D76D0058B0AA24551BABCB8D71A5A1C7623844EFDC
4B25E8BF0C88D8BF79C8509CF6E751B28D96D7C1AED5039B5C07FC0C3618AA81
41420A05F4B9DDA96E8E760F93CB1E4CFCC3C519AE75D0C54C394AC66152F12C
38F5F12AF4BD329E583CC02C16FC8F17A40AC301D8089B553C1DFF8F57DBD588
26BB588124B20F1B3764DA063E5D7385293B56CD32B99A0664F67FDDD9148F83
0CAE80C877DA90B076566ABFADFEC45C41FE294C6B0AB203557583FBEFBC9F51
580E0D83D7F4876AD40BCEA7C944796EF27EF3C09F6E1DE6BBE02F5D08EC787B
4000E7F20856DAF790422E2EDEE65681DB053C11FC908A4768F1BA682BE7EE8A
73484DBFE0B4409D5BD558705DD9E530251A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMRomanCaps10-Regular
%!PS-AdobeFont-1.0: LMRomanCaps10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRomanCaps10-Regular known{/LMRomanCaps10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRomanCaps10-Regular)readonly def
/FamilyName(LMRomanCaps10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRomanCaps10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-496 -290 1501 1100}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53E3095EF5AF4F01AA2B5C2934E5345
1D88D311DB46915432DD0F408112AADBDE54032868560673D08129A1793B6FDD
D1D82ACA35A8223DA18ED7A03094DE92156D5D0B42FF6C449A1823CEF7555FCA
B35573829AE5A55A1381600C734661125E28C2C51EAD103F3DD496F6EA7096EE
8FD3BEFA4FBD7391DF4FAAFA38FCC474FC632D8A8C890F5276629AC2552B74C5
3C8C4B1DF8FC58A3050CDF2357DD1F98E83C4D077AEE399C268ED59CDE9DFA68
BFE8629B52E8DC41DEEC0C9E84BDEA39B4AC552839755CBE2DC820864DC9612F
16D1A532150DE0137F647DAE154785D152CEE57AE3FF8F671B20EFA22C5711DC
B9F8AA784F222AE1183B01E2AAC6254D7994624D1B351DFF6CBF3B4F7B1DEC63
CCA90AEB60F15A33F727877927E80AC8722C27C584FB671FEB518D1DE33FAA48
3173C60B382AA1F0B22369BE368CBF749E7559509205B38DF4326DF6A6161C4F
E3553EE51C42032B00F69252E9043B7928B2824FCDB5189B3020CF1D596C59B2
135BC9D16D037D87C31B091D7C4DDDFAAB32D68F9C396CA3BF22BD6824BFE582
93520934A63EB6473935B1EB4801E3ED6475320DBFBA8C2F3F98F03DB06C3F05
B0B06847EA50E8220C87171F32F759EC361701793C97953550ECA6D4B28EC2FD
607D51FF237723D79DF208680711F2DAA6172AEBF28B736756CFE9D56EEF0156
FCC46EA96AFB2A804A3BEE06E0A59EC3652633189E85E68B5F3EFA7CBF91E3E1
D7472E66CCE86A28D2FE799AB043DA1C74EFBEB5C5AE6123A71702861463B56D
7BC98F38D9C0B29C25645142AD8BE57953956B838F815285B8802EE4BD0817BC
404C04D71B0FDFF6DC455B51B305A005DD7796527CD8561337EFB990C47DCC87
E2A042ECD49871111D71785275257C303761638CB0EF14492762F5A1CB7BD472
F0B01BB09FC6863455F33DE4BEF212E60A9021B94F42EE04735AF673E3D24A74
35BBA4EE640862CC2C49FD18BFD4A21FA259DED7A5F13C74E62BB9A4633098E0
15F6E5DD084E687F8909E2288265BB98D64189CEA29065AA87E8BB636C3FA965
32FA00F88F4C98217A140A3162D903EDE2880C3743AE61EA1D3E2DA8EFD0F95E
E88605CF6872260A0C808EB620E9F9156627EEF4B4F07CFF943A70AA730E2B56
3A5912AA256C9519F4F8A46E512BBA9F099FD0A4E11C873E88DFFCD25D0F0805
B0EA04ED10F3D442573A56648C90B3D8C4C44741A535D965E48F0F4AD114076E
79FD9D0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AE17F756273333E84F341
637A1BDB292EADD055C971FFA94B4E72EE284C44A9C294B2B18D9A2E50D90BEA
A161415478975E25D1E928C5867A495F88565BA02CEBBA62BBF3976782EE4B45
DF434B01660CFF3F89AB4FEF6BC7F7D7F83EED9F947931149B6CFA3CC38B537B
6C89BBCCE6C448AC5C61D17285F9E2E321C96C5501772C32C2B6183CA0BB5DEE
4B7C3C8F0D77EBB70D341E595B5A7BFE2B471EAC3CE6C0BB9A046AFF0D3CDE8F
81C142E70727135017B39A5A1AFBA562AA96BAD4D66958AA329DDE6CAB90B3FE
38E49F75EC083CE28D488E75BBF597DB49E3F42610D596C1D91A878EE680EB84
C857186645C467EC0164AB6086D2C2D95C1BA20D36E2E8C1494640BCF0294FF2
103926BD4D83104F9B660EFF434CCDDC96CC25E9F54CDC9E19D966D068DAEE4E
1255BF293797A1BD1FAAB9AF2BAB48057DE0E3C276E3A5117350E877FFF97EAE
242EFCE7ADE5DAB83C34AC97C66C21F4CE4812FA0F007C12820899207C35F3B0
14133645FB9F8E53A6E2A1CC08CED4D33CE9B69E7A5D0E31726EC3BF9FD98C0A
E5BA1BCF5166779F26081CE1DCF8FCBF985B41005EA0771D91D5727FB447795C
A639A5C9057E97FDC795EE6B7C39AF1AB0338BACA1A1E179F1AF0EABA623864E
553A210AE8C03A525E467DF8744A8B6DB57E04C99BF7F568041BF90B5EEC2B73
9A109B37B07E8A668E68D117A3E0C46B11617838874E7F840DAB45050FC413A5
037107717FB43013DA06FF41184DEF3526C06FD5BAB6F3763BD358D6931EEA4A
860E1A17079A59DEB9C7A4C0FC68AF583ECCBE6FE0329A031820D4D1DA9D11F0
2D650DFEAAD917E7F290E617903792223A2AA23AE7069154690EB370F940BAE2
395473B7C2F70EB4DF0E94468FBA1B6D5F1CCF350E3930ADAE5249B3D5CAE21B
281B22FAE6EE3AF85762C36421F291360670443326A44F1F4EA0E002D8B94CDA
144057B4D5F9FD416ADBAD209422879682A8D0D249CDBAB31345F45FCE24252E
D45316EA9E34A9EA03A6C950682BD7E72A81DC4FB2B9CCCA501761022009926B
5F55C9CB2855D5D049D3C73CBEF771A594437E6E1C6B0F15FB3102DB7A3DDCB5
3BF882D33E5A43EF201EC0B415DC701E8FE4FD3505B993F5CFDB502635117336
387D170AB42F95FFE8C79DD1C5CD4860749F82198FFFDAE1393586EFD3956EE1
0F7A3EC03DBC1045CDBCCCC3950C6C443E1EB25180C92F0640CE6A8AF3AE7EB1
81C2E4C11086C2ADDBAEFF30348287C9C3FA8B34A76654DD7AD692702C462BC8
6360DF3B3C743459AB088BEA49C5D06D6EB67124373543A2C18439DB2227247B
30A41C72B8836026F60961F8EA96BF0A4F3E778B9002DD7488DAD1A42BC257C3
C7149CB99114E73DDD3F9A78BBE152E1BAD8C1A22328682504131249C8468ADA
F74760105E07065AAB5CFCACB826EFB41D1A7A6F59DC8AFFD065CAD27B9EB202
0C908E91E81B07A92AD544D202816662873464594EBF58A0B38A156331EEAA0D
0BC24BB44DFFFCBF4181A86F0A4BD25C3921CD2BA8360AAD322C021122E962CD
756DE48DA93798FBDD034F4304D5EDBBA164DC9E9B3414D00E9F5B712394804B
D4BDA26FE7C2418EEB63B7E393108CADDA24C91C1962272359F2535FA1D1A508
FB5023D07D392FDDDE2AC0E0708B430846E137E6CA0B5436653A968FE24DF8D4
6D2003B45B60BB1B6D62DA735DA6689C2C03F196ADC11B27E608674E546D2074
A3AD2FDED543CBEB81B9271E5EDD5DEAA97BC86C948570063933291D78AB5298
EA92E13430C7CA1FC658FA031AAD0EA5B01D22253D6C26BF3F435E6A6E9147BC
1B68EA135225157DBB906F75C799F437E74F0E185AD518B7E446C30415CE5799
01D43D8E2B08A04783C5E1AB77A3E641BFCD7753EC20A9D8AED089AF77F0C5D8
96228A3AF8A96329A5F0EA14F929D5598F4437AB944A06B5EEC3343EB29A9271
70DB0EA31A11EE7634FD75CAEAA480F411AFB3A933234276082E17993B297043
B2F75674AA08FF419E5CBFB6407856406CC9C52353EAB3C79BAAEFD74B08910F
452C7FD271C1B9BACA52194DCABDB4284B77C573C5A7EEA60AC017A3CBD6BA59
A1AC2BACF1545011EA84CB75B2C5ED13C702870ECCCD60554EE8C5D4B9F2FB5A
92DA2D93B04417CC9240E9C692407250E7D47C97F9B3A11C8CB3EA31F589BDA6
00E115E70395E2E4C0A29284FD2C9A8740851EDC442490FAE8321683AE4A530F
EAC44A63E2B90731652CCDDBEEC58F573951454FE7AFA29CDDEF96E951AAA9B8
EEB3F9BD5F13210AEC71AED98317186244404D4812EB1E27A42058A387726A74
FD74B84CEABDA95CAA798540DFB193A897AEC52D74BB6747FB9CD5A633DF5375
2834D9E6147A844A7DC46DFC69EB7B63E6126545B566CA3099246CC6E5F85E04
5FE750DA4A9B403FD293CC4363897147A165FB658A4E7A74EE6C22C2737A8107
63C405C5DD41D7ADF7112DB70AEF68FF3B8773848FB918BD1D4D4963B96902F3
A84599D73EB3303D7B74883137EA5EEE14B739F60D45D102706C99D92E1CA501
846CC8AB6FB3AD6AC55575E66721F58FC39D634E3C68CB3E2E24D61819BC8515
9520ADC69ACA26ED5D96EF04C2AD0153759083DBE7DA9B89D877992A8DC821FB
5A141A58CC2A46228F2F642101F5B23CE1ED3A79F2C6006E04619B81578C0EA3
C3A72402DFB9B35C8E59BF582621648F48CC413EDED067EF9BEEEA1134788A6F
839F2C2FB22529A38153E830445FFF661BCCCA767DB0BCACA4693DF0370A9804
2E527BD65EC1E77D32A07DD7E1149715178A46263EFFFBE20CF045D1F128CA45
50BA9D6D6DA61B84D00CBC9FAE5924F8209ED49D597C20A0CAD1C2D3424E9CD5
8A179A2BB40AC54D2E45D206928BE43A964D2311F07753D0CE4ED2AD6198A473
F1F9EA821DEE99E27D331F0559477F0CF1D9731533BEFE67747FCBD3460F9E80
3E409065E158DA49560DBF9060489CEEBE735CE28EE4ABC81450157CB7DDACCB
72A0FB560345386569D9DEE8754EBA551B635693EC4FEEA9CDAE3564D5DB1DC8
0645A5DFBEDC32C58223FB032506BA87BA582862CCFE1FD43197B1C7953BD8F4
DA1AEDEC773D5C063965683DCBA5BAA51ED9F1F601F0F088C4C2859090964202
143D72C13B747461135CBEC72D82A7C1602B824629FA3F773B665ADFF0135A65
ACB5311765991CFE59744E7CC201895FC7C2415439EA0112F1804CEFA65F5653
92ECDDDC6641E651C4CAC35F163BC67A18CC18839FDC4EB001A723EE59734A18
EB12CD7C54DBA9F8C47428CFC2B96879AC6792E812426A33CD78A844120B5B67
120BA7884AE4336F3FEBD08B7B93B550CC6D1ED120AC16308B6DD2B9A8F686D6
AA020E49172C02DA888DE03EC12D4EA38E7D327F0F4C117F34AB17610F5D7F76
C207FAF88C8FAEF2476515A41387CA09174006C8F2125DB485D1F37C940A8F4B
3E4DCC91413C3273DAC2A3FD2C49E3C9AB8FF8EFC8DA34C873E57D38B01DF487
3772137582971F3249E6694A24DA005C84176455BA74C8A97447861732DFDA1A
5752B5222EDD9012B45CF0DF0644B2E5B7AE5DA72EFE54D294768DE021DDC1A7
C76EF77C6E740449BEE713B7E40F77F7F6EBB4BF933204D9E5E28D522591D17C
997D66D0491D2D29CFA7F4C88869E2D53DBAB54563CC5357F755C48E49F4F103
4A8645A68D436C42FAE21F2C158167C6BA509BED34E0B0DA099434D7FE957C3D
52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1D8B592CDD4375AD01D63E8F687
46B8029C831A0871A8F9F2E264EC10133C444A86EF7C38608D246A1B4379C45A
7C34D82EBEACACC718F5905E864DD54CA062EA1FF406D9E2E42031876A1CFCE5
8D611A8435A8459CAAD2B618D4BF9115DAC5B425EC8BA4590DD3555C2E4BB601
97FBB232487FD786E57CA1229401BF634D445C93FDC157796BFA5502F105FB79
F31A554D8BF98B8303CFD661ABF9A72CA0629AA65989A7AA9AC8B6930AE574DD
D32FF4BD7C970D933C47EA4515043C418049903E3F36885AD45509FC3CF6F31E
975595338AAC667E1ACC0A3D0AF0B6A0995FA0FA6A1C7BF34A0E25EFB2AD7503
D23492E7E980B2C4324736378E0843451E4D9840AF87F800D3B6E0248AC51AEB
F052E92CDC3ADAD81E2D2AABE09DD98F5AE00F69DACA0535AC90368B31AB3110
CB4EB8D00DF6246BA012FA3416E1EAF822DCAA6C0C4142A552F0D97037FD695F
92137A8CEB212797BBE778DCDB2D0F6726BCF115DA15374CB688BB2F98BDC3B7
21DB34D4C6186E5CB2E597FE2055304950D905D6AFB4390B62A3173B522240F0
D3AB72588D98BAC8AEF2D4837251BBBF065C283B7C7B3BD08D7708CF72309950
D176CFAA1D155312586A9ADC136D9155C3C6ACBDEF8BA575387DD0D73162CDDD
96166F795921D90204DB9F3E3FBE084A2DECAA1964AD31D9D2F4743E73B73557
69B7ED30FCFA10238AB9E263F42C980A603B024C1844C08D06E40C58072E7D12
43257B02B8CAFF2AC2FB7868A7FC61E6AD2CF8C5CA6111D592F4184FABB849A3
676A8D175D44E71B9CEB49676700958F17D09D8B8D37746E5AB46052350D2D3D
6947F4B53D2B14FD50B4CEF4398D2D2BE7E7A3103A10B82E0E27702BF83306A0
C3A89D9AD2A517E03614C8349282F97AF2292BEEF24F886427E846C0BD15A807
62263CD8C96EAA02F137C2134A47241E3F15A881F6A2FE15BD745CE175B92169
7F9D9FF0803559FEA211098B4B45E88443AFB83F96DECD5E0B32C5EA329CB342
00253C789CF8F0CC740618BA5DCDAD4693F4E17363864CC8AB69FF9238E0B18A
F4114B94CDF5DADB44EAF5DB260D8B8BC3027ADFF7DBE2AD88CA3261C59CFC1E
C0418A91E44F1718D13CF485B3CAE0E01B327EE29107319D27F242A8681C2397
F448C46BA164AC7BE0C0A73FB423A2AD05E28D490FE15EBC6A6956477E8B7DAA
F1AE28A6B253A55B77C969975DADE58C1A863D53B67DFFDE2F48652558A2D707
BE5A2C968491730CC85A6FAC2CF9D670F1FB69EB4966334402F76388AD6AB9DB
661A04037C111998C99A0A09C9002478AA31E4240F13D73182F04410A11A88EB
D5278ACEC4A55F1A082D537B3C1EE890A6FD2ECD5F4D5DE99814AD4A07983923
64FE0BEFFF89A5599AA47087D62EBF48C20DCB99FD2BAE6853877991059EA431
7ACD1B3B44D9E5F789B7877ADFBD0F5BF0D86E0DC7B68A3F2D8B66E59BE53EDA
B3DA137D59CC6EFA0F579F8A1C5E4FFF0AF7FF5CCE31B93E4048CFBFCDADF56B
75CC3A9291183CA5F1FCD9BACF833A9D58F384DC27B11B3380AED6F7A6719B66
AA3E4CF7A10D86C2E63BB1BCEFB27E668CB9A72C46083DD42729C37C41DB7347
D16B9C41AAE346617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DAD0A1CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B1FBCC83587A2536500DAFBE0CA7772A5
89F8D9CDE0932B5D3A1819CB2732460837EDC62035D7D232AD000EDC4598F22B
950DDB38150538219C18735C6FE1823BC63C569503A4B5CBCCDFEEFC01872476
101D65E487A587BCA95243A1EB5BA0431C918A879828150795CF2BA78D4E55F1
FDBABB8BF813CB9DB27CB44AA47AA0D4E648240D872FB7614B5068382C766444
22AE18999FFE37981189CADA735CF09EBF4678CFABD1A6D3FBBF8357D4DC0524
BC6A4F583F56C127E3666DF8476D5A8A6CC0A5B1420DDB2B7E75B0A8C76AA6C9
98C9AD482CED7C243C9688323D96A3F96517CFF904BA26767486441050388419
88EAA2FE0155EA8DC3F8EA9DB943789A191542089E218EF40FB4942319C28B52
2ABAF817F506EF45F7262128F935F4893B87C2220034C6F979B5B3DE3BA5858C
38C9C1337A638C0E5C575727665665C88AD38E13EB02AC3AE5CF08B53BAB7FD1
3E263C2549247D8DF74C6863D43B0266C927FC0C7682845F3E4266B7D327312E
FB770916FBAA37015011999870F0AD19B5EB1B9D54BBE7593C45B8F41C203368
AB891AA0006AFDE458F28C88624B7CD1FEC7F9EF2C74697D12EF1AC78B34E566
672E71A0A5B53E6FEB67E477C72E6CDA1458BC8DB8E1DA62D42F448933905E64
F93DE35FB61FDFA5A4C78E426D6F68DFE42F76B1CF5F095DCFF46884A1AD7C81
AD55FEE036634EFB88A2B1ED19E37CF0B527D14F008E134FA0711FE40BC8A925
3E5027D8FE5FE873E98EEF621E059DF969C14E19E1CB4EB43B64E6957AEEF5C1
7D832383CC11E5D6419158E6A838BB3106F54CEB953F0C16D9F1CEF47274C469
0FA0620F50E5BB14A0F359C4C172951461E884747D6E5D29114039F59776D65F
0A6D9E5088AD245098A9CFAE5B44CB364AE68381B4DD8789E1D35D4AE06A0511
07EA4D90D3FFD25223604AF01B5F46C739DDC81B47978F0BDBD79F9A6A53DA20
0FB56DC483BBA3EEA535009B3A8AC750DA63EDE128761D164A9843955BBFEC72
13307B78378886F93C1C822EFA66A75E01A68758FD97C5928BB2B1DCDB63CA10
90BA2CDF850F9E1A5C5856D41D8FB730E048E0EA435515BF52FD453207213F3E
13FC83A36F2D86CBF4AAC4ABBFA39688BB222A81685006706434FFEF6D6EE0E7
0900D14EF927A2F0C3A8BE6E4CBC44070FC79D85C273074A7E31F7C63BC4DA2C
8E1C1CEA7000F63CA5BF75389D057C364EB8747A414F55FB4FDEB79A695E89B5
B2C3987863CB4B29ED6BC20B0687BF97346B111AAD8EDD835B26DEE73E360BA2
4603A6B42398895F1F95D5F0D0225D8EDA64581718ADF5FBD7277E57E9919BD1
0558E3A5022F158043BEB6A6820566EAD71325D69BF3460E9C3C7E0C0F1BB457
048ED47325A221E91DC93BC429BB517890A8F857C2F54BA01FAAC221D701C672
36E08C7A56288E339620A52776770935A6A193FA21A3DC25DEE1FF03955E5671
C075DD53A5A82FE7F773815B2AA555BB03CE19B2B72268C40F772CFA2CD7A598
A024222D413287F7481B9AC0E13B169DD71090499B415AD8AAFD99AB5DE2BBC1
1B40ABFB7CE655281EAE4F27B1E027C2A23E63378F5339306A9F79BF2523B16A
083F710C102E07B67194745D7159FCDBB10B6459273EFD03520F2483A9E6C0E5
665B54CFCA5BBE96B39E69D388D9229C1E361D6C47FF84A49AE0C70F71EA41B0
2E1DDF2DE8630CFC5F2C8AE1E5BCD78411D194A831BD263880153BECC873A9C7
1796A7807E2345AD02481ACECEE7243887DBA28E28217389829F4D31CECC14EB
7C948E6E6E104A080B9441E0BC3624493ED50AB68A0B22A779D7D816629D1E36
FBA83C5BD9BC2C57BCEA7F9A6886C9F13EC903E886DCB7291933374888A65847
44692F87A67A218BFBCC8896E57E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243
E79E7B7164A60BC32326C2D36742C0D71D21C63AA4DEC82918F11F62984C5F85
3516C1419DF929D29EAF4490A01F57EEC3A27B18E547B77AB0DD203BA47E66E3
B8932462C277481778614D372B043761D928D66FCB9D760D3096B5CAB2A1DD50
A23E443D8A30572DD2A12550B2D61B5B8D3DA00ECDF9FEBE424C8D607EF6BABA
6D1482E9C494671BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C6F27C5348D0
4809C49896E18909ECD6892BFD2B0D73A84B6E682E463E69702266FBCF04AC9A
0CAB64076EB9EA884B2F5A13400556D1D07217CE900C16506F570143710E9AEE
87EB93711F2A49C15DD57EA42ECA4E6E8D58BC4A195405629408224D07020749
9DF2F43E7D52E442E951CEB1C926563979CAD433B91341797AC8D4E9842A2025
15A73ADB4AEAA456ACCF3FA9FD5C0D7DE2197E5C96CA1E77BBDA711E73F6CF45
F31613A24A30023BEA9A207E8E4E119B5356CED765F73F6935478D5133B9E761
4922209C25478E0A63F78F3460EDD4F64B4D2A5B3E660B614F62A53AB284FAE1
FEB947C50CE8BE18F24922B066F392E4321F75C42A86C70CC8E4AE8F6F84FC65
3EAE2D03CBEBEDA67F83FA8F1322A68097441DA3511D8FE63394AA5E6B7F441A
D12126999FA71ECFDD70607C4FFA2A1D6C138C8A750A892DDAEF50284D2CEADF
C997B78F9AF18E63822DA479E4279465A6CBD43EB5B5DB8B72E96306900A09C9
002478AA31E4240F13D73182F04410A119C72285F06F1773BAEB6FC8CD2EAC6F
0799C903D18C64FE378916128CCEBF8943967A33F856A40BA5B302782175203C
082BC703ED67F8956F3C757799D61A801701C34E5F0311D00A7FF64F31505AAE
C9170516D38C247C25CC98E436D6B0129745977065519D41FEA05DE277A2B681
6846BF7BEEBF9D323B549CAD581F17DB11717FE745194FD74DDFA29EF38C14A7
D31F074565A14EB60996DCAA0762F3C701390274F4A233B7C21EABC56271E0D2
6F4D8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D51564ABBBFD16D44724C916
7C7F909DCEC3005810B42BD9CA1B33DDC4B3D69A6DDA20E104C5BAB68F3D943A
9B0E24B8327345DBD550F4D3A85FEB2007E09F408B6FB0408AEBF36BB9459C6F
41B3B4EE5B63571F18E7077F1990611E243FB8A327EFE9CBBBE8F9B76ABA9F6F
7335FDFC57213D5D25DAA9FF60D639DE068E6459B14ADFA9FA485D2B692C522B
F8E5FB4531330E02C9A8EBCD6C3AD71A1E40A4D3F1B93134816B1E636A2327F6
240BFF595E24EF8941707987E8E672F486552480FFE3D56EF1EC01FC6D827091
334762A700EE46CCFF0F8222069A239E9C090C056C50ED33CCDF1DC4CD54AF2B
27F3898D35DBACB95E33FD81D89FFDEA459395AEB1FD2A2313C4619C3924D6CB
4C7156FED518164901F83DF3BAA6A0ED3E1145BF13B94FD26442237EE2121C14
F116A1114838B333EF11ACBCEC26CB9945AA4F8F616FCC76E4B0D7BA8C76364C
F343FDCB3945F586BFB542B229FECFCD917788FCB6F16B6C1C40E3E00F45773D
C20480C8D6BB75756FFD8F5C7A6D66A69276CF920B7BEC2E368A095DC1E3A421
F0C532042E003906F07403A54AAA87A7CC1465CB48ABFD9A879E5B8A847E9323
2C034664E2C43DF499BE3810C38A4BA01A31B5C80138263B8E0DA1FCC4238D71
517DA16343332416C4BFE510F180C63CD039D399B1D9C4208BDE9F2A8208512E
1E9EB36A96421288D8A846DA9F3D3B8DC89359340E6D6E4BB80425136F59F84D
8B2D3548C5EA909142D33AE8B2BDCC9705D1EC8848293ECD9599CAADB700A176
76B96C607DC49759734D8F1EBBF10A7E363AFBA180CC2897C588A09FDB14647F
570BBEE55DC7F2AED3E75B7AAE70ADAA461BAE73B4CBBA029A5BD8AB7E658340
5263C510185BC34AAC67226177133AA7CD431BB67C5261595CA2A18E0FD97413
5F38D540014D38ED97AC4F6058C1B834BD195096C9A61145921EBA98A70B52C5
BCA89089361DA0D7AB8B979BD91DBF43FB52495F20DFBF159A58F3D4BCCF3638
857C25C73B78F5C35FF0DD1AE8036C3620836DA8BB5CE31BAA722DDB36BA5642
CE4110C57A3A4D95D4D5188EBD111ADAF13004B95BB6A1F91C919C28F67F64AA
534A2AF512C1F2BC5BEE9F21801512D2455DD4B94E0C5EF66E5F4252E5511A19
172AE7E16B6E84C13265E7A78843F80CD719C44633862B102690CA956190CC61
CEF424A54E62107D2ADA1C19405B9CB4C39694E52AAA56E56F82678A4327EB6C
A34EB5A6A8B1C41ECCB9418C1094CBAB96EE405DCF58E3A569DF07092225A683
511770EAC39ED55DADB32778CAE943CE6E928D5C8A44F0B691350DC0E4B38E4B
5B5868A34E643E6075C7A82C17F569049E4A119632C47683095845CE5281573D
CCA18F596C2A638DFA3A2A0E4088072A3C9E36431D9A9656D60135F7B7941CCD
EA0BC0168ADAE8A1716BCAB61A1FBE56DE145488C0306C6EE589C2E71F0433B9
B8200015BEE977FEA781C3B8034170F9FCF6324AECC2554A56897CBF7F8B7139
ADF77EC4DA414C2CC5424CBACBFF09AB4F4962A697CA30668A1809DD72B71A4B
BF6C618A4EE64F0673FBCDF58BAD19C9CFA9D528D104702E4AD8F19711F44C14
87A8A062B0E7D307423CF2852AD05690FE1912DDF6CFDCB995609788A176928B
EB2B6E6007ACE26260537E178406C35173ADA131F8880C15E753D7BF2E4BC089
2953EAD550817FB700822EB157C4BE8DE18B2AC08FBC05291063120165B4379B
1A4DC9D967DBF6AE8C59B9584224CD65C6361095861A84EA1B7A991DD837F2E3
96EA1B598CDC2B459A81B19A090AA25E8D0036616784228ACBA46F5DDF43D3CA
439B4506CCFE90F24ED9CA8B3498FEDD429B1B1B8550F2219E7EF9CC64983581
38BF2645040109A3D2D98CB563D4CEB5C030A7D2F6DBF55063AB7EEC2FC100F1
26DBD977068AC186C94D6BDC3E849EABF685A634431D9FCCDFCB4A1195C76A6A
D5138A35588B794EF9FE03CDD26508432F9ACEEC0C86CE8744277F5C32166AB5
39082917BFF7EF652D589681C60B99DD4F132248742876953526D119551A8B29
CCFE9D9B35C9A04CDB15B160C3E2B285BBCFE14C06C490185488510704D87E32
41AB1B0AE52F898A234931F910D5DFE85FE2218C80C58E34DF3EA0718B7C8E2D
6511B059092391D17C997D66D0491D2D29CFA7F4C88869E2D53DB8DE6F4258E1
A49C6B865B75EAA21C02F7007978FF715C0E3EF03E39BD49697D30B8BCE8B934
1D2DAA72F7FDE1FCA3BF72DB85657F4A3558D4585AD1918E86DAACB86231F261
EBA0BB60C59D40F48DF92AF2EB6EC67815D27BA9BB672751D8A658C45E07B955
8E776E94EC0991B31A4BE92420B6D9F5E6FA1855513B7131C7A04B00038E48F3
936442CB14BD2C5658C938BC685FADEC8C6514A728C83D7E00DFD4EDBF4044F0
E247D957956045B16131155F4296C5D97BC3D1F1C93A6E82767543FEF3277C1D
AC4869CFA865B49FAFAEE9506D2F10DEE673E177D6279ABFFF8E757851AA4497
5855AB9D1E3310DC01B08B5CAB5346609FCB048910F3D70211659CDBCE05F073
3AF96804623A11636472F5845AF507C8EBA6518215D75034119AF4A4A9D8A9F9
24028ED77937B477662CCCE77BADAA08B20B9392171DBF9964BBEC03013F324B
D4B1E3053E4E12EF73AD5B6DC764101CD4CBC3FC2A4F1010CC1DE442DDC48044
4449DB76A321ED1517E750F551AAC934621B52AC90EE56F9DEE0666C2484BBCE
C64AC7004C28C6681794C0E2CA89BB581FF57DDBFF7865063A2AFC57C76819BE
9B78D0F4DD3B3B23D69A58E2C82C1981EB8E18B5EE80058433952B6985256120
82298F0E6E36968C8C0932BA0E02AA42C71D9E27302A88E52BB8B1924F057B9A
498D69CCFBFE7E3062895E706E20DE8096399754FB32677CFC456E5CBE116BC3
DFC67B18E95621D03FAEE1831A15D5205891AF008F869D7AF5E4EF1989FD377E
9724F1BD2A06FC203245246BE57408FCC7B3586AEF5F4BDD49CBC31AA72B65C3
BBEF8EDD9B4EEC32CD7D3C7C2FEC51FE0DA9A33F1C12A392750F3D1D4FE99AF4
D9A1772129A3C3490B8B4529805E0E306E95001663F0EE156891E1537A7E03BD
98EE97FA23D768F48EA462E9C8ADE136814E40E9494038C8C4146D9E400A2CF7
0467645A2898C551E43963ACD7E7868CAA4488EE815D40E28CA54BDEF9122801
8A6DF526D5C66A9F11AEC07A100C7CCF00A1BBB7177AD139137E1E992023356C
5C546DEE5401E08A00FD38A70551FF9C8A68CEEEC3E24A8A8D78F1B9CA757727
B2A7D3A46798F5F975A2784717BCE6E4D0B66E0000BA7FDB864CFE04BD7CE607
0FC5EF576B1DE985AAAC8126AEABC40B64A430C0AA868759E4C0A2689D828D2B
468A3858BB337F0E6842EC5D9C0D5D2596ACBE7E4BB9B5198903BEE40A9F1FEE
2CE3375D67D77D11B92C07A9CE1FFEC4FD57B0891FBA2E75BD5D5D17618A9ADD
DA75ABA8C339C5AAB51AB884232E9D200A40A68E4799E5E842BFA51FFFCEAE9E
1A97661A47326B6308D41B37E844E66954DA9032B1333396FD545000E364E7E6
A79BD95977419E006D51A92C2CF0046A5F542DBC264C611E8BD569D4E7894668
52BDABAADD6B9E6E1B71655C46DE2F505615AB470D93AC31E7FC99288D9FB5EB
919A1D92B466676E57429E6BD74FFC6257A2E0CE1910FF41A7B70BE8A29332C5
DA24457DF7F2AFBA61F8B754C7582A8C089F5553B7617187C50EE0D0D7941F08
41112068656190221491CAE0922A3C733FB9D45F81757CFC8ED6BAB5630EDD86
4ECFE0D6959D5114EAAF1612C970CAA2C9472CA9736B50613961F9E542A99E1E
9EAB27BEF2BCF74FB40E6263AD649C32D00F99B504DD1602FBCC202CC8046C60
9E8D29EB8FCDA4F0323901508EC6D0D3A034E320755C9FBA42428460AC283786
C0E4C0F45DA2C8C78EE355C3B5C349CFAD8F885A3D4CA30C74613E0205AF23AA
2719BC14013E7859D68CDF0BDCFE954601924C473B761EA72FE8B82C2A961083
82D4DE8073A483A2C65E3AACDF4106A11D6366AF685F88D99F32705FFB5C3190
91904AA6F8C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE6ACF6E51395ED67
AD441581D7A43EC3324CFF3DAB7E17D9D291D0CF9CB9086D116D56152BCE3296
95FE8A830CCF318CF0DDD078FF2E319A37EB5CEFDBF36492D265A24D538031F5
D1B00F3C41E627B1DB9876EE658C50AB2BD9D2B92C897D83ABBA76105BFF7E79
29B8B36A0F3C3F8378B427A87086EA10A597E1623529F8734C0E096F1BCE149F
8B0F4C80FD9ED2073D21FF50B841774BC20AA8870AA9DB4ED19128C657C8098E
D5BB7691BBF8C1F6ED0358B085054144022BE6620E3BE3BCFF07C029D465A074
684244F63F8367906C7C4648EF33244ECEF4405FCD839685C2BD7D5FC1353416
8DDBA44083519C586F6BCA610DA67BCBB18285BD9C0C838711A76C5B5D57F356
EA414904DCBB1C1FF12E5BFED5253156E3A76B45CE938395E129746ACA103A34
C38A7E6808E1BA082060EE975BBEE0EE2360D53A6C2EB0393A21C2984E95892F
8AB221D586720A71FAFBE2C80951B24AAACDF129B2BB843A35372A2FAE18AFAC
C74586D3DD54067F7779D9DA069D7897314C617685D05AE401C710E8EC03A64D
8C462D8E458ED29A12F56A9D3FC1A5A59BB391F99ED1BC64F8850BD7F2551F3C
144EC0BFA8529787A6F7E7F29C2C9D31F4094F9E218E053ED37FBC0EB204AAD2
53FF338FEC59B284251A985F7377BEAA49275B5E62BC871BCFAE9AB64224D592
847AE57C85675CF04BFD1410B56E616F68C39FF5608FEAEC6E72A40B22AB733D
F071D6B92B62F165192F48C0198F2957A103CB2F0D1F55AA122628853277D256
C2107390CC3E2D2BBEB1220329E86A68680D1F9DA963B401CDD3C429BD4CC3F9
6584C065FAFEA3EEC98A137AEAE50529E1F15174DF4AE9067EC4E67725672D65
4D5081FCF2663644C985191135F0156722F0BF1DFACDE24649CA49CBA47F93F0
201678944115499724D8B9052FB4F6E0375B8F8640A75773638943DE96B8C4EA
EC254CBA1E05D8C31B9C3178133782ACD3465C5CA2D45C688F3CDDED343F64C6
CAC65D8218E75ECDA7292A0F2FBB4F6B9DA8379C3AADF23AB9DC687ACA989BF8
6F24F23F6F74F71AD0561F50EAD7CB37952D1A0E9F744FBE8041D1C3EDBAED08
9845046259EA79899713DD1E567F28531E7B25EEE41EAC3D35A3AAF9348E13F1
671DB099C4BA1079D778A6FA8FA13E04D067B55F84954495EA3D40E2620204AD
69A42D29B4D95429C7651244276269FA385532E9B57F1C2D2652933D4F316B85
7DD80D0BF6EC0333F920B9031F7626389BD3E392CFB2EEDE173452C0642741F3
C72D84A0DB18152D56A72ECE236FD3A3914574309A3384CE66C909B7040538B5
E7DE80B6DE055DC28C1B394FBCEA0BDDFC44213AD960278AA498A967D890C295
77ED868877C03C1100D8EBF3CECA4AADE5DCBB3F0CFEA4E8A5DAE149F6483523
881EDF02DAEDAE3EE928160342AE6170A01E13666A84DFEBC5A5DC04BFB1D49B
F5BEB4A8F19D264A7F4B1C259E4B1010AC355CD9D1DD0C6F18999CC47EB3AAC7
B89EEEB9E2F9CFC6BCDFD9A438C10C8C604E64AB2F9488EA7B1344329A6DE47F
D59BF4A2987AD80BF0054F72ED0CA0451E5D8A813AD6697E53A43ACACCADDACB
20AB6BFCBDD95D322B8478B7485BE9C86F055D7217D0F46FDC29D08D6CD71B9E
1DE1C50C1C3C85C14940A830DDD392F93F6CE1294B62411E6DF77D4A4A4D889F
D9D7A6AC1A896380F2762679E60FA6E763176E1B2512B04580233972D9211954
9CBE53B0896667EC7ED9C97F909B8B374E4975E93D9FD32DFA0AE84699D182CF
6C029A8E6564460CBE4D5EE06C24C4F502E4EB602446673621049928B01E78C6
FC5FC52B1CB9BBE02BB81F2886C558B9F2EB0504A2F8002B1B13E2A496759FF4
2496772170C511EE704B4308A3727F64393E392FB6E0369BEFA855C8CF4E76AE
27517A9B3ACEEE42F3101F44998749B33FFFB35AD715BB0DCDBB2D35B51730CB
8CC9D14A39917EA3055C85D171C0378299712D1177AA7469F470279E73A0EB1F
BE7B70C8CE0AE57426572795B0826AC0D3E445C98DBCFBB63EAE33B6E75C7E71
157123DE44DE684057683F923A2126FE2A788552F7A3483384B6E646EC0415CF
6D4002CD9FA8779392B0A780E97EEBD2450DDD1ABDBA993B98A90E50CBF66121
08A4F43DBE0FE09467C33DA6A1C61F02BC5847C65C187E5B23DEC4C625C286EB
9AC7E30F0BEE1991402F2BC62D606C038AF2B098A79351897E7B6222B6D73635
3AC4E3D4C203CC50342491D2F70A528226650D38258FE2EADA6E4E1D582F4723
F2143CD07E0E6958254B6D96C9E5485E26B07047B80849C0A77BEDA560ECAE3F
CD7FF41BA0AFCC480F261D7CE694477F749F82E5B4AFFE12BA90C032157C7688
7E325784917AE505A158C5B3D37C1041ECCA0BA811777B5019CCAC36997DFE14
2D7DD000A0E766DFE0F272E311047B6227781696AD545FBE5A80E2A32D7F8462
912966E9E97A67D036FCC3FC5375A979B78F473EE7AF6AFC189BF5E14FD0D21D
656B3EF50D47E923F43BEA1BE16CC04EB2A966CBF4FE707BC7472D56ED0C13A9
66448345074B1F2C00C537A79FFCBB1A784959B43E58965C260A89E7E3BB7ADE
BA9C882AAEE60A026DA25D51A46651A1EE03A2CA61DE42D78AEF016749873529
5CFFA292D5B7A1FADD93BD3CC207D8623EB59F6B3FDF302403A9C2D794743851
18652EB37CB7021F80792262A4D2F354389D1ADE3C1E4BA1EB8855BBFECA191D
4B80212DECEE21CB16BE0DD2A5B6AE12B959415091545A96B78F6F4DDB5CDAB0
611B3248836DD9E54650EE2D2F3EB92489594667525BAF1656DE0175464EE264
860B6E310854C80BEC744D529624024E35566FF0EF71D60ABD9581F43AFD7EE4
A7099844282972DDAB121A040D3D7CC97870F88C3874BD5C497F391141F2094F
8EAB4CC90B12E10F8AE6DC2081CC4C4860CBC1DC3427060C9118E755156C02A9
9A7EF38084D649289E4600F5A67256788F406EFD36886F531DB9D7ECA48701B5
D4511FF86644AE56F46392D5804039C0FF5C49D1AD996A67AB0914D83D859C06
AA049CA26AAE7F316592E7DE134F775A835D46A69D1C4BBD6B53124D7433EEB4
4C724ED69C8697D06A5246DF0C49444B5390076A43C82C91B982B19D7AA8B615
16F4BE3585A899E98988CAFF8DCCEBF494D5676912D5E868E3877779F910B174
AF933326ABB47935AC900487A2273F6AA2BF735C312FEA9A1AC7289E4B43B953
D2EC568761231C3119E073DB7DEED7DC4A04968B69F792644FA8B627CF923CFD
F8CAF8B9C8FB9AC27C8F2C2F86FEEE11AA06BBC0027C40E0F9DE9385F79D5989
98FCADE704A1035C780BD03AF71BAE6A930CD02B6C4D07D6D0998EA18EC7CBE2
73105CE6378A2ED913F14D20C272D14060533ADF2FAB44A60E6395AF687EC88E
429815282D632366039F37D3D55E93A63A397B46FBB2B6757DD564C0BF55E0AC
8EC66E031CE51B2D7D27AB41A21D646C236DDEEF1A23DA64A61F0DBF36B86A59
893F277DDD906E28FFFDFAD7E4B7610E6A108DE7F71F178FC7448D4C2E985072
E0811881511DDFA4A3C730DD7CF5C1E29104673D7270F35D580E8F3BA9BC94F1
31ED0110C946D421B42532E5BD4FE3D8B242EDF647251781ED6CE249DEDCA4A1
FC94E0ACCAB225D733E123302C0C9B054E97386886E8AB5D03167D702466832B
32DC035DFAF601E2EB6615E116FA9A44B8D0586FACDA34A0D0DC74662C3F4FA1
736A4D67CE0650766E29A79AD6ACAE003485A4C21B389F45F8022593DF513D31
54E07738A2E39D6AC9429F1A359112CA28BD92DC4EDA5C72C6F813D53F1E9C37
34B81C2CB5207702A9A0194F0DA8D335635EE2174E2DB99DAE9AF89BEE304763
BBA1AA81F9D74B24FA7EACEFBCAC72DA4AF7C3A7C06483A7FE49E9118C94F79A
DB280E5CC383595D57C51F4C969C464C1CB1712283C42A77AE7874BD4EE0AB63
64E2FA747EE9A89161F93F178D7A24AB2C747B80BDF0816DA99795CA28792796
8E85C3FE71046BF6F87A97CD03FB8CB1FA267164742287C9F05BAB96F90F2374
8B2DA4315C703763D6B35A4836A2AA71B39B7AF614B09A3D9FE54E8B1AADF323
785074E2F023CF26547355053A5B40A0BE90965C2C34C42797BA6CD6DB3BEC3E
2ECFC061F2F9BAAF636F17EB88960EA70F1F0F037DDF2061921A72E46589CC08
EA87EECFDF36B819B07306C00D700345CA2E6113E992D2BE44DD9B12DA394FF3
5F44EFD4D133019C4ADC916AA6F4F5FE8A642DA2E54F42220C01688C94717B2F
1204BBE9A32B02C569FE47B75784AF1D9300E4D8EC13C0B542DB50991CB26D44
DFA0957D4DD0665F0BB9EFD60F9D0ACCDE739B576500ADBDD6E0D981C2149AB5
368FF41481D6B8DE8662E73CAE558AC3FDD6C48D353FC68A77014365407D48C1
350E58ECA8C0532F762F64A11900664ED4E6D4DAFDF0C64F9446C356216312C5
F614AAEE0D8590A3A26854ED51C4A9A1C13E40363B10533A8BE1080729D86FEA
A2193FA6D6C34422C34643DA9557ADE417810A48AA2D73D0E0E9674BD4C83958
81C15ACFCEBD5772A959E2C99D13BA11BFAFF1112E2CCB84677CE03DA00972FD
3106F8FB5AEA60ACB194FB8FD49395A70058C942F80C2313118CDFEFF258E569
E39372E34E3FF5AD87298C696722D1D562D4A8478555769EC2C44150D849A0C7
D966B2EE653CDBDBE9C8F352887F8DB03D70F9E692F0A5A3160110CD4097E3E1
FFD0B18758DF9ADE231B76140270F0A05D53FD964DF5CB87A377ADBF202718B9
E47B1DB784435B7EDEA4BD19388DDF3C5B474F5374D80D469AED90BA08D8A04E
A2CF32810C68ABDAE536D95D46BCDAAFAA5A8301F7DDCD3BFE10B6C23F1C7ACA
39A6117CE4DB91E197AE348634BF44B2108CE10CCBFA1B838169A4577A9B225A
BF538D4B10A9C5FDC801B144AF82BBCCC3E63B027A4C3070D38586C67E8A16C5
60DBC0D4941CB6DF6A0D1E7492A6DE009C0F464678859A03070758C38629FC34
410FAEDB24E5DA8ABA2868658526B74727FCB164F21405F988059A1BCCE6038D
184DC74E2E186A664391B7B84E2281ABBAB44B8B81D92F63481CCEFBF4264ED8
900D17D9632421541DC60BB39BB060ED6495AE98F6798010F76FBF67CA47E5CE
09E60F0839874318C8389E298F554671CE327B099B0AB9BDB8192271B478CE0B
38151243D996CA5AEF4354211E3953CD7AD90239C1FFCA061A21652100B8E2F3
DCA6DAAB758BD7FA7D29C266129C91A2A5804ABE9DBD230FB37711C0E606B1CD
01AF00122F9A948F54FDFAC13A9C437607321D3E4C10059C1091823B03DC61BD
809BB14C7D4FD2C4E6057BE5F5C51A242002726250A2AB4E8AC7F70BCD0AEE3C
4CCE6E1793589423B942DFF7E8267BE5FCB0B209B090009718A49C6D7256EBE0
D843690DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E2C44D18720A9F9D707C
9D341698A75314282E4770738AE96FBE5811DD097EB0065B1E01ABF5E2D8428D
248B16047FD72F0059E35DFEF5A8F444C41D300E540D53723F45F0E20277695C
CC2E54A25041A959AC738AB6CDEA6486B7EB9914CE42558ABC90B623AFF1FA2C
B3EE64202FB703CBE8249A14C37B54C54CD69DAD2A5C2183103109D6F82129B1
301EE091D9F7A4D345114235F4BA289528C04940A830DDD392F93F6CE1294B62
411E6DF77D4A4B7EEDDB6330756507D8BDB3F97266E6A31040AE138A8469E758
4D0670E527BC95332D13B3980549FA02073BC0A45FD5AD5AA0468323052D1205
BBE6E794D7FC7861CC42DCDDDD4A4A3EA5B0A1FA84E55ECA7617A4112459597B
716E81960CC0321BF3AC8193758B4610EF33F894F09C9ADB7C4531253BFAD318
0DBDF8DEA31BD5BB3282B15C22014FBA359AB5BFF346F5DDB0BD589A54893931
D3F46EC04582CAC86BBA5E5E515335B3ACA75A5A7E5F16E27E8CBF4128859E2E
97D48C02844AB8D43C84FB19D8B311E2E8146C7D3D076F43B3F9EA8A848D7E8D
0E219B61F71B5D50F4DFB79975EAD0E794E842C213CB237B187A7B54F41B5443
3526B5BCF13D2DF1472686B200B23FCE6AC13FAE056EA1B304C5FA713A88B4EB
663FD7959C6D491010F976D4C7EA2FA6C18E22DD503E8981DB670CF5CBD09E17
6E265CF148A20091BA8B06B993088E210C91279AAD5922A3546551F93A076B39
3E4219E0EF172C72ADE99EA91ED60447A31981F8F13BDB8CCAC4361557D938FC
4AEAEA9E88AA0FF61ED04C6C105F0258CE2084F898D7571091B18B212D48B43D
6007AF07A0FDB7C9FBC784A1C9E0506142709DA99718F36F909299F3C570E743
FBB19F4F841939609B3A3D2D388DA4DB9FFD25C55A4F377E53B352830FA336B8
CDA7B5752C68FC0637C661E3ECCBB47543C20271E2233F7FBDA8094346C06AF0
1FF1D4784AD33491DBFB17AA6A4C7C8B2518C12DD5F849263DA8B6B2C38E4741
21239515E3E3BC6B36475154CACD25A07C74FEAA2928802611B05C9CA0ECCDCD
40CE7AC49715D8BD0A6803D8B14E755118F43CE13E54945B0A6BCB5633B1D580
346D913BACDF1DA8EE9EDC8540FA56F817D5C135D554004829A6E4566D3C3D4F
50453B4C997ED2C8725BFB415A30E47844548A823BCD7D0D5F3A1B0B5789DB78
6BD92416107B1E59084B5F758E509DE66F112F49E63A16F60B6795CF0D93839A
E2FB6D0B74207F0434C9599D055D786DC25523AF3CDCD9D834D54D210461A17D
F138F3D9F5C7AF9CED4243271A1FE1B018462BEBE17138AA07373412B44023BA
4E204AF4BF3AD6DC4CF005D393672AF65F0D015C86E975DA6622238B837FDE02
71B310BDB076E1E5D2187136E1E88EEDCACC0DC5B4F3268A8831F3391A7B2A17
E1A8397AD1D30455CE9BCFB29BFE08071774366804FA232E4AE9688E40E61987
035623AB8DDEC101D55543FB93BA5928AAADEC03C130570142D6849BC5B3D044
5B30D984FBAF9F56E6FACF7C07F249FC058275A863D921A182DC7C205A93ADC9
40D3EDD5D675EE14CA60D33D1C57855BBEF5F5B024656B80578308ADA3B73C7D
92DFFA19F1A79AC9BDD3F2F88D9725FCEA44A75FEA44CE4C991729C5792E1052
A4216B17742ED304B2996DC77BEA528DD00039AA51261D5401AB2ABD3C25D5C9
A2FA8C392A82F8DC836C8E33A5B5A2FE1B6C18912CECB8E244A91E1AD8064357
046BF2F498400D6D7DC137A904C96EB7B3CA2E65F64E840DCF69234B15780303
EFD10F9B6887E40A5D78E6B1EF8305A4FCE9C00A5845D1C7E8F51710B4F1A4DB
D8E6BC200679470F5503B71479FD9AC22E7818EF7BA80719844ED6735C3EB876
E244D5CDFE745A089F2679B720C105764DA0F3744E683F88050A9CC76AD73A11
DD873632665A06A2D13141E35806D8F53E8F34D70DF5C324DEB566724FCB712F
E0BF7EC9416F02C2C3116926FBA26021B38D6E21AB7875CCA19E45CF37211113
56D1F3E208CC54E7684A70232F0EF82F448559F8CB85DD9909A74AD694DD99A2
3A6BF1BBDD51D96BA4A5207AF1044E917186B01F946EE08ECE7455EDEA610D0F
B69A58D32F41B39AF49EB624CAA6C346A08DBE65B1C054C0587AFB35100BC76C
C64E05B36DD4226A16A7822E6D523A4B3970F587F38A0E89A05611B3A13BD144
BDFA564DABA6CEAF8A444AA157E95381808E974D7CD402B571D2CD823D1E7014
31809B56C504BDB1B7D50B99310A0DAF0C020C04EF94D0D2D096B734CE3721C3
71C213B6AFA0E73C0622E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE24DFA0
F0D5FF99461F3A9DA8509E7EE6AB98B4BB88F67796EF2B133E9F6AAE0CDA18F2
428EACE52EE14B5FE74DE6D3E114246049948C187FABF401324F9989DB792F77
814729157208E3B37B9CE3F1D0C616D951BA702DBBFC2C1B953BFC6CCA78DB0C
094BC82EC4F0BC92833AEBC6E11B70E1C0F3A18E54817F7BDD3895DF79E9BE61
9F55E9CEE03B1AAC8C7642DA07EF2F28988112405F80F2BC8A63F2CF41C075C4
DF19A0F0AD8A46F5BCC2BA12C4D68D803B840ACF32FFBFD9E8DC6ED9FA9FF379
C70C8E439578725B3F51746691838E600146F6C88E1BE994C9B91F45C562A5BE
309D5D926AE5C673625845E1981A3316F98A77F4D100499847E1102CC075FA12
10881D95D6EB2E7C492BC58C366F903F717C1A9A37719070DB1E340FB5AE3AB8
F380A19F5FDCDCFB687120DD2BE5305363019BEC0F407C2D4DA38EA432F0E7A6
D8221F23B7C33CFA77D83480566E36545DAB1BB0423C34755F88AD24878354F7
52B9EA1278E210D305677B9A4739C67ACF82AAC653B48D8D7589DAF8148D380D
77F8E7DE4DAE00D18C95C7E50A7AD744042B565746C211F30813630C7EE7DC31
054612907A0811E8EC4075D24EB0682E7602CC252BA8AC0287850F9073E30FAC
A80736C0BF828DC7E5A8F8F4569CBA4C2C3F91912C485C5DAC43C435E2F5527D
647EFABA9D63753FAB6F4BF4D7B35D01E3A198153B354914BA8E4C0BAC128B7D
4D61C2AA87093F0D9188350856B6E34E1109B826A3F23AEBD548E10C71A93759
6710EBCD5651DFA0566AF29195C653FA085F712258B8A1B9AABB8A860492155A
DDA8E704EC5CFDF86D3B00CA7934C295363D8ADB04340CB71315D89A0A06D4C8
C61AEF51A2BD2410FF027C40E0F9DE9385F79D598998FCADE704A100379B7D9E
02960F7C0D013CCE063154E006EC3DBFD9106F331F128C794D9D6EF7E18E8301
0405CAA3AF558B2772A5EB6C07862D3090AC8A81D8019BF968EE312103282494
D6472D885F3CFAD49B63B96DA5105CEC17F4DE04D7DB69822968706EB94D1720
FB2879E596D3A7EF942D50173D24763E96F2C385B9F9C34E0382F02EB8C8BF9D
3BACA0FAB8F42D90434A48E3F4993DDF5FDF93C9E21FAF162C920C27726380FB
D329D29ADDF290883487CA328A0102AF3247216D8F96EBD8D1EC18D48FEB29E9
68BEDA93F92B4398FA2E1D6CE1F398ACBABDB5DEEFFFF4DA29E095CCD0114C8B
49875196489903BAEB958166DA9C2088BF9C76C921024B55FC6D5DB5BCCCF772
26C214AE81832A9157AF1175AB47229D0F348EA969DF366D3E164E497528F422
DFFD3B72A168E84519D138C233FED4D468568036B06C33F7273ADF8875EA0E53
899CAA8CCD652C4D5F26A7E0A25B9C7C4F5C4199F13DACC7D8F943E964B009D7
64D79C3C26CF9EFBA94B4FBF6CFE9C75C0F505BE6261EB9A2CB750BE2E146ECB
DD16A1584F3EA2AB3D9A3783D8743C3597C357ABD25D6B8DCB78E81FB5B8D5C7
0217AA3648ADD641A983CA3BCD930955DFBE0DA8B9619E7108A8EAA94000C80C
AB2AD7ACA1D2D0827EFFDD05D4EDE9C2B589686F3F263BC002C8884F38F3BB6E
09768DA7EB3BC1496E363543F04DE5B6F6A9812C7757E990268FFAEFB175466B
422BCC69E8B69400CDE8AE2CF394292067CCAF4F4E32669BE217C096E518A781
20259FE222179A0B410CEF30DD249F2A5D23E5E47C9ECD23288E6C069F496C57
3ED18C446A9892616611F8E6172063E0FCB7C1518524619525DAD95ED33B70A2
CB2356886E9B27AFB10DB195E5EDDB1006AE12755599CF67E27E753AD25C1FC7
5E2D35E33B794FD8F19F03162747FB4086DE7B1C1C800BFD4F229399392038EF
1BF9E659792F783316889221A826EC20ACFEE1E14ED854D3DED0148890086099
5F1623CF43A1C00109AF4F59B91B71B9682CE60E17947EB7915938EEC8A66836
140F02D324C7B4B70BED56A8FF4C1A2EAAAFDAE8BBB5E8E952B17C07E69BBE73
C205BC659E191366CDCFD2BD52526414BE2E70272CE823A43FB0D77B53B2866E
7F21C96896DA4DEE11C94AB03CA1A32018C4B034272D9B8876DAF47EF08D2DB5
D2936909F3E8BA0936E751B73E754A73DF6685DE51FD6A9989881AC4465318DB
FF9E0E5E13435B4A830B5E77C42EE8E41CD5CA9BD0C6E714DAA34F8DC7594332
E895054E5FD3DF1EA44126CCC0345812AFE08FC784E7C4C4287D887EBAC1683A
8CE358ED73989053E0F420D2D4A09E9CFB29726F821A7787E5F817FB905AB350
D466B4D20EE18B679FC1AA857C307C4D2AB54597F47496C8889CF6CF6C6E377D
41AA9E983FF07D8B6356917744AFA6F67477386B69D3DE885AE1F8B52B0FC756
5D358E8D01FC5A9066DBE8E1FE86726B646E864416CF2B7E1E9366A136B9837C
80FB068B3D2290FDC35C286E35763A02A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751416C9EB562F65C3DB7A4AB69D26B5BF8D90B5758CD7435C
20A34F783A4273244DA0E4AB11C078B07BF2786AA78EC0527660082810DD4D12
583633A6CDA00B353267B2BE5B8178E6B7889A33771F86276E6F0FC729A9B845
FA4DB9CDCACCD1804B9444C284E42F73764E076EEE81285FBB3CCD86DBC5251D
2D38483567AD80CF22E61904C92A4FCD68F8C5389BC7B4DDB26033F03C778A1A
810DCD869D660DC33865B7E7C25820CBE0AC3DBD4F5A7BDBDA43B38A384C2DBF
592B0E0A571B36569CD507130E8F9ACD3CD20D9A4008EA074361239D8E8052CC
15B53B907E17802B8F1B15359AA8D6F03661719C67527EB25CCD9328283C9F0A
171E48CEA273F000F765D1CB762C01F0925CC89920648625740073D2F18F5E53
5CF1F0D0D082C889B4F6866E72B09BEC4DECE4EA88FDA367F98790AB0323A4FD
9F2E28963D7CC8767E4719B001B2B4D6E8E7FF796C4B5FE29DC0F93C2DE0ADDB
6BB87BA8423296AA1DCA216EC5AA96CED8CF68CD7F69E003ECD5D48EBA04CA5C
2A3FEA809954726348F27B22E5B99CCC94A4CDB6374418325E79EC4229D8E137
B3C9EF090C510DC30DBBC10E10866513910B65C0B9F0760B7D4F6D28B6CD5B5D
C818257E2541C8D18975EA17CB21EE4C09636917012FB05964E8014BD979C2FB
36965D880AEADADA8D7D37ADC90C999415AD8B6D0F40447FB5FB330A80601B1C
79EE748172D7503E56183EB0E6818FA31EF967
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman7-Regular
%!PS-AdobeFont-1.0: LMRoman7-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman7-Regular known{/LMRoman7-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman7-Regular)readonly def
/FamilyName(LMRoman7)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -102 def
/UnderlineThickness 34 def
end readonly def
/FontName /LMRoman7-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-483 -292 1562 1124}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE26F7ECE50E9B8349D1A7644F2E9
3FF9625116305D3A8AB7EFE9B6CDEC7FF1AFAC2914844571C1C3D55312245E95
1C742DA9DFD51D0481667CE0F0BFADE80CE5955045CAB5B7317D73EAFA74E339
ECC43C39A209A004E5BD75366B006A91D46E1E7C87E6F81FB54A33DD44AF5B3D
F81A333C02842D9C00CD0ED5C5E87B3F9AC063B5D70917E0D90240AB4483CAAE
03746F5AAA3B2FF10270E85CEC5F5B6C1D5C63A93DEEA5ED09EC9951684CFEA1
20C70415BE898E01D695953351189B085F769E96ADD30D2753E7E62AC6BD3326
4861C1295BC7CE82F9159E3523BA56EF6BF3440231B1CF44D9AD4FE3AF0DDDCE
1A9472E941EA03CE48DF71BFABD9E2B329B65B7E9ADFD6FDD24E7C92A41C5254
80BB35DC82178DDF164C9DD247F520BE204F342B1E0E4B08742CC7485D3F26DB
DE3C6ABC9BA64F5A9BF876A3F192FE06068E5424B8423977DEE5530512949172
5D2B28F016A12B3CAB43340F9F2056A32C91149910447F13521AA514BF404CDF
1380337F42EFFE0CA35736FC28E3279720116199109D73B15157E7F6A0447469
1906F7EA7419D404549A72E3714DB6268A66604608BF2CC565579E3472D3C225
987ABCDD43EBEA8D69E8EC0F70AEC9745FF15EDFD83A82E991A3ACB8D3AD3E61
28977A95968B667A2123FDAA74D9F418FF93FEB6F7079F421D9CDE30FE6A7C79
BADF32183CF1B98AD642CBDF68BD6367FF863324063350526B221D33A9029885
76DA13B9CC41540EF9099592334BC7009F6F8721E494E1ED2C1F9D1AF8CF0B7D
F6F02BA03B3B6B275328CB94B539DAD0BCFB00D2C15BBCA5112D232DB8182167
185B478934559B3796E58D2F2F6E03DBA0266168AE6EF6F49249000BC3F16AD1
FFB258A993A704E17346084DDEF46CF7FBC5FA5860CD27DA817F638B0F0EB4E3
33415AF8A9A6AB64C7141933B26EB15DD1008A0910A81DEB2A39B31A6D13251B
7E5E4D23AB35094E6C0BB0B0F240B63C38E6F1D90972E07E5CFC49BA24321F80
A434F30A29E7CAFF159D2421F29E3C09EE7AE506B4F8A2BBE9E498EF25667BDB
2B79A6C97BD472425A53BE15D728D7D835AD381E8437F3B650A7FC244C9C3B54
78FBBA219179F9CFBC03749CE59391338C51207B01ED36B53F1E1FA003F01FFD
511444C6E448691351134AB8A9E139821B15686834A6BAB96EE0F029A27AAFD8
76E1D5EB11DEB30BF7A3CC1FC21E712AEDD4A948F8C10EDBEEAD8F91EB13E7BB
5FDB2C92F44421C7E20BE7E0A78FBA272C69F7A34493DD3DCD6254C0BD756210
F38F01D757B83E20903375DE4619505809407145D7148F40B8FA1D9F0DF626C3
94A6BA3C7EE4290F0D898BB3E404CCAA91FEA4EC2FBB3A7349CE7BAC7CD903D0
AAFEEB0DD8B306E7A79BFB3620929FFD88F15A1BAE76C6EEFC79C130434E6066
038F7A17D436BF9B87FEED4792659E7EBA466964C7134AD5D0447045AF93358A
CF5DE07C87C7C94DED51FED4CCD2D249ECF4B22B21842C8F86DB2D05311C167C
F5BFE161C8612D66A783164ECEA734E43C24EF1C411A4F04267EFF030EF48F8A
72C42BA53B144B8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D515673E4D17D8
832E0E2EE836DB259FEC75B3179FBFA7AECE74EE30AE2C787714B977DF80B7FA
EEBCCBA265C64EA7E1CDBDBC5A0541FF5E194CEC0F3A909C9E8EC3CE112441BB
2A5F77E281FF269C4EECE035BB6FFA507203F64797942F9227920CAAD43D1B48
EC23887DF281EDC3A2249FE4068D529E201B45DD4739C514452FE0BC6B364751
54CACD25A07C74FEAA2928802611B73C375EB881D56F270E8C77CDA90EC7FAD6
46EC17D356E6174C5C555DAD5EEEB9110AE468D1CC587A732C65EB7C738A7D57
3E2345E735B39F7B01398298382D820918B52AE133CC3977DD3448946BD058A0
C86C7B21DFE775C4064934FB530B35AD9155EF03D074AB55333A68A6510AD6BD
87E9BD0F7E93A67159F5E75761299DEC7BD65B80885F9C3574339A61253C3234
BF4E1B89BE65DE7B0CB4DACDAE1FC4F892A2F092A3E45B066E9EE705C681971C
9CA65FDEA97EBFFC01B4B0E381FAA7A0837A0DD1EAD10B0A7A3F70DB740709CF
3201649E488A00C554429F72F81976F8106FC0C276C819700733331432ED8C17
CB4DB47FA3AA70DF55B9B5E0817E08C6A760677CFAF1D482656CB75CF243EEB4
2103985613A5D63DE54712890CFBABE41E2167A6AE54D5DC1BE1810AE5AD8646
CAC4CEE0D417E875D900A39BF8F1E840D5695D70DC4C97884A824855D271FC5E
3C8409D32BEA2B29BD1A08E9B95F964FF6314E7D83013F420403409EFA81F6B5
E80114385D6B52E2CD28E7174BA0E2792D227EDD82ABDD138A2812AC5E2C6030
4078961DE665ABEDA47B214C73AF9982B447F071FFA8CAC2FD1A29623CB12869
FF3B4A25D1A21EC9B9C92D1FD382151CA37EA407BC8C9B9034EB7994DF1AAA37
9A62EDFB1378A82FA82511BF1887387A293593F166C33ADE345C6AB91921B93E
22698328AB963A6A621DF565C08EC5B4DE3CADBB53CC6A863D331500AD49D0A8
5D7764EBB31166A29307F6343DCA5AE98099FD0DF79B13EB5D68B45BDF736A27
654BC2ED09432B072E91F7CB647E1131C0CEE91162DA66C9C1C9B5039A0A01DF
B009FB8D31F7D6F5ABD046FCD1E586824EB69F42B4D0A858F8A3B763760ED716
A24400838780CF5A5C4187AA81C5BA8892EF2FA9F87A6A97405F04DD36950A8F
3D2E430290A40947B84A0D64CB893FD0BAD0C669DE20FF823A10E4EB9325DA08
07D0B3882CFBE4C835B057D5953BA549C0742D661C8D6BA1F78EB952AE750CFD
0800ED2EAA1DF4D0E3D7D524C71285ADE3F3BECE695865AE896BF66C01AA5D9E
328841C2F43A31276A3946D95444CFF436EF0E377B78459CD5B7A1FADD93BD3C
C207D8623EB59F6B3FDF302401C06DE6CACF4C3FF495F0D3B1317D4933E1E097
ADD392E793B1B54A243617AE985BBC01B263933D3E20EE20A1245633FB7A7109
0207070B9EA26895B88672C13EB61842EF56F134AB25DCAD2BD08AE61E233FE6
FEBC87F3261124DC587C5DEF6FF091ED97A96DA52D988006E9D5471B7A2E074D
659C5B0561A34A2F1605CDE754596F8369028CCB95F05432204FE04146BB1300
B726E2EA0A91866201E08792F03323228B622E3015DA93F9850E9A175C83CF70
BD90D19FE47DCB4E86757608AD1D765F168FD2A18582D3204B245758ACE06E2D
2BD43C8D0B7E42AC99697B4B5BAA4E553BFB21986E8672D6AD3E0F12CECB7595
C5E680E31F06B8DF8F8EEF4DBB83B3C77432EE201F41C83B213EBBBC0E684E19
84C107C8FD9285F08FC3C879AE6D42023BE0EF4FB80455AF129EA1A66E87168E
BF926C2A91C5281704EF7AA35548174F41D78903B40367915D4EEBE9B8DBFA67
32FC4F39FFFAE347AFE8B5084386844FA4F0B0331CD57E3C2B42F2B5A96FFBB9
4B086C7847400AE8CA79A797C3A4F27AA9924D6616FC860CCAA34029FA42DFE1
4CB390C69AAF35C89B103DF5666EE9AE0F25FEF4E57B82E05FDD5FC48B57A3F0
802866F884EE3C6348FF0F41BFD3E96F9737FF3C885E083C382D12E73CE475C4
CBC8EC0A76FC971E927451DBABCF75B15E5AD53C8DD8710ACDB3786A919FB356
CC2695CB2BBC2E37B1FA6FDB0D247F4088BB9B710745EA0567811DA030BEF5C4
10DCA1D11F770EBC2E641196A40F4C399616B0A7A154D9577EB6EDFB9F157911
E60BFC35B3168B7CCB53A1D3201066F4FE8D02407177ABD60812B88E20F71C86
5A3C7B1B589C0B5BA0C811390F9DB8513792EB5AB3F57FFFB003F6BD746FEAFF
2AF04969EB7C738A7D573E2345E735B39F7B013982983826237629286D48D652
9E15ADC93E621833FC3E904696E8B4A1FBAAD9E2323EAA0B733EEE1C7A6E6569
7343CA3970CE84EC6B9433F84D118630A3B2233A129E36F6666A3ED9C1AECFBC
3AD200383477D05545B04A5EE55502AE9BB54CED17DE5CE89D628716BF1E306A
A807CCDE6B18DDBF8A83D72F50C48125777489D17D3FD0DDB059B599BDAEE22A
72AFA0F39FFA42BC1097793FD2429EE8478DFF4DB502DBCCDBD61CA5B5E20E1C
FC04C7B0EBF153A18BF0292CD25EAE9A176C9151F9C4EC7FB503019911F2B53E
072D324ADD764851888781FDE97B26FA9914DCD688554EFA8D7F2FC0737E4E6A
6C452DDD5454D1AF29E6541F493C035A9BCDA34EE00F77A025329DE67583AA92
C55955E1D06531A5EED36C30AA15C66D57D4FC3C13595EFAE7BFE2FBE6DE800B
015E80DB2C9CED6F6E7CFDB94695D45D8582AE345AFD978844C404A5C01C3FAF
B530DB9A6A39DB65E568DD3A8ADD05090D2AD766419FE18C377E448EDBB08235
26BD66B40F0519F04EE2F36BB9459C6F41B3B4EE5B63571F18E7077F199062C5
699A900EA9398CFF7BF2CB6AB91D17C5793A8F9EDF8764786B8C6BD6AADD455B
5748055DC43666FFA6D2F73A0656226A67462E3B609E0C07072F3F3E6FC8ACD5
2417325991630F9C4A607450E82546FC0237D63E97E20D34594B3CE2A37EBB06
700474F4A4F93E85707759EA2EF141C0185B6DCCAA31E67DFDC33E9675CCD879
D1FC8F1177B2EE5DAF403311F039C6218F4D2882FA95447F857821DE835260C8
569B437B93FE55D79C954243E49E2E2773540E9DDD953DFD01CAEBA561F02861
1754F949BAACCBEB1CFA5C9924056F33ECDE6F29365A5745012C8ECC5F8B4C94
3BE06E64726A02C5C91F41CD1B73300A2E034FB05F65857EC1CBE59F047E3956
309ECAAA93185590B78058A45EFD065090894BC85CF8943810332F65B3A2754A
294E67CB779C7D84878DC9903EC95C4DCBB81185B62F945375C18AD34B2B57D2
E4BC003F0516C8A63449F24F6C8FF3CF208C7CA7B20F2DEF8D21F45A072A6D5C
F9F29154154A7FDD41ACAE1244753B0445C933A94C5CF53A7A6710CA40677787
776253F81EFD9AB1C64536B34CC71F6EABD6EAE8A6A87593E330FA7384C9D2DD
211B4E26DD455B8C450A3845A54352CC7706279C91938C746FFB2F9BB1859B9E
19B54C00F14B918937517DFE1339E4C6CE0DEB62D1DAAD58CF3E9F8B8B379073
19AA5E3423F9BC866B6FBB910B766B0D3D388699CA4D93546A29395A5BE66101
EC0A83496AF087789F6979D861394B757231173420B130353EAC9DCA944A2D89
1B0605B75435B3075BA7DA5F6434B8BD541500293FEC95E1EA1AEC746CA2670A
1AB63F6EEF2B51E687AC907CBA56DBB99E2CEB0F7A54B87129A7365B3CE17144
B329EF0CD6495A7D1F18FC4E184AB0138C55F58EE5BF45A9986794B83227FD41
17B27984A141A4B19E69598D08489D3836A94AD89F1C51FBD589F3CFD097B2F8
5B4689663237E82970FC0EC032AED2A2FD2D948114EEA9BAD63127434DAB18D3
87013C388D3840182F35ECB419561A1D60569ECC2EEFB7B6B0263B8B5CE6EE63
CED9FA759FCA0F4BA97D0CB89E736FAF9F8379DD126929166BF7C24D233E20BB
CD42F78C46D62EC4BE01C5454E0323B023AD7301DA5939595B1C1550713957F4
ACA332BDCB525B1E4BC8065BAF393FFAB924635579E7CF52B739B523FB56ACF2
4698B7252C22BE36764FE876B236547F6815581A47585A4736B1045640800B09
84898282CB81A3BD0600F696EB582F5EAFD33A8B88C6D49F1AAEFA49BA647616
65208446CAA0AD7FD946EE45EF3C791B05165052B12DDDE6A5B490374097FAA2
C1DF59835E8856E8D8DBEACB517109806DD2CB6704EBB0D4389D1217080B7633
A2896369D59A6B8297CC9EFE00FCB9EFCA2D26256C5DC84FCF60D33CF0386F6A
52C8265C910AF297CDEE3DAC34D82FF26906D52456D8D43114ECF0B4E3D6D917
0F300BA2D369E9DD9EDE9AC14E4FD09695BBDBD7994FDE58C17DF500C5D817F1
2DFEAF581793C1D178E74AA9DE42C1825A46B6D70EB017FBDE39702B4B8B60C2
4B78371A01CEF9340F82F0E079F1C7200DA0E6977B036E69F9303739C6F13F53
4DDA1DA88A06EE36401A2A54A603C5CAC5115789C442E6BEFDADB6D2A741F035
77E7AA7BB2FC22E27B888606031FDD3014D53E32719381936CB0776CAAB98424
E76D01937F9CFE3CF4E3779650D7C2DC3F0609EDFCC22B9C02C7B4DC651BC88C
B2EE8097A410A0335457A47A53B42F29771497E9F5AF68E2540408A717B7E48D
4ECA89C65758520C434F65A0EF3B575960E66A4084030C516E31813AFCA02EC2
AB68D12BB1C155658BB53C93B4D5F379DF239265A61C11462A034CC5D3CECB19
60B8F9BD9F4C10B1CA1196BC062E04A4E5BDC058475F916E40332CC3499D69F1
2F4CCE1ABE416B7B9BE2DD18F351F60F496088AFC5AF7A29C4E365335A08E4F9
42AD08C687F3D4039E456985B3183C918696090AAE9F653E3C7359B9BC53654E
4EA1BC3974206D4EF92EC1E606B991A349ED6A68052CCC845170D1DD32FFAC02
A91ADE9BB38D8CF41DC6D30C3B8744042875AD434486947FDD39C75AF60AA4B2
10562480BA0819931393831F1DAFC3A5D58A026EFA8516683FA3A30649486C00
2BFB9868AFC13851E8F9884F5B9A2F3F1394036A363889F9FF0A0412040AF4FD
DD9069BEA6501105C9AB89E142758EF9A1FA12EC9C9749EF2864DAAFC2B4886C
6E9E9D214EF749285BB78CEA0180CC698A7CD5FD23108486A8D7E350779CF13F
4CC39C1712E057311DF474799C7449FA8F57414D76BDCCC82C60376236C21261
92A7326616CD44DBFBF942FED753FDD26C83FC50615B20D31CCA7EB216D2798A
9933BCFDD1E556F33B9BBFE23344903D5C8ADC6A289F6A4DBDA5AFF5B06734DF
D7E18BFAE98A1C243F368853719821DF82B89E2DD0885CA956529EA49D7B9133
7D1D307C30CAFCE21C74ED943A4EED0C1B3BD32479CB48DE24EAF39BDC40B3CE
28A9BFF70E85FBE7E7CFB5E76F8BB432899ED1D9677A4F8D8524778995AE1435
72154DC945D66A2997E81963E5A017B4FD5A0BF82404A36AFA318D36BD2F492A
AFE1C957383C991714D5A5640E77675657371BD3F69A70793D051FFF5B94C593
04876FAEF1C1150D8F94874DD922AAC1936BEC68BEE119F67756334C9F3247E7
CBDCCD90E10600663B161A15DB54D1C7DC58F8A9F1EAAD5C10BEAD7E583F9BC1
DCB1EA3B8DA7CDAAD7C1F1602194DCD6A4855C5821F7B1165F3ECC1552872B5A
FFF597D94539A163323FE2C8DD7D2E82FFDAE7BD43967525002205BDF49DE4C1
B446CBE6683FADB4A6013EA9E8B4C6BAA6825975EAF495F92FC61205659AB81E
E8A772D2111082CD9BFCAAE019C01BF1F6E94DA8B7B06F422812B050DAE9D1E1
121A5E880CFD73B51A92E540FF09BCC7B6286BD93BC1126317ACD924D5A61FC3
13DB5F4B389E1934B98FFF72243AFF882E061CA00527AA59F906D303CEEF0D9E
89E6660D609C17A3E2095F15EE963EC738C6F23CF4F34A9CED84942968B40D4D
871D7AAA4970ACD95747C134526614321FC136F569E54930311299DC77BC7E6B
1A6CFBD3FB48024ED8DC99FE33F7A05469EE84164E7DA8ED1557A25EA3588B34
522F89E6B7EACEC2DA13A8D0B66AA0C3A368023E194AD04DA05B8585940B8B01
DB390A6D1415D914A899C30A5438CFA2F9D3270AD44DC4EB4988B9CDA334060C
7D8AF83A20F9F5DB0FF74793F3C5263756C50DDFE894BF041792494691B655CB
9C88996A27E4435BDCD0EA870EED9EBA6545141F2F7A7307D30727B94E23FDEA
C8A543ABB1E059247E276E206CB00BED125C8F78A5BC0E882C720C27834570C1
0BF892F79B30340EAD8536BC8F74F4602705B834E9B0391E126C95C045927A17
9F415AA41CE071D9F7F959365E6642C9D6103231E07E3975059198D8F05901C8
97288256E71AD9A18A5544EC30B2135CC85A4383F380C770AD1E44970D66A6C4
73EE1ADD05F69AC3DC5F258FE3C18E87FC474EA4A491419CF5C94D6A6277A32F
6D5D10F8D4EB8147315E5BD5FBE88E6D314983D415861028AADD851711FBFACD
0470F350D9D04EE3EC2A59D9EE46F33362634F9758827B199FD07BD94A26E89E
6BA8CDE849B5131E19307559490FD9016E4361F57D1429AE67240FBC800AF567
51FEEEB6990484948E09050BB25FEBCE1C41A7FFB8FD2EB9C6A3E0B2CB5DC94A
47A9FCC007F910998AA28D18D0C0D347BD4A23ADAC9788E84B4399D4C62D85B4
3354FFB487FDEBB3F2F05C4ADB97D6D5A602B7D3EC89C92FE3CD3ED8A1A2F1FC
61B03210F3BF96D6BF08F38611A67040608203A5C0480402AF3247216D8F96EB
D8D1EC18D48FEB29E968BA877F96BACA6164963C3AA18EF7AE2BD8E0268E6095
87CBB17DC0DF9E4ADEA85D9F8C77DFB4AC7ED4A60011BFB14656E7A1F53FF5ED
7B2E617D6273562E2837A23DAD7BEF910E0CF540BB459E4C13C070931C27705B
ADFB2328E930AB21E97643C5FF3296C63A572B75ABED1360636924D76D2A60F8
88B1514F7C668D8E781B16E78E2D23180EF8A166071BE79D45CFE4070F971EBE
827C4A232D859AE6BF5E56B2FAEE303A56DCBE13825F41740DC0195522F51BA7
5F725249C5FD6FD166C835E1CE79E47B295E7D92147BCD955869B80587746A2C
55B63866E552FB94C1CA66CBB224FBF95B8DE8FB0274CC120718A9ADBA29536C
B67B92DFD2184A508BA545215157AD16CCAB7922AC6A8A1388C4604675EA7384
F3398E49404AFCE19EE92FC4F261DECB1C4B4EEE54C6A9D14DC90A39B3E3C332
6B8D9C930DAAF6848E3A72DFD018BA844429BD3B5847B9B5DE70958048F037C5
6C14FDBCE691048469BC49B23221EE6A2AC98D76EB90FD07A2994748A3C7C8B8
AF416EA44AEFE84130BD4D15BB2EC8597057E4EDEBCE7F9D221E5EDD5DEAA97B
C86C948570063933291D78AB56DC3C6F84CB56870EA2BE9D0B1D1F3D34CEBAA0
367ADBB8F79632C267A05895B76C162F6A87E39DBF326C93EEB46E7F2FD146D7
60727435015213CFB157A1414B13318EE72365D18733275A1938886D2DC10282
5CB3EF2A7F9A3761921A7EA5CB057740CB35662F7663066D76ACB2931169122B
6CE52DFCF82F1ADDA9AB38F68816536772F8C496FFB2E49F5DEDBD72973EEDD3
D9CEF5B4636A0ADA0E4B9F6D550FE6080A7F4735504B58E07898EB92D5A7A257
9165C6AD132C70D61574E96AA1069043F4BD579A0392FE4031F65D892B83A3FD
36EECE644F058C01100D1C7923E65853DF916BFAFE3341CFA4DBCB1CD87EF48A
12A76AAAEC1C8ED1C42A4C6D58F0683E9AE3BA1773B997CF50A0ECBD1743751B
2A5746D139A591AA3CD97D6777A2BA08E242A05D015A9A32809DD51DF932DDED
7A2DA04425D2D64528280D0A829D6889E75E678ED3999155EF4BEF6D4B9A5E07
8D531F9F88649F792346F010FEBFA292D83A577B77F81BAD985C73B05A79D3C8
661A998474756A5A66EF30FB955E04347E34C0950E250511B89F2E044D41E87D
9F04F4FA78553B4C7A0BE6DF82C2EFCB5E5941D6326BFD00F8E2C46B4C975ACA
CB7A8A5A267BE04119F5B53CCF11576A5B3D14BC2AB8ED858D43F5B005BCB014
65B2BC0429162BE040639F2EE9C0FA967A266291566F85A386DC278C8F725377
9EB9D278001C96A7BC802D06AD9D338E22402A30C823DD655DAC47235DC4C044
06CB8E601B345BF60B6462DD7913665633A36EE85087F51AB5DDF2041BCC6827
E45A0370F0F2D6FDBB38DF4FAB04CCECAC1EA93988BE254E865898634CB76B72
254C84D1A517B53B0BEA8A936F9CF329B2F4350B0A0D240E4D2DDBA4D4E7848A
25F2E789C18EB54A635297546BC93EF4449C6E2629BE1EA48D1AD2459946C422
1FED4785D2E9C5611A174BD260A65396CD18AB6DA3F5408A2419D40EE59212D7
FA5FDEB4D87CA52E952ACE33A54A3E535735FB2F12E8DF9C6EF0F015C8184493
FC6CD54A2A0A5ED2A5165A9A2EBC4A7516246D99C18A0A61F653CC9BDA6BCD32
FD6801B19943218F5991432122B9D5B1A59B19697682E4AEA88E2C9D3762C911
AF08BA10D756A6467D96C2EFA24E139633A0AFA816EC666651DB430F8FC3DC0F
D24606E68F9F622CEC90F4E09F25D875B2DF7647DE1DBB43878E3EF52717811B
1078CDB36CFA5193968AFA8EBF05E3DC22E084326D3EF8D34CEBD5EB5177C9C9
A28336603006289544091C3074E04673F0EF8B83BF00BC1A7A9D57AEF1E1DCCE
EBAAE87CF5DEBCE73E80AEAC860B567466240E3A598E0D31B4BBA740CAD476FD
39BB81EC7A1CEB5D36BF344354FAA9B291ACBCF9B256FC81758DCF08BF3BDF8C
4F3B76185AE27922D871458DFF313B22F08E3A8EF4616E1DEC7474C77A194EB2
B313545C5D95792DA6BF1C6E0DAB55FCFE8EB2D6CF6BBD0AC1B7756E06B403EB
E8AA158C45390FC5BDBA02984433F38AE181C974555ACDD144A6062953EDD79A
71710A04B598FA774E9941C942A3DEF853FD48FDC9E2F2A7E135582226F3FAD2
BE387F0BBF649A5EFC7BF136C8ECEA2A26FC0EADF9D03849B9CE01575003819B
BD14E39722A9A286339B1B853385B5877A20D4B5E9E26C70B028FFC3793C9969
AF06A708F7CEAC99A20BCA3573AEC937979B2744D0F969B43B0F361FDADC54CD
1A8B717A6973F46D420890DB1A817C856910A5FE389B1AF013EBCBFF2BC7E5D3
D7EB4DFBCF0C6BC99FDFB74F740579C8460FA4985E6D7E438C0A638968AC0648
1BBB1161022A4A5AB2ABCE9BA9252A603B3E95EB856A85D3762F7A5A783A3F7F
C921181170BB05CC2CAF62830C2C50EFD34C4EF059EB56371BD3F69A70793D05
1FFF5B94C59304876FAEF3A4C02B18B0F3594FA089BAFFD2E73396ACDEE7682F
AE117C464B6C6C497F5FFF1FE0ACA49F9FF46C7B4D7221C8EB5E2D03FFC75FAE
44BC26EA77C8EF6AF3549FF79C4E25ECCD5B627839105D27A32EB653BD28B7D7
315237A822A09050F2086F0B643A4E89E630F99516B2597A03D945D9CAFA0CAE
AF0A927D5C7DDCE03DCCB229C4467E613457153F687ADDBEBECDCE5D51446137
98CBF687F6E5FBE0CA3B9A1D56DABD05371F9479BFA4CAEC5CBAAE9681B29BDA
8B9B5B38E548162584D2EE4508EC7EFC0DC6E59FC30618363E875234D5138D97
26E4C107DB8AF8BCA490837CBE55E8818A643F3F3F88BB227E90541B17B0E29E
EC7A3BA6E3B8BC7A608411A44EFDCD3B7435B6076111B0457287C7B27B9DCFBC
E1DCB7A0211BAA88951B9EB101B01D5D3349B6F868364FA6DEBEFB280385D454
9E6D3F56E6CF780B37CE39F605793D904FA4650A8E2FCD3203CD0D1A78AA64AA
9FF80D4AD28DBF9913982F332B6773276A7C5E9B160FF10E3274DE717BB73FB3
C552A51AE479CD96B4F9C3CF1D39123EF1C1ECA9B83CE441005175BC7F5A2F5C
6763A92AF6C079633B98C875E80B0FEF650F0038275688B9FA5A894C30373899
4C15099DE0F0AFDE6F509CD1687F9CB390D5D74B07A5265E70154C0B73207821
859BB191D53398A26D610D53AE6A1A56553BDCCE31A358933C39B527DEE9A6B1
3A3E53D1F2B2397C641187756FD690E185CD0FD6180D25ED5EF2751BD0BEDBE6
F43F03DE472E51A17BE5E15126B33BF5ADD4312D250FB7ABE7D0D8CE90B7E1BF
4C2BD3DC8A8773391BE5728DAF271377FA7A0B3BE567F630F989B8F247C0894C
DA153DC7E4B034607AFF88F73C5C8DDE321B1BBFDEAB69A49F4499066BCDDBD6
A90DADFDC11833C9333DF63168F9E6EF16312BB687AA3EAF0245885C5CEFC666
C8381CD2DE3DB70458D95772040A5D25C0640844690D361D7732019B86C11D79
9B79F33BB09CB6771F637CA85EA69AEE3175F2541B3E4A4B1776A6E5FDEE28D4
11C16547C6C7E144918FF662A5EE19C1360B5ACB813FE99837D5102E8DB6FFC8
039417A0D61750E1EE624DDF00C12D9A0289664EA62E732C4BD3A421E8F13A71
7538E4F426BC4874E464ADB3D3F07FA22542322B7BEE5EF03C844D6EF7DC3BFA
CCDAC376BD3BABB5CCA048A1AEA30F0078A447B0584D28F6E8A0197C16F29FAC
0342BC6B0B8F263FA546C81C680DDA1973B115AA85779C962E6F14910574D956
A9A0270655811051028B571E39D1A96CCD8BAAA40CC18E3C64077DED2BF90FC4
069F7AD81133405BE2209962BD3406653A98653F419EAFBB18DF86BE789421E5
D9D36A9AA32C283B25D9E35BED54243580FCB57693CF278E0A59282E4D69A452
73B491FD52EFC98B70B118CA20AE333DA3792EE6F9A9BB51B72447F93FF3246F
9A189076CCFC5BD40026EE4F33793041E83EF250DF308B5BF10131BC8969A7E5
2BFC97C3C1CC59ED40A970E434182CA7E70AFF5B14B02B75CBD0738E35DAD8E6
0E282DBB6AC3949FF9CB12318E20B680A50E700B9A05B724F4F4C9503149E551
4B919B0C7D8C0E74CAFDFCFA1D17D9BC2D08D64BDFC3240507494F7F10B401C9
A2671884E581A9DD4D8B87CFB4AA3E3F00080AEC3F0AA14FD5EF4F6A6DF02342
33EF08A17ED68AEFBBC8914D0B4827F7C87D24E2CDE66BC6BA989EBB3EC8E443
63ED00547C9A4403E7291357E4C4F9A6725247F3ACB290054C79127DD662998E
6BD54F3CD5A91EF2EF703BCEE9E7745FA446B39B46EF5DDF9B3D21432F66E1F7
774D9D4BDBBC9D748D82986F6F6D887F5514996D92A211B473C0606C8D78ED8A
E8B8511F987E96279E3AE01FFE68E34547E71A772A21D44F13761959249E1050
8177B1FF8B21E21EA3B768D2AF9356F39EC3901F4654DA943F55F75330C1B81A
649AC2D5492238EA2FBDCB2AF1F9D4FE05F4BAC0C74C501A47585A4736B10456
40800B0984898282CB81A1DC3B369731F5B95646684EBF41E264D943C1929141
E4E2DDA52947D5A7B66B496DFD1B3429F99F87076955C767DCADA10DD79E71C5
27867BB83EC8516C6D3DD88749A0E74BEFBBF77C6C32B88FF3F1046E4EB2CD94
2E70702B7B25358DB0794BE8A1719A90CEC4BA5A6E2F7097ECF124631EAB9979
42759F3D10E56C2735396E21EA48F81BC55A5D96C622B04FCDDB40B675F08105
3377364DEE8AE98E7DF09B18829BE2523F89F383D270C1312811B785792E7720
7E6022E9D50B282B1284DD9EA66137C291132527E0B32C249A45664F725B8465
BDC6263682315CF7BCD0F2BE6B7198ABA63A89989A1A8FF238BA39DD6923775A
1E6B0EFCE23A142BF2A61C072A22F9D743F6821A2BDBF622DBC6438DF6625367
A51A814A04083917280FC80A3636F3B7AC37F415FD2F8EA734FA949289DAC27C
04EBD0893FF0CE4557E2E105DABE212A040FCA30A711DBB9F37CC6B6E6B39564
D3838D43577688FF0EEF88D3BC594F7C2EE6C45CC9EBCFA1CCE5B52441257B03
312AF6F765FD970E1F82C2659A38F8F63251495D697C3E010BC327702B132335
FF288ADF62578F30CDCCCF826CD823498A17C7ECFFAF85013B5C541204F79824
5660D135080BEAD540967E39CFD1466F6E84C2E08AF87D3506B7C1DA714AD9D9
87DEA45368072750CAD0C9ABC3F494AF386ABE01F6B601D390E2DC1104F91B54
A06D57CA568FA385D91DBAA8F8DE600D7A0506B431F2E6897F39ABCB8175EA78
C1E449853FA9B6D42C49637CDFE9D0D56C0DE49DF56331E837562DDFD2B9A20C
64458327A48F32AA3106C1E03028539338323F06B3AF9DDF627537F711151EBF
427E51D901EE474FC82EAF8FDCC119B80A5EC2DB63EDE128761D164A9843955B
BFEC7213307B78378EBEBFAA178F4EDB8DD0AC194DF463639938A5A26374D3B3
248DDD825D7E8041DCDA231DFB8E6ABD97BCDCA958BD3884C8FE3AD9613A6CE7
06DB90796FB0CD95E2E3A746DCC37C2FFC1EF76FA2A69C9AC171C388750C9BB1
65F03A6F560D2688EC215913996F16584BB29CEA62593547DD205240166D84A2
C48EBA62A63C347D512DAD1E9CD6874D9FDFE14D64893669743B6BC2F7C99701
486E6D2AB2B2ACF8559569A120F9BAB156215EA752F4C5C7CC8289A178A35A25
883EDF8A78A8612E5D3F617DB098B94E820F4434BBE0556851FC6BE6C6B7422A
8B1F6A10999077259B56DFFC008CCA4106A9AF77D72A0D2ED22E3316E0EB478B
7AE71A3F43E960F8B52A4B88828D97DCFB70DD83EF7A482EB4081A1D097FB73F
8C1A5B43EC159D670764CC53EAD28CE88289207B582DD18508705EBF47D68C43
6F30764344CCF1B9E47D39540E4B6477A00B88C56C85E93C7D079350C0BAD8EB
BE1FA99D924A09B20966CB3CD1D23D5C8E17CF1B43A482C44FE52E57AF48D3EE
BABCC0993871E9718A75DFFFC74395B532A58983B2FE7ABEF7310F51AE03A0F6
9BA3A5A4B36E62F6AADF26084F27A3FC408EC625E310DA3E7E84BDA3755FE793
314E955F14B9DB208D130BF5160D289564770D0A5EEBDE2265F4E8DAB9DECBEA
C369D71E76447BC024B5BE297075959BEC8A8F9033FF2942402FAAA4B0CE6C24
A17D3A7811A424073F982C9EC093D7F96770C73499AC0AFC3808FBB40998E518
680AAD2CD473A10EBA3DF8E102DB0DEF16FCA0E10862BBAD279F932368BBBCA9
1BD5350FC7C5E59D8A8FFCAE76174518C3C26F3DEF5ED468E6CDB6AF28CFBB09
4848B0FBBC592094E92386152750B09EB46070D995F4154FDB773A7D9E29FE46
E464E602CD2062C28F7CDF33AB3D45654D54C837EDB06438F4533245816AB9A9
3F128456F98B8120A1093B6E213828EB29E0B6BA8715247FADD310C58FC911D2
94EE7E91E866841762CACFB19CDA8EC4D2120A75F8FBE6B0D64D79096233696D
460F312BDB6B1F9B82DB524A8D57FE5C30096F4171E334C81D41A0BDB45D751F
6641FDAD6065A36614A686D6A2ABDF05D656E52E3959574B0B4BCFA0B9C7B259
0D30DD4669F20BDB3CD1453C092943FACFE8DF1F7B0A6AFF5C69A65EAC76ED7C
42F48FC144EE377D810BA7902B7AC8956E753851CB3588E22936FBFB63A58300
298B1454CBB3D788014BCFF4A793A6027E94DF79BEB0058C763B9592C164DFEC
115BCDA359B58305C56E941651E321CCFF5B153DE73B5AFA62C6E671BFA6CFFB
AC0CA1E1FD3340FC987A55ED58D87566C8DCF13322078DE4CF1E97256E6B5E87
EC197F07C4D1914A61CC4F481013B1B3462B77B09CDA782DA7DA169A703543F9
E8685749426E9FA08297FCABFBDC68C6EB5DA286DA3420805F6205E00EBD41BF
BB41433632A244D2CE10DDA45FF84DB78BEB13CB5B794BCEC6361673853B40FF
2D425FAD94B834074992C1ED9B9798C718E4EC9439628D5E5130752A05FA12C4
C0384F1A9E8FC624FF44D2ECD2CE5C88EE8FDB5E32E373785476660078A3C036
2C87214B6C5205D7B59E04B8E731220B8A92BBE5306C4B6FDD3FFDF715BAD21C
53DD5FA74C206BE178320D01B4DF145D6DC515C88CCA35C5CBFD7B8E466D657A
804EEF1619902225A0732B430D9BD9BEAA22714CD44A04CE29C9B414EF463679
A22F00DC77C6552C3719CB2FB7C4B1311ADB97C07BA24772579A0697DA6D7632
947C4AB3AF2133D1A1E2719511F626E1924A9932700C0D7D36755706C2751B3F
A5FD95D949A297BF97C53A08B1D1CAE774656AF075B51DACD371FC298D4D6DA5
B95B9F1D0202567080297D7EA536BC895105246C29897F3873F84BEFD3F9B6CE
C9EBB904C13D024BD43E3B8C71D54471DC77362E329CB71D690E0261FC261DB4
6911D35870C88509B392E1B931F0E402CF17A133F793222659DB735F2A293159
AD84AF082B956F1452E3E62CA7B18E275EB0CF680AFAC9DDE4F9B48568A1F76E
240FA6E4A9E942F3C6B70266EDA218C6D2606A4B705019F11E2EDC39FF4DBC03
7FDEEC19CFB7C208155164D8EA18523F07BEF10B0BB14C4D4DE4F2AEDF89BD89
50209756D14729E8002E4507A1AFD615AD0A613DDA0C472C1B2983F1E3EF1848
1EAF1EFEDA0068BCBDB28A7FC2D0CCC426EE8342A3FD62997CF8C597659008C4
FC1EA0A07BE01E9401FF961C4A20C8F09061B1430C204D4E78A8D40739F5638F
9917A41081B83612B3EB27C2D8530A811B20111B23918EF93CE8C1147B93A7EE
8AAB6F15B5D1D3B835FFD07328565672AFE4D260B3C5CBCDD213E06221861B55
19E7CF062BEA3391C5E44BE01179F69EF6C15AFBA691830B21E3955B49456E7E
3F29A38E96B1956963A744A9FDE44F9811361F0B5E6C8C4D85A2B9A83C154240
945275CB4A4692393F561AC3395F6D9B8AE4F80847C409EEB53974A69D2FC7B2
005207EE7676D8ABC724E7C15DF4DA4120AE6BB7424A76B49084DAA4E59973E8
9A8EB91958D7B43EEA506E0B4A36A18E25B5BDCD75598A4E416B248A6FE29A67
DCF4E1CBFCE603260A277C4FFBBEDF5E26A4CAEAC397152D34458B281D8EA05D
658FAA75ED2CC22B05B89ABA446304EEAAC280A94CF9CAEF78327897FA9A2049
428812234F0873050F420D81EC6C64C968550F721A72A322249CC9FBC004B4DF
CBAA04F2BB56BF961AEDC4EB2355B3321C8469F0783D71E6CBA14FE61E425E23
05BC90F8BABE84F9216B8E07B7117BF84B04DD3C883396E0CD2FBCBAC78714A0
0E89C93A77C1C2B83D7789141CFE611787C952E7ED9A7C4447E7EF63E23150A3
4363BC35D052DA1C3DB6E76F6AD8C9245779FCD3B7470B94624512485C1D5600
32862BC7FC1D4D5929FFBE254FC47E726FFAAE2C2A15063C65B5636B61645E82
AC13268CA45E353D5F4E3378154FD0C9971F45C0BB2CFDF159D52FD8455FE6FB
031B48D904C5120D41EECF7980C0B833315629060D58E961B9CB7015A1998339
17F7F56BDF132EFF5804B0E3186AEE29EB4E627939D46628358BF9DD43B61547
087D33692127A3D2DB4B4D4CBB33E15149CB9F9BA9D2B5D329F9145A1ACAAD2F
D57D9784BDB219185B42731952D812918F76EC614BEA4DDC71B09D0EAB3B1214
182E7DB08E59E004E2255DBDC5959A96CA4FABA813FDA935FA86C092E2DF9B35
F469AC8F322E1FDEEDAB353DAD46B71839C2C70D6C7FD73E907E6840ACE83491
23EFE3513D141C31DD7109BCA7E9DA969E03A4B5CBCCDFEEFC01872476101D65
E487A587B866CFF2031306AEC35BE49D9FA599C7AA78251241B46F1118C8B8E3
B1270C1BEB1C4042BBA0D34125774CAC74136AA44E3E5D00815DCAA94DFFA099
F43FAADBFEE1AB881CECC0DAC4896A3BE12DE0CC5BCDC4EB7A36A833099B48A7
C9ED3A87EFF53786E0DB5EAE8AEA6B6B92D1EAD173B4335E57BD5FA60959002A
9C1C21AF7D54DE81E35974DDDEF661F0DEF2EB406DEE26072B592F8B3BAB502C
07BDAD5FFA2C9A464DDE24084DFA7F497C96D30F7EF07A25649EF738A807BAC7
DF78864C43D9B9EB5F5360CD0BE9077E5ABD6F0F5224EF50BC9B7960EF6ED1F0
41810AED4B3572DBA4CC417E8EA2C13DBD98402015C27205713A9B31042BB5A1
A3B74395F8AD7A723EC1016978201BCA43019F62AC6FBAD2A4F2C83E0B909AD5
8A5FE0C6A58776AEF1D0799F33FEC6EDF59F573E7EE6697013D6AD5984693F87
21BE6B48E82184EDC509992BB7438F7333632DF0689F1A97B9D3262AC9D1AED2
2C2EAAB3293CDF862EFF46EB7DE76BE0D3026F19A2F1C3406EEC3A74BD5C497F
391141F2094F8EAB4CC90B12E10F8B9CE93609B14BBF10E66264FD1E6EAE1759
87CC0DE53803171B4757BF7017016826D699540EDCF90853ACE505658DE7873D
BB40270A199BF4E164BA835ED8A8787359AB93B634DDFE0D47AD8E7849C54306
A2468BDF897E46A82C09EFE23BB77A0AC521762BF9400DFC11284187741289C7
24450BF94DB8EB9048FEB033DE7F8F122196EA8FE0158AC6398DAA7635542485
0CFAF300072C1743732ADF56CC4B37953938910BE98CE0AB2233EB51194B19FA
8DADD216410C6D1EE1F45A328D4D4CEA17E02BAE7A41A843506613E991BA4C7A
AA81B42EC94C58208B09AB28544504409441420F322E752B75D29D4A5C6F7445
C5A0556A316E32F679BF182FFA1055A1BF1F53C0B670FDAAC8CD81508DA92DC1
E0C0F28E3CC64BB4933D3AECC99FEC69C3B0430598C7ACBCF38CC4A173A9AD53
A10D1FE691EEBC3E6CDDCEB9113CC5A830B5C5D5ED73F2F7D159C45B12286E28
DCCE52B192AD7B43340ABCF99A448DD8B51AFC7497CC59FC430CA9B91511B526
93D806D5D979864AFB96FA0DC24349695753D26853FDE765CD995A5AC582FA4B
24AAA1F4256F31AC62554C369797C98009E09A225551EA2C5B6FB1F70D3F243D
629DD9BBB7091801CF686F2ADE092AE0B2FDA803F43FF5451CE889920553DC5F
BDA8D1608973150EC17128AC48A4BC9A1CFB9CE4F4620A7A8F2CF6EA77EC690C
25AAB024108A1E547D1583DC55B0758CC813E0EDC810F88A4B4CC91386C0566B
3ED40825C75260C7BA8A5A0847661FEE0F6B879C376019CEDEFEF088E30AD62E
07505BA7A94F44330D45A3C9EE4E80EF896E9AC268552B0266ACDECB128DAF46
8F2D425619F5251850B773B9AEE7DF52272CD37586B12010FEFB1EADA686DF87
BCB59F4C395D341CED9DECACA272114F628CA13DE8B7EB82B836417308674057
83AD8034EA8976F522C889AA3F48827DD9280D36D698735CE42A15B43AD6F76E
C0AF3761859189D7A93BDECC857B9634787D2C5D4E00A09F155BFDF971B5A4D0
AC102C2D9391D0483802318C52B7C24CC9AF78713A5D180673D943CECB15BB5C
340A21B4537A9834C0B57F6B0404398A16C994D6FC7B8B746C4B214A485F9CE5
7642F42A032DC86AC8DBFF7A20AB9970CF4226B84C5662274AE08FAE2049EB65
118457D5C4E806B2A97ADB2DD5A9F66C4F84DAAC39145A2BFE6D055580AF134B
7DDDBB9BAF947741742AB791DB1A56767B0A22F335A7A5AD395D681A059E5694
F5569529861FAEFDC91E823E0A0EA92E7F1118B8BE0BB0CEE215F5894EAE38B7
EDFAFB64C0891B14D990AE5EA7FF5F8BF26006164709596C0E78321C9CB5060C
45C3569CD39CEA3D28B6228A8E3A9678108178F33EC737B3FB7EC65FE35BA71D
71B119CC7C1B82EE830C39586E0228C360D187286D4769A0166ACA47C3614F7E
4C800F6D654CB5C2B1D6281AD3B91FAC8450BF5CAC4771CFBFC3C42134253C04
FCEE9CB233501A96497FCF85FDAA59D42BE4DADFCB1B2FA2EC3EC848E3099620
83110D406B5604A7BA3D11006B763ED08B3EABCA1644E74824BFDA311A645D78
CADFEA384D74D11F9273358E7F80EE29B65751AA82FA97890367A50F6EC66B43
972080D9DD484045B8011F695455576CBFDB9A0801E5AF54218EBF21C1ACB291
6B86943E19CD454468FBB4187C772745652034ECD6B7457368EEC9C3C172E6FE
5357807A77F869A2F079BA9C7A580D605929D6D790A340847DD751CF51F64A64
3C9D20196C16595542D8F32E962D41213E6B67A648BFC569D9F80305E6C1C2C6
34E83B6570EBC5B25A60051471D8D7F49E99A0F145F0655236CE00D9AAFCBD55
C52EAA306A89B60E01C8D8AA2B2A13F17B8EB838C388EA75977E1210E201BBA9
A805612B4645162EF6350934A57C68F4B5F8628FDCFA2CC376442D78E6F47CB3
78EF76E34E4AC4B818F0CE103B2A5565384DC4280322C94D1725389ADDDEEFBD
0168466231E17CD215F23D75D926B76C659953B639A461392F73D8722E53E632
79BD774C17609E45DE821DEA4F26DE7A26B792C524CF16CCC7F86A0EC6AAD994
4C573D3BF9D01563EBF051E653362117B3260EF71B9D68479D194E883B039619
60F180DF74F2BE556A2AC81C1A18951E3F10229E8FF040BFD4CD3B9F79F1BF79
818A68219E81B6A92E983E07BFCD447294B1F96ED4AC5B1BAF7B88821A5E4E9B
672ACB124FBED6580C39D6A1306781001418CB02B9D13B930E62909CED0EB18D
B2D17A7C0FEFD233EBBBCF3B6D89B5E598CEFE581529073A5E8853C5548253A4
EB3D39A3B9FDEF15DA1F1505CDD37755796CD5FAFD1E6A0A83F333D76A43C1AB
10951F53D733841C68405C8256DB43399E6A6918A887A64B2EEE98060E47C0F7
4578A69DEF4F35816A39E65B1528AE7D952D4A4FBBF09BE659A081B2D1D4CEB9
E40FFAC6BD2F8303F58AD764295A6A997B23CF1B52822FCEA099C47966D70C09
BE16BF84C30DA60205116AB7833FC159283054AA61D40A0AD50B0CCF03F51335
5BD4FC3209B93600F1254FBAE5E3E6C667EA8E1ABFAF6486A9DBF6668550BE78
58F5790F017EFBBB3ECF535EC546A8CD9E1D5DCDC5F03905A1008D696E3B9E18
1071101E184E8C207262119E30EB552DFD9EFB356A8CD7124C119706E8F6070A
92ECB856495E667FACA804CD809616BE4342A5047C07E76889E53BCCFB8B0DAF
510C5EF83D1C082F1869429B0A2626B6321C7A89963F669D996A3A3FFB3A907F
3A1AD2FFBDC8828488A35E85EC79363ACC8A5F234575C256306A3E2B5F6EAC71
4883621CA300ECCB25BF1330E865801A5A5CEB0D44C0A49EF4F7070D60E3EF03
8472302B58EDB8556D049A0AD78BCE5365E1CE48CD621592E13F40A9276AFA53
D114CF090CF5F36B3DA0FF93246A390879AA6AA248BC915B38CD662779BF9273
B7F448B79D76EF0ECDF6D93AA03771DF955001433FE00D93528FEC9ACD003893
98C3ED8CB8A8EF20AD5F81706EAFDD970B0B09BA37237B99DBD9796C8B7268EF
E5EE6B0CC0781AED1350BEEDA282A3D4D0D976EBE8AE53D3AFDDBB926B54EF0C
41B98D15240D11F9EC62467E98ECE66B329193EB624E2D0FFB96DBA8E24D1FF6
B3A5D9FD92C7D9C43A8255D0B63CD276A02A63E9DB55C198934FF5A56D8648FA
85E658D41281D56AC0425D8F374CC51FCB15600FF7A49A4104BC29A4169A0883
F53F8CF6F267B35795C7626A32B6E41849E030EDDDBF1D95FCFEEE32F189B1F6
477232AD8B11FBDFAE664E6175E9B3AF676603DD8C5F5B037022B38CB7DA5332
F09EBE614D4BFA8B7DAA0AEB340D42110B7CBF47CC3D563741DF251006BF7EBE
753A7F2B82FF750829FB629AF770A26D72A2F390B82CAF5BECEBA08708A3D6B5
27552616854D1E757A25D45087B19E408F778E8EFDC934C7EC74AE271326689E
007EF544C2324DD24A7CC42A683A426EB0E6D69461F38D18878CA1FBABACC7C7
5C1BF46DE9F096EA448EEEC36752787F85EB045535E44A65C5739C1427815484
BA6E80A78B0C28C68CAE5A330D8B9C181518D2DB628C3C99D0EBAC0F0017D917
875BD4F42FC983B0C2426B358A2CD7AD380EFAC172D225FB2070011FDE8BBC5A
2D3F437E2BA93E513F2733CEA34DB3AA1050B1490992CF23F617D40D2309AB16
ED7A01EA4CB05D2EB6BC949688B30F0B4F3FD3AFC9CAA04A796E5AFE2DC4107D
887716F94563768073B8C4238F51C1E63C2293B4F4DBF442967F828C69300846
44D6F8C6366587CCD3CBECA33F35F17BC136551AB9E354C905FC9C5EC7472408
60DA0196DD4B0E8AEB23739AF92B579720B119FD2A5806F30EE2F085B06BFE3A
E025A0542F0D7F681BF0FE61FEEAFE31C8A721C2D46AA00C10681BA9970D09F6
D3DBE81B0A41EBD0CC6D71A2E4B5528296D8827B8E9CCC9AD945A72A0D9F6031
3880362B868DE5F556B5B7E99480D6F9E2676A7EF904B019D3B6AD98F74FD037
431B8E2C8A7F771483C26BB2F7622736A0FDD2D813AB43693BCBEFD6B629FA66
1440C361DDE7817154052436A36C6833E05E025879F07A7B91FD062041486083
2D64B6BACC93A58791874E4246C0A7321AE831930F08F586A85F7D302E4CA813
7E90503E63140A7193C83DE369C48C998674764E076EEE81285FBB3CCD86DBC5
251D2D384832D1055705610F6394B36FB58D6D2AA14D81F492A569567D60A662
34B04B0310308C22902DAE8CD6EE1B33BBF5F7258FF4933A7F5E2B732F3079B8
90C59CDE4235335B238C832C75AC8BD1ECDD9992E9F8CF3DB923D549EA4C8C41
B80574B6B93D28A18CF02184DB7B518BCEDEFBED3A5510D10A46991E7EAED177
0016DD9A7191E96ED66AA8C0467BE8886BD4B8075EE897F4FA7C5048C08689E3
490C274A29EE2FC01C25913BC44D69B3AF2FE2CDB27FC9926B0116F86F88A7E9
660AA8253D564A36E960271CCE02BB1A8598FC3ED021147E2BE3B76ED36626C9
3A0009400496D5E85EA99AA922FAA53D9D03C54706B5E9C012305125EBA0BC7D
B7649E845B1A22564F633E1D3DFEE75A9B84DB541D8D299C5C5F56DD69E76350
73B648C48A81A1A69152E89EDD1922C10A3CA1DC2B0BD7BA4FF0DA7CCD8FEB29
7118A6E7E102D5824B95586D2366DF5B7A41630F1CC9B82B395BDCE1885A1D5F
3441B03AC4D322C06E9757945C25657703B7D438285B92A32531A6ED4C8FA439
25639BEF4B041AD7722616B477CCFE4F4D55B36CDD136F67951EC6044FC5AC0F
E18757EB205AEE75837FBC872405B7183D2385AA4D74E4741583059D7B6B3115
FF4B2EBA5E902D9C5ED30617417F403ADD5B2E776E7B6F424CC20A98FBB384FA
3452AAAE1AF13B49281B67E0B149DD482B26C72BCF3CC553E5E8A17FFA5B878E
E7F4637E52C0CE533016DDEEA851DE7E5567C54996178E1A0C5BB937E8118991
2695D91C1FF017D6ED3ECF1AB0967EA0E4C588F40F4683C2295FC0C58D564A2A
4D77054898B2AD1DA3A35E032B8E1D2064BA0B2EEE00A24AC280DDD97C3713D2
D2751EBCDB6B4D935084759EDCFF3E6EA3644EC087D61BD7F509234968915C6A
9FAB3838DC2FB808E047BF014BBEAFCC7772F7F63D27EE5373F942814C283601
A5CF1C41FAB7DD4784CD74B34B93D69FD162852F9EF2C32B53258B6BF4A4A856
647C3240A78B06DA9A69AE9D4255FDFCE29059393B889F479A2D3058DA378055
819967C7CEA6C17BBA5AA16E07F1E26F00C6DBFA3621899D8C72270A9A4320E8
DC181020981DDAD975E4003E7B7FE30D31721B0ADF552294F3AEAF6C9B73089D
7594F90228B1E05A090D42B1D281079C1EF2854E8618616703E6A2A1E2F8AD42
029FFE31D7C09F9B76B4588447675AB6621AFD3E68C14C591584F1896B5F97A3
1A34145D4BB438DCDDA7F91DBB1C8DC8FC6BE36CA3C13E44BEFB1931DD7E2CE0
E540A398AA83F571643D614D0AA39BBE63FA0DF79946504B5DD7292B4C730C54
CFC8B0E494649AF8F9C74E36A9420418AA68FBE3D77450D5D796896A9318D430
B2342B9D3806FAF0FD8C3F73BE7469455B580A4BBE440839A54B385C9E4571C4
66AF1839A28CC26BC8DA4C262467AA66CAC0D20720013D660C4BC916D35E96FA
40AA847DA5E22F00136F21273615D02CC61ACD68ABC3B289208E41AEB71171EA
F17A4FA9A9E45DD0F1BCE51275AA635695BD883B2F6B22C897D133BED1B167D8
7DCBEA2E893E1D90E69E828F3C7E4B3D8AD3E69015FD53827C84050FACE29DC5
A593B40E732D38DFF9C4CAB3ABDCE13D9B38CFBB2E3A468ABC77AB7BD03A261C
506610163FF60586A503ED8D2BFAF7CD7FEC2334FAFDA43776E61F2C3F444F7D
53166A9E188AD8ED8670C6C3045F948A22882BAC405187207AD799C1260629F7
8296D98865ABE2703BB52ECACFCE5B1A7E46E3F2ADACDB634C5A2550F814DB30
9DDE9B17F14BA48B668D770904DD3DAEAC877F8E16E0C392019E33F268CC072F
36EF123104F1C85B224108ED3708C50B070833B9DD6E94F1A578B8388FF6CA10
79FC8DCC158108BE01B14747369E037C2F5CB2D0CB4106B105B825722A1A0FBA
8E217CDBFAD38763F65694328781509A5C4F020EF1D81AA3D7E7FF52F27B5284
BF19FC952FF8D47D723DCAE7E031BC6CAA641CA7E9E52FD0D2CC0989983DFF33
B0CDCEF8101CE47D44302BE2E7EA49AABA75AEEEC5DDE1D8BF68483C3D2008BE
4124E048782F415DA100ED3759D056E3F40CBD3141715F36FB252F0335FB50B3
370C94D0AAFC1CEE5C12B0DE65C9CEEE3E3153FCAB3050CA75A82E9483EC5B3C
8844C7EE6253DD07517660B50E0F93B42842784C17898EACF47F997C4288AA1C
8CDA5E3C6F89AD4B030980886A420AE8519A5898A31DA1739C01711DBD28018A
BA77AC7F5892DA7996380563BF7A3B679EA85FEF772477C541AF8B09E25384B0
C3A3A15EDC6C87355C5F7C8F822EC2A6A95446DA7D8F3577FD992B46486E8482
D66A8180D3E7A4CD33F1B71EA3C7C787E612AFFBFDBB75E5394312D8DDDD4A4A
3EA5B0A1FA84E55ECA7617A41124595BD848F0ED1666CA8B3EE1411D7260FB56
97836EE2A0E623899EB6F8AF8007B3F27A59C82174638FACDEA968C2A07EB82A
56592F27FC27F1D49D5FF4BBC0E16231807AE62867761D0D301AC007CC53D1D6
06A525FFF9B826758428042E938F70FCE180655F2836DF9B831BEC6A625916CE
5052FE6AC212A20E02B86BE559E9AB16B32D0DF241436A6EA773D06645E292CE
D6B53805D9798A83E2D0D608EA4F039C49B39B0B7A38F24A31CF2BBE8A4A77DC
77B21E02A128DCC9D51903ED585E1581310C8DB07D360CBFB27C68931A0C4C0D
DF292C1402A990D44D61AC1BB40989D6115BF34E660434E53077206B06696878
E08D7BE855B7EB3C63A26C4BF383C921D86811929D674767B1A655E8394F2473
FF364F9B0C463624CB5663E1A14933B433E7DB304BA62DDEE9FD4FA5CA1A5EC5
9BDCFE3DA2F8258240D9A5BAEBA34D6B1BA65FEF7DA10CD6E68212AAE25B7361
9A0BFB314E1BCD175907CF7F490D5C686281128E4D3102667251C5FB1EFA0FA3
99B6EE49280433BD0EDE830E85593CAD2A227DBD02266AD67E80916BDA00ACAC
D67683D6C5365ED58436FAA514954BAA5C28AC30B740FD86124B21DFDEC4C984
9A9E7C20A3EB62B5C743D9063C8D8DE82216A3472CE2059E67A995EEE06E4ECD
FA3B06A1188F05C189DA061090E76B4B4717379EA275B60C7C3A569908587DA7
A93B760BF704802385705A94E8F48CCE826844F5BB59E75A80569B68ABC23E13
79381AB6EFA4CF3A00445A8B58A1EAF96BD360C9B6E37BFD4874181DD641F54B
106782735B99518D368366570C4A3A6D8AC3C27AAE959A98D244EA0313026370
E291932445B6F0EB0CCCA6EED616B612335278ADD8EAC1A0C8E4359E3A4AEC99
A17BF2DB23231EF97A2F23E93B122F79
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55D9D1126410AD7215CF4ACDCC4C85B4FA5A9E1CAA5E94B
08564BB2982FD937A9BC19F3F6B643AE0E6AFFF1E130A8F16DED41E0AD41690F
A26047D97F8F5932C6DA4ACA736474689EE6B65CFB15D1845E618EE1BA5FC873
71F912D3A7BBCF69858CFD235685341F0D95B27ECA06AEA1C21328A8BB64EF2E
A43D7C1FA208EF44EB316981B1CA2997474241F59317F44A60ED73DAB72A2F1A
C1DBC4518306F16F8D4FFAE416ADDD1143EF22050DB7ABBAA819EB8F42657D15
542C6068F59745747E0170E803BDFD7E3147029349AACBCFDAAAE5494EA2DC82
D25D46893657F0489D444F32C80B1DCD77F38D0F2A87F5A4D9DE2BF184898D2E
790305F97BFFD133D7C742EB0453370647B615914B2A71CB041C750FCE94F7E1
BBA5E4CE46CFA949426D0426DAA7A6C26275F727ACF99E804E8B197655907299
E0EECFBECF44A4C01306EFE3EC896E54AE349DBDC8C0FFEB66661FE459BBFF0F
5D989B89D7BA458CA86037DB5A3C88526659AD17B8B6C778E2001BD94CD34F25
DFDC5426DC0B07E9AF351BCFE30E6CECD183EB52BD32D1EB129B8FC87B571B2F
FCC988FC8B4EABEB8550547953E4962CD32D6AEC688F021F9DFDB40008DB07C5
438E299F9CCB2F147C93B4533F92DB5B5F99B1DD838DFF874CAC009EAA32918F
50004005584A460914A41004AEA7A4811A64EDF54C7B9063943726B1E313B0DC
D9817E669A56E75B806FF9A073B629B2FE5491DE7B19F0B440ACE965E492952E
E7A0100017F2C216DDF80533FD1A16771553EC279C7BD9D7E2418A977EBECCC7
290D08617E363E0AA937AFB1046A24A3710E4F1F2A83B650D6BB70E8B3864DE3
36140665D2D91B7EC17A70B840DDB125F4B849F329E321
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA03B05B884C2FEE56D43AD930AF497F9ACB2AB8EEF2A8BF
1DD136C4819911475D9B35CBD8EBD24320003930CD829CF6117A63E59001F052
D525D5AA6CE281901277A14D6C7701A5BCF7B210A16F187998A60836D8DA5EFA
F5FA6A47330C67E1953536AB81B2E45EF4A212D3FA7A1F3D5558C687A28404F5
4DC7AE73C7CDA7B39FFA6EF922DA5F3949AE51CC8667EA8E7DF09B18829BE252
3F89F383D270C1312811B29505DCBB0ACE93422A64DEE8A6007303A2EF44893F
FEC15DB13D437C2923BF8C7EC3D3B49DCC343A8B9F9A3F4B89932B9982C8D4F0
302A61C41E33E94386E83F2E7BA8EAD71FC5CBC75AF2DBC9E30AD46528C8DF2B
D4E05147ADDE9902E5A3C0E5F4F0D96C3BB77DE648AF6035431A4605A7B3BAC6
2156DE15875EE31B0ED3280975DE77370B3A4C7B16C5FFC37C0BCF39A64DF410
E3356C17E8E7AF67C80855E052CE13A2358D068EA5038FAC8EDC241DC3360844
AD12B1FA16C8D447982AE814685DDA19B52F6C77733CF3FAB05AE83098F89FF3
8B30D840A9079480F30EB64479F082BA16F6F1C7F336F597D22184A553B7A3AE
81F79EF60454B439AF2702915B9949193F3BDE186465B796D2DDDD4A4A3EA5B0
A1FA84E55ECA7617A41124595E64E1D8E2B8FB0DF6B5FB6D5C415495635BDFF7
98B312B5F980D7134114B90B48761BBC79372BE821B7510D366C3FCDFF321ADF
D514B246CB2FEE8386B87903FB4485C4BC429235C80419B6AB69628EE46E062C
739BC4C5106C45275E0EE8A50BD73F628B037710DF1F617DC58262E52A30CC90
3D70F5DC471ED6488AA68523098D94E4EC723FC47C996EE356C0DAC5AE69A0B5
EF27684A632B6E9F17CF9A2973E1B84F718C3A43B9B7A3D1EF10422197020093
BE719B29629D1159FC1E3B1067C76311ABF00F67CED7DB0CEC691FA2A16814A0
62D0B69AC63EE2AB32A2685FED47BD357CDF5111A0362FEF840B200BD79BC70E
96B31C3CE4C4F64DF379F6E9B6BE0BBBB039E271D9F3A9068D32ACDB476F04E5
FFEACBC97E5D2909AAA8F44A6BB4A34F1C35114EBAC0B0F263ACEDD95A8F5D15
D1339193DA369A7559BE855EDE27C68AC4D88996599333FDAEBAAB30E04E3C78
DAB918F953218247687682311E1F884E50CC3CD25E9119FD1EA07E111D0E8131
F155B106D862F0920651AB446DE4B2872126F491688AB4FFC28B25F44AEF8261
BB77AFE1364B08F47527C3D37F285153BF1EC03635E0A8F511C6C420B24FF1AF
1BCB4107958F7BA5DF0E28C3DC3E2D51BDA2FB7C6992B79CD83E40292315B0EF
E711C23FA15C10911698D165FB7C9105E2D68AD288EC5607230C76A425B229E5
E3853B8297F5961E95C2924BB1C00DC3D3C5CD3B5E0513A540D0C7575D560002
65B0439C0185280F62DD2CC436E9D88A6B89D36D0DCAEE951AD58FE29E46A363
5D2AE3390593FC7EF25EE5C3168FFA8B1F91DB49F181F0A15E0F04FD0D8236E1
A669138D0BE636CDDE883E1CB4ADF94B4DFFE102DB0DEA3D7E723C6406BDF51C
F409246CE2FBB04C34D507DB7E05182EAB8A2552D56AA3C47CCD8C1D6E639E72
89B3226F5E1F4560A4C061DD345142D8F2F4A85CD7D55111992E516453EC5F7B
220A0338C7ECAE46C72A0F694B66190041E8CDFD55B70A87E0F22F9EEC3DEBFC
51583D9E576810FD5239C9CC0937BF33358AAB8FEA53659C2C8779E6FF88BDC6
32ECCE672D5A6EC116C289FE4605247509EC69336998602318DE152D2F8F9B8B
D15445C0D8E2DDCD9067EDA333D8394D3C4E92AE4754928E228A722509434042
0FCCCC8C2F3ACB064431A3A81493F176B819E13BEF965FEF776BCD1DE2BD1C6B
D483FD867BC2938609EE52C0271A7ED1FDEC66EAD5C3BEA1E7044636F7D3BAD0
0C9938DA2463A0D97C7BA9A9B55CFB48945479C09580F378E3BF2E5E868DFC0C
7BA115D3388CD49E15D50DF45AB5BE76376F50B3AB6C8314B26320139577B58B
735C1F44C5DF7EB06DCCF94195191D65209B15A249DB0640E85AC43A8DA5BB8B
F813CB9DB27CB44AA47AA0D4E648240A67A1B5466D742363F38ADF7937A89EE4
7EAF9B93FD7179FAC7524EE55393019EEE61EF4B3796F6F20F54762F34F87727
C4CF78D5C5F114418ABDB446243B76C344B644EA7EFCB02B512A970E75328A67
7A7DCEFCDD53981D2EDA952854D4EA1322A1200FC37425534F2A1A9B18047663
F09E30886042C59F9FF2662369BE0A613C40802E0D32EF0DF8FE6F2D4E2880EB
4A14288BF0A673F646FA4C547A782AC97BE36C9693093D4F309C5D025EBFF341
CDBF4A20257ACEAA3438FAC6FF881C5AB49AC0C200FB38A6E36220611A604F7E
994581974C3232713DD060A3874834ED552DD7293D1D3C7F59F507F74E231EFC
BDD4AFB595E8C3F0E8CAE4689F75073092C7AB9D34C66DFF94A30B87D8EE7D52
C14551981FE1313ACA0F29371954548294DE90C4CC29EBB3F9CE0F253FB6800D
5D6BB753CFB933FB9303A984A7770B68D8E5D468CE2FDA05C10B1139EA424ED5
A1482BB98AE62920864D9D3FDDCC52D8891C13C10756749EE3C9A2EE605514EC
228BB66A22545962DDA2D1ED6390ABE1CBB68FA80D3BE4430E9C9FFF5747DD60
38DBD1E11BCB2E5323B4D8E08C2E56EC2B520F0705EF919AECF374D106112196
20C3FB3B4C6169701F01E102840E68ACF691393E6A3ADF983C19E99524FB8145
D6E731C73A266B3165C55791AC67DF9ADFAE791F532DE5BF0DA704808D7B0878
A09BF1DCA721854721308D575A409EFBAAE5D96D65773EBE8D69A606AC02E688
0407EE8ADBC6FBEBB247D772B3A60FAB4F7C6F07B6D5F290842B8E7BD5FFA88A
ED9D5E2C2985D989FECAF31DC72E407853D1AA87FB74FC58F854571D26F6CF7E
88A660686049CE34E3D38D861DBF4B44A7BE13FC226A7F3FE390001B600BB327
B726927DAA9363B6C3E3E108892F23FEFB203990EB6DDF34E806E178D97B47C5
40603DCBE9F9B6E92622BFD1D67944B75D63AB30DC3F3BB4B4EFDC6DD658FEAF
E642F6F31DB0838E8D2B8E98FC6F6185F7C13438EA9AA5461BF2013D8B7306E4
DCA49805DD8D20731DB26C86ABBAB08E03089ABCC46C2C6849606988C3B7F114
76BD78B739205685F1500FE9A95034D47818B8235920A92F4F2CF90E24DFBEF2
1AE3C1183FCABB2F4E65F5271B585DF66D49EDB3DD9AE5B2B077C4245513CE96
5D1C9B09EB61C71DF99775D63476CDB2ABF1E4A13CE43745164220E0524AA04C
729C5B9AF95E715EA4D3F84EE24C324335A60F4119818BC1F6FCDB8314C06423
0E5FBC126CAEBF6F7EC4D52B4A8B1AA257C2DEB9689E200925D85FA2343A7A46
4AAAD46FF165FE342BBCBF05B837E703278B2023FFECC6A18218DF587BD534F0
297E3615F4E68DB6BD2FD185537F6AAA59C5CF7954D408A67824D6DE27B03FF8
5E61F2CF8E1D94B5435159884E743DECBED602BF78B432619792475E20A46B23
0F55327E35FC4BACFAAF15F672EE2398E0AB443A4F47906A09156C93994992C5
26D86C5296ADE0BDDC4400A37D6E1F717DD65F6A274994CC42348B9E18F72045
7A4AB35C68C07865063A2AFC57C5F0A353D014F5F5EB1E3CBCAD06E8CB0A5958
75789BCAAC1C35DFD843E6E80330277D1033B7235B9D9F26A50B23BAE3D61836
E7D79DE62BCBF08F883DC5E7C0AE5E26005B10210B7563D3E69FBCCC5924146E
5EEF76A3EB471CDCE6CDEC1757543978CCBC74C7AC23421B58D7A530F911D8E4
CE08C3953F99A361F8B5590BA9286987A49CE33603300CB5AB595D7C58123CE0
1E1590A3015450F98A91445B5926A7AA84A5E96521F3A544426A80EB40639C3D
EB062936004A2EABFEC7CCD31CF0A0B8E3654C810A3F9893C7B86193998C9AF6
B6EBA334E42E05C376CB7EDF98963EA40E702874DEAF5C865DEA06501B0FC530
090FC681C5905A6024BD3208FED44320B723392E3F994540301FDD0463267676
866C87B46D1FE25E553C452541B101906D59FEA0253535C8A6DD2D07F4B95CA0
B01F9776C712C9A80195D4C3A837404D1729BF073E5071C02CB894F08BBC60B5
DB9D19965C742945873049981545F5A505388227EB31144E2AC7B506403215A3
3E829F9D235DBE423233DA8ECCD888428F7B2D2B92EE24D950AF6E00456C76D4
296225700B5BF6002E086030A0B1324B3773C985BA26DD7650B28A326F8B92F4
E100749B38E1AC8514AF3F36DF5FD7E3659796103F5B013D89DC6BB390B1B8B9
0F5CE713C315E6E103561789BED35DEE30BF2A99C526EED1027787E23EA108C7
FBC17D2C074997ACF3C9FF139C49E305763F08DA29E18492BF190333691F0E05
2924DDC9E79640EEFC4B9852F50C93C6BA15171384BBA74AA02ADFAB59DE70F6
79945611D8CCB8AC705A299C2122F0EA43B63EEC52D32EA4B9F551F30439ACDA
82782F9BF6893395C4224EB4174D294D0EA1CA35C66EDC8D0F2B0861CBE8A982
7B3F9E9EF0F199A134E2C53C15DF83E93E35F188E2255D4CA238D50701150F64
6B62E11E2B0E800320CE9D1388EB08F9A8303DAD8BDEEE816D0BC5A307115282
3274A655747C9818C9E722B70AC59E32BDB9FEB9D7FD20677DC4F398E82228CE
B92CE0B1AD75F353A02267E55B1C0FA3C2263FF9FEA39D7FE058573A2E1FDEED
AB353DAD46B71839C2C70D6C7FD73E94BDA169C20B732AAB2589536FA3B43E92
840BD2987024D276BB8A678026968855B88283552DD3CD9831BE0D7348ED0769
453DD157B162EC914D673AA42D3DC00BB1E2F8EA4635EFC15D5D7BA5444EB942
582DB27E6C1A558A265F9755DB8DDD05ADA032418DF7C8C87EF4E48DD21B3EB8
57C6625B1AB3426B888F236D57DB2F5A50B37FD8E7C81E6BD2C89800409EB179
0485F53C020767B5AABE25311CBD54F6F3BA326F6EAEF1B707BD8E2730C55842
1EA5B74EB358437D0CEBB9E03109C593BAC09CA99620C8952ACDC9BA9D2A1B21
3B20B0EBBF2BC4A0E37DE2DF854EEE67471AD76F25C6AB3EED42FBEB0E316AD7
09E402F85A36FE45E57BD5CE0C7A57713AF055C0A0F972EDA6FB78BCD95862F2
884FFFA17C26969FA7AC28A6FF2EFD2151BF9AE51F8017ACA1F189103FEEE7B9
BA528C4D5FD8929B90EEFB3B1EF3AACA3FCEE17C7835239CD821DCA5779A9CF3
3B4FC3A6252B39AAAF7045B8A0E597F3D632309BF5ED9D8632C4BD136C89169D
45718A88BABE2BC905E96349386689386BFABA5CFC0CE6369C638E695C220112
8706F71D3A9C29B4295B55CB4C6F62668E644C04646F79745A41552F95F74536
C803FD0E67B1A00005F0971101815CEE9018765F8DF8ECB0A02D9EED1926218F
FF223A3B323D692C4C908EE66282FDF5A5C5DC3D9B0F12D3A1E0810B01C554FD
BB8EF9804F5C2EAE78A2D94D4F14D0F503064F1C78C7A6DE3181A839528F7AFF
96BA65BF856CC55D2B72AC6766790C81ECE3210433FD363F7E0398E95CE5FDF7
ADB2965D6181D0094FAE82525BA469C38C48754B5E3D4A3EA489D7DE94F9BB46
AA3CCC7A6AC0D3CA9A8513B88BB7B2E925DB3365C80D56013FEE09015324C4F3
3870BE5C171E4DAAE3B96B8C7AE13DC70FBE3A63A34884DA9097C0F903F0F05E
0F77EA5BF0F763F142BF6DC075F7F924B26DD852D73CF5EEA565730289026F91
12209530A35FC6145232C379D553953F2D8C5450771F19B59A2760C52C87C366
94BE5257D9D8C720DE804C125D97F7149F4C3F33DCAC5FED08DC51869FD72111
1B76580BC4A776DD86B46D526B0F88F5D96B3EE55FBC7E5D5A2A65C07D4FBCBB
8FB94BE05DFF2B3FB58BF19910B28EF6F1D077D41491DC8978EFCE821DA96389
52D54E74329224C0D1AF05E482ED4FBBBCD1513D1F201206FAE8F5F752A36C01
D95CB3DB66B016182943157A4F52988D3E0C669A708129626DC18BD7AF476DD7
BF8C3CB2AFBE30919D65BC0D3E8832BAA635ED3F627C7C46900C1CFD1FCD40FF
780D21BB0FE151482CEDB0C21D3167BF901A4604DE99CDB9D4B68D4B20E4C272
E487E9D0D71B2B06D74B73AB75ED2CC22B05B89ABA446304EEAAC280A94CF9CF
E7EF436AF77CFA0F0E79E2AC06E9EFF2FD56279C687F8E502F529CD5EC1517FA
EA5DD8FE805F33EF3FC77FBACB3EB9FBF4083B75C000F0A56FFE04BAEE21591A
EE772C56A80D32A6E6302E20A88B91EAC2D1F8961FBBD25605534D7682D1A0AE
125DF60CFF05C7454B82F991CDABF3E7ED6C07D533D00EB4386870643CA83B5A
BAE16CA42485ECEF9D4D51001EF6E00C9CBA158724AC4352EBBE76EA0CB1CADA
541EA9D47C168251145C17626EE61BDFA2B63197426A1A86E9150D3A1EC4F892
A2F092A3E45A53F9D58FD4161F04235FEBAC54193DE67EF18181FF14BAD255D6
505C4BA5C2B8C70A6D14DD9D06240C3A820363A9C70B9544903F3219947F5AA0
623939DE63A0A4C93F484A7CC48A29293222794C5EBD54650D834DA175A4F177
204E90FEAFE0A407C7C23BA5F5E684764A0FF31B8A96767E309ABE6CA45067EF
C6923A5FCE039A9B9DF5CAC345785D28DE4EAD3AF23E8EB270FF2FC011EB0C25
AD8292C45BD020DE6C9089843A9CB4C1EB4B417A21BB841AEEEF4E78760F8A25
C60981E6372E49D71614BB4A10832A925B3BA29EF6811BA54DBC158618BF04C3
75ED470ABB235E8499D8A4C847189A9DBD4C2AFF9649145F37B09679E5AE4670
C0B0B61E49E233994DE3021D1A1072ABE30B6F236A3BCB744CEF08A998F91E8F
B121DBE28522F032CA0DEABE21398FDA5FBD5500DCA48E4802C8E32939CE68A5
52AA47F3854D2757F509F2B1769D6E73D72E55766F3C65AFCA94D0E84C7FC39E
73EAE0E4C162E1921EADB479F7FA83797FE2BB8B58C67B5A49AD185A1F97CA09
5C56B3D62783960780B31693596869FAF56AD841D2920419CBF15CD531E36D1B
A17E69AD2A2A9C18A09626BA926E6A7AF094A1F9CCC08D01256B7CED1EDC4088
581783BB9D29E08772D7252FAFA673968722570598AEEB8D2DA4B491536CEF9D
1E9F4FD8C0003E6F232AEE953C46D2F7BF945125B3C95B1D9E1C889376D26BE4
04C9E802732D4B23AD08E64CD0EA508DB893617833CCD6745F30BF915A60F7C0
27C153000E975E7513D0156B447DFB1A220AD14E1EAE70CEF7F489BEC25D3BF6
095E0DFA862289620A7638196571DD99876295225E5552CD42289F27BDBB6E6B
BAB0E40A2714E27F1EA5A60DEDB6FED6466870C3B0F9F47FFE4EF9561A25F701
02C8091D0B869412F9A6A7431DF5AF888E3C414F73321DC5FF5BE0FF11CAB973
A92078EE12F3DEB4E33DCD967D167E9A33A99C72207BC789EEC011E3B29A07F1
6CFCD9CF65A81101E593B202DB4FC6061B3DD4B30F0FC81515347A0A74F167B5
886008F1F2634C3706C594349F1E95F04AC8DFBC328CD416EC3874534612967A
D795497F72ED1E0ECEAF585BA475D84C286D85B6CDF0F348A9853F0BE3B8E8C3
41A728EBA6AA858A62BA34015E2E2F851AF557CB53B0760D2257AD918525794D
E9B9603F2F5CD08137512D8612F6E3F6C4130F2D0CB03E49B49CC85A767AD062
4D3D29C8DE0FF82A43D64F468C73A24EA2637C80EF0AF61776F3D23805CB9620
828E3A3B42E9FC4459744010C16981146E0271E215FB6C52D696C91C62C88CD8
FF8DFBE1278EEDA0833C35F798D66B30AD10FF770C9A08169366B9DD6A877DE6
AEA9C3179677B7C0726022D0F92C06021BF90B5EEC2B739A109B37B07E8A668E
68D117A2373B992191A5A26154CE54AFD9DB3C8E9EED4DDD03EC7E7319AAC361
613A028572D68AB9D20F3ED4130D20D8CE0622335CA4F819DEF0C6103AAA9069
0F834C207BCC7EAB1C8C7740B1EEDC4406ECCCCCB8F8A422F2E0E9E655CD44D4
B1F6F9AD92CDAEAB2DAEE928681EF627A2AB9B9BB63E2E8A943C94C5D0112CC2
6B45288E707897BEDB59E7DC0912EAC8754AE29EAE5AC87616C0C26855C6EB5C
75F3602396A1B7C3D1906E2827AB2FD80B579D04C229EBE9A154B66363BAB6B2
EEC169310617C44B7CF034F7B87FDC6F26F129B23CA3D345E26F3F7182BDDAA2
72A7F47D149B38A0D7E4E4342CFDD22C780278D973C9CB349615F917F93D84F2
DEC7C169CC9DB82A8970B3D28E0364CE8AC122B16BF9132830C8F4EA9DED9CA2
889905067C275BD496F93E01565EF63E388BFB5372277A76D5A21D4351F88439
C6FD7C7268EB45915895070514EE917FD369753B77981AD11AC315AEB0294B62
BAF5C7D5652B097B59ECB9ED4D16EFFBCCFF0CF648981BB0F88B5143F3FCB1C9
67F9E6D970F3267FA1B2F23FAF2766D49EF703DCBC3BDF0F7A571AAE00F596EE
01EB476BAD9494ED9D5949D482127CA20F8DD56C8A500C6E34DE1ABF1926F332
BB54BDBF75316C4B1A39C538312FD649E8C789D52BB5CC5D17CBF0E1965C0E6E
A3DAA2EC5DFC9750EEE2BAE950FFDE5D53ADB1DD728C02742D0E51D69C73859B
0FF3AE191ADFF9F5DB0FF74793F3C5263756C50DD934D1899A47E6E69EDB17BC
08CA1B092D4F20BE1AA32AD37A23326CD8E2332276F32283CF0F7169EE52BD76
79D7ACF9D3677B4963D4005838679F44F925F924FC95B249EB35CFDA487CBF31
4702BD0D2112BB8C77B745B9E50A62164110F3599D8E6CB9E93D141668D361EB
443CA1D95CD8790A1CFD6359EBFA90EBE9B7BF54177F19A68908E718539A8A36
8389E56271E96908A1BAB8EC451BDA09D48B1DDBB63B0ED2891146949C92A50D
FACCBF9BB0F64D36A0CE595241BCB90CB54AA515708E0F4F78364EA04E25BE01
27D82D914E35831C4DAC2B643933138270601979BDF422BC83B4B51D1A0AE3CE
120540E9B6537A023448ED659308DBEA0EF8FCEA25DBE6D5128B78AB748C38F5
25793AF97A9CE3BF875DC5D845C884413A42EA0B8B2F9C23EAD960F20A6F5149
0D177E72F543F36DF8BD5F59DBDB9785489E1FA9D96C57DC4B7603038D6D6337
E038A136F8256B7DCCA0D7503A0750027042AE2B44CD5E15ED402A0F46027DDE
61EAD03E8DE7EE3E332B6B3FD09507BDF345201376AFE24ED8E855C8EC0A4F11
54FEFE632A666964EF77572B7FB2D4365582E4B187B09398E8F44E70FF842306
ACCF65C0AC9673859DB9C3A72C45D74F177EA0EBC1EADF96CDA6EE4C53703763
505FFA8A6105A0E23FA25DD024213A0F8087A08EFE3C136F0A42D66A2997E819
63E5A017B4FD5A0BF82404A36AF903329AD5A80DC8A9A5AB7918FAB070E18406
BEC009B0BA9453773FBDFFC20DFA02DCA07F57B5F1164FAB22A079BCF89E6CCC
1D40F78A28ECC992859F085A05262EC23D726F2979EAC946F8F2859FF309B847
4CE66638DFA0786E8427C3FD501865604B85880B053A592E36D0A048827ADCC5
357E6ADF9AD8C35E6A43B6823C4E3D2E01A276BB4BF722D8207FD68296B4ABB0
49ECEC181FEE5B3AB0005FCD44610F085652BA05177872A46DA310F17C190EBF
B27C68931A0C4C0DDF292C1402A990D44D61AC1FF03CCCD6BBCD792189A12FC9
366BA7134EFD67A22B4B8CCEF6C7C7E6111B92133CC1490D70C0E83B6D78E41A
A08BA28DD378FF72298CA4CF175198F196CF2AD3F92E04B7196A5413A6322059
418450F3C51C6F5B8FE3C614E4D0AC4E15F520450DD45CD8A347BBF3D26BE7AD
8EA4B33172319F54E9E05755F04702A145F80D0767633116DAA8E6D74B6A4FBF
AF7245D8F075ED7497FA4DC7720F15D5076CBB9E7F70CC4ACE14D54BD3389E38
DA769C57279920C9F30363291678A7D920F128855CDD17E51BDD733C5BB223BA
6AB44C3DE99624DB1B364E6474BA273C8E9B887184E8E036205B149DA99B2CD2
F337147B5D3CDABB591FED2312CDD8FBDFFB276035A428E531D41C55DCBFB5DE
70958048F037C56C14FDBCE691048469BC4888BDA4EA491DF016DEEEC4AA85D1
7812F9302EE8C0D76B96134A9B272E29346B9758C5A3E0A4384749A7D88BE0C3
227C34D7640F5016E9E8FE8ABEFA3D85BF7B6D19D0D6048DA2E9134E43358A1B
E68E4C0DC54C87637B71722F9C581634E789A5C10BC1E93488DCC273143E753F
39B2EE650FCD2BEF029DA0D8F7E9B26900FACDE591FC74682000AE4AA5B339C1
87F52630B52309834F266D70279CA4A2A46FAEF9273CC1C02223B545B466DAE2
92DEC27B9A7D0D3FCF1DD66A83FDA1094245139346C89EE12066488460352E7F
6497C9C4BC364259B91096A56BD6950519A3CC34CD2B4F23B41E48AE0EC38B4B
B1CBB268F841ACC97633FE6492E65F77E77C47A81E657F371632922E7AE2B08E
F5ADC765E59DC22D831094E3986C1F01D180B68D6CA9C60D3A774AC7448624EB
E6A7D0067E307D81A0E356F6F36D757708B42A5E259053C58C8DE2A02C563BDD
4FBD95600E6C1AA3D680E83A730A4642CE4EC3ADC7DA7F18748E4D1AA785D33B
93DBBCFA351166A14B773C7B3CFEFE2E00E742043388B0D281D4A95C25C9A9ED
08FF2FD416DC8EF9BB6EAC27AC7A411BAB23A8BDC6056F26BDBA4BF29F957B86
82D21CF1CCFCBAC8BEA390D3441D1DF4B16DC2295F06ABE7ACED96009E826E0D
42EB7964147B02C4CA4F0806BA52F8A891A88B2F519383DDF1241E39637EFDC8
05B266B494001747473ED6C88984CD0C910FE12D8CD6A6C6A3E4A1518E2BCDF0
99DCDD6A0A13F56BB1A0E289C7A999A4330CD4CA8DAA5B4A8DA6B7FBF5919A28
93BAD39B99FEC7FDB24FFD726EAAE57F753B4CE703F00747B6689D8E51A39E85
9BE6FB9A4244C1DC10CE4D1B7A2CE5F56F369AB2355524440AF274D7C2B474E1
C4AE3F7E57DD7A49C196B9D8755ED03740567ECFC5793EB1C455C989AD024EDE
B72F0E9058E6D2BA41F14796F1EDE6041ABA9018A36364CE91AA02E59582938F
1BF07FCE3AB280E335B51827382C234F8439564FF17174168F3236BA41889C56
69C3216F7ACA6103A37067CD85EF39D00AF0F37FA2971CB3884245656DE4B750
5EDB3004C44AEAE92C7D6E49A68F23BC5D249C485A330D30F871E16F52290B1D
877C6381D1B21393E0341920404BBDE5111A09F2F70FA32542FF1E83E1FA20A7
B58B2FEE876EC79521622318BB6960F7588E6392FC192206F44FF08B39D7383D
2713E2B2859B4DE22ED7C5574C7AF80B793FA88EE3DB7788FBB28D6A6235824D
DCA0EBCED0765940EE1FA51159FBF06FFEAE98AB8495E9AACE19EA44D35D45AD
FCD296F82FDF5B7C98854899BDB63F0CC80E19A4165AC73F32D0ED08C8FD0D04
07325DFD8EE960FEB6206FCEDFED42B55590F3325DC1E5F9C8333C703029CD58
3F6405828CA8C05E7325F9077349C9673E89E46AD9FA0D3E24F2FDCF57193CCA
AA36A4B7742FE9F8BC879A3A7321FADA299277D8D09E8CEE8238655CA6C81859
C0820173CB67B61284D80AFB6F061D629AB8FEF39C9F3591DD4C298417194F73
16068F4BB7DA76A84A92E3D854243B2D272CF5C16F0AAD1815A417E043759F7A
16C831495BF1DFF31F9D04CC76C0390F9E22E954D98F30A3A930E83872D8BFAC
1B099162FCFC58DEC16412B90E7D89DCEE471A182A205D85B6DB655F64D923D8
71C6468C4C6C87CC693DEC50289A51CE9FE17DE9159FED5B0346CD9F59A3E701
96ED37E6BE3262D1AFBA82395394D1ACDBB8397173FE341AE5D973CF63E96A16
488F3C1750FDD11F791B3CE3455A4985ED699F01D3CD324F11CB9C8ED764B69A
9D0C7BE6E921C4CAB59D8922311FEC94E20348F2D897C8953FFFBE90D1BF87BA
4E30C9D50E67B63EC3AC43085F8B17EB802C790511F577F95B9FACD447CE3130
B3D2C0E7AD2111B8CCB27A8E039D53636215CE493AF9F83295BD847338765EDC
2FD998E405A987C4205CAD91AB441DD7633D9830DDDEC05147F1FC0A88D9E1C5
8E65D0AB48EA2AC486C96CF7C8D8E934C1C0CBCA970D3DCFC4792C8CF4986276
BD26C5A94D0674F15CAA57274729CAB7B905EA43E77F9ACDA4E2AF10F6E26513
66BEA9148586C47CAAE4287A251C0113CB53A2A19CCC237F48A4FCD01EFBB24D
FA21209AAE46DED3AAE0AC362890C8304EDFFA803800B5D37525247C5C189C06
5B952178B483758F4B543CA539850DAAA113F937C6CB1880A70D1E2A234AEECE
B93E41A44DBCE7822AE6146DF6943007E871870BCEE93570EF9F95FA36EB42FD
653E61511632FA6E28FE2514C19A900BC02CFDAADE9A502663741D6377C07021
6FCDA30F5723F772B1764D9E2C9CD6B8BD671577453A37D1995144AC22383BAD
0D43058F54E216B677301B3FA304A7939A55616480B249B075479606A1B29A33
344959BAE4CB57E6FF0CAB1468DC84FE0F3F9EBA7A67CBB33FC157518D34346C
1A43A51A97C577278CE1C822E7774D2E36B7DC679E91F344E2181C9631F74D30
07F541869E3AE9CC7B6087C9F370E2431E28C32B9E0E6B3234484519287C20D8
11074449DC64461585B848436BF12F8A8BACD0154C4727E881704817CBC33E62
E01F51A50C395F7036CC9A304FD0C555D88875305BAB8AF1B3114E113AC272E6
89268C2981DD9B4631F1869F9C02A3372CA1DAC1ECB83AEF8ACB06C7977F5BFC
46DA533851EEE8831C28BE115D375CE446FDEA7E0890575F1D83F7C40DA4B771
9FED370D6909828DE61CA45D557F092E0995C6807B6805524A6D24289FF6CE2E
B50AF4A6D294B102666269B3512888E10CC9A453019DF489FBF899966FDA5D5A
F706F0A30AB0EF438151C7D39682CE23E343F17763694941FB4E2282F97FEA50
082B956F1452E49399964B982FC858089BAED969370631951C63F5EBCFEBB26A
C9EB6F7548E63D6E83F77B0929D99246B2B16633048AEDBD06FD79BAEAB05CCF
5B81D99CD34D1429DD0EEF7AA35548174F41D78903B40367915D4EEBE9B481EA
10C504360FCB236B33EA5BA6233B2973A1A4A649277B3F7834D125F12A97B95F
6A354624C31C68A7AE91ABCBBCF7322BAE688DFD73F7115169B32AB8B6C05B22
CAF446918B758915784EF5540B0ECC0C14BB5F7635F68C3AF8D4439FE177FB64
A47DEF982ED94DF2A54E43B27234C09FAAE4EBEF23753012036D443A7544E5A9
B352C4CC51914A2E6DF3BBC71A47D4A61A3A3CB1746577F77DECEAC30E08B958
05267B9933BA0E73DFC16F8386E6F6D836836DFB68ED5DFBBCCC7EEA0376A9CE
8E4B6C4211CBFCF9709AA29144F3A40509258D0FDDE3FB4F9CD60DE04863F47F
7A3607969ED20674FFD98D851C9629B978FA10CE2AC0425C7839991B2DEF9A48
2B50F8B7224BC9D6A2C79FA0D79AA7CAF3D142CB3C0E1BE3902D9683ADA47975
EFBB02B4BBEFE953A399ACE9B1059CBD13891060D8A9ECDD2FC8D6F685BFBC74
1BF6F5976DA11C9E7FC164586D1D0612A554F801B0E06ECA75A0B9C71C8F0AFE
81E513EF8D156EE28779D0342CA7B1395A06C40C875D2DD56FAD7828E5E203F3
28AD955AB433987B2290CD79C103AF60D5E05063DE4A025FA5007DB8F3314CF0
75D5B0B22DB7A96366192D2748A52E28F0B34C85250E95F48269AE2919D5FECA
07384A40154AB370C7BFE812D46F20B1F62A556CAD6F0F434CACF7361CAFB8E0
126A485AE9F44D54A2CAB96E83FF24A58FB06B0CDE19AC95933F2A2C548AAB3D
B4B6D1148F3EDB90B6970DC51ABD22DD6622182633C428423544EACFAF6F4EFF
E258C0526EE86CCBF43EE9C02CB6F255587300FD433C3B4D9FF1EA2CA063B9C5
500FF2F234B79DC65856CA9A6F6CBF2D410D28CDCB4D31C8E5E6DB585C2DD28B
5C0305C968B8AB383D9C5E5AF62AB7BC7DB94F56A0800FAE7F4A952C50CAE2A6
D644CA8735A4E96445BA9CEBB627718F858DC7217629286D48D6529E15ADC93E
621833FC3E90469BD4400AEB57E8D40B40C0D6206DF1B2B7701C20E811C46769
1E1008B05E8F31B235ACA40C12BDD72980787CCBFA656F4FDA98A9A9C847FD8B
D3376F8C422B3C323AFED733D54FA6EE1941A393CA17E459E336B3BB30E515CF
2EDB3F194A67FD599CA9D3364FBE913083D58F6096E5378E49AE8CF599C651E2
7AF40D2CD8C640558938D5D72480077DDB844137AB35E862CECB9761D4FD3514
C7056A9FD3F8B06202FF8DCD698B56544751347E9AA3520CDEF097E69A82A47D
7A44F8CCA45637E786A2DA5331B42A66449D3B57B509FE3AE55865902C743B37
54A3A2F60FD798AA2A1F02B7155E76D0C80E31B39CE0EAE63223762A0A39F3FF
2A2F7121B0C1D25CE74C0DBB29116D95D3AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A563D708EBA300B5D5882F227F5EFEADD582C932F59D55EBE8394F62
2B1D07496159EDB225E9A3362FBC02F1967A1A01A73E92348FE74AE5B8CED1F6
1DE6B4F56754BB3FED74CBB3229F32D00F99B504DD1602FBCC202CC8046C64D2
25A57E59508CC2064BFFE7C27027236C04B7C52F279C3F8A3EFCF2FE109A30D8
7414ABA2676B03B3060F4293C22134974E27D9D89CBC802B4A9D803BD635C058
7B0944C74A96F6CD2A907CD9398069A573964AB81D012CB0FF3D466CB294E951
1AA1C53A5B7FB1741FC10B29A352DF4D11A0B3B04CA9404BACB3ADEACB246DC7
6BE2CF87A05FFFF923E5A78FE7C9A7CFBEF74B53C1FA210F6B2C5565027A5E6C
42CBB462089EFBECCA2B2664527B384EB259A7B19DC09DA45B2AB80B008837ED
8F6D3B41CC803C6B5EECC114AD008F696DF1DF9B36FE935AC7ED5FBCC2445825
11812BC73215FF4B2EBA5E902D9C5ED30617417F403ADD5B2C90677135E49AA6
C62D9E16913710AC8B7BCC2BA9124CDAD5B6FC0229068FC2081EF93FFD0E0C65
4D9E97727A3B88AC53454E7EDDEEFB9EEC9935B977BFF9ADFBA70630BF713B9B
A50198074FC701F826FD1BA4B0BA057825D4F25848CD2BC751170B446F9FC06F
4B6EA145D5DF301FA66D69E941C9AD6125A56234A96C6AD33F56C836BD6A6446
1FE03D435D01FFF15E7A613EACE41E72B21E9691BF69739844970A42BAB44E62
2268ABB33945A53675F203287F5B1708FD0685C575449D29B51B30154E150C48
FD4A243F8C74C0035ADA5BBCB0E724AFA0F51B8E2EDD6CB12B699A2FCA90DFB3
DD730D96D100DC5B1BBB13968321F1D711405CE8932953D69522329B698729A6
32B265DE170BD68494C1F45182EED27CA9EA568EC57FB894173EE4742916BEAE
0D21F24A3E4D146DEBD1987279C4CDD88996599333FDAEBAAB30E04E3C78DAB9
18F954D7C739714F30B69609C9FB9BAE5CF3030EE1A0A113079F9733EE84CEC0
ED22BEB736BDEB0F3BC878FC55C33C967D8732A709957CE23D39B600EC0B3691
FDA05AF2A2C82EBAC09A81BDB082FA5134A367B198BF1D5888DAC6FB9D7426BA
1AE7D18A9445698A365141BDF48E56E931B1148DACFF31C8191A2A9F42EE8C9E
9A2200C8EE611D14886A41B74ACA861AAABDE11879E3ADCF4CE6147FF2E6183F
A2444334FB5421F839B7FE61A3E58CC805DEE3DC2901E391C5E4E518E9952880
5C50A9DEA295EE4C91CD43DC15E01EA6053D6E84660B5FE4F50F39431D5B9A74
CDFEB4C9C5C555E83C466B698F5BE9CE9BDB5E20667B8E0811D035606F6FBB8D
1E9AEBF9CD2D3806F30D13DC8B1A60616CB434CDE7436FBE5D67D5BBD65C8B29
524188CC192F2D4483E6E23CAB9F3FE841A8B748842A457D7D25D524AB32E027
FFB7349F60E127F53C105348362C617D60BA3678C8215B9F542D8115240CC045
5F34F89764223F7DC55BA669B8793F48CA899EF72C0DCA22B640D87E79D24C2B
8F38438B6E4F1428BC8E889765C4A31A899598D22EA55DE76735D3C2DABD9B22
5655AE2B5647CB5CD00EBC7635AEDB3F00A55FB1721FF386660B5E09415511DF
66A8E831EF43CF2298F5D933670D79239ED9C23CE1CB161F50091092627CA0C8
E5CA6D14A899C877A1F71CF5F205C8FF35460B379216ABE4242EDDA8146103B7
D094FC1DBFA8012920F318C075C8C757B0FD0A10AC1127B4E7D18ADDEF5FFE63
A9BE786E54773FF3E432D45103C75A2A0537B9FCB7B78BD90037AE8C3DB66840
96A4CBFE226E7AE728A1B19B883455AE7D7BA88D58E2EDD30493564B38F53F50
A4B25DC1BA2A3E2A6C4884C57CECE0AB1CC156049E60651AE832D61FD9DD4D39
C32F79AACD665ECA7277148AE89168C46795AED19CFDF430F8365C10C7E6F571
0FBA343D16C9D915E290FB00470F98FE893D492C635963CD6CEFF0B826E630CF
3C66C21426637245657B86A2BEDBEA23EDE0B74FA8C5B997A491F8A791216C6F
A9A62D337FCD128A1A1CEEBE8A4703D4D84D1B7B4499E585B500D54F9D0A2F38
9EAC1935F8964877EA22D9E5D4256F3134B7F3A57DD4831EDB4F97F8D526EB04
6230DE50FDC071517239074CCC54A74F4E5D1F69A9FA4867386F2284702C5F6F
26053E4C104C322503F37A5AB40178F106488328477108967E2D9B04F87CF8EB
48C7478C15610EB43EEFC0EAEC72EED47FBF3CBE34BA43402E29BF660674457A
70FEC12F1DCB59FA342A2BEF7518AB4AA9AD3CE8818625D951255AFC3DA3BFEB
37BA41DB55892C790377A634F66CE23EDFE139B0FA4581782A24EBFAF9624F3E
A0CD030C40B73193B888DCEFA36A3E21CEAFBBD30D762B4B72E970906DB4721A
F2E50A97DC3C1D06CDD26B204CB34A50C911D3CC7E89BA81EE6E462B186BDFDB
94FA42FBD895E49D944DB5C206999107D67FF7C8989C512DA066D6DA8A09985C
D093AC0BD5DFAC3AF0C425C270647B327C8864E3343CDF76E88A6D39E72F39A8
1230BB89139C80BDA581736AF384C0D81A912ED19C2F8B8936FA11EF84660B55
30587ADB140E7350E4198054A6DB1E5706DDC16D82D46042CD991A055D41BC77
DA4210A8D394ABA1B3FB14DB438AA8FBA3B3C81B70810EB0AE50B5A2CA87320F
2C3E8ECC62EAC182B1FFC571F81A1D74DF1865E6B04585E961D30AF8E103F301
AD9FF8FFCF4B8DD9CE727EBD1B905852F816E6F8A47E0D235514D21087D22EC9
1EC07A4D5E930A6CE175920C2EC7B3815B58F2A48BC4D4A0F80481885140B80A
A51BBD645D151920DC1269D70A0B1326D07E1E7A9290301CECA64150B42A555B
8BAC41EFDC6444C0DAA6DD5D5492CA1736A52B8B9D95AE23A9C2D6A29F0F77B9
485D1ED26C48BD4E096F1C03C3AE5EFC282C4AEE3AAB63B382FDD2568A537E72
96E0EE3EE6FC066FE923B1E178D16C6D2C47975AC170824CA29486F8F400BFE7
C4F91333D6CD3899778644A33617B76492270CB12E67F46388416F4E74B4C943
98140C11B0D3D8C3D75204D585E6AE259EA0C1E060B1C495ED215C9E3B5B21CD
6EAE85CBA7D0FCFEE888CC7FFDEFCBD573725714D8784A0CF91F7087EE721F64
CA0E33B511878F1E0C82378117DC87B4B835C7DE472E783CF2984139C440B18F
E7B38BB46736BBB09EE9610D507A44794CEB9A3EAB4A4E440A050A9602300955
53782491A414555572D81B7214C17A14C6F913E666C27F082A4720C63E0B47C3
BA10A8548CA090E60C409D96FCFA4637EE0055EB8288CCBD9F99D7E8418BBACF
C660D888697296B7CC6581024CE32AA79A5457C0CC70B58A5018F201304D0437
CFC4AA0055413ED356ADE5722268FD35BA41E530CD238D7A64AD77E03A7E8195
9D74397B05AA139C11D8E49A593F43BB9284EB8BAC342210D5B0ED5550C4B541
09A1B5D369656EDC2F0B476E52D38BF9BA9A7880F7EE5E00A451AFEF35ADF860
83F9A849BDD896A9B2F6F431345964D7EC4B2931C691E3688E6A0EC0E65F5063
436840DBA4375892CE49C01FCB7D76FE663A99E64655311B952AD69AF7357828
74032BB57DF31DAABB7DE1EBAE20A38DC804C2369A939E1C5EB09A9F44D24930
0D83C7A0C96976DCDAEE7B8045008E5FDF9C86DE6697E60438DA76A0A508D8A0
4F52286FBD511C388D8E5A1679DE7B5B440C24318B226DF30187B1C11A39A5F6
6D239B14CD8EE411C90A03FB928E64B5D774B8A235D811FA7F846BF8CBCC06AA
8530645A7132E35C90510B2EF00505D58569F35E0F24A3837D48AE07A199D582
5CB5DB62680664A8C32A7059E8DD699C19F7D23F8A75F6D1464A7A8025262B1C
95F281E1C1CEDAC274E39BBAB45A9653B2B4EA3A866C8FD56E4116AF70E6EFBB
4844523E70F49642DC3228E3C49A4EE76448D1CD18E244A969DA862922A8F80A
0DD84F071B124C98E59CE3F94975C52B1C3D01380440CBC1A0B8AC0A8769309E
DAAFCD3E21AE0BBD8194AE3D6C917139A3F4B54A69C433DF5ACC86B01015E03E
A84B07416023DF26F54DEB9FCA1193569DBD82020CD19CB9FBD855ABBC15FA83
5C5C6174E4FE35B8825B5C783B75A1DB76E638DAEE14D13495FCBEA0F0D5B4A1
11CB27077B56F8091DD37335876F57D22AE29E04927646E3EBBB191C9FD81011
12E0589E1AA6F7743405F5CBE430158389190A02D0B586265D775CF1B2EDA7A5
C7B9BA998A3A21B24DF8ABCB58D0D54B04C4512A0FF5FAB5153F3F97005D4C91
9CFCF44868A7E6CC5162AD1014BDD3F898EAD9FCAF6961FAA1F61DF9E173250C
9BF8890CC02E4036BE87E4E97C4022293FAD670A8421FFB276424FF44A6E2BF2
B829D0D35E2D3779653F9ACBAE80BEEFEE84787EDD1CAA6A64AF2B0E5AE0E61F
4508D93B57C8758DCA7307050D1A7B5532247852BA56D5637D773B80B743F864
5EEDF4892A9EE11A061B602D9B480EA64DF4431DB3E8171FF299396494FBC02B
7C741D4B2C7F7004293EE30318CEF759C9FF16A8E89325256DDDBD64E291CF52
D089A0319F734D5A28724475FFCA2289A85BF6BF0EEAC7069ACA690FA83F7A9E
B2EC5B9DD8E3760F0AA80321176B5B30C952874692A3A05F40A3BF761AB2B775
3B977704D8C7913F5AA63E45DEE815CA8003B0C89686FB6D7525F8F0748C7A47
299C73F5BA9FC6B07C036C15B69802D618D62BACBD6DC9CED76AA08C15BF3C45
504BF9DA209B4CD8468B1B6EAE13AF8F423130EC32EF3AF68CC1C3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E038B5B3B8EF260A0A35D2FE2A391274C38EAE50A6507512
690D2DD4D64276AC5E544B36BE0B51BCB83CE53A6F20F4DC5E2F347A7E54C91D
69204A83F1D46A59DF25AD24664C9D5FEAC7AF6488D173C2BD855385676D8C39
2A82F8DC836C8BB653E4C9A19210AEA6313E62E70EC9BEF8C4560812D60B1472
F6404B1AA6031C346E175A9CFFF3EF2873CFBFD2C69574A5D7DEF679902FF59E
3B86054DF5B3FDF83856591650C9E72BF8E2143D43A1481140B10252DC8E0EB4
8E2446E4AF11C73D52910F14BEF067F255C44923EA6464AC86DBC3773EB7AE9C
408E9CE5EC893F4705C65569101693F0D22636A00F432618538766332BE25A0D
74993713AB2FFA10EDEF127303002CF111DF1BCA43019F62AC6FBAD2A4F2C83E
0B909AD58E95EE807B83CF7E1E095CB10D5CD3263B03C83FC4B7BE57C6625B1A
B3426B888F236D57DB2F5A50B37FD8E60F42B30857EC5CD2FB4EFA5A8E48AB87
BA6E9E942DF5E90DCD355962158491A8FD8AD2C7F470E48D25BBB0F614F72326
C3F650CFD4308DE0425FD9EB666115759AB1B2CAFF3EEE454AB8DF6BA02B83A2
075274CC778873F53AD1ABD686D1351BD5A9CB20517C21CCBAD3E56801DB21DF
90B45A73F62F5840BCABA506F4CB1434403DBEEA9845063F46A9EF1C97C915C9
1E637A223A0F6B13086A33988A6DFAF899A00F8B8EC1202C05C19AEE115A46C4
9A663A888F8B36C5E2345AA680CC0213F630DBB2199A8DC08CAA7DE0E5B6F374
0DD98E2AD199D39C56BE85889670AB5AC6B943C4B9D41C4A6A03DF00E2D87F00
952D0388BAE28280D93E247F05FB893CBE5D859076B5AAE89697E3FC4A6441F3
3A5597D72C82E4BD9A85E2004635A712A8495C2305C7DA7391F7F20453206FC2
7D3F8F02ACC7A579B470A9E340A6985189FF8B6AF914A6B0EF0CF3683D235A0C
FF2135609BE8E89D1210716035D01958DAC0F5A84B217BD0B75692BCF2B45DD7
11488CE444F9AF47CA876366076CA0FDF190DBC423710365236648FD74B10777
24560AA6AFDB6EC9401084DE82B440CFC45DE1634C04CFAAD333FDF84E0F33A2
EDCF78332E793EC734534B91EEC5DDE1D8BF68483C3D2447E31FC56F48648689
B5A0FA8DAEE8CCC5B3CC8C6F270EFC258A343C72A87D5140274C829F239D989C
9E1A28AC72D636AE969256DC91944150153C99FBFF355CCAE7DDB2FE3DF3B0A5
4FA6F218627A66EC82A85F461F951D83972DECD70AA8987112F05C939A6FB070
2AC274C63378573CA78C550B45EE3720261CAB35E0934CD29EB760C8F0114D19
D4BA0161537A4B2E5569FA0D73DFB2FCC6CA510D1697AC1FF0A19C372A97327B
8974079E36D67129C17A6FCC288B9CB288231E1706112A781CB563378D8C5CB7
F8729D436B65B80B3B634949E55CC2A2BB87E8E9DB44DB791D1C46AFE2BA7EBA
63CD47F5B91A075F5BE42A3BF17038D2ACCA7EC331156E0315F306643F0BFF06
EB0DA016066AFD30FABBDCE740367F31FAD328F6A15B0148E05213561DDCE9AC
B79888AF725FDD44F3B23F8FBACF1E5FFBEDD180E94CA387F4ECE353A14E82FF
7D86251B59C66D81FF8FBC05291063120165B4379B1A4DC9D967DBF0F4AC2679
EC035DDBA628E6C4EEA8E4B391FE883E586BBBF83B38E149825FCFFD89AEC9CA
FDB57DC0C4C3BF0A0255ABDEB555EE5EA7AD4D7782A8387E49B8F6D4940F8B3B
B3E8C7295B779748273C485A5F88DC1F92DC8452D0F3C5AF89D64754D9F00DB8
B4F16252C67205713A9B31042BB5A1A3B74395F8AD7A723EC10160DEE4BD2E4A
16523198B2E05EC8749D3D46AA1882968591775A445645D175505AFB1AC5CE8B
310138933B6CF4B205301FE5A2F54624315981DB9E59213A103E32A41A879A41
C90FFD91A30625AE7C9E1E3501BF9686543ED82DD7C0F29D3522C88917F45064
8A58EAE4242CE5BE6A645C2653FE55D062B786BC3C6651B1BC9E4132E2BF7FE5
6CF6503EAC88E8B4F4DCE6515698117D87585797FBD853408549AFE87D9E1FB6
3B8A0F2BA279C60649618BE2D9B1E10DECA9090F66F08EEFEA3FBEF65ED35C6D
8E31D2914E409D64B390B0BF48547BB2DC104E45B02002887372A7028342D5DA
1ABDC4A1D071EAC263297A33CDD908F8CE2CFC49E0FC2FAEF512224950615DA2
039D4EB3B18C87BC21D807874FD5500C5FD4773525A9E12912D6B2A265DE09B5
EBEF1BF8D4003E95F831AE1D7FA22B15E6DAC8C7C1DE7A41D2F69B4CB22412ED
01BDAC0BE83554A4BEA15BF6581D93BB225684B50FC56691BB3A1D226C2E053E
1B5CE76BDCEBA951B61BA48FC22AEA6EAE2B2167EB61D185E06F8741AE6FBB6D
DA9C8EBDE42F5C0EB5BF594EFBA262EB2C414E43D8ACC9CB195D12F3B2ABC959
7EE5FD1996F8AAE791FF65FB53F78C6F639F55A99D3332B13D2D991742FAB22D
66F51581C9885CA1DFBDB4CA8582DAF2809A41072FD817E7072D80C5465BDE1E
01D0E78EC979866E4CA2F3528521C1815333FBA22309F3094A2950EE0299930B
FB1D34B257F66BDBB19596012837CA40EDBAAA2ACD2B44574480A07B37CD37FB
970F7B11087373B6D43BC6E86AA0D5F88AD77FD873378141C0D5E654274F0A88
4B4E81A5864A528819D054345DF144731DD2332B0F7F5E84C46AFFB88747D798
ABE0A28C3F80352864A3F80BB3DCAB9B2B4A4F206B13B702DC4E76A76885AF0B
09EB7F87742DFFB8367445B690245E81AE0A38693F0318A61A07BFE6B7268BCF
2B4DDAA573EC35918A522431497700E2780071A93BC36DFBE6029F878FC59A65
461578501277042937E911586EA16547F111B035E4950C2E9BAE720075EAD569
E7BEF81B824DA5A6D2B21C7CB49F1A8737E0EC21F7CD596D42A88458B89786C2
F6D960EF60FF37AC5021250FBD02B7D5DCA774B841330A240F0E18641EAC906A
5EF0F9BC2108062134A7F1095636B882F29EBF3868C43355F65197E939AAC716
BA62D67350819D14FE3ED2226B71E37AB4EC84EC4C9C1CC45D8723CA7D2A6B00
CCA24AC55E90EC48E4ACC15BE22CBC4FE38AF37D16325FB9929DEE8C2848745C
4BAF9EF2911A80F453FE60FAC91C0F1C634BC8303F8893192AEE80D5A156E3EF
0EEA375E66905D49892B70588D776F15A036FA09D383749CE7FB7E4F83319252
5F8D0110DE3D487C130D8C59F8E6BC0A3D6A21AA60543F3470B8218D56D90B90
C3F3C665E41CBBD9BE223629132D9D75062A01EC5CB1BE74CE9522C06896B9E6
41673A87B47E3089DEC533A7F9759BF94C667916F166A4AD0D7458B845E067EF
C7F9128A17CD447047E6DBADB7AE9A7B205CBCBF1ED0549BAD624D9A1762B670
A9A506C02981DDD545CED0C7CE429D9BF87A7718A844BBA2C252FD10651BE0F4
BDE45B9E7C914E0074C4F6D3A398A33A4BBBB1AAE7858B7001DB7CB38F2ED456
8BD464C960DBF2CA9A24878608565B1F8768FB56B3F2C98AEFBBC8914D0B4825
15B453B86879DFE1185BF04B4E527C706E114259F9942E38D3DBAB5C51E5FFC0
F527C5B59A59FE5C3360A0CB509C16145FCF7D27CB7F13F38FF4ABD16D2FC226
56FA5BFFB230D7AF6ABF63C7B805C438ADBE8AE3408EBB68EC85E3C03E3D6921
2E49DF05A42ED088BEDCC2539F8C81C6A798B6E803A0A99CABA87DA35B532BCA
16C510BC253CC45C7158D89312F84726F3677654FBFFA4E3A2642A93F64831A6
B4924EB4F3D49A5986FAD9F7D46C06CCC29B6F75C799F437E74F0E185AD518B7
E446C30415C8A350E2504DC6092E53F92783E0AF62957C5F79B80DA2B906210F
E250E64C24A95C9342F0DCC0ADAC14486166030FF41D29EA8262E689C52530CB
43926685FF502BBEDAB6258A37008484F27750EAEAE17A63DC636EE6CEACFF46
61232A95ED2B05C01B32EF1CAD05AB36A40A0F84857BE3FE4DE1CC269861657D
AE11CA5F1565C3CEA89BF993E2FC817E3DDD87C11EF838615E71CC77B5C73821
592CA186393E54CE628FADB2EF2900351B44723044DC05BF90F7E1C056F383E8
DCA508D292D4A3ECF30AA655E6029AF347B9DC266A92E183960EC2B89D57EEB4
E8BF20057979A98A4A14F0BD92099DDCF12CCC343C8B6FB1C29368F6CE9D13DD
C823A5E4052ED21E50BBC80F93F95F2F4AFE08768C448D879D8E474A3945350F
D283F04E72AE6EA40AD3FDE96B83C6EDFB990882F149552ACB7B9A8DD5D9F805
42B64A45FF544987ED8A77AF9F935651D38A73163A41122907F0A3DC00626022
EA69F7ABE64B951812CA248AA9F2A0B2D5DAC354F55645D40D9CD64B4D9C6015
D2BF709337CA0058E648347405573D737AC2C6BE8BAAEE2BFBE600F1D9DD0E0A
CD84D43E356F2F4279001DF10597C882C7A5E2768D210FA622491C4B224888BA
29A5A423704CD3EF0235E14156EB241070DE216B7E52495C9E02C5DE45A3519F
7136A882713399C831384FA1269349E2FB528CB4E8CFD3A1B17BCD1A2D969513
0DFB4454B705197FACB989416E6AA9FA07A30EB80A9F2FD46681B24229FB80D1
A2E5CD343CDDF6652C06EE776A4C64991E6B6CE08EBBC0C484315EE485A8714E
B6009A9C06DAA34722F1D67522E273B443AE9820ADB5303CD0D839FC482F55C0
7518C027E3991325D0F2D8DA38371B463A5CA090DEAD07135CBB70B81D3DD534
83BE7CFAA66508B79EB694F2C3C4563F802F8C21B71F0C9983A9780ACB75A37A
63DDF3174A09E363E92A1EAC874E4BF7544FC321A7736F5ABFB20CE24ED96E7E
E72A3AD5AC654B29BE5C5FED13A4D07728245BAE9EAAEDC600B0EF658DD1A4D8
B1F8567040DCD5C54B9234618410808685806BDBC524FEB7967BDD5BB072E876
DBD7E310E31D3CC5E760B82248FBEE526F8689777BD80A56CF580246A8A3A04D
B4866E643A11636472F5845AF507C8EBA6518215D75034137CF269848D4D5A13
A5294A43A58BF8C2AF55531FE0FEA523A21B250F0E7988C50E45B6AC7F41EEDA
416B03695A7A04D5A51CB2A268CEC6763A9B86752AF24A305C366150DFACB4A3
32E59A9E9A5F87ED3D870BEE3C9F8692AF81C932BBBE93F4D07A038B6FC5BF77
6DB24668F0F4594572EAE33CFF7D5476FEB6AEB27F89F410C8CBAA8F91583D37
68019391498DB010CE72D2EAFC631BC4AFD026878619663C9B54CF724F21B97E
41AEA8DBB99B156D3D5E566E70CEBEBD21E52E2D85938BA3F031B6383E1D780A
8128664A8F14E91CED8BABAFE9416AA5E06C7C4C600BF38B70C87E5E03FE3B3F
45A4F6DD39F210719B4DDB86DAEA2CA0CF47D76CDD82D1A1D297D1973E6125FF
805E17D38C76F5B31FEFDFF072B31EF41D3CE547C06EE0EE5BB40C75DB20FDDD
59827A252CB81BA042C2834C6D68F3A0B7F152A9EACD5E0E0D21CD6BEDD69439
FA5AE08E56576D2148D4A90A7DB5437D587EDCEC678B44CF01330EF8FEEA0DD4
D2C7E80850B49E6AE04C878049F20E7ADF22AE9612796DEB9138059A4C12D60E
AAC306E48B967253105BB2A689D9C05CF8ECA2B283E3DA3EF7CB0CD6D034A76D
32DC844CE009C6EBBF9C942EC616BFDCF80180EE6DC71C01AC6AD353810CA793
8EBE8C7116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E619D0BA070CA8F4562F
321D000ADC343E2B193185435682C6B4A8F1A4C4D94DB447EA927D72F34A6476
3FDFBC3EA37B5CEBF5D03BBC3C2FAA19D4E7C58231807317CEF7341A65DE711C
EEFD4A6B79611D6A3E572DA1E7CF89BFDEAE9AE9D984422D428200823D674B18
93F033848A1DF8739A2B43BFA2363CA74FA72668FC761D1A17B9C3C90889D611
5BF34E660434E53077206B06696878E08B94E76261D47759D92D9231A7717976
FBB04E6A3577A665C148C5C31523B52641B2281242D1E8539722361277D11C30
5197AD48A99FAE28983406A9C3B59D1F0962EE0034544EFEC21F1B21DAB103F2
ECD03C45978D34A9ADD8B941211C603B834BB03CF4C025EA6E666E1555A111AB
E7290B983A7CFD19B9DB65CB41D0CE65F05CC6ADE5EC02D9A3A0D376856B2036
634A72710FC8DA959A662893BEFF8D46AC997C8ED678DBBECEC95B1E3EB16DD6
DB80D77A202C1FB3301369DFCF49F694EB6011932191573C71371CD3FA09466C
F2D7B195E84B2DA1F5CC19C957FDF55426702A7FF9EE61B06E514A1192EC4836
9810AD83B2A8D91896E73AFC4DA03A52EEFD6EC22A739146504099A287935F0E
7AF6D49CB9DC59427AA75801EF639C5C36793891A9E69E6B18A95A9D277318EB
7238692EB3AA1E16CCE9A37170F0C02A9C7143D722CFC08677622799577778F3
34C4E5AD44BF7FB5BCC56F8A2A99AF87086CEE2B103889A61FD11075AABCE9F2
517EC9B53D7DB67FF30790DC31D5F15BBEBFCDF0409CAE4DF288E9F7D930A94E
89C36AC72560140421800FFBFCF4372B123AB3752116C4BFE510F180C63CD039
D399B1D9C4208BDE9E7B5FAEEC690CF237B5C9AA6C81744861352351811FFDA8
888C6E882D97673A70BC845767366CDE0D37A82F0234FABBDCE740367F31FAD3
28F6A15B0148E05213561B78CBBE7BD4241CB4AF9E7DBE74C7DAB52EF2E3DC5A
CF1009758191D4A463094635F4756F74ADF67A0BE67D62765D087F117A6F028D
2F2BB95F7428AAB77EBC61E0556F7003F7C8EC8D25C8D12B6346BEC24FE59880
303D59BD664214B4E095F2C33829E7A0740198C15E1DDEBE0364664DBDA5AFF5
B06734DFD7E18BFAE98A1C243F368BE75BD5A0E98313585FF78E1E9626CE3536
948AE25915E53245CFC13D346DED4E5C41BA28ED0B2D4F7D552B0D6507099CFC
3E1E4DF8435E646688A6CAC6190A493574F420308CD62EC74FDFC7CA0F918183
21B3EE726C661B0708ADCBADBC2933C1D0DAC1035A5A6B41BE612088E1641D90
D104EBADB9DA09321173442805CF8F8F6BA06A148730A2283B586870FE655D63
08126DE32C494C6AA9DF87974C3232713DD060A3874834ED552DD7293D1D39ED
6F00439826D9CCD763F5BAB3DB9A7863049488C39ABB74F6696F248F026AE036
29275E879208F7C1CAEE3C80D5FAC1883222A1C90CA4E940136520C8AF7DC481
A5C75780832196D27869EE01D169FC58F743CD16C8F0A6927EAF0B60B94730BE
E4FCEA18980D0D31894C3C4DBEE7354E0F6220F6063DD3A44072F1D24EEBD0E9
D5EDA9F6159CFF603DA5764A6244BFA0338B0E76D4F510B78D86E5F43DE6FCB7
C928450BFDD46DDF88004A089BAECC3E2590EEA23D08ADA7F66A3DC74D6126B8
BC8E30EC6D6CF13AC5EDE1BC9D3352E68C0B94ACE162AF33323B01FA2BBF294F
E3CE1EF37AA659B04631F2482F244C74A5EE2192271F818BFDFC8AF8099CBCDD
CDFFE15EE19FBB7ACB0390DEBA757BEA45FA3171095052B839F7A2A9E367C95F
DD62F98D8CAAECD64C7D8468DA6DCF2767A731B396E5465BFA656C08344C43DA
E47ECC664BCF70081C2EC2DE98E22CFB40A99FE068305C740DD13E70A4B7BA4F
6A794D01CB48972C196E0C10B2F50F32E1E3EFD8CA45E46EB04AA53AEAF4DBDB
F6F0800EBEF9EA787C014FFB589F132635E835D2D74CBBB259F1F07DC7F74A0D
22F3161783C3D81BA82AB06651EE7211E9B621BD851AC42AA89D875019E23C31
650A25CBEEC6B93C575C363FAD73FDFCE1920A890F6AB64F6326C1262B4249BA
9ACCECBE8D81A0259809EE9F92F76660472C5BA5E78AB435F918E066F5383FC4
539D3C5601350E11027DBFE4659DEE197BAF092943B9666224238D328C48F6D8
A346D64691A97135947A0E57EA057A9973974AA074BF8FEAC4F0A4DF24EBE820
5F2653C608EEC3D845B12F3975C5EAFB95B3A886838F1CF017F9E87057F94EC1
25B3ECF744CD52A9A0F3B79124A9E47F4F5A8A15D697DF7E5483790A5239A128
5E1D91B95D756569BB1CF2627F31E8858BFE5BE1DB4A2D38625EE58E39BA27C9
B6DFA186E0352A985DEEFE09BCC7B6286BD93BC1126317ACD924D5A61FC313DE
E12DCECA53608173E9DC5D8292AAE110DCA268598251A394453D99349FC4F651
30127A3BE6784780833674F16889A216475D75EEB838186C788942057588B3DB
CD715F651003587894EB357482F68EE8437F47D2A1F30E4E26A5189AC0B7C3E8
F577815F260E90F2C24F9A9A15775D340C36307497E0CE91B6D1F1607EDB09F9
C68ED7A1E6A527FFDDC287D5849A44A883B5F501E3CFB25426A8746B5610954A
6E5471F8D8344C07DB8E45BE3409866E5D4ADB97D6D5A602B7D3EC89C92FE3CD
3ED8A1A2F1F9D38DEF261C3CE14538C0AF5D07EEFCACD74368BDAA7AE9870EED
9EBA6545141F2F7A7307D30727B94E23FDED5D2DEAD0690379DD5578A156314B
C78AA750E91BAC07EB1DB8A81E4164F827F359A4630C2955964D0D808F21DC02
00638DF7E3599F62B0286A83FE867DE833DA39108A666C72993BF21DA93935F9
0595BDBD4D274FD4284A28493BE4774F66DF77395F433DD8A1317B2053BE6DC8
6D1AF29869CCAD648554A228836C1290AE4EBFBC50E46ACBBAD8CFF61BB6F906
17233EFBCECF61496F8795405CCD2896298503F94188127439890831943816E8
64F87F777089C2097D945A59E873F5171ADB17357090B1444695E3A4A5C17DE6
823755F59BB9E3A052F69C780F5A9DDC6A255BE6483A3AA13B3ECEE040DA2809
02D3F0D32C891B0605B75435B3075BA7DA5F6434B8BD541503B1B9CABC5928AE
68403AC7D2174BADE4B196DE9E61C31849A1B3C5FD5763CC275434AED1CD23DD
F4C4304585159C2E862434D6CB5D80F69E0010B97E1A371ECA95C393449FB13C
E8590A7BEBAF2770DFB333EA66621A561648670A42C4B8309E79BEA25A9E2BE4
D1A042E188EB18D670D1420555ACB4E3E205CBE8D2CD22B1B00C5F181DD9BE96
7D5D2F30D1986CCB571F91D96EC8DFC16E97A4DBD5CC07D307DDBF52E27B7578
7AE81EA98B34D8DAEF3C469488EB3E098A4AEAF3CE1FC15922E4C38271928B3B
64783AC9A3A8A50D9E4040DC6ADF8979C2C77291AF44F4AF573A9C560C53F4EC
10F01B24BD3061707FE66EC53518FD1238EADD3C52B5C6F80151201DF7794D74
7B3560B67DE7676E4338BB923A4E3B2F946324EBDE7EF0C6D198C3588D856421
AD456105F4F4FF47779A5523F55D7945209973E0142B0C866367FD92E4073016
32F4E430D0EBE4AD895425E4FB3315BEA6E2A5443A083B4EC772744863FD93CA
0F1CD26CF593A7326E022BA9CDF2FA9E8981A7E225278BDC2BF0038E66D2C9EC
ACBB3BA33BC441948D231559DBD1FB713E6646BBA1A606F7BF96575E1ABF417B
376266C585B6F3B17B1E23C26B4279C37D7ED8578C34519695EAD030B18D2B1B
928D2CB8CAF6B441EC9D5A4C763EC2A172263718D3C0B2DC97F50E034CCD038E
3BC1299256E1D1E4EDD740CB6D461FE1CCBC3AD91886DF0C8DB362171EE6945F
7B3B383BD93111D710154572E5B63CCD257C0314F99E0E0E74769685BD6C6007
D2B31C3B79CC12A12989636404D1AE3271837120F36F659153EBA5E4A91EA734
77B75333510D419E477E7ADA8439181AE77338F7A45BFF3ABBA75B3C5272D5BB
D7C0324B0FB13575A3128991794AD36351F8A8B4A09FC472962A79ABD230CF14
8457FA16C18A62FAF64BA95B490859881B07218CA48BC688FB299CEB1030A8A9
959F3243F410A36032D13BE99BE23D9030CE41D39C20CE46C98C10A060C09502
E182EAB0E7D0D01ABC1E310F7D2A29673099205DE91F70834CD87323DEE71159
8377B8A1C8735F43A6A69628B40736B1AAFBADA2DE6F39CD5991317968DEFA52
D5CA51A2D32C686D32579EF7430063A099B06F4134BEA5C8986EF4AB4C97092A
1D17169AE6FABD5F2045618882C233355671AC35DC5B2B886C4663E74625F98F
3CFF7DC2A43FAAC36B2BE303195268BE490C9B8EE99E0DF35C6B43C7C81B9135
8CF6517C9C418DA0933DBEB6601794E5B4C81CF3F7384A29702F0BA28FB2F6FD
01A2A4B998108CCF28ADD9B258A6A814B80D6EFB556EA6B67F81777539B67CD7
64463DB1F9969492AE0BD1AE48FA9916C296ECFE12F15F05FA631070BF9D4FF5
BBB92B1582B81D5D2FD011D120D0C59BA5CB14DDD2D5ABCC15A915DE6AFDB50A
9DD4D9E8774E33BE031FEA7E8439A2239955705012667E346C390D9641413CED
36060BBA2543B9B49E9A5E06940230DCD7ED970C8D7911DC00DC459B6849FF77
28A6C5FF3F0ADE1EB4DE93C91DDB40B4E30776133F695899B1F2CC0C69C7195D
DA63FFC07231A6AAD9AE2CE351CD2348264F5277BC5EF11B01A588399B10A825
5C3409FF6CC8F3C38638084F8F4F7DA8B4AEEED926F3821556064A55FC2CE634
031B2D1759C1C252686167F9D064D67FCDC5BFFCC5CE9C78BFA2B830328F9A6D
47593546515B1EE31660B76219EE4C2F891E2EA012B331A3289E7D0BBAD6E383
CF9E8D0ECE8EC47CB9D61C5F5B240403261C60884073554BD0771EAE6A1500B6
4835A7EBECB7DD6B6C1E79369FAE640729ED0A010BBAD2A98CB9C874190A4616
5FBE654065FEA56AD83B17114EC5A676DF1E364FFBA48BB844B5623950E6053B
0068BC64EFE3FF1303844285752BD61638AECE7EAEB36A070B070F3CF86986E1
43A620190406409E997AD5336173B74335082F1E2D97BA8D3BAB84CF7068EB16
D13BA07154D1F2074EAAF70BFB5C6BC5A0678FB654BABF6DAD5857F1B6819B8F
AAF6ED6BF6C8B5E4545CC17C398BE0D172E469B7415B74F2BF312BD9625CCDF9
C3318F3BB49EC630844A691CD4F932C0368445BCBEA7FB573CA285E18E9B42E0
451215A83A763ECBCB6915E8E99848FB5887F0DA3AC7F84487FC62F474699B13
83F5F3DE2DC36D5427F65093EDB58EA45CEC2AFB0B16C4540ED9969E2054CEC1
0C0E83A3C7BD7646FCB6C28886EC210A1F84DB23B6BFB0203AE53A7D864F2C9E
474CA311B75106DCE52C129884EC807CBA4792B24564658504290618A4AD4962
C6721EFDC10CA164F462CA22DDA16EDFD6DB7692A30A71416DC34AB2A2496930
6D9A1392B286F3F1623A3859D22E6BB20C0F943318660E5E850E500506856126
99319ADA973DCB7773285E2E02EE204305CFC05A74A7FEDEE1627900D02BDFCB
04E9AEC578115125195B22B15B8F57812DAF86E4BE60611581FCDFEF2EF03F94
DC211CB2CB94A27524A4C2516A816238F4B8E47880F9AA8145A18255BFBA19DF
9635CD0EC25189E648BC7433F828DE8110D50926E8D85CC53C7802DBB5E7C097
719A22BFF5D31C9C6C0FF56F9B3DF19637371263AB1B4F59F97F2A13C267EFF9
D7CFD1A202580A24E4331B2E2A253AD125B82674AF983FC223A55FBF61096C9E
D17ED05868E556C18D0866E97EC8F77D6F54DCB801A404C465F93E9719ECCC20
67B9FFD03692B957A6C530FA80B011B6C12327592F8B086ACDB860B1B84DB9BC
FB47B1E26FF20C75007F00EF200564FB5482E70985D09F4AEB36853B0C68D2C7
608E594F9BEF7C5B7D407534681905DA3B72EEC9C1B38F428A3ED9EE95AE9F34
0D5CE056954EB8B347918C4920C7142A2AC68231DD2AF5749105A81EE1200FFF
4250D413CF7BBC96C2C16A6A10A8BDA751CB8CDF4AF66B46FCE6648D6B376C94
1151FCB3128F3D0F9C3049C9F1CBC7BAC82A38EAC1FDAA5DDBA9D5D38CE1FC18
6A8D091738A6AB29C50C1376D02A3CB577BCEC451F6232990940E0983965E2CA
FA437950767A0C5ED8C8CB4191E950DBCCD311A20B14B41776496754C1AAF015
B9F8B0A1A057B354D8D8A6BA18F7E824A4E132AEE5BDF71E90DA34D547ACCA61
BE6D41EC37F64BABA6CAB659ADB6006EF4F9B28A39687AEB89B30191210387B0
25179C6C7BCBBB8D9714249A9A7C328D7DDB567883C68E63FB3ABEE97DD7FFDB
55C192759CA1522AB1D4B320012A6EA10D9C8D74B078D5E2F3765D392378CA4D
BEF35521F41D33C6BA6EE980BC1C242C8B0E527225C7EE2D2B8BECEEA182ACAD
7118CD470184B3A2BF8A8873064C909351625D2C9C187AE05F08158E34950BA2
906B425FE484270855BC7372D1C0A2ECA164285A9A8EA08171D1D742344C2C9B
7168C610BF03FC6D88D94B5C171A294A2A8C26324832795536528776E2CE3F72
50608058EF90ACC54A90659DD7AF69B2FFF3273E2A6C4884C57CECE0AB1CC156
049E60651AE8356D7770DD11EA6E1A14EBB1BBB062CE726E106E13371E267EFC
9E691906709AC46D6632950282A4CD40C3B8DE022F31B6CBA3D9E7EA775BBA2E
C97CC91D926CC76EB20F334D46262F0331241D87492D92E8936325CF2A10298B
88FEC93D5370B05FEEFF8434A405C1A2E7250CAD24C78D2DCD8363EBDBAC7178
8DAFE6A1BC9781B67AF1569760ACA4BEF88D6863CBBADCEF9DA606AC5E44FB36
EBC0CEEC44E9FA20527447AB0F461D59F11676B657D610F54BBA9085E4AF0C6D
38BD1C592B23BE6ED6CF65E33A9520C169310617C44B7CF1F853EF87EAF7D39C
885971ADCC853799433B9CCD5CEFB8C91CECA3DEBEB081964C6150ABBD5B3A4B
88B8F215CBE3245DA950A72D479C48D67816F04AD0E3DC993DC5D0CCC426EE83
42A3FD62997CF8C597659008C4FC1EA70B6C51C1F89AA9AB1F8C02D0DC35746E
97C2B29B7A46AD2FA144FA7AF1CD28488C1F2033A233D91D90392860F5A4BF71
6407E9F63873237D152347D3AA2C575D1C09645B8F026B5509AA74D73D0A15F0
EDCBC64BA8F67F4946AF3F56EECB028F93FC3751A9EBD1D97C1B4A3D172AD37C
9DDE3198A8A37BF1F9C5C01668FA79AA6E44A9FC235EFD3A252838BE71FFBF03
821D50DAE4C5FBBB33E3C262F07A51146FA5324626030419810FC5EF576B1DE9
85AAAC82F4647D674AEEC41A3E496FDEC2C0A1F90C1F4FF6202689B76EED4084
5D9AFB54CAA90EB44E4C1819F1DB54F4C3D398A0F977D29ECDB26BE99D660D82
695536658C79FB07B89AC5220EDA163A25BD6676A0D66DBD9040755647785C43
3D4E18A02ABA38F55742DC36E4FF07A70B879B068E5C3998334F901C79DA37DE
E290F4391448A5238F41975F0CF5FE0048F6752008074D6FBCC56FAEB5C009D8
B386AE9C4F392FA8A590BB59A0C9F513CAE09CD08ABF58438D5EAFA88FAED568
46812277FC08AFAD4E383B131E0166720490A124A7B69AC60FE3DF5B6B158873
E6605627253D41770B70B930E9CD2BEFD6F9B08EA2EE19F911F956218A503A16
943D18C1028CC9AFCB9650527EC0FE20458000AA7477BE9544F384A49AE0C70F
71EA41B02E1DDF2DE8630CFC5F2DB47CC63BCDFF874A75714FD324FDD866414E
D5F0DD2A15B62AA0023E80872307E08BDEE03F6F7368F422D978FEF87B4949B3
B5E1DC217E8A1FBD9B828B8E5DDE1174218F07CC4EB3E5BBF668827AD1CE9ED3
9E7242C84FA54B49CA1F6A10254698BE7BE357F70AA574B925801792718F61D5
7DE5ACECFAE9F3CD33E155543275D8C75FFACE5693C35B2D84985090CA164DF0
AAE5DF997D626929C8091E2E9A6A644510454A0A41DEBAE7BF7A16F17D727283
FCFD9F1B3523CFC02DD50D55C0575EAF4EBEA0BABFBB26B1A463F3F2DC46DD4C
7847179BC0AB88D400A4A7DFA3D23431DE441E0D14ADD66C3B5C2E9F7BE3D10B
CC9C4334704C3D384379D34147F7D163AF3CB42599EF813C2F72E9C13ADF5D52
49AC0BAB1827E656AD6F74D8674FBE4057B8ED311C8DCA7E0867CF171A13599A
A744FBCAE61116B02A7E9D101D9C257B71EBC9912F1E40B1D64238195E5BFFEC
CC678323EA19DC6A3AE997EE55316BEBDD683978286133F03C778A1A810DCD86
9D660DC33865B7E7C25D1038F5B4891F92369E9379CE45F6CBE7E3178917EF86
CA0CAFD553AFE0EDF8A1D4878FBE6A8D6BD31793309E3DD72978383E95F08F5F
B761C4C8E01C2CE6F2AEE092FD0EE0CC91BA538D029C2A24630DDEEE06E70D21
4AA026EF39312CBE6F0B9A0F97A3A7C218C09F823AEC1C65AA548C78ACFC656C
1228B9B2F296281350C23CEE1D869C4B895052A0F2C1557DC315AC891C390C8A
1733C2DE844A1F915F7646730E278828CBF869D7E5E8AC6296D5821F1DFC9B51
2509C556F99D6D0A7E6D0F72BA8FBA57162992D850D1EF0DDB693AFE84246AB1
8279A2B24E5B50A2FF633180A191B5583768198AF9E8856D7DD159EC22E61916
8252FD3242FBA0351FE639313C561BB821C5577F7ABE90E8848566F026E25F35
08C48A8BB31377DE3B1B91161BC5ED3C19993C2158D476D0FE0765FBF3875512
DC9DFE07079343E86951833B158D4177AF55E933A02A9789369C26AB6F80F18D
018C0E385EC920FAD6BF4B52A6E5C64ECF9059EA2DDB07B40A9EE4443CAC95E1
C12DF3F5DA70D5014387B064500C857F06F90D95C79E5BA65FB1CF4CB7F6C1FD
5174F5EC78D1B2379918C8034B08588C4B773B077234ECED88FFA5ED8C04A377
5C1BFC366180B84A5E930A6CE175920C2EC7B3815B58F2A48BC4D4A1AB8C36B2
C37824D4C02333AB0F9A9DDD4B765D10F4EF859038563D676BFB63735B05E009
D2A6E67764EF34A8BC4AC34A940737DB745C0D8DD2F671D2A884B20F8C64B753
BC0DA94017AD381785FE9B32720E93FEE80FCA58A4A752A9B3B6C33B84EEE975
D1DE07002E86961D2048A927713588BB8FC5EEC5F9FAA81AD2E91846D59CBAB8
9268B6CB078368109A393E2C67B8E41D6377CFFC482CF19EB60D25A785F89BC7
561C5395FDC906160716A0ECF62C7E95EEE2ADBF8A716AED5903E916CB56CB43
A8AFC185DDD7EAFC7C40E503803E72AC1343EE49D70ECDD929CC095BC98810F4
3B9866180F9D58D0497793CD7F3D9AA5CA7EDBB00B60E26CAD17086C48CEA3FF
695D5FB54C945FD86ACA7C98EAE4E54EC58EB7B7A435663117E1D085848F0384
85EE701DFE15086D6492464AAAB6F90A6B8848DED6E8EC6A58365D7A62C2FDBD
0B7FB6D869AC042AF8B942265142A0B33145DB1F3C339A30E9D1DA8DE6733F04
3E86C3F7B277F2391B1EED111BB98B0A37D73794AEE4FB12D9EB4B069E3C6460
A7A1DFDFC053AB5BB384125E634C71F84A9BE9E92B7D3A40B4134415B874E52C
A7B18E275EB0CF680AFAC9DDE4F9B48568A1F76D7B9B81A2598C9422463D8B1D
450DC7E71CA5DE4E227B89B26ECEB21A1007D6F0600E6791BA1EC07C6CD73235
CDF73BB1572F7875CC54AE4EDF1087D5254167A218889C7CBBD7D11FFECA4C32
6D9D8B30A01DDE65747AFF58C1312A91C85AC54FC15D87D6F547E8537886E333
90360E9607D0489A7B4B371E43C63C3EB5FA1968717B1E3CB16B8EDF761B46A2
B7CC4F110FF3E578A210697A6DECC9F689C87497AC544402C80DC7D665E1DB96
647C9654D20BC7BC1A9AA6155BB0695CB857D7D18E788D2DF9753691F487200D
35A2988F74C13F38BA26ED7D36C34AC14C42BDABE7D4B28BEE5E71772C8921D6
9D11ACDDE095D43077D3B4352BBC0F0F89FE477C2413903A61E139B0D0A1F46C
B27C99EA0B4A4AE8F1ACECD1339A3FC0F865201B6D7976DF85558056EFDE8757
BD40D52FE71FB417926EE7E7D6A75A76CAD3C02792CB44A20B9E1C011671685B
BF0C8591BCE40406F89A721E6573680B7CBD772DC7C4CE787F438BE5307F0462
4DC1F0E05BCCD097059201A6464B8C49CF740734665C5887D21F219A295EA233
C465D3CB265CF381F02FBF83D19176AC10FC91325361347B21EBD48F301B04F4
6631626586FD77921C79F575F851A2221351B0C59C9F6CC71B257345C6CF339D
33335AA3C2E385C837EE253220A279F05876328864C9C22480F8403D485AB985
8152E3FA121F9BDD04B7EA8A00B2A4250BC326EFBE9E02C61D74DE137A8A0D6B
BAC6FD78F8550B7D19F73EEE205A47785EF3C453E6F77A08AE9F9555169164D6
F9F6B7C3C24258D58F35232088B67BBE9704595F52A799C9520C13DFDA4E1D95
A677CAFDA9B34F878D26AF2C70DDAF438047D9DA1E8AF5F4C16E56A0379EF0BA
4882A18B6602235F026F9D4CE871E5CC7EB30930F925BD95B3F8C1A49E900D44
1635184524E2C51E70624B2648506E87CD85E84C54E47C448AB0EECCCBC6EDBB
BCA57E4F424403B407AAF88101D7E9CC89CBAD30C8258CFC4DD9E2B7C8DF1C24
1030B68FBDBA63C29C3A6043D113BA33D7645CEDEFB9E2B4D16A0550D061EDBC
66BF5AD4483699548992C6522649274648B6D218EE5A941BEC640390C353F464
EAFB984ED9535EEF0550084F465DC433C0C5299769BF8A3C47EA80A353B71E82
D1A5312BEBED931F56CDC90C677070565126AD56CB4E65D9BB14B8EE9F60AE9F
E8C66DFDBDD5204D158278F67FC3DA55165B3B6BEA75570A5959C157C4DB5221
EEF186188ABB06947AEAD6D9670DD996AA9FE4D4268A3FDBF8F1AA40FA3859FD
9E1D5455234F366F8919BBA377177966FB9E3D0FB560095F56B93D56DF69CFA3
5151A3764BC6638873006940CFA204508108B0B89E8ED21757A638B2EBADDEA5
2E0210B9848E6FB91C81497FC1AA96D6B48174E7A48CCDE5BBCAB3731366C3B7
4072044D3EF2EBC1CA0FBD5C493F0DF9044517835C5A18B6EDACA49FE842BFC0
A0C000F74B2719B7DD018C9E8B3390BE0645A187A42676AC08A9BC2BB7783E87
F35E9752D76D9E7A10EC5047549A94C5E410F1CD89DDDB2D5CA8BE744B66F291
42260D0BB9427C07939EB5649DED6075ECFF58FBACC2E7A43260193FCAB6E40E
4859823D5532B40A2FEC7C78C03ACD274490520FEBE076B8FAACF504DA1030B5
A97339BBCF367151C840D11BF79397C17BE61B0803DE1A88EF6F375A8A64D248
8FD5562C307837ABBC42CE0AE98F7C3960A508FBD0C338ECAB53C74DC4E88380
3F2FB7FB3C9CC011519B3F4AAD5AC4DE679C5AACA4F9EEB15E13927AD464D631
41B1EDA0E6FFD1D82CE4D084352E97F093072451EC633967352C75105A122275
1EDFBB3E8B72927E96805A4660A5BA95D0E215CD8E4357259257698DDF1EA568
EC0EEEAC5B338AB82863AA355DE4B122317B61701B492F7075C9C6693914B9A8
F47F30452D5F272EDBE6C66B7D8E377DDB6A4594A569CB008CA30E8977819F62
C59F6D6BEEA9FF38C55FCDFCF9BF875507A06D7175D6798207FA3CE3BE935702
F8A3915CAD9206027739C4AA9D7D9D4CB1DBCF751C748A7ECE0F4FDCCA3F1B81
FE358C39ED703F7B55B6097E73553EED34DF8DA712C29D72EB360AB4E5ECB496
6369BA85B6E7733A5C7123CD22F3A9DF63E0D6B5706557B831934ABE6D113D7F
CC36B327983854C9EA86DA22AB40A3B3886A6C0542C01CAC664AD93060423C3F
372669CC5806C15153C70C0C11253D1463AC7F723D7F0CB707ABCCB23D597FE9
3D3F846475B9BD76DDFF2B9DAB14A41206C3350B9DFC1DEC1CA5710D4ECA1FB7
AC7E65D5A5D8C5FCFDB41707B035520A5DDF709C161E40A8A8AD8074AABD6A06
EA11E40F1F4F4D1D29510D2933E0819A4A0855E5AF6497F674F2BF93F11C9C89
55BE49E6E2C27C0E78D11D16AF8CFE9373FBF1A18B938E289D66EDD30965D997
D6FFF4DCE02D82496EBAC0315B46B7EBAF4D51258AD07F49A868C4FFC458419B
419A988692F0931B645389DD9EEFA606C7C16504FF6F86B68D6CA9C60D3A774A
C7448624EBE6A7D0067E3614933B60E1F257C77A72CD8C5D0C8A1AE705A62A18
A4DCA5086F73B47C98A95D9C33AC9AB81AF734CB3B071EB4C902EA68A34BEC8C
10EEC80002C330C81431E79A54453F8852CA9D2E0F4A930BEDB6F4CE046EE0A9
BB4FDF5EE3BB70E64EEDEF0CA24784A1DB7F945DA3C9310C96D5075878A91B20
D4919792C03CA93AFC986C34C0835953D357596E3A2D629461953F256D85FFA2
5FBAE4BF70F127C75F285A7C4D903A367CDCB74C56BF8356F948177AD52B17F6
059A1AFC17A51EA38AF85539833E865A51B52EBF294FE3CE1EF37AA659B04631
F2482F244C74A240C01E853272B9CFC744A71B4001F9CA02A6E5FE2C42ED13AC
D2549A8AE864481D4F76BB941B1832E3FDBFA3396AFBB9B9F62E3A3E951935FD
C18090714B60E3CC526700A4598A0C9C494449C69B415B8A30C5BCC1A675A61A
4F37D3E87D399B65090F5CDEF1325975357562C9DA6EC8AE6C99D80E14D8E02C
1D3C4CD54DCCA57CA4B536D73DAAC2B681D7A60153CE19AB3CE48BB89C85B9B0
B5F1022A4BF938AF76A97EDD40B7F6F9D15E91CCF9B8BF580801EE2009B8B1BB
2CBC48AC2F425E8150E0A2C21389191114A3F53E9A4C8A796E104EC899AC0F12
E39360C3DA5116533BAE1B750318362BF85D9A4FED0550257AA1E0DF26F58D77
1229C2A3A491455426500E410A707C19DD693C2DEF0AADA7436FB16103C8E0D0
D3F83D6DA3CCAF5F4DA7743A09AFECA6DC807448B48C85E46121022676DE4323
899C637CC86D15F14C4B08FC9AAF420CCF17FA4F0CA9A2241619C4B2F00E32C6
03FC2A137FC9C4BCBE092E42E39BE9FA1A286BCEB88A48580C77D110B7E2923E
9327FB8671DC9F1B6ECB2EC7EE483531E3DF9F068C8B7166683E6CCC89ACF2A1
AAE288A1D14C5ECC532CF995570823CC7EFD6A611546F46D5A6913E417A0DE93
0D3B35F6F183E9E4A1C21B4493D5FC5C120441981FCF9234D2423C9602E7D957
655B6F7F726247E6CABCC252CE308897EEBCBDA4B00A67B27F14BBEEB319BE15
3EE35DB499AA42EA63623AC4C9762BE727C5FB5ECD6C907F7732B40A1CB08B79
30951C7BBC506AAA131029938231AB7538ECADDABC9CF8543DF5A7D4A7A30C14
8B9CC15E62D2CFF2A335D8E21B798E273C3D9513FB280FBCAA3D76C1B4009054
04D2C84B65D68CFF6687283DF95B90E87824B0C75BF51884C64B9B18980E245F
BF17974E39C2D425B97A7E3900868F251EED24C104D34F5A12FA3404ABE38A1D
3BE1DFEEFDC66B7C1307A91DA8FE1D33F294480D833CC54309BB9AA821E4D7B1
E3EA394B6DFDF31F424C284666618280B96267ADCABD02AD41265563A50BC6AA
068DAAE3376E945B9547291060D523D9CB35856C9BA1A3EA6726C0EA098AFC7D
08665A7EBBFD4367C74A099EDC289F5294F9FADB9D2EABCE4AC536782872F0A9
42546833BB567DEE744CEE5C7674A356A7ECDA4A6BB6727EAE5E646178568B0A
88CFCA243C9DBEBD21921CE498A2289C43A10D5C2F624E9D89BC11C4C91B4E05
DAA501530D52B6873996D75F57B63FA3CF732F443D1B308AEF755A19C86E198B
B309E21E7B779EA2B50ACBC952B39BEB69A34A8AA8C76CA998B1F660EE1CE629
FBE9DAFE109ECEABDA4C0C05613D4B53A42010702CCB30EDC4DED8BCE87EF16E
69A1247136A1162DEDFD716F873F6AD9A3AE11C6BA89FEEA1B165541DCE123F2
88B664BD4966AE41A167B1412FEA6C31EED41FB0CA11763C15109324E1B4ADD8
57E119803F93CDD41D3EDAE113E0822D99B61EA811B43B6DDDB5257674539666
6A0B50B656725A4EAC934945ADEA6D265ABC41E0FE0599670489E13185A4ABFD
BB4E9A9E71528E3C011256250383F212ECBEA0EE2581CD3C50588F22DEF85A60
98A3E5E82DE9DDAF337E042778DE0E8FCFA5EF132BA97FA5D67E7CD7DAC27026
35F7D6F9F0909FC1B029E55242E2E342353DC4A2D82BFAAB3EB069391C3512BB
941F7C8C5F57DF6D60240D9DC4F6F65B2DD52B2EF9CEC51C57333D12B1B876FB
614BCF3D81DF91484408D4FD5BE2D5378D22F2563C97ACB630596BFE41424A8B
BC22F67D46FE2699C6890B74245F4B8E35199FE4F4F9F271CD3E84BCD4E45C14
55
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58D648860A2C26A05
6498B7555DABF92B298EFA1344A2C5487F80442D8E6D4A3023139FAC780E9F5B
712394804BD39D2348F61E0B528F4873256714D01012B77A5E56B1C92DC7FC0F
ADFC71C5F898C408273388E448AA4D9519F85B14ACC1D796F99D4B3778E50274
F69BB81ABA1EEC1B49E0472E92EE0653382141E523A585E7CC5B063C4643CC84
4A757BEDCD054DE680D23B992D7F754479CD369719297616419BBC9881BB6CE7
6FAFC31BD5EC1A698AFBEE2418D5B8CA978D6AC89C5D7D115D20015326BBB45A
5A1E5C98CB559929FD0D5E8A13520FA7BDB2C711E3BBAF7CB7E7ED91CB43236F
BCC50D20C11C6929C93AAA213F8B058DC741C12B1EC9BF6BFB6BC306585A1667
7E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E69DE0F04859B03FCEDCC765058
76A049DA9D644D232C7B91334762A700EE46CCFF0F8222069A239E9C090F9CC7
AEF418EF47ACD1255068A21969742C55D97F1EF3AE7EEFF90937C6FB7A0C27C5
6B44B37C97E610E7DEF4545EBC55591235C56A4CA40CB555A4BA1A2E780FD5BD
796ABA334160229587F4DC11F6EC986B036C55794A4DC92BF186068C71B851A7
F85B6333C19C91E6C9EAA9292428B9368284EDCDE7B6926FA86E4866511AF195
CF03E794D87502CD2BA63EAA5B1F9282216AAD543641E0F8A3E7314914C30754
9274C1929A4B7367C259A83EA0D92DF798FE51658E2648D8CEFB68D0B28B3B0E
1CFA30BAF3D8E649F28EA66D111E69BDE1C7C95D376D2C48FFEA0D825AA3CE8F
F2CDEAA920024C50D65665E065DADBF514DA09934CD93AFE8100037709DDE2E7
2E16C80CC9C0E7940FFA97F2BAAE7A9AE52B2BC3CFD181277D371765E3F5FE73
B7D1E30EEA5D377D3EC454B9E8E4E4B7897387234F730A1D2D567540E1F13D80
1C5535585729C06A53A8E6819D45D752A50B02C5AA368E0EA45AE3A0C9A76C32
0DDC3352FE0F2EBBB1972248F0E4BB8AE3948A408FAA0CB73C6CF5E6C128A31D
BF93F0566A59DF25AD24664C9C831F84B02AEC078CCEEB604BF5F39840266A3E
CAF4B9AEB821FCF47ED1D902DF005570FA47070FC79D841478CADE0EE48913BB
0C4CB09F2124ED1AD4B59F7861A8B9F4BC91A9DFC03C3F55166FC377E829EB5F
F4891F388983E560AE31E321A14D78E952EEED8A2021B8258A37008484F27750
EAEAE17A63DC636EE6CEAE50A934221765FE0CC6A3A745FEB2C1986547967107
503C32955BC90EE29DEB37DDF577BFA71B8A651C05E1D55C8CC5658531DF6FE3
FF0E539F1DD25B1C97541EFE4F5C2067E4206F8D4F3AF4B2C7D95E63DA3C2B2F
3F09AB7709626F52CC421949017016918F0AB2DB82DAB2FCE4B01FDE418380A1
6AEF2B0C50CAB47B186DEBAF6E9A2C69F153AE233488B2D41B812A11DD57D1B0
02B45B933534C0B4C51DDC50BE37BB6E42B8FCB00F6AE8FA7C6A8DFEF294B426
8517F1857924960FCF6A048C8AEAE9C9724A170FAC6BCF6A85AA31C1BE8F832F
7BA209A0A5D865E3A32F47B1EE818B18C981A546A36DFDA767967A43B3D1F3FC
4F591BFE0EA1D77FB7872B90950DE333A444BE5476340C4F274EF8D4394BDD17
AA5505268CA9DF32C3DAB7A37106D82ACF5DD9316A8E0CE4F32521B65F83F152
87234F09C3FBD9CE265B6A223D0ED3DA70C143CA4F4B21EBDB9E1DCACC031B2C
AF4126501FB9071E10C2DA4065A3082F0725C2E0322AD914573DD12540F02C2D
847365CB105542F9B02CEB5178A3F3C2F9D266CD2DF15E9CC37C64310B4681C5
8D18345EE64DC11A1319A075FF8711FFFC1662493942C21F78C831ADAF4E4061
1505FAEE80170CEA28F54B643A9BBE064D3B9237193F2BA024F5AB99E8207FFD
ABC084BCDFC2A202F15B5E590EE4CE5A27A0AA6E874293E89DC1292F3A57FD6F
3A111ECF2D6A40C4A95AA66BE98967F52A855DB02C498F136AEEDCF7E1E1A36E
82BCB10E5E51B131A7CE8E5023FAE9BBE4AC0AD95EBAE53E28EDB2678C3E34B4
13BFC96005A1999A95B5B8A42DE5BB1384878378F1C62D1E60A63F3A1388DF56
F8DF2224597766D01BD59A88FF2ACB9624AEB7824D5B0AE928DA1E4073F2400F
AD5466C50E41E94B66B5CE1ED0AD1ED3B185D5177C13CEFCD66025CFCA26CA60
70F3F138947E9552402C310FD42E81E47337DCAA2F7C8594264A6EA23E30B3AD
C0F3919739DB56F4522D02299507F5DF31CA0AF4D5443894775B2DF1F871924C
E2C0479EA8C8C337504ABBDA175BC6EE3758754FD6C8FD4018889D8E86926DBD
586A0FFF6BD2983A840B68D656FC15842D694DFE6AE0B5F37A43352667CAD340
C0D42D850BD31A8B4C79D08FD7B68352CACCA2D75D486446E7369DE48716A15C
1DB4324935F474EDCB620ADD71ABF4845AF9933A5AF485AFF1AB405004CA0DED
FF110AD9468A0E4A0820F81AC3AEBEB0996DEEE69DC68C138FB4F7E2F3EC19E4
7AE9E2B9BCE3ABE6EC68FFE98B8597A648022ABC49F5FDFCA8BE38549AE53F72
B85A6F03B58AEAC876572FE440D7EDC6EBCD2AF0D56D5CB3D90AE897FA3095FE
A499DC328054BF07CD1CA1159872E9A32735940BD3AD8C75262EF6C5B60BD81D
2770945D3D676612C77A23C8C3364DAD8E407319772C9B201C49BE3E38E08060
DB989AF3F538CF0D5D1234E2DB9A16B6B263605242F5BCBA9C0E5A09B0AB344A
F757886F30FB3AC53A51C4843802081696785BF15D76F545786E9E8871D12531
7E14B83714D18F84E5C4E50BC74E4F1E3D24763E96F2C385B9F9C34E0382F02E
B8C8BF921CD3914D1C0CAF2F2A8C3E8248880242AE015219D75E3C858A28BF72
B6F0779DFCCA2EC7F97C2795CC16E2C18E3A112F342B108DA6FBFDB214B31347
11BCDA381676C3926651F5B3F8666E369D50682A921BA05409A9AA8B6E77856A
3C6A7B37B39E92BBA5C42182D98EA16770B47D01CEA50E0D6555854323FE0032
0EE30A24BB155265E2EA7402BF17ECD71219A16E5A1B19A5CBCC9086AB4D09E3
59B41CF74AED5B75C01085EAAD720C96BA9839BB9028425F71EF541587018C30
EDF9198F1887BB13D0DC1902B31D1DC2CF9C9DF2B07BBE67E7D564D63141B1ED
A0E6FFD1D82CE4D084352E97F09699AA642FCAEB99606BC079F3230443D11313
D6EBB931956615A4CEBCCB7E1BDCE1C7CD54907F2ED4CB1E9D602AB9746BDC1B
A4A84F7B70846E33CE5F285F32FC4E501636113B251001F008DE01DF02DAEDAE
3EE92816034793A280F073E6670E32EFDF47A249652E266DFE7348AA4396CE93
D5063F7D87E6F759A29F32ADBF5D37B697E2B01DE1E902D53E24B71DD4F1CC13
482C48FD1456BB3B63DA7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC010ED
5F06D14E4FB96F0F69193E868789380DC127C1A51D2CD81565EF1E13AA97507A
9841FE083B062CCDDB60B9A1C3E0FE565DDBD45AE467A782725D8B3E30CF0797
DF9A714165D136FC4F83699DEB28DC0008736A49D1FAA25CAA28B66BCCFC7855
461372B4CF5400F4B7BCF0DDE934373E145F340A6E7770D5A0915D4862F8867C
39DF1B394D2BB66A287D2BA92A6C662858584EBFBA53E8DDEFCD80DDD97C3713
D2D2751EBCDB6B4D935084759EDBCB44ABA49269C8F547DCD6E7B147D53DB0D8
DB88F2B4490016C23FDB7EEA6972691E6770B37A0E467B8708B0056727A640F6
E8A33CC915D2F836ECCCE234C13F17FB03853F28E77309B1D0E6185370CF1261
BD2325B000A6AF469200E5F7A3C35D2DAC2AD31A4A8FE8112B67C5D286DB3EF5
94D6D04687B8DA91E8858B8E533CDCA7E454973BA1235728AF9156CBD143BA26
2279BFFF61E504C08C38F06CF72D76D460EF34B60223FC6170F5DD66C1444DA6
D26976D77A35534B6390EDC2DCCDFC038A7C57FF6B6F5C882CDB6A03A7921BB9
F85B93AC64F9C82C455E037A4DEA33C89BE01AA3AFE8B3CBAB88C535BD22357F
9B16487A929DEFCF0103834714C42B1C0B53164C8FE73C9C77520327CCB89B0E
B07AE1EC07FD93D19F9C0A6B2B12B071BB90419EFA4512B1227E6D1174CC7D3D
57B60C9DF22A1434E7D661083C7F8D02F91CCD580EA19FC753FF3B8C81C618B4
7F60FA4ABE5032B7ABE1136C4AEB513AB5F50DCAD816D501A60C51FB1F38771C
27251A57EBFCAECEE3E2A12AA6B6DC66B2B18F6D030844DFDAE96D588C704EAB
A8A055F8A2E33E28344A7A9EC8F2CD1865F8FE99AD7ADAD0922C1BEAAAD9B337
968A02FCA013241B4D42210504E4254BC7510C4BDFDF53EB3D5F54D35F685E74
E502EA63AC05DEF56481C0395E893486EEFAEB6226F2D6775F15948A9D4DC82D
6F60D7DC6F7146540053F4B84AF763EECCA28D26DCDDEBA956D677C9E906B80D
0C908B6A3308B89B8E77CAA452289A98F10329E0F6661A5D69B3A9B39695AC4C
95D2B8073B0700F3CF51B4D76FCBF266295BE92A624BCE6EE9EEF09589FEAD41
4B7358C0256872F31FF228D50C61A38FD38C134DE8C2FBD4D94ADD48BCAF6733
5C61B7F2B2B654C70F5370E255761089559C972F241B85C3465B3C551DA08889
24FE68EAA0080CF4DFCACEE5513EAF3E903BAB38790E8729785643D17BB03343
2F3E62939E834B48B4D7F9A1ECD0120BCE1EE6302C0AC1C7CA421B81B6DDFEA5
6902F01DB81F7AD4C4556A6C66B986A873AFB901376427AC06A1EF338ECB6383
C6EBBFB2B61FE04B0B13B26BFA8A80D5650D815BC8AB200BFF20B2977882BF47
9DCAE546EF6551176B9A7E900D060011EA3A3DCB102E369C03C964E135A81A4A
96CFBDEFF4DE11AB022E33B2765DF15FC2A853F595DE7334E31E8BAEF4799FF6
8EDBBA8148EA7FE288BAE5898638982FF191687F723B02A05EA5F95D79F4447D
B12628C0F838AD7ED830886303207DF666D3E2E369E4D47ECED72963406AB794
26A14A17B3118E50A9D983FC7CC1EE9EB90AA437D14EA2377CFD4893E36CE80C
B6F9DB98327322342EEFC4AB610AAC8F27F0CB185D054422107B077BAC69AA8D
C1EC35AF2C3E12674A53B3A5554EA4B18CCFDE020B76AF50EFF43A273D7BD0EC
942FDC0F4BCE2FCAD37FC498AD7D881491C1D06444915B1694367AF88E699F74
37339478BE40C39D57DD280BEF8C3DC6FA34E9CDD920B0F7E2C38F138EE0922F
BDD3D7BC6E31AACF67DDE0217905ED11DF349F54153281472BA8FC18BDA7E4AE
474B2BCDB5FC24A7087B8D7CF10A370661D3203C86D3D32879A5F548ECF75B98
07C8A60296C2418A32FEA362D83933ACA7B1AE394824C03E2B60F67B07F837CB
3303A57193A074A75CD8BB734D2D090457DD2014C50B246A7DC70C99B7DBFADA
1E01B81749EE49A70F3841D9F4437F9AFEBA80E85A7302FFC4B5D0A21DD0C5C0
5D82EBEC804D15C0FEF51E81E63603AB1E9281C6109145BDF78DA02134990233
2707106BBB5D307960EC8264AEFB56A44965744053106BD5B5E99175BBC27E42
14EEC211161F1E96FAF30510796F922E69F5EA83BF870D345327A582968548D1
C5648CBE6BA93CEA0DE409F9A545C3287761E54228CC345D7C5AD72C7EB3C42A
A354022B2595A07CBF1BD05B68870AA4FE5CEAEFF2DCF0078332084E34C49210
5344559784EDCABE56305EF1BEE14C78D1107EBD32D2B3818E7FA41C0527DE43
6726C968CB7177A203D53DC8B5A858574BFE1E1A7B100DFE9725026694310E4C
81D9D739DF88C655165C148CA55C7A1E2EB9AC33218BCA18B0B8D728F5EB7AB0
D7C7210B0254209709127509854D16573B1A35137947B8D1D0BDC602B0A16D55
0B6CE0190281BA4CEBF16ACFA4FD94730CD97B18366C6192D003985BAB6E49DA
96211DF7CA971E36C849446C77F005D897D944251600E7A6B304DD76E08DDAF5
58FABD99D3015F6D8CCCF97174ABCF4EBF0228321EAEFB90C37D73638049850A
D019D2BFC45ADBA04637EFCBAAAA8A72683C54B45F81F355D9D19496D0F80477
B51B9B9877E7AB494E1AA44C47A3C883DEFDE65E02AA6E2C1D7FA918D72051DB
6CFBA44520B5B5689C875412D210DCBF1EB1C95BBFFA540EE5710E884911F452
C33B54F20DA0A9318C09C86A3CB60F8FF548AF36F41E219BCE7F18B0337447EE
38A02F76C2350AE180C2CE885D84F4D18B976210456F13FCD152FF9102718D0F
C57EC5B1B1485DE99814AD4A0798392364FE0BEFFF89A5599AA782354983D415
861028AADD851711FBFACD0470F350D9D227A5FB5B497F4632B1E1826CFE0467
96B89912BCD080A523A7B79DE04D5E3E9E29E2C6B2A27D0F7DE207770D439E52
D42C8B3806FA06180F1EFF5CEA5ACE58B452EB3620F58FFF4C5A60CCF5DD51CC
3DCE518DD210DB1E8D7A624A37B48C6DAFB92FC1F21A4EC7894E2A0D724C3F61
5F6B7EA884C1A171A7280E8FF4AC0D4C8A2199EFA8517B8C2E43E8716526220C
E629452D507C04521B40E2F0C4CB23306030744F3CBDFCC6BC3388641BCD7334
202357494F739C8C730BD62FE336E47CC8CA845F90A7341EBF10B71D8253E6F8
FA7AC8DD1F4DA7BB92EE841F520CDA6E9E32F903296B80F87B179719D6338755
9497E6D1CE847D45300282249B72ECEB7969E7C8D0538240EE7CEE083BD1CE64
1C8300C59704605BC49BA3C89C2AA19CC20F76FD420E7D6384152DF0CDEFD087
BAFFC6C93AF8FE338E70387B4F1BA2119C97F4733659F7942BD75F3D839477B4
EFD118CAAF66882758648D18517C9EBCAF62677E87399AB9DDA66D726EB07DA7
230653A5A96AC2CF1C5C0A71AB7E9A77A1671EE7D22F08424BAD2A76790BBB18
E9A73A3AC40F568487AF4A9A9C7DF8232322B09B2380C063A52D3CECC51DE9CD
71C657B199A800BBA9D7715DFC217D2B3A1FE9844CBA467A7CA919EB41D7E8BC
0BD4D3EA61170F94D3DF372F5698F8F36DB986C6C618AA75E527C04ED4016B8B
573BCC3B2FA7E676945E56923350BBAC0CF7CE13F17B3C048B898E7B9FD865F6
ACEBEE0048A023AF77116B70EAC3684F5FAFA68FDD22AD422869E28828137C70
6B0CC3E51C002C5FF185A72F8B21D6486CD41A80EC051E875DFC7859542BA952
A714D454416CB94A007509B3DEE24F99E9B2877B4D05F3AB9FE13C64C2287FF3
E9D5D12E3A2AE94355A2170325114C5985EED0B4F03E7872206B3DC4382D8860
9728B4DAB8CAC5EBDC7F940047AD1108ACEBBA1564A034FF2F3B60508154B089
81B62A2E9974E37699E431A9B3E3471C609BFFD6A27A96351DC61E31ABD7C655
BA5E53124F7FC666801C182AF99D4A8A3DEAE18E6D6DC105623C29DD9D16904A
62D35521EC38382AE500A61FCE8D612125A9132BBE333BF49BE67A05EF66329D
204C9A33DBCA5087D9E044FAEE66BA2446568997D1B64BE9282348E3069139B4
14FB4171EA645516FDB1ED0186D0B0D95FF70261749C498DA498FCBE33353764
3482346BCD751AC2AD65E979A31E979859ACBC25317F23C7C0DA714AD9D987DE
A45368072750CAD0C9ABC3F4923723A0CCC2D98CFA8E2EA9517AC5FF1A9E33AD
5279557411E0F7E6160CC2B113F5C9F44CFB38976D7D00609C36ABD1DF64C6AE
6FBCFBD9E9879DE2E51C85B3597B7E6E0D92F2C3B62AEF7077B8FA5B0B126BB8
7FF3DF515ADF3D241CB9D6C81C4D965F85EA14F4839C4D3ADAFAD4EDED5CD771
D0452943086457A0A9E830C0658485CA60FC2621D7082423D46EB801F8502449
684418493C3E014E1F6AA466F61345D046731E6DA80678EC9916BB64EF2B241D
783908AD56EECF4C09B41756481D7AF31066A1F0C47653783A51198028FF2C46
980F42821A0BC9D23F0242AA2C6DD59F4CB5511FBAE3C48B1B02C98798499DB4
76B5B41D4821DD03215A441D04F7C6F42E0BDB28F36F00955C1F1B0F125261DA
0D2F7312CE5B3F3A1DF65DD5455F539B3EB6425D06959A7011DAAED3FA80BF13
0776D5B1969AED96B7999229531B651E4C98B0BD07C1AA836460C3DF99FD8A37
EFDA8A3CCF56AD9EE9F5DC02440C00A2A06E998BC239F96D24325048BACC9ABD
A9206E3DA37E5F142C781072CFAF2D3371632319B253DBB329415C99D1F14379
5E2A0F0A30C13DF094D14F4872A439CC85576DC46136E789DFBB551AE2C28389
82303318BA6F1A5401AB2ABD3C25D5C9A2FA8C392A82F8DC836C8AFEE9C9D6BE
A0F10C0E78AEEF5C198B41FF65262A326E23437A72FED312680E7155F6CD439A
A96488958D2808FACE11273AEB78CCE20956F1F48D71825B795DCE25480A49C7
0D16F721EE8768AF0C5A6E66411D4612096425933BB94B7B4387ABEAB4935BD5
7F48DFDF2E1D79D468A8974B43A4D5ADA81C5EC47F92F95E3333FA6D055226A9
58D75A0A63D485FCC987A796F51CCB0F6C7F85853F17DDCE552712BD7DAFDE8A
CA844DD34A2EC1F5C5C77453535F3CED5BD186A7EEDA89531BB7870689AFA703
C1420E2A18B1EF60A4D042BB742B4C08754D9F00C2C9FE5B9C43CB0B9D921B4A
6980F6B22FE3C7B7CF6357CCA868737C58E5E0A5E1340670398319FEA4E9FF01
B22C0BAD4AF95C85DAB7A4BF4D13E49C8348AA90CBDC3D262B9FA9C0EAFC795E
E82FEC8FEA7C675B171F8128ACF24D34093FC721D2AB878551E230E37FE21382
B89450EF7B02AA325DC5A5B0D8ADB5563588D38C1151A012779EA95F6F1D8C29
68A3E83FC00043F27F1E73B67016A5054B29B3A0400380EA3BA460046252E2CE
AA182531481CAA126483CD370CE208AAC25A0E32F30EADF2050B71A79E27563B
DD4FBD95600E6C1AA3D680E83A730A4642CE4F87E46CCA80C618C1814F112E44
5F32C0970817BC4051479AF259E0895B44F511485B30A84709054F39D5251737
5B943E33FD627F1A45160CD3D048416BA31CC103BC3FCC24FB8371A04B262492
5CBEE7787D68CABBE011703744D8AD0BAFCF511263B3A79824A37390769F2EDD
568BE8045467FC5DA356DFF298F0E2BF9E46CBE6493F708D6BB8FE78D5C3354C
17511541D364CA8C1F2723231562151679BF791A6809164532D7CE3126709FF0
83B86840C3A9B27F2B44615B72C93110F53373C50E14657ED32A3833C87D3DA3
F5DB311E5672052E05C3A5CCB847F0663D9582AA6642773A62555FD57DCF1448
BEC02304B79469A72A3CC8C866B77F225EB04390858BFF70300B09A590091679
3412AEDD15191DDD1B6A3FCCE3EBB841B07B83627A20855A6BEFC921B4896D04
E61B913B6C4175C1CF0C09C86486F508AE91D36AB08E7214960AC4ED7666DEE0
302A3F923AEC792F34C5A9EE4A2883849E7CCA7D5FD80F35173EB83FD223EC7B
62C2AA656388145B7FEF555BCB1430713B988916487ACE0AAF272EAB35BE27FF
B45D0CC6E61277E23AE3D35A9206DB8F5959CDBAE2D0BBDFC8720511E9754F3D
3E68B5D7652489FAE2DBDDE5A18D23AB92E8A97C2CE2BCD216B45A7F12D8A7E2
D22809FD8FBEDD5EC891750D70F99C2645865C0356D3C5E1B156EB62E04FEA0A
55503F88BFDF011436D9D508891EDAB3B22BFF3FA494F5FBFA38486197A1CED5
292DB6B8E49D4469DC7E5A9141AD2C56C395D1B1542BDDF61B5A54BB13725B28
DE3AD77F1D2FD848EE14B51B2D985FA01E005DAF108ED84B38AE432E26D07AEA
271F903D7BCEECDB602A670CA6E94C8BCCF83DB0AC7B39632F0D44030F7584C7
1AFECE41946AE57589E52A9DAB9B4C13315F71C74E886762140314F3F2106069
D58578B215A96116C1F8FFD925675379569A1DB1723E07A385333CEAE7D0E18E
DC00A8415D70BD5463DC64D0B5DA5324939592A8CF830DEC524749A6C5C0F205
71C577ED03D63028C0AE37575A71EBB8954C3A90EEC264E6115950FC91D0DE9A
5D8E2E18762F7C3094CCD0E1DD07EFAFB9C0229B52E8C4381F8AA02414C2FF62
583D166455F7821A44C27B70F2C85EA632F544082BBDC9B77C55B4D4E68066D9
BD4156E9478D3251ACCC0EA722FC9DCF37794E7186404BB358D7E5031793A4E7
0219B6569340B59671BD93C1554B4F6421A437931A2EBD816C7AC81F42E9372D
E5AF66525EBA8965CF383F4F4AE6DA98D1611D05E59ED9BE07F63A4957485E52
C2815090CA3B1221A12F749E5C419161FC98D9B711D0DBFDE94205CA706005B3
B61C2C80341A9852E7F1E520E0F0F50C287A850CB8F474F37399F5CF0FFD880E
519D305B0313F71DCAE5B69DF9551D56E6DAA3D4B800D58CFC32379D202E9FE8
70D53EC343C11E633D4D471A4D7A6449D75188F3F600D5FE70576EA4213A5455
39CB2A58832AA92DA5F34F197E3EFBF17115F9A60F56F78D26B63043DA049792
55F46F985FB09548A5AF1AFEFFD5E8FC133B2DD91215E75E596E08D144D0801B
855207E8C79FE8C1E98BACBDDB68AF7CCF8E9071B7400D28CDCB4D31C8E5E6DB
585C2DD28B5C0305C968BF0DEA21415D8D35C6D0A1B3322114B056BD56EDF5FA
00BD071446DB6AC8045322CC1A97A9B09A310929427179385ABB10BAF0E8A484
D4D688683ED2B878504A44F08E943886E184BC32D3AEC992B620A98338F962CD
1669D18AC1550B19A610AC87D4D4B0A80797BE2BC7CA32B4541A0AED2F504EA1
F92B4D96DB412E5FDDF6355DBCCFF589C204206DDBDEE99048E6D8D3238AB7B1
66C4CD509A9C5A8B4911B8C82EA079623BA19E2CD19ACC174A587AC54A1344E4
14D0D88A66D6B4F56BEB9360478E29A020E377AC092A285AF9574D6391C93B97
13965E239269385ADD16BA311C9236501F2717DDAB52753B36705655AD44733D
2E25CD1E5BB0CD6685444271EA2BF01587CE8C9EC15E2A4FE2658D8835158A2B
E0E39E2553001E8333DA228AA2169A24F246F586326169BCD4B8508F98E9A4BD
BBA40702199AAF7F906A361BDAD5F0C921B6F044348C7853FB4FBAEB6078B410
935DF7D6D5064271899314F198A26AFBBBA1E86D352FF8A9BC757F9DD3565AC9
CBA3B272499B916012CECABF4989E9508EC480AD837EEC61E1635A6261D204B3
F0A74072A491F62A09D70000B1C715C36D91336AE0304148313B27E1641665CD
C62F480030A6745372290334969E9320AF8E7330A29CFEA10FB6367627ED3AD4
456E3A67BF5BB49920F6FE6620D69F58BA165C38AA49D69F2E0D329684551C90
12158313A8230985FC5EECBE80F4F0307AC6A1696E4EF84A749920A0F64992BE
D1A2323DAB45601994C67F6A07F238E7B098D636AE141331BE35D1D5308C927B
A3940B773F20E48EB70C8A5BED21A826EC20AC4384A8CFF8CECF07A5913189E5
4F54A88EFD2D990D55E3781E25465E34B0E51938AC3ECD62EBE43B473FEC1F76
DA6C55089AF3D95E3B850DE236D848BF0FCAB713EDBFE54E4BA5BA08543D80BF
EDEEF34B2C0D9BA404F1298C27D6C69CDD6E0F3F6DBD68716A5D86A42D4AC9B5
4C9D41E0DCB52E647555DB7172CB031B993103C259CF4C774C9505F9C992FEA3
471A971C242D395273D98D7A005395D8821E2A6B0A654C878C6FDF951D8F9ECE
F97273B7554C01E052854856272A3680A51EC039AF5DA58C53421D968C241C48
6AEFA942F68F6E8615BCD0E6CFFE077688C365888921E4560AACCC98CE06A8F0
9FE0D3E9AB19869F677B7E8B05981B519B5CE4E5D6AA1C6F813D68C3D0E18DEC
5682F646080A54225C2920E3BCEE9D09CA5C60F22B07F24A26DD84B9FB085ED3
41B449BAABADC34F4B6DBCBF48F54C949EFA278B3398FBBD0D4765CAD178A6F9
3C5217BD2547756D5A915EE69CDE1336040C536CCFF439BC8E43553D813DC1A9
B63695100CBFC23DA2F68B499386161B4BD1F94F022EDC64B06481A32733AD83
4B294F36E3BE132254C3B0A8DA1B30A710FDA8E19C96C0CF4B8DD9CE727EBBB4
FD0C1D5E62A860C77CDFC3849E58F278AF879D60E59EF98DE172104A59134C57
CD5CD0305BBF875D7087C38B676764F90484747EB6E236A366D8046477D04EBE
56E5F7EB5DEADE51BF7B714B972DCBF7D9C11B71CBDF3E2B0FEF648E977D3EC9
2D101BC75248B957A4A5B851435BDD511017E77DE30E4887C0E7B8F2A0D884F8
C09A5A6A8572B933865552B6B9F998FF85298CBBAC78BBA0A3D3FA6680A7C734
917A00C16F249A333A1F83E14DFB06C6292C65BE92FC109B2B38EF8C02F86120
E587F7F3E5E0860AAC284813B298DD1D7EF648B69F693C23EA484E50B737A121
5CD4D151B6435DA8D43A7D14F9806D2710B94EF62DC6AC474AC2F11808940D6E
9AFAA51EF6C23C32E9741DC2B9D578DAF502D940AEA08876BE071C01DD020E92
4DB6ABD954BFF51D758526655FA1A05A37C9CD769CAEA7484F17687D2F3900B9
524B578BCF2CA6C2E48A488A5EEBF43CA37A12B2E1CD2F18F2D5563CFAC92826
22CD698615EF49518B3ECB53EC320AAD6CECD064FBCA7B5F67BEECF4995DC35D
4691A78401D7453549879D9B14A6C73F8BD7A245A6DD826398954FBD5E7ABCC7
7B6ACC91D84775A03BD1F7B9955547F2B0BBA26006FD4C1AF44052F09F53B087
A3E5284B1C41859808C27C7DFF5ACB2AF407F6AAD2DE8B745EA3CF0414890044
719DE582F2E79B9BD4C929C8A03801A388315DE6EEBCAC80D4830C86A6D07647
3DA09D5EB6334E81FD2B536C53C1E6FF2C97ACABC52E9DB146BAA3A8A02B7C53
0BED308AC8702F80A9DE69E7B499C26BAEF2BAA95ED2BB89444613EF37B7A971
4834A884A4957B1168D1E1F46742DC29BB4F0E6D0A81386816EAF7CBD2677FCD
108F4166A65971EF3C4EB86B99949ECB190D3C92B459F86E2DF7096A631712F5
0EFF6DEC3B15060C553536AFA1AB550740F7286EC7CF1CAE3ED55EEF399CA17B
715C8A6DA4099DE692F23664DC71629D041E4669A05B6754EE7CE90EE8C3B030
2A0A8E141775ED7DA74734480B48D114719BD5B3596576BA928FF7D401437FAA
45A7875DE9FBE63BEFFEC23FB701CDD3C429BD4CC3F96584C065FAFEA3EEC98A
13787627BFCAD617463B1D8D5CB6770DBDDFD8C0EC2F403A5ABB10BAF0E8A484
D4D688683ED2B878504A44F089AECB8E941B1E7F573D8C0964194509C21E8560
0DCB77A933C1FFD3D1EF05061D80B5E3C87AC8A76D16591A313198D01BAE3BB5
6977F0E8D21158CD18F6523CF7B633C9D7DB81CFEC33DD7CE3D15A87D1A6367C
AEA1CC29DE4D3EBF8B5872580E379881BE02909D7E57B80AD9F00C6CF69E057B
1A71343DACC41CBCDC0E30F2E76DCB7724F4917A6F436B823B1A2FD914DDADEF
B5C5CA3A43E344994199A75DB103C3AE71702350D62048D1958D36E17019B49B
4770CEFB37B0EED373279A334CF98A4F749DB6B9EF49617809FB8B2F24322AB3
10F16A60F884A5889DE0D4695F0AD014E72156DDE45CAD34F29913BBF4ECFD83
ADAE0F66B2652B9E71D3AF022B675E9A48B8C3E765FD671669E0D271F30024C0
488C71FB30791F330A89AB1CD2ED6390ABE1CBB68FA80D3BE4430E9C9FFF5747
D196541BE96D98F0401D2545E9FACD008B4ADB50EB9F0238514DD6544595D1EA
952901FDD537C1B1EF54E133B020E19F93C37C5FC2502E459B18ED19CF7AABFC
7D45935CCA74EEE28CFA47054DC41A389203BFB3D601BC9A44CD13069FC4A80C
E9AAE79F064761AEBB2558EF18E945F06E37B435FF635B80BCC4B4912AC3076B
863D865D83AAD62E2B5202ADE986B4B00DFF04207C0D5E50634A4E01A6DBAC88
BF012B53F8D3262E9BA4F370699C8678DE73D14D8911F60949C075630D5E2991
2CD7E6362E52891A80DC3A55C75248E4DB744F6E0C54E83C14066C3446C36E7B
69063847180B6DCA83EB97A55FFB23788271A49C53225C2920E3BCEE9D09CA5C
60F22B07F24A26DD83F4F260444E08EA8214CD4647D62D216E540277D26CC543
C6623C7F03BCBCD562759C12B4BFEB798B4578ED88B2E29C613EB234EA2AC527
C5E0F43C29B797B00D04AF6B534A749ACFB3F74DEAF14979CA99648AC7971810
F7EB9D2F14ED40653C899AD3D26C369A7FCF5D2513062CD4155578F86FEB25C1
ACB394183F31D783711AE45C4D16119B366A8F2005ECCE7B2ED90343D23E006E
CB2828450D1E2F1B972B143DA98F5CF93DB14805DB66731CE36CE160FAFF76ED
5DFCAD3B0F3C59A4D52A0E0346357CE6DD0453682BB3519205D57BAC8E8D1035
C703855410DD289929090294676AAE3ECABB2F4E65F5271B585DF3C4E7D83D5A
2230B4673692A3A3E95A52591D79473418C511E7FBC75362064CBC02FE63B784
0E7374C5EA086FD894AFCA2AEFD997AD21C556376D21FB706D26251A2D61A98D
51B6F3880C38FB2349BE51D981A08AA153E57F9EF1220C9C272DCD31C53CD08A
BD163F8DE60A4579474A7060A9FBF7B5252C0274C581A2005CB515170BEC29F9
980E9E3155CB94633C9CA212ADDBDCBDDDA4E87A9BBE3EDE32DC8120E6304500
2D044B71370D2195B0745A347A57BCDD94A615D500276FBB0FBBB421B64622C3
5D16A5920E0BDE7C64BBC23EA554AAC9BA95BA57603A8EBA86FE7A0CADC3AECD
739C9C425D09CB50B4B4BE281C7CF009EC096036351451AE7425A26CDC319A31
BDE48D9A9E7142687362FC574EB79B143A4BC2515A46A3FCFA46CBBC2310AF7E
66F09F04BBC8B01F009D09BAD4E0AEE22CC4FCCC7A4BAC3D34E426D7D9D90823
6037C83A7097B9D57B97F5CD56CB80CC88111C9E1CC5A95D86E66763AF781294
F18B5E7ED330B352D98EA20DAD98F7031F94793F7B3A279F3291925B9A3579ED
72125D6388D077A2037B7D29EE7053D34AC69C2DBBB9FF00AE72F942042D778A
CE5C18720E3E3C72B08FB19807710498752E1CCFBE2DA0F3D2CAE3F2C028C5EF
249DA376F0F229976064291F05A2B5F750ED1A437DF6480BC21F9903195EA84D
4365B68DE81582F0FA4728B81578FC2EB39C989C6B500BD034F31C23B04EE90F
CB4484AB2053E8DD69A2E935DAC0C86D9C66ED01B85534A1E39BD5C20DE216B3
342CC9894D177FBBF1DA7D23111F9CE050A46D17DA14A9463282FCA08C17ADA3
3296FC68701C42E853DE286F4DFA25EC7F9E54E92E75E48291ABB565C1F8644C
D5D9F7EA30EA59334CFAF4EF43F7C72C787A33E70D3F3F47A37432E69B29DFA8
44C6B2085D6A445D1F877635AD15214DE56BDDA1E3D2DE9C549844667E28F6FF
56261B6FB1D404A73E92348FE74AE5B8CED1F61DE6B4F56754BB3FE1A443CD7E
8E17FCB8B4ED57D7C61B0C70972F86F6764A7B876F5A6555C04D0A86619FA462
49868CE8429DD6D77D99B505E6559BB8E9664CFA5CB68AA71040D5DC570C993C
158C2C2C11CF6126D1716B808D97E787F5BB19D90FAEF1596A2319473A95AB28
7043C5A32B1ECC192FE012F5BFF946CE8D7834A3410F5E6EC14CC8E473378982
8933DD55B109F616080F5BF29107A418F686DD276382DC118D0DB9EEFAF6FB97
D66CE67F532CFD2FF2ECFFD0197C5374FE3D6DE742A6980C8C55A9DD737F2069
BF9A73FFABD0D0D68492768C7F55E9952987100AFC0EC6E59B0B6301B1902F23
3736792B3CCAE73DEF3F7438ECBBA29A27CDF940B9C096DBBA4915FBF8489EDF
6E2BA563FA7F0397CD075EF9CD41082CCBF63E849C48835E14A9DFBDB4CA8582
DAF2809A41072FD817E7072D80C54B43991D4A47FA52E1221C072B8C983B8A83
BF9E6D88256C4BF012FFB59340D23E1BFE1487D82689119BB85672D5E84D3B54
28A9558234C569604441691CDCAC602029A2A38F7F2648E1819966BC2476D4AC
4E4347E74591994A23E99F51EBF66192E45DF1F3899D636D518807D02B5D5690
931A7FB96C757689A5139FB1A3D7983862931AAF085D2BD19712926E230DD02A
EAE6461EDD83AC935AF04BA71C9E0244FE096571F074F07CC1AAC1DF294CF839
120053B7E9268CF93B9763BA70C77A82B01C2B17403B9007DA39BA7C96926AA7
769E7702305CEF74EC07C79EE7E2D42213218F2ACBB2F5361C86BECDAEEEC705
F7A8823AA2943C05C912B7B60343A7DC7A3F6F1AEA9D874100526E18C29421DB
4FEFD57CD2B0B7721EAF2B21AB693B970F89B6BA6E8B05DDF2B538BC24B526EC
DC0AD8A2E4EF069977E88971C070FBAE2C25A7104589EF3882C85E8CA9ED2804
4819A5F8BB070D9D04A40BCC9D3AA321C8805B2C22BEA0036BF28FA9E0AE74E2
8C8F300E6FD6F33FD53BBC4E00115880F608DD3B6988EC6038D4B9612F8BC361
C35875B7CEB0AC221CC2F141AB6BD9951ABAD6FC67FE4434D11D412FBAF34855
004E5E47A0E5D6D2A513DCCE575B832D0844553EEA4738FEA3F244DEC95C3148
293B0952B0FD400FD469408790D6EFEC98821433C4170D36B73C2426864F0381
0F9FFB98F07CA6252C381A0EBD6B1C70BBF86966F7914282CC412D0F131CCF4F
800D0C3E8BD00B108257F92AE1869430C6DE57F026F2E9C82F572AE49002D43E
0BFC4D3E0EB2729F2C58CA851EA676D738B40DBAE7620F27C3A01F2DA8A5556C
FC8F4A9F067ECB8C163606C3851355ACA79EF5C5033D499C434C165785DC7B08
5956E2B31CBF164EF31284DC4C49E1D55DC081E8B58F2F29E19F7D715AD567F5
56BF4DB8239AB8431BBBAA5E86057757808322DF216865D48D428474F0A80A2E
23211930F1C5D7F231365BE2C51E7110DA3CBC1CFE349AED0167FEB6593EECBC
997193BEC71A63F7B741344010B345394F22199DE571B5E71F57DAD370E98E31
FD3021485E3D82A817866FE481DF6360BCC2154B652F0EBFBB4BAA62641F852A
26CBFC6A61A481F1AB43739F20CA3AF2491CCFE7D42ADC53F67BB32848114C36
F9E6A25F53AB0F25FCA6BB860E709684EA67590F1A83A39CCB7E05896DE70696
93EFC870CB86162614133E0E2C08646BE73DF766E216FCC9E0D3B13991A136BF
E6D2F33F2A6FCA03FB36EF8FFBBD71CEA57FFDEECE1C6223109832853C664B53
C4ECDF81B0004DBE82B86EAEDF5FA5A9342C085C5FD2C774FDCF4DB4D4997018
28FC22F723CE25814E30876470F16C5E8F87F74CFB89CC763954190E9D909671
965AC8849B3B885B7DAA70ADD8804FC5661CCCBA123B2C56BCA4F1724FD3C64E
1B66C4C9B7BBEF8C466E8E71908038D3C02B1F5E8293BE9BBFE63C5BBF46B92C
DE3C52068336290D74705098D4582CC07991334762A700EE46CCFF0F8222069A
239E9C090B5B26813D247827B40DC36A2CBA4A701C45942DB1C91D2734D2E252
BAE9299E709FD22DA1E8E2CD3FBD3C82D6B76DFC63797A999F4405E08A4737EF
3B38F974D988A0876FF8AFD9374011AFBE3B5417B07D10B751B4D088DD921DFE
4EDBB7A447DA4C99661BC83BBC77655DC7D7D3F0167239170D82A1EC5B2469B6
6B4160DA342B14BE2D13F07D54255AC3CE51E835850E61D153F982B67F7B706D
57B398D4C89F58C85445101468001F40721E8DADDADEF4778B3132C7499FE427
8E1D36A434FAC6E77F6A0FE97FBB5B18B8A9D20D1F534C56C075C97D92490662
D7A1C0F7540FA825DE6E0B910F0CAF88E6309CB00AA35C1A0B21DCC7556834DD
3F66EFC7134F543BF9748641D4D5D80CEB089401871C26C7DDFC5D5CBEEAE249
871AC12C29BAC09A81BDB082FA5134A367B198BF1D5888DAC7AF368CF215ECA5
3E73C0C347A0C47DE886A1E1F78EE7BB132ED56EB6794BBB90FBF34BBEAF282A
69007BF678CFE03C4A91948FCAE03F3DF3E6963455CFB22972CD65D3BF92BA1A
84845B61318A6BEABA06D2F8C0210A26195471815D47CD6A5B2ED1DC997146A2
2768AC82C7B98CFFC426634F3D05C8F61EE2068824B4AAE5F3D674ADA847CC76
266C3DC920559EE4F73496FDD2B58F8B140D41A726830A38C7B58AF68CFECB09
313F5745B02B4BB60BD80D11F86B65BB10B62593DEA56DBFF08DF61B80CF18E1
540FCFF3F25B87B75D65CDB23CB54D3C2666ABBD1D7FD20200638DF7E3599F62
B0286A83FE867DE833DA3E181D456AF64058A403CC63CA5572DE3BDD86015BEC
60CEE8ADEEEE96C2499E4D5C40DEEFB9EEC8853BB3E2BD7F6D6F4E5983D415EE
EE370D240B29E25042B9F624674250A728C5C04C53726596250661D7ED3F9424
B8B7E988273E4751A88881FD5D5E7CBA740B6A4A544179C5B3641C5EEA4D59F9
8C4B03FB77685A0AD426DC914790763AC5F9D7E3FA7FCA7E8558FF8EDE9B11BE
ECA6CEAEA814DF82F5AAB27AA9B071B8493902802AF4206253C2DB076270A01E
13666A84DFEBC5A5DC04BFB1D49BF5BEB55C2EC6CB22155A37D36FDC2843EDBD
271BEC306E1817DE0DEF648E977D3EC92D101BC75248B957A4A5B851453720ED
51B9123DA0DA1143CA9AA32E28424B735BDFEF4890D3FB68C544D8790143B7C8
FFDCBC8B95F1B879C6050DEA1FC1D27CC6A4A1E67DD67ED59060159FBFF46CEC
88DE74BE36312504D8F7F6AC051CE1ED882DB34E14C9620BD6760B31870D69C4
C15EEA09E1831354F7C4A66651C65182B961927DE098C08A66D1E33FF54A29BD
64A57DE26B5C3E7CAED86C85B5E190C5C8294E49F4B99C908E7CDDFBEF799995
98E57464E82D184CF76BE6CC53B06D531DB9D7ECA48701B5D4511FF86644AE56
F463938254323C21D8208CF7F2854D681BBF176A08D3C975EEFAD3F2EECA1995
94CF093FB8D49DAB28DA0EDB9463FC653F6F87D1A473A40A3EDF8B197CD2F369
9339E66CA645DE5D3CEF127DB53383AA2FFAC31D3058E6044EAFD51F58A33BEC
1D91D932FEA8A790C218DD6FCF27146065947DA7F7282FBD398422F52DD7D4F1
99BBD874DD442E19D532EACDC90C78A145838224866EA5C1299D94203D112A7E
BBD5193878AF0D3EE755BD5958FD3632E67037C4FCD495F7B532647689F1F213
6657C025AD24664C9A2A718813DDF7E2AFA021A6B5EB84E7D0850954AAFE86CB
5B340FEE679C2524FA0A0192DBC4C4BF0DFE03973BB79FEDACB514713586695C
0797C7900E8E6AC46A6B34ACEC55E337FB59EF89B24C28163F9270AA4C95CA0F
58CF6DA72A3CC8C866B77F225EB04390858BFF70300B0DE649301C641D45DA8F
0F3F695B404F351F8ED22F8D659FF4A30682892C8314CEC9BD005A5B0610214F
0A6CBB7F133E2BED41CE8DA5C50E9EDFB70047B6D2CFA4ECE8A9B0C865179B3F
AB830E1EAAC293AE37EE0993D38EEF5A9675B16D071E432931CD32FB8C360C24
FBFD400EB65F8FA53B5D5FCE9161F188077CC0963A83396A250BA5C883FB9B33
DB98E520A332422433D2DAEBE5ADF4585469D5191951C3EE46B13C8E08646484
B644D0C2556467A4104D101A5A0C0601758F644CA8B09B5C3E973F69EF7A9EDD
4C5A69890997C8243C404AF7E10F76CCFFABDDE4F773864DF886BE2C21FF7BB3
47D45455A0628C7EEF92A86664FA20D07AEF6DC4C3D25B0E6BA61F704CAA3FD5
136F8F3B0DFB89AA1D0FA3717BF3CD52E7FC86C8FBACFDBF66F347EE1D6DB954
61595C9938581921663D3F263122C3B1AE04709B28E38E80485BAC718F97F280
5DACC303CDD10D18F3D2433B05EF6B1F64A14FAA7DFCBA562AEBE8205F2653C6
08EEC3D845B12F3975C5EAFB917D9B85730A4930EF1E3E733292C806C80C8865
645C656072930E0A221BEE8B2CD455AF9B5F2A6343E45D28AF8C7B561500E9AD
B8BE5D338698293881FF237E9135E6C47FD08FD7B68352CACCA2D75D486446E7
369DE487175AE41C4352941A09AB5A195A605234B9D3F08D50F8EAC85B60354A
739F6DDBB748D0B86F21F9497121887FC181C644B1D6E9C29C2E65C25A7376AB
0951A98F668907097E2ABD9120750E6F5E40B38FAECD02D709420B4919855B84
28BDC73E408DF460EDA11739AF3788BABB313CA9B72AA3FBFBE9BB816B42EDF4
45E9984AD71187BE7D6EEB6EB3037ECFF18C13247D13EB838401FE050B089354
0293D5FAF5B4BBEC5416501276491B79153F8DF73AE8E2B9F5FDC218C305A5CF
3A81942435388ADD4BDCA2FB8AF83FDA1E8ACC3588B776A0F38DA32B37B3D6B8
75062F5638493156301A8EB7277801B6E41841E2DE908A2E4FF1752C33E6FDC9
67E75503D554FA90FE87FF6A567AAFE49C9CA1CDAECC0FFB2C3B2EF0396CBE6E
45181D6D03988E9727FE6F8AEF5969EFF87EA400501A3B3236EA1FCF0C423A86
C57CBAE8F9F82E65EDBCCB17469C401E02ACA6C99A0C9920CE6B42AAFBC28BF1
A25BB7E76BEDEEE6A8C24AB041F3C6E2B44AA95479E4E9813350499BBC1E06A5
D7D9D85748FD8B81BE6AC0D179D8120F9A17CF653245AA60D404B3187D0FEB65
CF565A912A654AD47D419099F0279F6755E232669B65A7A46A6161F9AABF5AD2
7361E68D79B52B6C9A96C1A40596F048A31C4E0CDA2A53AD5E8DEEA70B9D144D
3E1EE72343AD613C086D475CF100156741524F3B68C24FFB3540448715CC3EDF
AEA40FB98C1F251CB49EAE29A3AE0601DB63F00AEFA040E9F80D1180B1FCA1A7
5090DCBAE8DB96C15B1849DDEA817D05A4BD642DFAD8B91BF0B9EDAC69886326
6D7A83290DCB8BC01CBF67436CEDBF502C4013C1C4FB989C5C331622A8090D0C
2F709654C55A596B7D4F164FFC3952CF9F04A95ADF3F80F3C4CE59FAF9545125
1659F162B1EAA0489C6D09EA559B9E0DFCCA1A39673371E8005C2A8E32152AC6
76F9B1F252F8D0ED029E610CFDBA894C8C0F2BFB2C8381E13CB69A288CFB8408
890ECB590BDC976A8C93E809536E9087CCA809106A42A594173590DAC64E0738
6A0104CC5ED2C68B08B6321F881E98B4C5193E771E9A7D0B357E17E473AD9FF8
4AAEF7E144982C6DEAD461FE4C204A0A6D7BA9819C8F68CACFF439CA1A153479
7CA46AC19F1F91712B30A195D15523961A2724F5C33A8738A4105E394ACA6EAD
2890CE7643A5C44777DDAEFA56B27091598B2DFB77BC1215DA752B69298B3664
5A69B98423DDA04A18DF5410EEECE6E9471EB02F38BDE00115A21706BC3AE8F2
9C792E45583B16A84E1779CADECE0C75A70B6E70154AB80C5A40BEC0CA793789
74A281B8F074456303CAE324705BE0751CCDE651FB514D0FEFBBF1F53606B848
1ECD5FA685C54DECB92073CC036BA1DC8D789B86226E38B0DB3AFD1896686F8E
478603573F9FFDD42D1DA7BA6D125B96B6B314C7875FE456A79A38623745FC7B
C778B3765D421C915AECD756654DDB145511CECAF4267E9D378CDCD13B00F96C
45B113866881201429FDA949FE1F364C2F744079F5937E2988B08711D1C26A6F
7FC2E24FD64F7B74BEE205BB7E6DD226AB585C11A08A3E33D5F5D10E8177B9BD
F9B526C14065D013427D282B07510C3A6A9597B5C69D8E48C54F7809FC501981
0C4A106297F15E7E6E7B9E42790272E28447EB420D12CDF741FC2782257F20E4
430D54B93AAC4A0FE3595C5D7E2FE528C85539D2FB653AA5B93CF70C4EE4A172
4BED4905EDAA8A46A337EA53E0871270B7FF6F19FFCAF6627099C08DDE996F9D
3B8A2E27B9D4BB11A7D7613AA7C519BCE1182B6C30F93DD0D7DEAF262C2A42C0
2E3D1C41FD46552E7CA1B36B02C66505D08E17C2ACBF106156AA2D5B790AFDEF
FD04B04AB3469F34999A3BAB4047E252ADB05C6BB87648C7A4EE7A3FD4FAA95E
98C99D2E5C078B5199A8AA5AC678091C4C8B2CA6692F3F28B7794A9FE5A62A82
32106093EA39091D5B4204AD9BDD2B9ACFC3FF359CC8667D7887C9BDB503D1ED
64E643D728556B4481C7F77B18BBC1EEB43200DB0C6379BF1F5FAF474A0F2127
19A259549EF7BD5AEFFA0DF810DF1E0034DCFE58B45A71D4E9FDDFCB897B46D6
C40A3B4BAF0C4AFBAE8CFD73A596F7C7AF437B8AD4F2F652EDDFF165186D73C5
275BC9638D8A733D3E5905EB64725D9D9140ADD2348CA838B3A1CA68A22C5A51
34CB01D450721319B911DB91692758F1907EC08F5E8ADB0E9F7DAE0D0486B75F
E82E88EAA03F65077776C747047E336DD497E22194A490DCFBAF39159FB3A63B
24AA15B2D36ED7F45623D0AF7E21A589ECF73E8ABEC3C69594738E8945AAF2ED
1D90FDF92AC9F25075CE7D76366B5B28AD82661F75AC6C8238797C13451EF9C9
E21B9C60F64B2455C109DEEFDA4C340958D49A0C8B4E4459B7C691BF6A674655
823DB7D1D12E2435634CF69890D14A1FF76CDC75ADF83339A0A4E5F1AA194B2F
C8593DE970B2C883FA21B46E2BFF68C724446933E8927F3AACE64BE6623CC6A3
6CB5E9E1260F6699D945A611A7EA348DB3C86BE4B588DBB9FD75BB548E4988A5
80586486CB75E1C4E4C7A7C603456F2EBF2705ECCE7B2ED90343D23E006ECB28
2BEBD7D7CDFD1D6BEFB5B196144E026FD76EF7A00B67824026CD9C4CB0C0C97C
BCBFCC599720FC9CA0A2B44361747D6E81960CC0321BF3AC8193758B4610EF33
F894F278E517DA54270BFCBA2FF5C2064628045617B0D434CE813F69456FD365
BAE24F737E9FA5DBC1CBFBCFBB273936721273DC120969CAAF54CD5F89FD89D1
53C58F0D648A28014FC7DA1A9AB3C09DD30928904494416E3DF1D6CA3B527FB8
826F7F17E5F5D5C98C960B3F7873A164EEFCF23B39579CC1D94AD59B64A54DA9
FE4C01E4EBADFA3C5757BA5C9BA0897E711DFFF1EE6ABE33479FC9E093CAA18D
20F308C43A95299545F27EA902F484D7EF76D8BF50E4A992CBCA5E1285AA1067
D470813C4EE0034375EBCAA822840BC8FA3E02D9B520F7E8785DFEF225DBB69D
606219F17E801AF5F30613E7A2C3D32301ADBCFAACE88F804DAA2B51B443839D
49DE5CE537DF8352F46115C8B3E4679B46C25E44BE0A77A52F49B360BDC5FD87
44E86E19C9B1F9D62740A6C1E4ACA130DD76A67920DBB347FCCB3A3B7622E5A7
04402F59B2EFB224107BCE6BECF4A6FBC27D932CBB65408DEEBB298E1EA6E3E3
EEAF3528EB6CCBF43EE9C02CB6F255587300FD433C3B4D9FF294537074922108
1D1C75F39C3FDED02C7B5394E5358E70A516237FFD7A58EA0C7A39DEAAFF74F3
865CBD9DF5199EE51515D2BA0D44855014654D1A999CAD1A5E9DD35EE33E8DF3
662840E32409951CADA934F8896AA60376DD0865F7BC578D010289CAB665AEA6
C2A88BFA33BE22261AFA8B150CEF52C48C478EADF2E58D3CB1CA23A332D92C80
D89FAF2BD300218B879BE060706CA4081CEDEAAE4CA9986794B83227FD4117B2
7984A141A4B19E695FBC8D4D3C542F83821C56B4F44B70462F9975A6E314A365
BFA26DAFB54B00702F9DC177B9EA20E7A398A633DA1587E3728E345F81A68635
81C22A349B8AB7B3BDBC53EA79B2E8AF3DB3E40BE9E22D7346A518C7B6B74768
50EE3055DC42F2E66AAA8E40FB4F9A575B9C83CF9529AD5E622C5ECD72D3C635
376F88F28238E2BC34D15E5DF40E5B5AA30AF7284A186924F1D3A07710FB1D1A
1DAE107AFFB1C6759C04C3E507FCB495AAE4A10B6CA01ADAFDE9A3FB2169A90B
01F68B87DB15669D9DB11CC7D2A9C358C6CD7BE10F253C9FD64B2C102911B1A7
ECED04F404A73C533DE7E6939262620A5A94328781509A5C4F82A23E3FC8CEAE
6032E8B5A9B42CEFCC75626861C86A5F677E76C5FEDCC0700A44FB1C89313483
A9358BBE32587E7EC04F8876134E5B5D81C916E7AEAED0A847331E84A61E6731
69378F50886160BA2544847411195FD1A4B269D118F9CDA8DD4CE67BEA9D73F4
94DB70D53E7EA2561BAAA0451FEF267A774678018637FC87BFAA82B8D905D4CE
8F21DE9FA6E2578F9A146E90569E6551E81C3FFD0B1858C54E41C055
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600
(/home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/pba.dvi)
@start /Fa 63[65 192[{}1 83.022 /Dingbats rf /Fb 173[57
82[{ fa5free3 ReEncodeFont }1 83.022 /FontAwesome5Free-Solid
rf /Fc 242[83 13[{}1 83.022 /CMSY10 rf /Fd 207[31 48[{
 enclmec ReEncodeFont }1 58.1154 /LMSans8-Regular rf
/Fe 91[73 164[{ fa5free0 ReEncodeFont }1 83.022 /FontAwesome5Free-Solid
rf /Ff 172[83 83[{ fa5free3 ReEncodeFont }1 83.022
/FontAwesome5Free-Regular rf /Fg 64[83 191[{ fa5free0 ReEncodeFont }1
83.022 /FontAwesome5Free-Regular rf /Fh 137[25 1[25 7[21
2[13 3[23 3[25 18[34 78[{ enclmec ReEncodeFont }7 41.511
/LMRomanCaps10-Regular rf /Fi 22[20 111[20 5[17 15 2[22
23 1[11 2[11 3[20 23 20 1[21 18[31 1[24 5[25 4[29 7[22
22 1[22 22 22 22 22 22 22 22 12 15 3[17 17 40[{ enclmec ReEncodeFont }
30 41.511 /LMSans8-Regular rf /Fj 240[42 15[{ enclmmathsy ReEncodeFont }
1 83.022 /LMMathSymbols10-Regular rf /Fk 202[33 33 33
33 33 49[{ enclmrm ReEncodeFont }5 58.1154 /LMRoman7-Regular
rf /Fl 175[53 80[{ enclmmathit ReEncodeFont }1 83.022
/LMMathItalic10-Regular rf /Fm 237[31 18[{ fa5free2 ReEncodeFont }1
83.022 /FontAwesome5Free-Solid rf /Fn 144[42 2[20 2[20
3[37 1[37 43 31[55 55 18[23 46[{ enclmec ReEncodeFont }9
83.022 /LMSans10-Regular rf /Fo 198[42 57[{ fa5free1 ReEncodeFont }1
83.022 /FontAwesome5Free-Solid rf /Fp 23[52 110[54 54
3[42 45 2[60 59 60 93 28 2[28 3[52 60 2[56 13[65 43[33
39[{ enclmec ReEncodeFont }16 119.552 /LMSans12-Regular
rf /Fq 188[84 17[66 49[{ enclmec ReEncodeFont }2 119.552
/LMSans10-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525 -608 a
SDict begin H.S end
 -525 -608
a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -525 -608 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 1345 1579 a

 1345 1579 a 1345
1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395
1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461 1529 a 1461
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1511 1529 a
SDict begin H.R end
 1511
1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1511 1591 a 1523 1579 a

 1523 1579
a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564 1529 a 1564
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1606 1529 a
SDict begin H.R end
 1606
1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1606 1591 a 1606 1591 a
SDict begin H.S end
 1606 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1647 1591 a 1647
1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1689
1591 a 1701 1579 a

 1701 1579 a 1701 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94
TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1701 1591 a
SDict begin H.S end
 1701
1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742 1591 a 1742
1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784
1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825 1529 a 1825
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1867 1529 a
SDict begin H.R end
 1867
1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878 1579 a

 1878 1579
a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920 1529 a 1920
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1961 1529 a
SDict begin H.R end
 1961
1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961 1591 a
SDict begin H.S end
 1961 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003 1591 a 2003
1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044
1591 a 2056 1579 a

 2056 1579 a 2056 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591
a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131
1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222 1529 a 2222
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579 a 2234 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292 1529 a 2292
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2342 1529 a
SDict begin H.R end
 2342
1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342 1591 a
SDict begin H.S end
 2342 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400 1591 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray Black 0
TeXcolorgray -517 -517 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517
-517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517 -517
a -517 -517 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -517 -517 a -517
-517 a
SDict begin H.S end
 -517 -517 a -517 -517 a
SDict begin 12 H.A end
 -517 -517 a -517 -517
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -517 -517 a -517 -517 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with Beamer class)/Author (F. Nativel)/Keywords () /DOCINFO
pdfmark end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(1)>>1<</P(2)>>2<</P(3)>>3<</P(4)>>4<</P(5)>>5<</P(6)>>]>>>>
/PUT pdfmark end
 -517
-517 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600 -287 3024 230
v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray 1 TeXcolorgray
0 0 1 0 TeXcolorcmyk -500 -350 a Fq(C1)p 1 TeXcolorgray
-529 -458 208 5 v -529 -323 5 137 v -325 -323 V -529
-321 208 5 v 68 w Fp(Syst\350me)38 b(d'exploitation)p
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -467 116 a
tx@Dict begin  tx@NodeDict begin {12.75 5.25 47.00066 23.50032 3.75
} false /N@E 16 {InitRnode } /NodeScale {} def NewNode end  end
 -467 116 a 8
w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin Sepia end  0.3 true 1.0
neg 5.25 neg 42.66733 12.75 .5 Frame  gsave 1.0 SLW TeXDict begin Sepia
end  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 38.66733 11.75 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0.83 1 0.7 TeXcolorcmyk 30
w Fo(9)28 b Fn(Alice)p 0 TeXcolorgray 657 116 a
tx@Dict begin  tx@NodeDict begin {12.73499 5.25 38.91698 19.45848 3.7425
} false /N@R 16 {InitRnode } /NodeScale {} def NewNode end  end
 657 116
a 8 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin BlueViolet end  0.3 true
1.0 neg 5.25 neg 37.91698 12.73499 .5 Frame  gsave 1.0 SLW TeXDict
begin BlueViolet end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 33.91698 11.73499 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.86 0.91 0 0.04 TeXcolorcmyk
31 w Fm(\022)g Fn(Bob)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 330 a Fl(P)-414 342 y Fk(1)-321 329 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 329 a
Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk
725 428 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 428 a Fj(\017)794 429 y Fl(P)847 441 y
Fk(1)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467
529 a Fl(P)-414 541 y Fk(2)-321 528 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et2 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 528 a Fj(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 725 628
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt2 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 628 a Fj(\017)794 629 y Fl(P)847 641 y Fk(2)p 0
TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 728 a Fl(P)-414
740 y Fk(3)-321 727 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et3 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 727 a Fj(\017)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 725 827 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 827 a Fj(\017)794
828 y Fl(P)847 840 y Fk(3)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 928 a Fl(P)-414 940 y Fk(4)-321 927
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et4 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 927 a Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 725 1026 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt4 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 1026 a Fj(\017)794 1027 y
Fl(P)847 1039 y Fk(4)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 1127 a Fl(P)-414 1139 y Fk(5)-321 1126 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et5 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1126
a Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk
725 1225 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt5 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 1225 a Fj(\017)794 1226 y Fl(P)847 1238
y Fk(5)p 0 TeXcolorgray 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Et2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Et3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Et4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Et5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653
a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Et6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Rt2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Rt3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Rt4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt4 /N@Rt5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653
a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt5 /N@Rt6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Rt1 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 1225 653
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Rt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Rt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Rt4 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653
a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Rt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb
0.09999 0.09999 0.34999 TeXcolorrgb -600 1751 1008 60
v 0.09999 0.09999 0.34999 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray -340 1732 a Fi(F.)16 b Fh(Na)m(tivel)29
b Fi(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fi(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(1)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation2) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fq(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fp(Syst\350me)38 b(d'exploitation)p
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -467 114 a
tx@Dict begin  tx@NodeDict begin {12.75 5.25 47.00066 23.50032 3.75
} false /N@E 16 {InitRnode } /NodeScale {} def NewNode end  end
 -467 114 a 8
w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin Sepia end  0.3 true 1.0
neg 5.25 neg 42.66733 12.75 .5 Frame  gsave 1.0 SLW TeXDict begin Sepia
end  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 38.66733 11.75 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0.83 1 0.7 TeXcolorcmyk 30
w Fo(9)28 b Fn(Alice)p 0 TeXcolorgray 706 114 a
tx@Dict begin  tx@NodeDict begin {12.73499 5.25 38.91698 19.45848 3.7425
} false /N@R 16 {InitRnode } /NodeScale {} def NewNode end  end
 706 114
a 8 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin BlueViolet end  0.3 true
1.0 neg 5.25 neg 37.91698 12.73499 .5 Frame  gsave 1.0 SLW TeXDict
begin BlueViolet end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 33.91698 11.73499 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.86 0.91 0 0.04 TeXcolorcmyk
30 w Fm(\022)g Fn(Bob)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 328 a Fl(P)-414 340 y Fk(1)-321 327 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 327 a
Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk
774 427 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 774 427 a Fj(\017)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 529 a Fl(P)-414 541 y Fk(2)-321 528
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et2 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 528 a Fj(\017)p 0 TeXcolorgray 376 528 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 13.33333 6.66666 3.75 }
false /N@Mt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 376 528
a 0 0.61 0.87 0 TeXcolorcmyk Fg(\277)p 0 TeXcolorgray
194 629 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt2
16 {InitRnode } /NodeScale {} def NewNode end  end
 194 629 a 0 1 1 0 TeXcolorcmyk Ff(S)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 774 629 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt2 16 {InitRnode } /NodeScale {} def NewNode end  end
 774 629 a Fj(\017)p
0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 730 a Fl(P)-414
742 y Fk(3)-321 729 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et3 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 729 a Fj(\017)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 774 828 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 774 828 a Fj(\017)843
829 y Fl(P)896 841 y Fk(3)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 929 a Fl(P)-414 941 y Fk(4)-321 928
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et4 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 928 a Fj(\017)p 0 TeXcolorgray 404 928 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 6.66666 3.33333 0.0 } false
/N@Mt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 404 928
a 194 1029 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt4
16 {InitRnode } /NodeScale {} def NewNode end  end
 194 1029 a 0 1 1 0 TeXcolorcmyk Ff(S)p 0
TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 774 1029 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt4 16 {InitRnode } /NodeScale {} def NewNode end  end

774 1029 a Fj(\017)843 1030 y Fl(P)896 1042 y Fk(1)p
0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 1130 a
Fl(P)-414 1142 y Fk(5)-321 1129 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et5 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1129 a Fj(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 774 1228
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt5 16 {InitRnode } /NodeScale {} def NewNode end  end
 774 1228 a Fj(\017)843 1229 y Fl(P)896 1241 y Fk(5)p
0 TeXcolorgray 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Et2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Et3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Et4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Et5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225
654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Et6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Rt2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Rt3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Rt4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt4 /N@Rt5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225
654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt5 /N@Rt6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW TeXDict begin Orange end  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Mt1 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.4 SLW TeXDict begin Orange end  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore  grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW TeXDict begin Orange end  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Mt1 /N@Mt3 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.4 SLW TeXDict begin Orange end  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1225
654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Mt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Mt4 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 654 a 1225
654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Rt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Rt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 654 a 1225 654 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Orange end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Mt3 /N@Rt4 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Orange end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225
654 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb -600 1751 1008 60 v 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray -340 1732 a
Fi(F.)16 b Fh(Na)m(tivel)29 b Fi(\(Lyc\351e)14 b(No)o(rd\))p
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 408 1751 V 0.15 0.15 0.525 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end
 912 1732 a 1 TeXcolorgray
1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912 1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732
a 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 1416
1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray 821 w Fi(Ann\351e)g(scolaire)f(2018-2019)p
1 TeXcolorgray 103 w(2)7 b(/)h(6)p 1 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation3) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation2) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fq(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fp(Syst\350me)38 b(d'exploitation)p
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -467 35 a
tx@Dict begin  tx@NodeDict begin {12.75 5.25 47.00066 23.50032 3.75
} false /N@E 16 {InitRnode } /NodeScale {} def NewNode end  end
 -467 35 a 8 w
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin Sepia end  0.3 true 1.0
neg 5.25 neg 42.66733 12.75 .5 Frame  gsave 1.0 SLW TeXDict begin Sepia
end  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 38.66733 11.75 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0.83 1 0.7 TeXcolorcmyk 30
w Fo(9)28 b Fn(Alice)p 0 TeXcolorgray 717 35 a
tx@Dict begin  tx@NodeDict begin {12.73499 5.25 38.91698 19.45848 3.7425
} false /N@R 16 {InitRnode } /NodeScale {} def NewNode end  end
 717 35
a 8 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin BlueViolet end  0.3 true
1.0 neg 5.25 neg 37.91698 12.73499 .5 Frame  gsave 1.0 SLW TeXDict
begin BlueViolet end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 33.91698 11.73499 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.86 0.91 0 0.04 TeXcolorcmyk
30 w Fm(\022)g Fn(Bob)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 249 a Fl(P)-414 261 y Fk(1)-321 248 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 248 a
Fj(\017)p 0 TeXcolorgray 171 349 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt1
16 {InitRnode } /NodeScale {} def NewNode end  end
 171 349 a 0 1 1 0
TeXcolorcmyk Ff(S)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk
785 349 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 785 349 a Fj(\017)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 450 a Fl(P)-414 462 y Fk(1)-321 449
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et2 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 449 a Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 785 548 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt2 16 {InitRnode } /NodeScale {} def NewNode end  end
 785 548 a Fj(\017)854 549 y Fl(P)907
561 y Fk(1)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 649 a Fl(P)-414 661 y Fk(2)-321 648 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et3 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 648 a
Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk
785 748 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 785 748 a Fj(\017)854 749 y Fl(P)907 761 y
Fk(2)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467
848 a Fl(P)-414 860 y Fk(3)-321 847 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et4 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 847 a Fj(\017)p
0 TeXcolorgray 354 847 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 6.66666 3.33333 0.0 } false
/N@Mt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 354 847 a 171 948 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt4
16 {InitRnode } /NodeScale {} def NewNode end  end
 171 948
a 0 1 1 0 TeXcolorcmyk Ff(S)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 785 948 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt4 16 {InitRnode } /NodeScale {} def NewNode end  end
 785 948 a Fj(\017)p 0 TeXcolorgray
0 0.83 1 0.7 TeXcolorcmyk -467 1049 a Fl(P)-414 1061
y Fk(3)-321 1048 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et5 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1048 a Fj(\017)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 785 1148 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt5 16 {InitRnode } /NodeScale {} def NewNode end  end
 785 1148 a Fj(\017)854
1149 y Fl(P)907 1161 y Fk(3)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 1248 a Fl(P)-414 1260 y Fk(4)-321 1247
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et6 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1247 a Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 785 1347 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt6 16 {InitRnode } /NodeScale {} def NewNode end  end
 785 1347 a Fj(\017)p 0 TeXcolorgray
1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Et2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Et3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Et4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Et5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Et6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674
a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Rt2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Rt3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Rt4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt4 /N@Rt5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt5 /N@Rt6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674
a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Mt1 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Mt4 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Rt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Rt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Rt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674
a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et3 /N@Rt2 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674
a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk 1189 705
a Fe(\244)p 0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225
674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et4 /N@Rt3 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225
674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225
674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225
674 a 1 0 1 0 TeXcolorcmyk 1189 705 a Fe(\244)p 0 TeXcolorgray
1225 674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674
a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et6 /N@Rt5 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674
a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674
a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk
1189 705 a Fe(\244)p 0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225 674
a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a Fi(F.)16 b Fh(Na)m(tivel)29
b Fi(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fi(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(3)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation4) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation3) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fq(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fp(Syst\350me)38 b(d'exploitation)p
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -467 35 a
tx@Dict begin  tx@NodeDict begin {12.75 5.25 47.00066 23.50032 3.75
} false /N@E 16 {InitRnode } /NodeScale {} def NewNode end  end
 -467 35 a 8 w
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin Sepia end  0.3 true 1.0
neg 5.25 neg 42.66733 12.75 .5 Frame  gsave 1.0 SLW TeXDict begin Sepia
end  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 38.66733 11.75 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0.83 1 0.7 TeXcolorcmyk 30
w Fo(9)28 b Fn(Alice)p 0 TeXcolorgray 724 35 a
tx@Dict begin  tx@NodeDict begin {12.73499 5.25 38.91698 19.45848 3.7425
} false /N@R 16 {InitRnode } /NodeScale {} def NewNode end  end
 724 35
a 8 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin BlueViolet end  0.3 true
1.0 neg 5.25 neg 37.91698 12.73499 .5 Frame  gsave 1.0 SLW TeXDict
begin BlueViolet end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 33.91698 11.73499 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.86 0.91 0 0.04 TeXcolorcmyk
30 w Fm(\022)g Fn(Bob)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 249 a Fl(P)-414 261 y Fk(1)-321 248 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 248 a
Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk
792 347 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 347 a Fj(\017)861 330 y Fn(.)14 b(.)g(.)p
0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 430 a(.)g(.)g(.)-321
447 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et2 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 447 a Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 792 547 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt2 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 547 a Fj(\017)861 529 y Fn(.)g(.)g(.)p
0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 631 a(.)g(.)g(.)-321
648 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et3 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 648 a Fj(\017)p 0 TeXcolorgray 340 648 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt2
16 {InitRnode } /NodeScale {} def NewNode end  end
 340
648 a 0 0.61 0.87 0 TeXcolorcmyk Fg(\277)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 792 748 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 748 a Fj(\017)861
730 y Fn(.)g(.)g(.)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 830 a(.)g(.)g(.)-321 847 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et4 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 847 a Fj(\017)p
0 TeXcolorgray 158 948 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt4
16 {InitRnode } /NodeScale {} def NewNode end  end
 158 948 a 0 1 1 0 TeXcolorcmyk
Ff(S)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 792
948 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt4 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 948 a Fj(\017)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 1031 a Fn(.)g(.)g(.)-321 1048 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et5 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321
1048 a Fj(\017)p 0 TeXcolorgray 354 1048 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 6.66666 3.33333 0.0 } false
/N@Mt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 354 1048 a
0.86 0.91 0 0.04 TeXcolorcmyk 792 1148 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt5 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 1148 a Fj(\017)861
1130 y Fn(.)g(.)g(.)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 1230 a(.)g(.)g(.)-321 1247 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et6 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1247 a Fj(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 792 1347
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt6 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 1347 a Fj(\017)p 0 TeXcolorgray 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Et2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Et3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Et4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Et5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Et6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Rt2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Rt3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Rt4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt4 /N@Rt5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt5 /N@Rt6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Rt1 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Rt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Rt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Mt4 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Orange end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Mt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Orange end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW TeXDict begin Orange end  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Mt2 /N@Mt3 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.4 SLW TeXDict begin Orange end  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Orange end  /ArrowA { BeginArrow 1.
 1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et5 /N@Mt3 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Orange end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225
674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225
674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 0 0.61 0.87 0 TeXcolorcmyk
1189 705 a Fe(\244)p 0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225 674
a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Rt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et2 /N@Rt1 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674
a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674
a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk
1189 705 a Fe(\244)p 0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225 674
a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674
a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et4 /N@Rt3 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674
a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674
a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk 1189 705 a Fe(\244)p
0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225
674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et6 /N@Rt5 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225
674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225
674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0
TeXcolorcmyk 1189 705 a Fe(\244)p 0 TeXcolorgray 1225
674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225
674 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.09999 0.09999 0.34999 TeXcolorrgb 0.09999 0.09999 0.34999
TeXcolorrgb -600 1751 1008 60 v 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray -340 1732 a
Fi(F.)i Fh(Na)m(tivel)29 b Fi(\(Lyc\351e)14 b(No)o(rd\))p
0 TeXcolorgray 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0.15 0.15 0.525
TeXcolorrgb 408 1751 V 0.15 0.15 0.525 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end
 912 1732 a 1 TeXcolorgray
1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912 1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732
a 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb 1416
1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray
1 TeXcolorgray 821 w Fi(Ann\351e)g(scolaire)f(2018-2019)p
1 TeXcolorgray 103 w(4)7 b(/)h(6)p 1 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation5) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation4) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fq(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fp(Syst\350me)38 b(d'exploitation)p
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -467 34 a
tx@Dict begin  tx@NodeDict begin {12.75 5.25 47.00066 23.50032 3.75
} false /N@E 16 {InitRnode } /NodeScale {} def NewNode end  end
 -467 34 a 8 w
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin Sepia end  0.3 true 1.0
neg 5.25 neg 42.66733 12.75 .5 Frame  gsave 1.0 SLW TeXDict begin Sepia
end  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 38.66733 11.75 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0.83 1 0.7 TeXcolorcmyk 30
w Fo(9)28 b Fn(Alice)p 0 TeXcolorgray 744 34 a
tx@Dict begin  tx@NodeDict begin {12.73499 5.25 38.91698 19.45848 3.7425
} false /N@R 16 {InitRnode } /NodeScale {} def NewNode end  end
 744 34
a 8 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin BlueViolet end  0.3 true
1.0 neg 5.25 neg 37.91698 12.73499 .5 Frame  gsave 1.0 SLW TeXDict
begin BlueViolet end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 26 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 33.91698 11.73499 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.86 0.91 0 0.04 TeXcolorcmyk
30 w Fm(\022)g Fn(Bob)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 247 a Fl(P)-414 259 y Fk(1)-351 243 y Fd(0)-377
247 y Fc(\015)-321 247 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 247 a Fj(\017)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 812 347 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 812 347 a Fj(\017)f
Fl(P)934 359 y Fk(1)998 343 y Fd(0)972 347 y Fc(\015)p
0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 448 a Fl(P)-414
460 y Fk(1)-351 444 y Fd(0)-377 448 y Fc(\015)-321 448
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et2 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 448 a Fj(\017)p 0 TeXcolorgray 481 448 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt1
16 {InitRnode } /NodeScale {} def NewNode end  end
 481 448
a 0 1 1 0 TeXcolorcmyk Ff(S)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 812 548 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt2 16 {InitRnode } /NodeScale {} def NewNode end  end
 812 548 a Fj(\017)881 557 y Fb(R)p
0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 649 a Fl(P)-414
661 y Fk(2)-377 649 y Fa(\300)-321 647 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et3 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 647 a Fj(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 812 747
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 812 747 a Fj(\017)881 749 y Fl(P)934 761 y Fk(2)972
749 y Fa(\300)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 848 a Fl(P)-414 860 y Fk(3)-351 844 y Fd(0)-377
848 y Fc(\015)-321 848 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et4 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 848 a Fj(\017)p 0 TeXcolorgray
299 848 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt3
16 {InitRnode } /NodeScale {} def NewNode end  end
 299 848 a 0 0.61 0.87 0 TeXcolorcmyk Fg(\277)p
0 TeXcolorgray 116 949 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt5
16 {InitRnode } /NodeScale {} def NewNode end  end
 116 949 a 0 1 1 0 TeXcolorcmyk
Ff(S)p 0 TeXcolorgray 313 949 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 6.66666 3.33333 0.0 } false
/N@Mt4 16 {InitRnode } /NodeScale {} def NewNode end  end
 313 949 a 0.86 0.91 0 0.04
TeXcolorcmyk 812 949 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt4 16 {InitRnode } /NodeScale {} def NewNode end  end
 812 949 a Fj(\017)p 0 TeXcolorgray
0 0.83 1 0.7 TeXcolorcmyk -467 1049 a Fl(P)-414 1061
y Fk(3)-351 1045 y Fd(0)-377 1049 y Fc(\015)-321 1049
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et5 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1049 a Fj(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 812 1149 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt5 16 {InitRnode } /NodeScale {} def NewNode end  end
 812 1149 a Fj(\017)g Fl(P)934
1161 y Fk(3)998 1145 y Fd(0)972 1149 y Fc(\015)p 0 TeXcolorgray
0 0.83 1 0.7 TeXcolorcmyk -321 1248 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et6 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1248 a Fj(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 812 1348
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt6 16 {InitRnode } /NodeScale {} def NewNode end  end
 812 1348 a Fj(\017)p 0 TeXcolorgray 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Et2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Et3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Et4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Et5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Et6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Rt2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Rt3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Rt4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt4 /N@Rt5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt5 /N@Rt6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Rt1 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Rt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Rt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Mt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Mt1 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinecap [  5.0  3.0  0.0  0.0 ] -2 0 add  DashLine  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Orange end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Mt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Orange end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW TeXDict begin Orange end  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Mt3 /N@Mt4 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.4 SLW TeXDict begin Orange end  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Orange end  /ArrowA { BeginArrow 1.
 1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et5 /N@Mt4 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Orange end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1225 674 a 1225
674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225
674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 16.62999
8.125 0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict
begin PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 0 0.61 0.87 0
TeXcolorcmyk 1156 705 a Fe(\244)p Fa(\300)p 0 TeXcolorgray
1225 674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674
a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Rt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et3 /N@Rt2 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674
a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 18.75002
8.125 1.94444 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict
begin PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674
a 1 0 1 0 TeXcolorcmyk 1147 699 a Fe(\244)1246 695 y
Fd(0)1220 699 y Fc(\015)p 0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225
674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et6 /N@Rt5 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225
674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225
674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 18.75002
8.125 1.94444 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict
begin PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk 1147 699 a Fe(\244)1246
695 y Fd(0)1220 699 y Fc(\015)p 0 TeXcolorgray 1225 674
a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674
a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a Fi(F.)16 b Fh(Na)m(tivel)29
b Fi(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fi(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(5)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (Navigation6) cvn /DEST pdfmark
end
 -525 -608 a -525 -608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525
-608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray -600 1668
3024 2268 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2424 1668 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.68 0.68 0.88 TeXcolorrgb 1345 1579 a


1345 1579 a 1345 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1395 1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461
1529 a 1461 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1511 1529 a
SDict begin H.R end
 1511 1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1511 1591 a 1523
1579 a

 1523 1579 a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564
1529 a 1564 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation5) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1606 1529 a
SDict begin H.R end
 1606 1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1606 1591 a 1606
1591 a
SDict begin H.S end
 1606 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1647
1591 a 1647 1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1689 1591 a 1701 1579 a

 1701 1579 a 1701 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1701 1591 a
SDict begin H.S end
 1701 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742
1591 a 1742 1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784 1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825
1529 a 1825 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1867 1529 a
SDict begin H.R end
 1867 1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 1867 1591 a 1878
1579 a

 1878 1579 a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore

0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920
1529 a 1920 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1961 1529 a
SDict begin H.R end
 1961 1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961
1591 a
SDict begin H.S end
 1961 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2003
1591 a 2003 1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2044 1591 a 2056 1579 a

 2056 1579 a 2056 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591 a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131 1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222
1529 a 2222 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation6) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579
a 2234 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292
1529 a 2292 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2342 1529 a
SDict begin H.R end
 2342 1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342
1591 a
SDict begin H.S end
 2342 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400
1591 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1 TeXcolorgray
0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb -600
-287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fq(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fp(Syst\350me)38 b(d'exploitation)p
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -467 35 a
tx@Dict begin  tx@NodeDict begin {12.75 5.25 47.00066 23.50032 3.75
} false /N@E 16 {InitRnode } /NodeScale {} def NewNode end  end
 -467 35 a 8 w
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin Sepia end  0.3 true 1.0
neg 5.25 neg 42.66733 12.75 .5 Frame  gsave 1.0 SLW TeXDict begin Sepia
end  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 38.66733 11.75 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0 0.83 1 0.7 TeXcolorcmyk 30
w Fo(9)28 b Fn(Alice)p 0 TeXcolorgray 724 35 a
tx@Dict begin  tx@NodeDict begin {12.73499 5.25 38.91698 19.45848 3.7425
} false /N@R 16 {InitRnode } /NodeScale {} def NewNode end  end
 724 35
a 8 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin BlueViolet end  0.3 true
1.0 neg 5.25 neg 37.91698 12.73499 .5 Frame  gsave 1.0 SLW TeXDict
begin BlueViolet end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 25 w @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 33.91698 11.73499 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.86 0.91 0 0.04 TeXcolorcmyk
30 w Fm(\022)g Fn(Bob)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 248 a Fl(P)-414 260 y Fk(1)-351 244 y Fd(0)-377
248 y Fc(\015)-321 248 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 248 a Fj(\017)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 792 347 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 347 a Fj(\017)f
Fl(P)914 359 y Fk(1)977 343 y Fd(0)951 347 y Fc(\015)p
0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 449 a Fl(P)-414
461 y Fk(2)-377 449 y Fa(\300)-321 447 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et2 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 447 a Fj(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 792 547
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt2 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 547 a Fj(\017)861 549 y Fl(P)914 561 y Fk(2)951
549 y Fa(\300)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 650 a Fl(P)-414 662 y Fk(2)-377 650 y Fa(\300)-321
648 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et3 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 648 a Fj(\017)p 0 TeXcolorgray 340 648 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt2
16 {InitRnode } /NodeScale {} def NewNode end  end
 340
648 a 0 0.61 0.87 0 TeXcolorcmyk Fg(\277)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 792 748 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 748 a Fj(\017)861
757 y Fb(R)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 847 a Fl(P)-414 859 y Fk(3)-351 843 y Fd(0)-377
847 y Fc(\015)-321 847 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et4 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 847 a Fj(\017)p 0 TeXcolorgray
158 948 a
tx@Dict begin  tx@NodeDict begin {8.59 1.09 10.0 5.0 3.75 } false /N@Mt4
16 {InitRnode } /NodeScale {} def NewNode end  end
 158 948 a 0 1 1 0 TeXcolorcmyk Ff(S)p 0 TeXcolorgray
354 948 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 6.66666 3.33333 0.0 } false
/N@Mt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 354 948 a 0.86 0.91 0 0.04 TeXcolorcmyk 792
948 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt4 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 948 a Fj(\017)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 1048 a Fl(P)-414 1060 y Fk(3)-351 1044
y Fd(0)-377 1048 y Fc(\015)-321 1048 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et5 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1048 a Fj(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 792 1148
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt5 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 1148 a Fj(\017)g Fl(P)914 1160 y Fk(3)977 1144
y Fd(0)951 1148 y Fc(\015)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 1249 a Fl(P)-414 1261 y Fk(4)-377 1249
y Fa(\300)-321 1247 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et6 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1247 a Fj(\017)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 792 1347 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt6 16 {InitRnode } /NodeScale {} def NewNode end  end
 792 1347 a Fj(\017)p
0 TeXcolorgray 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Et2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Et3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Et4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Et5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Et6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Rt2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Rt3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Rt4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt4 /N@Rt5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt5 /N@Rt6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Rt1 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Rt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225
674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Rt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Red end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Mt4 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Red end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225
674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Orange end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Mt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Orange end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW TeXDict begin Orange end  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  /NCLW CLW def
tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Mt2 /N@Mt3 InitNC { NCCoor
tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED
/x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos
0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def
{/ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit } if
x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside
pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add
def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop lineto pop pop end  } if end  gsave
0.4 SLW TeXDict begin Orange end  1. .setopacityalpha   0  setlinecap
[  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Orange end  /ArrowA { BeginArrow 1.
 1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et5 /N@Mt3 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Orange end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1225
674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225
674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 16.62999
8.125 0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict
begin PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225
674 a 0 0.61 0.87 0 TeXcolorcmyk 1156 705 a Fe(\244)p
Fa(\300)p 0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674
a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Rt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 674
a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et2 /N@Rt1 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674
a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 18.75002
8.125 1.94444 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict
begin PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk 1147 699
a Fe(\244)1246 695 y Fd(0)1220 699 y Fc(\015)p 0 TeXcolorgray
1225 674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674
a
tx@Dict begin PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et4 /N@Rt3 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674
a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674
a
tx@Dict begin NAngle  RotBegin  end
 1225 674 a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 16.62999
8.125 0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict
begin PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk
1156 705 a Fe(\244)p Fa(\300)p 0 TeXcolorgray 1225 674
a
tx@Dict begin  PutEnd  end
 1225 674 a 1225 674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674
a 1225 674 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
 false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul dup /h ED
mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L
w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside
{ } def  0.4 SLW TeXDict begin Green end  /ArrowA { BeginArrow 1. 
1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def  /NCLW CLW def tx@NodeDict begin 5.69046 0.0 neg
0.0 0.0 0 0 /N@Et6 /N@Rt5 InitNC { NCCoor tx@Dict begin ArrowA CP 4
2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1 0.5  1 gt {
/Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length x2 x1
sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW TeXDict
begin Green end  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0
 0.0 ] 0 -1 add  DashLine  grestore  grestore end
 1225 674 a 1225 674 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1225 674 a 1225 674
a
tx@Dict begin  gsave STV CP T /ps@refangle {NAngle 90 add } def /ps@rot
{ NAngle } def grestore  end
 1225 674 a 1225 674 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1225 674 a 1225 674 a
tx@Dict begin NAngle  RotBegin  end
 1225 674
a 1225 674 a
tx@Dict begin { -2.84544 tx@Dict /NCLW known { NCLW add } if 8.75 8.125
0.62 NAngle 90 add  NAngle  sub Uput exch pop add a  tx@Dict begin
PtoC end h1 add exch w1 add exch } PutCoor PutBegin  end
 1225 674 a 1 0 1 0 TeXcolorcmyk 1189 705
a Fe(\244)p 0 TeXcolorgray 1225 674 a
tx@Dict begin  PutEnd  end
 1225 674 a 1225
674 a
tx@Dict begin RotEnd  end
 1225 674 a 1225 674 a
tx@Dict begin PutEnd  end
 1225 674 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a Fi(F.)16 b Fh(Na)m(tivel)29
b Fi(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fi(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(6)7 b(/)h(6)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
