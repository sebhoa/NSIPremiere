%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/couches.dvi
%%CreationDate: Wed Aug  4 14:11:34 2021
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 363 273
%%DocumentFonts: LMSans10-Bold LMSans12-Regular LMSans10-Regular
%%+ FontAwesome5Free-Solid LMMathItalic10-Regular LMRoman7-Regular
%%+ LMMathSymbols10-Regular LMSans8-Regular LMRomanCaps10-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/couches.ps
%+ /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/couches.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.08.04:1811
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: fa5free2.enc 0 0
/fa5free2 [
/link
/lira-sign
/list
/list-alt
/list-ol
/list-ul
/location-arrow
/lock
/lock-open
/long-arrow-alt-down
/long-arrow-alt-left
/long-arrow-alt-right
/long-arrow-alt-up
/low-vision
/luggage-cart
/magic
/magnet
/mail-bulk
/male
/map
/map-marked
/map-marked-alt
/map-marker
/map-marker-alt
/map-pin
/map-signs
/marker
/mars
/mars-double
/mars-stroke
/mars-stroke-h
/mars-stroke-v
/mask
/medal
/medkit
/meh
/meh-blank
/meh-rolling-eyes
/memory
/menorah
/mercury
/meteor
/microchip
/microphone
/microphone-alt
/microphone-alt-slash
/microphone-slash
/microscope
/minus
/minus-circle
/minus-square
/mitten
/mobile
/mobile-alt
/money-bill
/money-bill-alt
/money-bill-wave
/money-bill-wave-alt
/money-check
/money-check-alt
/monument
/moon
/mortar-pestle
/mosque
/motorcycle
/mountain
/mouse
/mouse-pointer
/mug-hot
/music
/network-wired
/neuter
/newspaper
/not-equal
/notes-medical
/object-group
/object-ungroup
/oil-can
/om
/otter
/outdent
/pager
/paint-brush
/paint-roller
/palette
/pallet
/paperclip
/paper-plane
/parachute-box
/paragraph
/parking
/passport
/pastafarianism
/paste
/pause
/pause-circle
/paw
/peace
/pen
/pen-alt
/pencil-alt
/pencil-ruler
/pen-fancy
/pen-nib
/pen-square
/people-carry
/pepper-hot
/percent
/percentage
/person-booth
/phone
/phone-alt
/phone-slash
/phone-square
/phone-square-alt
/phone-volume
/photo-video
/piggy-bank
/pills
/pizza-slice
/place-of-worship
/plane
/plane-arrival
/plane-departure
/play
/play-circle
/plug
/plus
/plus-circle
/plus-square
/podcast
/poll
/poll-h
/poo
/poop
/poo-storm
/portrait
/pound-sign
/power-off
/pray
/praying-hands
/prescription
/prescription-bottle
/prescription-bottle-alt
/print
/procedures
/project-diagram
/puzzle-piece
/qrcode
/question
/question-circle
/quidditch
/quote-left
/quote-right
/quran
/radiation
/radiation-alt
/rainbow
/random
/receipt
/record-vinyl
/recycle
/redo
/redo-alt
/registered
/remove-format
/reply
/reply-all
/republican
/restroom
/retweet
/ribbon
/ring
/road
/robot
/rocket
/route
/rss
/rss-square
/ruble-sign
/ruler
/ruler-combined
/ruler-horizontal
/ruler-vertical
/running
/rupee-sign
/sad-cry
/sad-tear
/satellite
/satellite-dish
/save
/school
/screwdriver
/scroll
/sd-card
/search
/search-dollar
/search-location
/search-minus
/search-plus
/seedling
/server
/shapes
/share
/share-alt
/share-alt-square
/share-square
/shekel-sign
/shield-alt
/ship
/shipping-fast
/shoe-prints
/shopping-bag
/shopping-basket
/shopping-cart
/shower
/shuttle-van
/sign
/signal
/signature
/sign-in-alt
/sign-language
/sign-out-alt
/sim-card
/sitemap
/skating
/skiing
/skiing-nordic
/skull
/skull-crossbones
/slash
/sleigh
/sliders-h
/smile
/smile-beam
/smile-wink
/smog
/smoking
/smoking-ban
/sms
/snowboarding
/snowflake
/snowman
/snowplow
/socks
/solar-panel
/sort
/sort-alpha-down
/sort-alpha-down-alt
/sort-alpha-up
/sort-alpha-up-alt
/sort-amount-down
/sort-amount-down-alt
/sort-amount-up
/sort-amount-up-alt
/sort-down
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto pgffill 16.0002 0.49998 moveto 18.00021 2.00002 lineto
16.0002 3.50003 lineto pgffill  grestore} bind def

 /pgf2{gsave exec 2.39105 3.38733 8.26909 0.79701 pgfe pgfstr  grestore}
bind def

 /pgf3{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill  grestore} bind def

 /pgf4{gsave exec 2.39105 3.38733 6.97394 0.0 pgfe 7.80008 2.40001
moveto 7.80008 3.20003 lineto 11.20012 3.20003 lineto 11.20012 0.8
lineto 10.4001 0.8 lineto 8.6001 3.20003 moveto 8.6001 4.00005 lineto
12.00015 4.00005 lineto 12.00015 1.60002 lineto 11.20012 1.60002 lineto
pgfstr  grestore} bind def

 /pgf5{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 4.00005 moveto 11.00012
4.00005 lineto 9.00009 2.00002 moveto 12.00015 2.00002 lineto 8.00009
1.0 moveto 11.00012 1.0 lineto 9.00009 0.0 moveto 12.00015 0.0 lineto
pgfstr  grestore} bind def

 /pgf6{gsave exec 0.59776 pgfw 9.00009 3.00003 moveto 12.00015 3.00003
lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 4.00005 0.49998 moveto 2.00002 2.00002 lineto 4.00005
3.50003 lineto 16.0002 0.49998 moveto 18.00021 2.00002 lineto 16.0002
3.50003 lineto pgffill 0.59776 pgfw 8.00009 1.0 moveto 11.00012 1.0
lineto 9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind
def

 /pgf8{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto pgfstr  grestore} bind def

 /pgf9{gsave exec 10.0001 -0.49998 moveto 10.0001 4.50003 lineto pgfstr
 grestore} bind def

 /pgf10{gsave exec 0.59776 pgfw 4.00005 4.00005 moveto 7.00008 4.00005
lineto 5.00005 3.00003 moveto 8.00009 3.00003 lineto 5.00005 2.00002
moveto 8.00009 2.00002 lineto 3.00003 1.0 moveto 7.00008 1.0 lineto
5.00005 0.0 moveto 8.00009 0.0 lineto 12.00015 3.00003 moveto 15.00018
3.00003 lineto 13.00015 2.00002 moveto 16.0002 2.00002 lineto 13.00015
1.0 moveto 16.0002 1.0 lineto pgfstr  grestore} bind def

 /pgf11{gsave exec 0.59776 pgfw 8.00009 4.00005 moveto 11.00012 4.00005
lineto 9.00009 3.00003 moveto 12.00015 3.00003 lineto 9.00009 2.00002
moveto 12.00015 2.00002 lineto 8.00009 1.0 moveto 11.00012 1.0 lineto
9.00009 0.0 moveto 12.00015 0.0 lineto pgfstr  grestore} bind def

 /pgf12{gsave exec 0.59776 pgfw 10.4001 1.60002 moveto 12.00015 0.0
lineto pgfstr 0.3985 pgfw 10.66016 2.49069 moveto 10.66016 3.15096
10.1249 3.68622 9.46463 3.68622 curveto 8.80435 3.68622 8.26909 3.15096
8.26909 2.49069 curveto 8.26909 1.83041 8.80435 1.29515 9.46463 1.29515
curveto 10.1249 1.29515 10.66016 1.83041 10.66016 2.49069 curveto closepath
9.46463 2.49069 moveto pgfstr 1 setlinecap 4.00005 0.0 moveto 5.08101
0.0 6.00006 0.9 6.00006 2.00002 curveto 6.00006 3.10002 5.10005 4.00005
4.00005 4.00005 curveto 2.90001 4.00005 2.00002 3.10002 2.00002 2.00002
curveto 3.20003 2.60002 moveto 2.00002 1.60002 lineto 0.8 2.60002 lineto
16.0002 0.0 moveto 14.90016 0.0 14.00017 0.9 14.00017 2.00002 curveto
14.00017 3.10002 14.90016 4.00005 16.0002 4.00005 curveto 17.1002 4.00005
18.00021 3.10002 18.00021 2.00002 curveto 19.20023 2.60002 moveto 18.00021
1.60002 lineto 16.8002 2.60002 lineto pgfstr  grestore} bind def

 /pgf13{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto pgffill  grestore} bind def

 /pgf14{gsave exec 1.5 0.49998 moveto 3.50003 2.00002 lineto 1.5 3.50003
lineto 3.50003 0.49998 moveto 5.50005 2.00002 lineto 3.50003 3.50003
lineto pgffill  grestore} bind def

 /pgf15{gsave exec 3.50003 0.49998 moveto 1.5 2.00002 lineto 3.50003
3.50003 lineto pgffill  grestore} bind def

 /pgf16{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf17{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf18{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf19{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf20{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf21{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf22{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash
3.00003 0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto
-1.65689 3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689
-1.65689 -3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689
3.00003 0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc
pgfstr grestore newpath  grestore} bind def

 /pgf23{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMRomanCaps10-Regular
%!PS-AdobeFont-1.0: LMRomanCaps10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRomanCaps10-Regular known{/LMRomanCaps10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRomanCaps10-Regular)readonly def
/FamilyName(LMRomanCaps10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRomanCaps10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-496 -290 1501 1100}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53E3095EF5AF4F01AA2B5C2934E5345
1D88D311DB46915432DD0F408112AADBDE54032868560673D08129A1793B6FDD
D1D82ACA35A8223DA18ED7A03094DE92156D5D0B42FF6C449A1823CEF7555FCA
B35573829AE5A55A1381600C734661125E28C2C51EAD103F3DD496F6EA7096EE
8FD3BEFA4FBD7391DF4FAAFA38FCC474FC632D8A8C890F5276629AC2552B74C5
3C8C4B1DF8FC58A3050CDF2357DD1F98E83C4D077AEE399C268ED59CDE9DFA68
BFE8629B52E8DC41DEEC0C9E84BDEA39B4AC552839755CBE2DC820864DC9612F
16D1A532150DE0137F647DAE154785D152CEE57AE3FF8F671B20EFA22C5711DC
B9F8AA784F222AE1183B01E2AAC6254D7994624D1B351DFF6CBF3B4F7B1DEC63
CCA90AEB60F15A33F727877927E80AC8722C27C584FB671FEB518D1DE33FAA48
3173C60B382AA1F0B22369BE368CBF749E7559509205B38DF4326DF6A6161C4F
E3553EE51C42032B00F69252E9043B7928B2824FCDB5189B3020CF1D596C59B2
135BC9D16D037D87C31B091D7C4DDDFAAB32D68F9C396CA3BF22BD6824BFE582
93520934A63EB6473935B1EB4801E3ED6475320DBFBA8C2F3F98F03DB06C3F05
B0B06847EA50E8220C87171F32F759EC361701793C97953550ECA6D4B28EC2FD
607D51FF237723D79DF208680711F2DAA6172AEBF28B736756CFE9D56EEF0156
FCC46EA96AFB2A804A3BEE06E0A59EC3652633189E85E68B5F3EFA7CBF91E3E1
D7472E66CCE86A28D2FE799AB043DA1C74EFBEB5C5AE6123A71702861463B56D
7BC98F38D9C0B29C25645142AD8BE57953956B838F815285B8802EE4BD0817BC
404C04D71B0FDFF6DC455B51B305A005DD7796527CD8561337EFB990C47DCC87
E2A042ECD49871111D71785275257C303761638CB0EF14492762F5A1CB7BD472
F0B01BB09FC6863455F33DE4BEF212E60A9021B94F42EE04735AF673E3D24A74
35BBA4EE640862CC2C49FD18BFD4A21FA259DED7A5F13C74E62BB9A4633098E0
15F6E5DD084E687F8909E2288265BB98D64189CEA29065AA87E8BB636C3FA965
32FA00F88F4C98217A140A3162D903EDE2880C3743AE61EA1D3E2DA8EFD0F95E
E88605CF6872260A0C808EB620E9F9156627EEF4B4F07CFF943A70AA730E2B56
3A5912AA256C9519F4F8A46E512BBA9F099FD0A4E11C873E88DFFCD25D0F0805
B0EA04ED10F3D442573A56648C90B3D8C4C44741A535D965E48F0F4AD114076E
79FD9D0DBBC50EDC121CA1ABABDCA567BB9D28CB3E5AE17F756273333E84F341
637A1BDB292EADD055C971FFA94B4E72EE284C44A9C294B2B18D9A2E50D90BEA
A161415478975E25D1E928C5867A495F88565BA02CEBBA62BBF3976782EE4B45
DF434B01660CFF3F89AB4FEF6BC7F7D7F83EED9F947931149B6CFA3CC38B537B
6C89BBCCE6C448AC5C61D17285F9E2E321C96C5501772C32C2B6183CA0BB5DEE
4B7C3C8F0D77EBB70D341E595B5A7BFE2B471EAC3CE6C0BB9A046AFF0D3CDE8F
81C142E70727135017B39A5A1AFBA562AA96BAD4D66958AA329DDE6CAB90B3FE
38E49F75EC083CE28D488E75BBF597DB49E3F42610D596C1D91A878EE680EB84
C857186645C467EC0164AB6086D2C2D95C1BA20D36E2E8C1494640BCF0294FF2
103926BD4D83104F9B660EFF434CCDDC96CC25E9F54CDC9E19D966D068DAEE4E
1255BF293797A1BD1FAAB9AF2BAB48057DE0E3C276E3A5117350E877FFF97EAE
242EFCE7ADE5DAB83C34AC97C66C21F4CE4812FA0F007C12820899207C35F3B0
14133645FB9F8E53A6E2A1CC08CED4D33CE9B69E7A5D0E31726EC3BF9FD98C0A
E5BA1BCF5166779F26081CE1DCF8FCBF985B41005EA0771D91D5727FB447795C
A639A5C9057E97FDC795EE6B7C39AF1AB0338BACA1A1E179F1AF0EABA623864E
553A210AE8C03A525E467DF8744A8B6DB57E04C99BF7F568041BF90B5EEC2B73
9A109B37B07E8A668E68D117A3E0C46B11617838874E7F840DAB45050FC413A5
037107717FB43013DA06FF41184DEF3526C06FD5BAB6F3763BD358D6931EEA4A
860E1A17079A59DEB9C7A4C0FC68AF583ECCBE6FE0329A031820D4D1DA9D11F0
2D650DFEAAD917E7F290E617903792223A2AA23AE7069154690EB370F940BAE2
395473B7C2F70EB4DF0E94468FBA1B6D5F1CCF350E3930ADAE5249B3D5CAE21B
281B22FAE6EE3AF85762C36421F291360670443326A44F1F4EA0E002D8B94CDA
144057B4D5F9FD416ADBAD209422879682A8D0D249CDBAB31345F45FCE24252E
D45316EA9E34A9EA03A6C950682BD7E72A81DC4FB2B9CCCA501761022009926B
5F55C9CB2855D5D049D3C73CBEF771A594437E6E1C6B0F15FB3102DB7A3DDCB5
3BF882D33E5A43EF201EC0B415DC701E8FE4FD3505B993F5CFDB502635117336
387D170AB42F95FFE8C79DD1C5CD4860749F82198FFFDAE1393586EFD3956EE1
0F7A3EC03DBC1045CDBCCCC3950C6C443E1EB25180C92F0640CE6A8AF3AE7EB1
81C2E4C11086C2ADDBAEFF30348287C9C3FA8B34A76654DD7AD692702C462BC8
6360DF3B3C743459AB088BEA49C5D06D6EB67124373543A2C18439DB2227247B
30A41C72B8836026F60961F8EA96BF0A4F3E778B9002DD7488DAD1A42BC257C3
C7149CB99114E73DDD3F9A78BBE152E1BAD8C1A22328682504131249C8468ADA
F74760105E07065AAB5CFCACB826EFB41D1A7A6F59DC8AFFD065CAD27B9EB202
0C908E91E81B07A92AD544D202816662873464594EBF58A0B38A156331EEAA0D
0BC24BB44DFFFCBF4181A86F0A4BD25C3921CD2BA8360AAD322C021122E962CD
756DE48DA93798FBDD034F4304D5EDBBA164DC9E9B3414D00E9F5B712394804B
D4BDA26FE7C2418EEB63B7E393108CADDA24C91C1962272359F2535FA1D1A508
FB5023D07D392FDDDE2AC0E0708B430846E137E6CA0B5436653A968FE24DF8D4
6D2003B45B60BB1B6D62DA735DA6689C2C03F196ADC11B27E608674E546D2074
A3AD2FDED543CBEB81B9271E5EDD5DEAA97BC86C948570063933291D78AB5298
EA92E13430C7CA1FC658FA031AAD0EA5B01D22253D6C26BF3F435E6A6E9147BC
1B68EA135225157DBB906F75C799F437E74F0E185AD518B7E446C30415CE5799
01D43D8E2B08A04783C5E1AB77A3E641BFCD7753EC20A9D8AED089AF77F0C5D8
96228A3AF8A96329A5F0EA14F929D5598F4437AB944A06B5EEC3343EB29A9271
70DB0EA31A11EE7634FD75CAEAA480F411AFB3A933234276082E17993B297043
B2F75674AA08FF419E5CBFB6407856406CC9C52353EAB3C79BAAEFD74B08910F
452C7FD271C1B9BACA52194DCABDB4284B77C573C5A7EEA60AC017A3CBD6BA59
A1AC2BACF1545011EA84CB75B2C5ED13C702870ECCCD60554EE8C5D4B9F2FB5A
92DA2D93B04417CC9240E9C692407250E7D47C97F9B3A11C8CB3EA31F589BDA6
00E115E70395E2E4C0A29284FD2C9A8740851EDC442490FAE8321683AE4A530F
EAC44A63E2B90731652CCDDBEEC58F573951454FE7AFA29CDDEF96E951AAA9B8
EEB3F9BD5F13210AEC71AED98317186244404D4812EB1E27A42058A387726A74
FD74B84CEABDA95CAA798540DFB193A897AEC52D74BB6747FB9CD5A633DF5375
2834D9E6147A844A7DC46DFC69EB7B63E6126545B566CA3099246CC6E5F85E04
5FE750DA4A9B403FD293CC4363897147A165FB658A4E7A74EE6C22C2737A8107
63C405C5DD41D7ADF7112DB70AEF68FF3B8773848FB918BD1D4D4963B96902F3
A84599D73EB3303D7B74883137EA5EEE14B739F60D45D102706C99D92E1CA501
846CC8AB6FB3AD6AC55575E66721F58FC39D634E3C68CB3E2E24D61819BC8515
9520ADC69ACA26ED5D96EF04C2AD0153759083DBE7DA9B89D877992A8DC821FB
5A141A58CC2A46228F2F642101F5B23CE1ED3A79F2C6006E04619B81578C0EA3
C3A72402DFB9B35C8E59BF582621648F48CC413EDED067EF9BEEEA1134788A6F
839F2C2FB22529A38153E830445FFF661BCCCA767DB0BCACA4693DF0370A9804
2E527BD65EC1E77D32A07DD7E1149715178A46263EFFFBE20CF045D1F128CA45
50BA9D6D6DA61B84D00CBC9FAE5924F8209ED49D597C20A0CAD1C2D3424E9CD5
8A179A2BB40AC54D2E45D206928BE43A964D2311F07753D0CE4ED2AD6198A473
F1F9EA821DEE99E27D331F0559477F0CF1D9731533BEFE67747FCBD3460F9E80
3E409065E158DA49560DBF9060489CEEBE735CE28EE4ABC81450157CB7DDACCB
72A0FB560345386569D9DEE8754EBA551B635693EC4FEEA9CDAE3564D5DB1DC8
0645A5DFBEDC32C58223FB032506BA87BA582862CCFE1FD43197B1C7953BD8F4
DA1AEDEC773D5C063965683DCBA5BAA51ED9F1F601F0F088C4C2859090964202
143D72C13B747461135CBEC72D82A7C1602B824629FA3F773B665ADFF0135A65
ACB5311765991CFE59744E7CC201895FC7C2415439EA0112F1804CEFA65F5653
92ECDDDC6641E651C4CAC35F163BC67A18CC18839FDC4EB001A723EE59734A18
EB12CD7C54DBA9F8C47428CFC2B96879AC6792E812426A33CD78A844120B5B67
120BA7884AE4336F3FEBD08B7B93B550CC6D1ED120AC16308B6DD2B9A8F686D6
AA020E49172C02DA888DE03EC12D4EA38E7D327F0F4C117F34AB17610F5D7F76
C207FAF88C8FAEF2476515A41387CA09174006C8F2125DB485D1F37C940A8F4B
3E4DCC91413C3273DAC2A3FD2C49E3C9AB8FF8EFC8DA34C873E57D38B01DF487
3772137582971F3249E6694A24DA005C84176455BA74C8A97447861732DFDA1A
5752B5222EDD9012B45CF0DF0644B2E5B7AE5DA72EFE54D294768DE021DDC1A7
C76EF77C6E740449BEE713B7E40F77F7F6EBB4BF933204D9E5E28D522591D17C
997D66D0491D2D29CFA7F4C88869E2D53DBAB54563CC5357F755C48E49F4F103
4A8645A68D436C42FAE21F2C158167C6BA509BED34E0B0DA099434D7FE957C3D
52C2AE0E9177DB0B86627B9DE43A7CAC25E8A1D8B592CDD4375AD01D63E8F687
46B8029C831A0871A8F9F2E264EC10133C444A86EF7C38608D246A1B4379C45A
7C34D82EBEACACC718F5905E864DD54CA062EA1FF406D9E2E42031876A1CFCE5
8D611A8435A8459CAAD2B618D4BF9115DAC5B425EC8BA4590DD3555C2E4BB601
97FBB232487FD786E57CA1229401BF634D445C93FDC157796BFA5502F105FB79
F31A554D8BF98B8303CFD661ABF9A72CA0629AA65989A7AA9AC8B6930AE574DD
D32FF4BD7C970D933C47EA4515043C418049903E3F36885AD45509FC3CF6F31E
975595338AAC667E1ACC0A3D0AF0B6A0995FA0FA6A1C7BF34A0E25EFB2AD7503
D23492E7E980B2C4324736378E0843451E4D9840AF87F800D3B6E0248AC51AEB
F052E92CDC3ADAD81E2D2AABE09DD98F5AE00F69DACA0535AC90368B31AB3110
CB4EB8D00DF6246BA012FA3416E1EAF822DCAA6C0C4142A552F0D97037FD695F
92137A8CEB212797BBE778DCDB2D0F6726BCF115DA15374CB688BB2F98BDC3B7
21DB34D4C6186E5CB2E597FE2055304950D905D6AFB4390B62A3173B522240F0
D3AB72588D98BAC8AEF2D4837251BBBF065C283B7C7B3BD08D7708CF72309950
D176CFAA1D155312586A9ADC136D9155C3C6ACBDEF8BA575387DD0D73162CDDD
96166F795921D90204DB9F3E3FBE084A2DECAA1964AD31D9D2F4743E73B73557
69B7ED30FCFA10238AB9E263F42C980A603B024C1844C08D06E40C58072E7D12
43257B02B8CAFF2AC2FB7868A7FC61E6AD2CF8C5CA6111D592F4184FABB849A3
676A8D175D44E71B9CEB49676700958F17D09D8B8D37746E5AB46052350D2D3D
6947F4B53D2B14FD50B4CEF4398D2D2BE7E7A3103A10B82E0E27702BF83306A0
C3A89D9AD2A517E03614C8349282F97AF2292BEEF24F886427E846C0BD15A807
62263CD8C96EAA02F137C2134A47241E3F15A881F6A2FE15BD745CE175B92169
7F9D9FF0803559FEA211098B4B45E88443AFB83F96DECD5E0B32C5EA329CB342
00253C789CF8F0CC740618BA5DCDAD4693F4E17363864CC8AB69FF9238E0B18A
F4114B94CDF5DADB44EAF5DB260D8B8BC3027ADFF7DBE2AD88CA3261C59CFC1E
C0418A91E44F1718D13CF485B3CAE0E01B327EE29107319D27F242A8681C2397
F448C46BA164AC7BE0C0A73FB423A2AD05E28D490FE15EBC6A6956477E8B7DAA
F1AE28A6B253A55B77C969975DADE58C1A863D53B67DFFDE2F48652558A2D707
BE5A2C968491730CC85A6FAC2CF9D670F1FB69EB4966334402F76388AD6AB9DB
661A04037C111998C99A0A09C9002478AA31E4240F13D73182F04410A11A88EB
D5278ACEC4A55F1A082D537B3C1EE890A6FD2ECD5F4D5DE99814AD4A07983923
64FE0BEFFF89A5599AA47087D62EBF48C20DCB99FD2BAE6853877991059EA431
7ACD1B3B44D9E5F789B7877ADFBD0F5BF0D86E0DC7B68A3F2D8B66E59BE53EDA
B3DA137D59CC6EFA0F579F8A1C5E4FFF0AF7FF5CCE31B93E4048CFBFCDADF56B
75CC3A9291183CA5F1FCD9BACF833A9D58F384DC27B11B3380AED6F7A6719B66
AA3E4CF7A10D86C2E63BB1BCEFB27E668CB9A72C46083DD42729C37C41DB7347
D16B9C41AAE346617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DAD0A1CEAB6B77
A4F4A47CB6269D49966E24FE51C7D95B1FBCC83587A2536500DAFBE0CA7772A5
89F8D9CDE0932B5D3A1819CB2732460837EDC62035D7D232AD000EDC4598F22B
950DDB38150538219C18735C6FE1823BC63C569503A4B5CBCCDFEEFC01872476
101D65E487A587BCA95243A1EB5BA0431C918A879828150795CF2BA78D4E55F1
FDBABB8BF813CB9DB27CB44AA47AA0D4E648240D872FB7614B5068382C766444
22AE18999FFE37981189CADA735CF09EBF4678CFABD1A6D3FBBF8357D4DC0524
BC6A4F583F56C127E3666DF8476D5A8A6CC0A5B1420DDB2B7E75B0A8C76AA6C9
98C9AD482CED7C243C9688323D96A3F96517CFF904BA26767486441050388419
88EAA2FE0155EA8DC3F8EA9DB943789A191542089E218EF40FB4942319C28B52
2ABAF817F506EF45F7262128F935F4893B87C2220034C6F979B5B3DE3BA5858C
38C9C1337A638C0E5C575727665665C88AD38E13EB02AC3AE5CF08B53BAB7FD1
3E263C2549247D8DF74C6863D43B0266C927FC0C7682845F3E4266B7D327312E
FB770916FBAA37015011999870F0AD19B5EB1B9D54BBE7593C45B8F41C203368
AB891AA0006AFDE458F28C88624B7CD1FEC7F9EF2C74697D12EF1AC78B34E566
672E71A0A5B53E6FEB67E477C72E6CDA1458BC8DB8E1DA62D42F448933905E64
F93DE35FB61FDFA5A4C78E426D6F68DFE42F76B1CF5F095DCFF46884A1AD7C81
AD55FEE036634EFB88A2B1ED19E37CF0B527D14F008E134FA0711FE40BC8A925
3E5027D8FE5FE873E98EEF621E059DF969C14E19E1CB4EB43B64E6957AEEF5C1
7D832383CC11E5D6419158E6A838BB3106F54CEB953F0C16D9F1CEF47274C469
0FA0620F50E5BB14A0F359C4C172951461E884747D6E5D29114039F59776D65F
0A6D9E5088AD245098A9CFAE5B44CB364AE68381B4DD8789E1D35D4AE06A0511
07EA4D90D3FFD25223604AF01B5F46C739DDC81B47978F0BDBD79F9A6A53DA20
0FB56DC483BBA3EEA535009B3A8AC750DA63EDE128761D164A9843955BBFEC72
13307B78378886F93C1C822EFA66A75E01A68758FD97C5928BB2B1DCDB63CA10
90BA2CDF850F9E1A5C5856D41D8FB730E048E0EA435515BF52FD453207213F3E
13FC83A36F2D86CBF4AAC4ABBFA39688BB222A81685006706434FFEF6D6EE0E7
0900D14EF927A2F0C3A8BE6E4CBC44070FC79D85C273074A7E31F7C63BC4DA2C
8E1C1CEA7000F63CA5BF75389D057C364EB8747A414F55FB4FDEB79A695E89B5
B2C3987863CB4B29ED6BC20B0687BF97346B111AAD8EDD835B26DEE73E360BA2
4603A6B42398895F1F95D5F0D0225D8EDA64581718ADF5FBD7277E57E9919BD1
0558E3A5022F158043BEB6A6820566EAD71325D69BF3460E9C3C7E0C0F1BB457
048ED47325A221E91DC93BC429BB517890A8F857C2F54BA01FAAC221D701C672
36E08C7A56288E339620A52776770935A6A193FA21A3DC25DEE1FF03955E5671
C075DD53A5A82FE7F773815B2AA555BB03CE19B2B72268C40F772CFA2CD7A598
A024222D413287F7481B9AC0E13B169DD71090499B415AD8AAFD99AB5DE2BBC1
1B40ABFB7CE655281EAE4F27B1E027C2A23E63378F5339306A9F79BF2523B16A
083F710C102E07B67194745D7159FCDBB10B6459273EFD03520F2483A9E6C0E5
665B54CFCA5BBE96B39E69D388D9229C1E361D6C47FF84A49AE0C70F71EA41B0
2E1DDF2DE8630CFC5F2C8AE1E5BCD78411D194A831BD263880153BECC873A9C7
1796A7807E2345AD02481ACECEE7243887DBA28E28217389829F4D31CECC14EB
7C948E6E6E104A080B9441E0BC3624493ED50AB68A0B22A779D7D816629D1E36
FBA83C5BD9BC2C57BCEA7F9A6886C9F13EC903E886DCB7291933374888A65847
44692F87A67A218BFBCC8896E57E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243
E79E7B7164A60BC32326C2D36742C0D71D21C63AA4DEC82918F11F62984C5F85
3516C1419DF929D29EAF4490A01F57EEC3A27B18E547B77AB0DD203BA47E66E3
B8932462C277481778614D372B043761D928D66FCB9D760D3096B5CAB2A1DD50
A23E443D8A30572DD2A12550B2D61B5B8D3DA00ECDF9FEBE424C8D607EF6BABA
6D1482E9C494671BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C6F27C5348D0
4809C49896E18909ECD6892BFD2B0D73A84B6E682E463E69702266FBCF04AC9A
0CAB64076EB9EA884B2F5A13400556D1D07217CE900C16506F570143710E9AEE
87EB93711F2A49C15DD57EA42ECA4E6E8D58BC4A195405629408224D07020749
9DF2F43E7D52E442E951CEB1C926563979CAD433B91341797AC8D4E9842A2025
15A73ADB4AEAA456ACCF3FA9FD5C0D7DE2197E5C96CA1E77BBDA711E73F6CF45
F31613A24A30023BEA9A207E8E4E119B5356CED765F73F6935478D5133B9E761
4922209C25478E0A63F78F3460EDD4F64B4D2A5B3E660B614F62A53AB284FAE1
FEB947C50CE8BE18F24922B066F392E4321F75C42A86C70CC8E4AE8F6F84FC65
3EAE2D03CBEBEDA67F83FA8F1322A68097441DA3511D8FE63394AA5E6B7F441A
D12126999FA71ECFDD70607C4FFA2A1D6C138C8A750A892DDAEF50284D2CEADF
C997B78F9AF18E63822DA479E4279465A6CBD43EB5B5DB8B72E96306900A09C9
002478AA31E4240F13D73182F04410A119C72285F06F1773BAEB6FC8CD2EAC6F
0799C903D18C64FE378916128CCEBF8943967A33F856A40BA5B302782175203C
082BC703ED67F8956F3C757799D61A801701C34E5F0311D00A7FF64F31505AAE
C9170516D38C247C25CC98E436D6B0129745977065519D41FEA05DE277A2B681
6846BF7BEEBF9D323B549CAD581F17DB11717FE745194FD74DDFA29EF38C14A7
D31F074565A14EB60996DCAA0762F3C701390274F4A233B7C21EABC56271E0D2
6F4D8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D51564ABBBFD16D44724C916
7C7F909DCEC3005810B42BD9CA1B33DDC4B3D69A6DDA20E104C5BAB68F3D943A
9B0E24B8327345DBD550F4D3A85FEB2007E09F408B6FB0408AEBF36BB9459C6F
41B3B4EE5B63571F18E7077F1990611E243FB8A327EFE9CBBBE8F9B76ABA9F6F
7335FDFC57213D5D25DAA9FF60D639DE068E6459B14ADFA9FA485D2B692C522B
F8E5FB4531330E02C9A8EBCD6C3AD71A1E40A4D3F1B93134816B1E636A2327F6
240BFF595E24EF8941707987E8E672F486552480FFE3D56EF1EC01FC6D827091
334762A700EE46CCFF0F8222069A239E9C090C056C50ED33CCDF1DC4CD54AF2B
27F3898D35DBACB95E33FD81D89FFDEA459395AEB1FD2A2313C4619C3924D6CB
4C7156FED518164901F83DF3BAA6A0ED3E1145BF13B94FD26442237EE2121C14
F116A1114838B333EF11ACBCEC26CB9945AA4F8F616FCC76E4B0D7BA8C76364C
F343FDCB3945F586BFB542B229FECFCD917788FCB6F16B6C1C40E3E00F45773D
C20480C8D6BB75756FFD8F5C7A6D66A69276CF920B7BEC2E368A095DC1E3A421
F0C532042E003906F07403A54AAA87A7CC1465CB48ABFD9A879E5B8A847E9323
2C034664E2C43DF499BE3810C38A4BA01A31B5C80138263B8E0DA1FCC4238D71
517DA16343332416C4BFE510F180C63CD039D399B1D9C4208BDE9F2A8208512E
1E9EB36A96421288D8A846DA9F3D3B8DC89359340E6D6E4BB80425136F59F84D
8B2D3548C5EA909142D33AE8B2BDCC9705D1EC8848293ECD9599CAADB700A176
76B96C607DC49759734D8F1EBBF10A7E363AFBA180CC2897C588A09FDB14647F
570BBEE55DC7F2AED3E75B7AAE70ADAA461BAE73B4CBBA029A5BD8AB7E658340
5263C510185BC34AAC67226177133AA7CD431BB67C5261595CA2A18E0FD97413
5F38D540014D38ED97AC4F6058C1B834BD195096C9A61145921EBA98A70B52C5
BCA89089361DA0D7AB8B979BD91DBF43FB52495F20DFBF159A58F3D4BCCF3638
857C25C73B78F5C35FF0DD1AE8036C3620836DA8BB5CE31BAA722DDB36BA5642
CE4110C57A3A4D95D4D5188EBD111ADAF13004B95BB6A1F91C919C28F67F64AA
534A2AF512C1F2BC5BEE9F21801512D2455DD4B94E0C5EF66E5F4252E5511A19
172AE7E16B6E84C13265E7A78843F80CD719C44633862B102690CA956190CC61
CEF424A54E62107D2ADA1C19405B9CB4C39694E52AAA56E56F82678A4327EB6C
A34EB5A6A8B1C41ECCB9418C1094CBAB96EE405DCF58E3A569DF07092225A683
511770EAC39ED55DADB32778CAE943CE6E928D5C8A44F0B691350DC0E4B38E4B
5B5868A34E643E6075C7A82C17F569049E4A119632C47683095845CE5281573D
CCA18F596C2A638DFA3A2A0E4088072A3C9E36431D9A9656D60135F7B7941CCD
EA0BC0168ADAE8A1716BCAB61A1FBE56DE145488C0306C6EE589C2E71F0433B9
B8200015BEE977FEA781C3B8034170F9FCF6324AECC2554A56897CBF7F8B7139
ADF77EC4DA414C2CC5424CBACBFF09AB4F4962A697CA30668A1809DD72B71A4B
BF6C618A4EE64F0673FBCDF58BAD19C9CFA9D528D104702E4AD8F19711F44C14
87A8A062B0E7D307423CF2852AD05690FE1912DDF6CFDCB995609788A176928B
EB2B6E6007ACE26260537E178406C35173ADA131F8880C15E753D7BF2E4BC089
2953EAD550817FB700822EB157C4BE8DE18B2AC08FBC05291063120165B4379B
1A4DC9D967DBF6AE8C59B9584224CD65C6361095861A84EA1B7A991DD837F2E3
96EA1B598CDC2B459A81B19A090AA25E8D0036616784228ACBA46F5DDF43D3CA
439B4506CCFE90F24ED9CA8B3498FEDD429B1B1B8550F2219E7EF9CC64983581
38BF2645040109A3D2D98CB563D4CEB5C030A7D2F6DBF55063AB7EEC2FC100F1
26DBD977068AC186C94D6BDC3E849EABF685A634431D9FCCDFCB4A1195C76A6A
D5138A35588B794EF9FE03CDD26508432F9ACEEC0C86CE8744277F5C32166AB5
39082917BFF7EF652D589681C60B99DD4F132248742876953526D119551A8B29
CCFE9D9B35C9A04CDB15B160C3E2B285BBCFE14C06C490185488510704D87E32
41AB1B0AE52F898A234931F910D5DFE85FE2218C80C58E34DF3EA0718B7C8E2D
6511B059092391D17C997D66D0491D2D29CFA7F4C88869E2D53DB8DE6F4258E1
A49C6B865B75EAA21C02F7007978FF715C0E3EF03E39BD49697D30B8BCE8B934
1D2DAA72F7FDE1FCA3BF72DB85657F4A3558D4585AD1918E86DAACB86231F261
EBA0BB60C59D40F48DF92AF2EB6EC67815D27BA9BB672751D8A658C45E07B955
8E776E94EC0991B31A4BE92420B6D9F5E6FA1855513B7131C7A04B00038E48F3
936442CB14BD2C5658C938BC685FADEC8C6514A728C83D7E00DFD4EDBF4044F0
E247D957956045B16131155F4296C5D97BC3D1F1C93A6E82767543FEF3277C1D
AC4869CFA865B49FAFAEE9506D2F10DEE673E177D6279ABFFF8E757851AA4497
5855AB9D1E3310DC01B08B5CAB5346609FCB048910F3D70211659CDBCE05F073
3AF96804623A11636472F5845AF507C8EBA6518215D75034119AF4A4A9D8A9F9
24028ED77937B477662CCCE77BADAA08B20B9392171DBF9964BBEC03013F324B
D4B1E3053E4E12EF73AD5B6DC764101CD4CBC3FC2A4F1010CC1DE442DDC48044
4449DB76A321ED1517E750F551AAC934621B52AC90EE56F9DEE0666C2484BBCE
C64AC7004C28C6681794C0E2CA89BB581FF57DDBFF7865063A2AFC57C76819BE
9B78D0F4DD3B3B23D69A58E2C82C1981EB8E18B5EE80058433952B6985256120
82298F0E6E36968C8C0932BA0E02AA42C71D9E27302A88E52BB8B1924F057B9A
498D69CCFBFE7E3062895E706E20DE8096399754FB32677CFC456E5CBE116BC3
DFC67B18E95621D03FAEE1831A15D5205891AF008F869D7AF5E4EF1989FD377E
9724F1BD2A06FC203245246BE57408FCC7B3586AEF5F4BDD49CBC31AA72B65C3
BBEF8EDD9B4EEC32CD7D3C7C2FEC51FE0DA9A33F1C12A392750F3D1D4FE99AF4
D9A1772129A3C3490B8B4529805E0E306E95001663F0EE156891E1537A7E03BD
98EE97FA23D768F48EA462E9C8ADE136814E40E9494038C8C4146D9E400A2CF7
0467645A2898C551E43963ACD7E7868CAA4488EE815D40E28CA54BDEF9122801
8A6DF526D5C66A9F11AEC07A100C7CCF00A1BBB7177AD139137E1E992023356C
5C546DEE5401E08A00FD38A70551FF9C8A68CEEEC3E24A8A8D78F1B9CA757727
B2A7D3A46798F5F975A2784717BCE6E4D0B66E0000BA7FDB864CFE04BD7CE607
0FC5EF576B1DE985AAAC8126AEABC40B64A430C0AA868759E4C0A2689D828D2B
468A3858BB337F0E6842EC5D9C0D5D2596ACBE7E4BB9B5198903BEE40A9F1FEE
2CE3375D67D77D11B92C07A9CE1FFEC4FD57B0891FBA2E75BD5D5D17618A9ADD
DA75ABA8C339C5AAB51AB884232E9D200A40A68E4799E5E842BFA51FFFCEAE9E
1A97661A47326B6308D41B37E844E66954DA9032B1333396FD545000E364E7E6
A79BD95977419E006D51A92C2CF0046A5F542DBC264C611E8BD569D4E7894668
52BDABAADD6B9E6E1B71655C46DE2F505615AB470D93AC31E7FC99288D9FB5EB
919A1D92B466676E57429E6BD74FFC6257A2E0CE1910FF41A7B70BE8A29332C5
DA24457DF7F2AFBA61F8B754C7582A8C089F5553B7617187C50EE0D0D7941F08
41112068656190221491CAE0922A3C733FB9D45F81757CFC8ED6BAB5630EDD86
4ECFE0D6959D5114EAAF1612C970CAA2C9472CA9736B50613961F9E542A99E1E
9EAB27BEF2BCF74FB40E6263AD649C32D00F99B504DD1602FBCC202CC8046C60
9E8D29EB8FCDA4F0323901508EC6D0D3A034E320755C9FBA42428460AC283786
C0E4C0F45DA2C8C78EE355C3B5C349CFAD8F885A3D4CA30C74613E0205AF23AA
2719BC14013E7859D68CDF0BDCFE954601924C473B761EA72FE8B82C2A961083
82D4DE8073A483A2C65E3AACDF4106A11D6366AF685F88D99F32705FFB5C3190
91904AA6F8C52B2F1E9E66AD9E7C3C3C96F6FD1D2A69856DE6ACF6E51395ED67
AD441581D7A43EC3324CFF3DAB7E17D9D291D0CF9CB9086D116D56152BCE3296
95FE8A830CCF318CF0DDD078FF2E319A37EB5CEFDBF36492D265A24D538031F5
D1B00F3C41E627B1DB9876EE658C50AB2BD9D2B92C897D83ABBA76105BFF7E79
29B8B36A0F3C3F8378B427A87086EA10A597E1623529F8734C0E096F1BCE149F
8B0F4C80FD9ED2073D21FF50B841774BC20AA8870AA9DB4ED19128C657C8098E
D5BB7691BBF8C1F6ED0358B085054144022BE6620E3BE3BCFF07C029D465A074
684244F63F8367906C7C4648EF33244ECEF4405FCD839685C2BD7D5FC1353416
8DDBA44083519C586F6BCA610DA67BCBB18285BD9C0C838711A76C5B5D57F356
EA414904DCBB1C1FF12E5BFED5253156E3A76B45CE938395E129746ACA103A34
C38A7E6808E1BA082060EE975BBEE0EE2360D53A6C2EB0393A21C2984E95892F
8AB221D586720A71FAFBE2C80951B24AAACDF129B2BB843A35372A2FAE18AFAC
C74586D3DD54067F7779D9DA069D7897314C617685D05AE401C710E8EC03A64D
8C462D8E458ED29A12F56A9D3FC1A5A59BB391F99ED1BC64F8850BD7F2551F3C
144EC0BFA8529787A6F7E7F29C2C9D31F4094F9E218E053ED37FBC0EB204AAD2
53FF338FEC59B284251A985F7377BEAA49275B5E62BC871BCFAE9AB64224D592
847AE57C85675CF04BFD1410B56E616F68C39FF5608FEAEC6E72A40B22AB733D
F071D6B92B62F165192F48C0198F2957A103CB2F0D1F55AA122628853277D256
C2107390CC3E2D2BBEB1220329E86A68680D1F9DA963B401CDD3C429BD4CC3F9
6584C065FAFEA3EEC98A137AEAE50529E1F15174DF4AE9067EC4E67725672D65
4D5081FCF2663644C985191135F0156722F0BF1DFACDE24649CA49CBA47F93F0
201678944115499724D8B9052FB4F6E0375B8F8640A75773638943DE96B8C4EA
EC254CBA1E05D8C31B9C3178133782ACD3465C5CA2D45C688F3CDDED343F64C6
CAC65D8218E75ECDA7292A0F2FBB4F6B9DA8379C3AADF23AB9DC687ACA989BF8
6F24F23F6F74F71AD0561F50EAD7CB37952D1A0E9F744FBE8041D1C3EDBAED08
9845046259EA79899713DD1E567F28531E7B25EEE41EAC3D35A3AAF9348E13F1
671DB099C4BA1079D778A6FA8FA13E04D067B55F84954495EA3D40E2620204AD
69A42D29B4D95429C7651244276269FA385532E9B57F1C2D2652933D4F316B85
7DD80D0BF6EC0333F920B9031F7626389BD3E392CFB2EEDE173452C0642741F3
C72D84A0DB18152D56A72ECE236FD3A3914574309A3384CE66C909B7040538B5
E7DE80B6DE055DC28C1B394FBCEA0BDDFC44213AD960278AA498A967D890C295
77ED868877C03C1100D8EBF3CECA4AADE5DCBB3F0CFEA4E8A5DAE149F6483523
881EDF02DAEDAE3EE928160342AE6170A01E13666A84DFEBC5A5DC04BFB1D49B
F5BEB4A8F19D264A7F4B1C259E4B1010AC355CD9D1DD0C6F18999CC47EB3AAC7
B89EEEB9E2F9CFC6BCDFD9A438C10C8C604E64AB2F9488EA7B1344329A6DE47F
D59BF4A2987AD80BF0054F72ED0CA0451E5D8A813AD6697E53A43ACACCADDACB
20AB6BFCBDD95D322B8478B7485BE9C86F055D7217D0F46FDC29D08D6CD71B9E
1DE1C50C1C3C85C14940A830DDD392F93F6CE1294B62411E6DF77D4A4A4D889F
D9D7A6AC1A896380F2762679E60FA6E763176E1B2512B04580233972D9211954
9CBE53B0896667EC7ED9C97F909B8B374E4975E93D9FD32DFA0AE84699D182CF
6C029A8E6564460CBE4D5EE06C24C4F502E4EB602446673621049928B01E78C6
FC5FC52B1CB9BBE02BB81F2886C558B9F2EB0504A2F8002B1B13E2A496759FF4
2496772170C511EE704B4308A3727F64393E392FB6E0369BEFA855C8CF4E76AE
27517A9B3ACEEE42F3101F44998749B33FFFB35AD715BB0DCDBB2D35B51730CB
8CC9D14A39917EA3055C85D171C0378299712D1177AA7469F470279E73A0EB1F
BE7B70C8CE0AE57426572795B0826AC0D3E445C98DBCFBB63EAE33B6E75C7E71
157123DE44DE684057683F923A2126FE2A788552F7A3483384B6E646EC0415CF
6D4002CD9FA8779392B0A780E97EEBD2450DDD1ABDBA993B98A90E50CBF66121
08A4F43DBE0FE09467C33DA6A1C61F02BC5847C65C187E5B23DEC4C625C286EB
9AC7E30F0BEE1991402F2BC62D606C038AF2B098A79351897E7B6222B6D73635
3AC4E3D4C203CC50342491D2F70A528226650D38258FE2EADA6E4E1D582F4723
F2143CD07E0E6958254B6D96C9E5485E26B07047B80849C0A77BEDA560ECAE3F
CD7FF41BA0AFCC480F261D7CE694477F749F82E5B4AFFE12BA90C032157C7688
7E325784917AE505A158C5B3D37C1041ECCA0BA811777B5019CCAC36997DFE14
2D7DD000A0E766DFE0F272E311047B6227781696AD545FBE5A80E2A32D7F8462
912966E9E97A67D036FCC3FC5375A979B78F473EE7AF6AFC189BF5E14FD0D21D
656B3EF50D47E923F43BEA1BE16CC04EB2A966CBF4FE707BC7472D56ED0C13A9
66448345074B1F2C00C537A79FFCBB1A784959B43E58965C260A89E7E3BB7ADE
BA9C882AAEE60A026DA25D51A46651A1EE03A2CA61DE42D78AEF016749873529
5CFFA292D5B7A1FADD93BD3CC207D8623EB59F6B3FDF302403A9C2D794743851
18652EB37CB7021F80792262A4D2F354389D1ADE3C1E4BA1EB8855BBFECA191D
4B80212DECEE21CB16BE0DD2A5B6AE12B959415091545A96B78F6F4DDB5CDAB0
611B3248836DD9E54650EE2D2F3EB92489594667525BAF1656DE0175464EE264
860B6E310854C80BEC744D529624024E35566FF0EF71D60ABD9581F43AFD7EE4
A7099844282972DDAB121A040D3D7CC97870F88C3874BD5C497F391141F2094F
8EAB4CC90B12E10F8AE6DC2081CC4C4860CBC1DC3427060C9118E755156C02A9
9A7EF38084D649289E4600F5A67256788F406EFD36886F531DB9D7ECA48701B5
D4511FF86644AE56F46392D5804039C0FF5C49D1AD996A67AB0914D83D859C06
AA049CA26AAE7F316592E7DE134F775A835D46A69D1C4BBD6B53124D7433EEB4
4C724ED69C8697D06A5246DF0C49444B5390076A43C82C91B982B19D7AA8B615
16F4BE3585A899E98988CAFF8DCCEBF494D5676912D5E868E3877779F910B174
AF933326ABB47935AC900487A2273F6AA2BF735C312FEA9A1AC7289E4B43B953
D2EC568761231C3119E073DB7DEED7DC4A04968B69F792644FA8B627CF923CFD
F8CAF8B9C8FB9AC27C8F2C2F86FEEE11AA06BBC0027C40E0F9DE9385F79D5989
98FCADE704A1035C780BD03AF71BAE6A930CD02B6C4D07D6D0998EA18EC7CBE2
73105CE6378A2ED913F14D20C272D14060533ADF2FAB44A60E6395AF687EC88E
429815282D632366039F37D3D55E93A63A397B46FBB2B6757DD564C0BF55E0AC
8EC66E031CE51B2D7D27AB41A21D646C236DDEEF1A23DA64A61F0DBF36B86A59
893F277DDD906E28FFFDFAD7E4B7610E6A108DE7F71F178FC7448D4C2E985072
E0811881511DDFA4A3C730DD7CF5C1E29104673D7270F35D580E8F3BA9BC94F1
31ED0110C946D421B42532E5BD4FE3D8B242EDF647251781ED6CE249DEDCA4A1
FC94E0ACCAB225D733E123302C0C9B054E97386886E8AB5D03167D702466832B
32DC035DFAF601E2EB6615E116FA9A44B8D0586FACDA34A0D0DC74662C3F4FA1
736A4D67CE0650766E29A79AD6ACAE003485A4C21B389F45F8022593DF513D31
54E07738A2E39D6AC9429F1A359112CA28BD92DC4EDA5C72C6F813D53F1E9C37
34B81C2CB5207702A9A0194F0DA8D335635EE2174E2DB99DAE9AF89BEE304763
BBA1AA81F9D74B24FA7EACEFBCAC72DA4AF7C3A7C06483A7FE49E9118C94F79A
DB280E5CC383595D57C51F4C969C464C1CB1712283C42A77AE7874BD4EE0AB63
64E2FA747EE9A89161F93F178D7A24AB2C747B80BDF0816DA99795CA28792796
8E85C3FE71046BF6F87A97CD03FB8CB1FA267164742287C9F05BAB96F90F2374
8B2DA4315C703763D6B35A4836A2AA71B39B7AF614B09A3D9FE54E8B1AADF323
785074E2F023CF26547355053A5B40A0BE90965C2C34C42797BA6CD6DB3BEC3E
2ECFC061F2F9BAAF636F17EB88960EA70F1F0F037DDF2061921A72E46589CC08
EA87EECFDF36B819B07306C00D700345CA2E6113E992D2BE44DD9B12DA394FF3
5F44EFD4D133019C4ADC916AA6F4F5FE8A642DA2E54F42220C01688C94717B2F
1204BBE9A32B02C569FE47B75784AF1D9300E4D8EC13C0B542DB50991CB26D44
DFA0957D4DD0665F0BB9EFD60F9D0ACCDE739B576500ADBDD6E0D981C2149AB5
368FF41481D6B8DE8662E73CAE558AC3FDD6C48D353FC68A77014365407D48C1
350E58ECA8C0532F762F64A11900664ED4E6D4DAFDF0C64F9446C356216312C5
F614AAEE0D8590A3A26854ED51C4A9A1C13E40363B10533A8BE1080729D86FEA
A2193FA6D6C34422C34643DA9557ADE417810A48AA2D73D0E0E9674BD4C83958
81C15ACFCEBD5772A959E2C99D13BA11BFAFF1112E2CCB84677CE03DA00972FD
3106F8FB5AEA60ACB194FB8FD49395A70058C942F80C2313118CDFEFF258E569
E39372E34E3FF5AD87298C696722D1D562D4A8478555769EC2C44150D849A0C7
D966B2EE653CDBDBE9C8F352887F8DB03D70F9E692F0A5A3160110CD4097E3E1
FFD0B18758DF9ADE231B76140270F0A05D53FD964DF5CB87A377ADBF202718B9
E47B1DB784435B7EDEA4BD19388DDF3C5B474F5374D80D469AED90BA08D8A04E
A2CF32810C68ABDAE536D95D46BCDAAFAA5A8301F7DDCD3BFE10B6C23F1C7ACA
39A6117CE4DB91E197AE348634BF44B2108CE10CCBFA1B838169A4577A9B225A
BF538D4B10A9C5FDC801B144AF82BBCCC3E63B027A4C3070D38586C67E8A16C5
60DBC0D4941CB6DF6A0D1E7492A6DE009C0F464678859A03070758C38629FC34
410FAEDB24E5DA8ABA2868658526B74727FCB164F21405F988059A1BCCE6038D
184DC74E2E186A664391B7B84E2281ABBAB44B8B81D92F63481CCEFBF4264ED8
900D17D9632421541DC60BB39BB060ED6495AE98F6798010F76FBF67CA47E5CE
09E60F0839874318C8389E298F554671CE327B099B0AB9BDB8192271B478CE0B
38151243D996CA5AEF4354211E3953CD7AD90239C1FFCA061A21652100B8E2F3
DCA6DAAB758BD7FA7D29C266129C91A2A5804ABE9DBD230FB37711C0E606B1CD
01AF00122F9A948F54FDFAC13A9C437607321D3E4C10059C1091823B03DC61BD
809BB14C7D4FD2C4E6057BE5F5C51A242002726250A2AB4E8AC7F70BCD0AEE3C
4CCE6E1793589423B942DFF7E8267BE5FCB0B209B090009718A49C6D7256EBE0
D843690DF3AF3420D94859E53AEFC9D1DD75BF4A02A4E2C44D18720A9F9D707C
9D341698A75314282E4770738AE96FBE5811DD097EB0065B1E01ABF5E2D8428D
248B16047FD72F0059E35DFEF5A8F444C41D300E540D53723F45F0E20277695C
CC2E54A25041A959AC738AB6CDEA6486B7EB9914CE42558ABC90B623AFF1FA2C
B3EE64202FB703CBE8249A14C37B54C54CD69DAD2A5C2183103109D6F82129B1
301EE091D9F7A4D345114235F4BA289528C04940A830DDD392F93F6CE1294B62
411E6DF77D4A4B7EEDDB6330756507D8BDB3F97266E6A31040AE138A8469E758
4D0670E527BC95332D13B3980549FA02073BC0A45FD5AD5AA0468323052D1205
BBE6E794D7FC7861CC42DCDDDD4A4A3EA5B0A1FA84E55ECA7617A4112459597B
716E81960CC0321BF3AC8193758B4610EF33F894F09C9ADB7C4531253BFAD318
0DBDF8DEA31BD5BB3282B15C22014FBA359AB5BFF346F5DDB0BD589A54893931
D3F46EC04582CAC86BBA5E5E515335B3ACA75A5A7E5F16E27E8CBF4128859E2E
97D48C02844AB8D43C84FB19D8B311E2E8146C7D3D076F43B3F9EA8A848D7E8D
0E219B61F71B5D50F4DFB79975EAD0E794E842C213CB237B187A7B54F41B5443
3526B5BCF13D2DF1472686B200B23FCE6AC13FAE056EA1B304C5FA713A88B4EB
663FD7959C6D491010F976D4C7EA2FA6C18E22DD503E8981DB670CF5CBD09E17
6E265CF148A20091BA8B06B993088E210C91279AAD5922A3546551F93A076B39
3E4219E0EF172C72ADE99EA91ED60447A31981F8F13BDB8CCAC4361557D938FC
4AEAEA9E88AA0FF61ED04C6C105F0258CE2084F898D7571091B18B212D48B43D
6007AF07A0FDB7C9FBC784A1C9E0506142709DA99718F36F909299F3C570E743
FBB19F4F841939609B3A3D2D388DA4DB9FFD25C55A4F377E53B352830FA336B8
CDA7B5752C68FC0637C661E3ECCBB47543C20271E2233F7FBDA8094346C06AF0
1FF1D4784AD33491DBFB17AA6A4C7C8B2518C12DD5F849263DA8B6B2C38E4741
21239515E3E3BC6B36475154CACD25A07C74FEAA2928802611B05C9CA0ECCDCD
40CE7AC49715D8BD0A6803D8B14E755118F43CE13E54945B0A6BCB5633B1D580
346D913BACDF1DA8EE9EDC8540FA56F817D5C135D554004829A6E4566D3C3D4F
50453B4C997ED2C8725BFB415A30E47844548A823BCD7D0D5F3A1B0B5789DB78
6BD92416107B1E59084B5F758E509DE66F112F49E63A16F60B6795CF0D93839A
E2FB6D0B74207F0434C9599D055D786DC25523AF3CDCD9D834D54D210461A17D
F138F3D9F5C7AF9CED4243271A1FE1B018462BEBE17138AA07373412B44023BA
4E204AF4BF3AD6DC4CF005D393672AF65F0D015C86E975DA6622238B837FDE02
71B310BDB076E1E5D2187136E1E88EEDCACC0DC5B4F3268A8831F3391A7B2A17
E1A8397AD1D30455CE9BCFB29BFE08071774366804FA232E4AE9688E40E61987
035623AB8DDEC101D55543FB93BA5928AAADEC03C130570142D6849BC5B3D044
5B30D984FBAF9F56E6FACF7C07F249FC058275A863D921A182DC7C205A93ADC9
40D3EDD5D675EE14CA60D33D1C57855BBEF5F5B024656B80578308ADA3B73C7D
92DFFA19F1A79AC9BDD3F2F88D9725FCEA44A75FEA44CE4C991729C5792E1052
A4216B17742ED304B2996DC77BEA528DD00039AA51261D5401AB2ABD3C25D5C9
A2FA8C392A82F8DC836C8E33A5B5A2FE1B6C18912CECB8E244A91E1AD8064357
046BF2F498400D6D7DC137A904C96EB7B3CA2E65F64E840DCF69234B15780303
EFD10F9B6887E40A5D78E6B1EF8305A4FCE9C00A5845D1C7E8F51710B4F1A4DB
D8E6BC200679470F5503B71479FD9AC22E7818EF7BA80719844ED6735C3EB876
E244D5CDFE745A089F2679B720C105764DA0F3744E683F88050A9CC76AD73A11
DD873632665A06A2D13141E35806D8F53E8F34D70DF5C324DEB566724FCB712F
E0BF7EC9416F02C2C3116926FBA26021B38D6E21AB7875CCA19E45CF37211113
56D1F3E208CC54E7684A70232F0EF82F448559F8CB85DD9909A74AD694DD99A2
3A6BF1BBDD51D96BA4A5207AF1044E917186B01F946EE08ECE7455EDEA610D0F
B69A58D32F41B39AF49EB624CAA6C346A08DBE65B1C054C0587AFB35100BC76C
C64E05B36DD4226A16A7822E6D523A4B3970F587F38A0E89A05611B3A13BD144
BDFA564DABA6CEAF8A444AA157E95381808E974D7CD402B571D2CD823D1E7014
31809B56C504BDB1B7D50B99310A0DAF0C020C04EF94D0D2D096B734CE3721C3
71C213B6AFA0E73C0622E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE24DFA0
F0D5FF99461F3A9DA8509E7EE6AB98B4BB88F67796EF2B133E9F6AAE0CDA18F2
428EACE52EE14B5FE74DE6D3E114246049948C187FABF401324F9989DB792F77
814729157208E3B37B9CE3F1D0C616D951BA702DBBFC2C1B953BFC6CCA78DB0C
094BC82EC4F0BC92833AEBC6E11B70E1C0F3A18E54817F7BDD3895DF79E9BE61
9F55E9CEE03B1AAC8C7642DA07EF2F28988112405F80F2BC8A63F2CF41C075C4
DF19A0F0AD8A46F5BCC2BA12C4D68D803B840ACF32FFBFD9E8DC6ED9FA9FF379
C70C8E439578725B3F51746691838E600146F6C88E1BE994C9B91F45C562A5BE
309D5D926AE5C673625845E1981A3316F98A77F4D100499847E1102CC075FA12
10881D95D6EB2E7C492BC58C366F903F717C1A9A37719070DB1E340FB5AE3AB8
F380A19F5FDCDCFB687120DD2BE5305363019BEC0F407C2D4DA38EA432F0E7A6
D8221F23B7C33CFA77D83480566E36545DAB1BB0423C34755F88AD24878354F7
52B9EA1278E210D305677B9A4739C67ACF82AAC653B48D8D7589DAF8148D380D
77F8E7DE4DAE00D18C95C7E50A7AD744042B565746C211F30813630C7EE7DC31
054612907A0811E8EC4075D24EB0682E7602CC252BA8AC0287850F9073E30FAC
A80736C0BF828DC7E5A8F8F4569CBA4C2C3F91912C485C5DAC43C435E2F5527D
647EFABA9D63753FAB6F4BF4D7B35D01E3A198153B354914BA8E4C0BAC128B7D
4D61C2AA87093F0D9188350856B6E34E1109B826A3F23AEBD548E10C71A93759
6710EBCD5651DFA0566AF29195C653FA085F712258B8A1B9AABB8A860492155A
DDA8E704EC5CFDF86D3B00CA7934C295363D8ADB04340CB71315D89A0A06D4C8
C61AEF51A2BD2410FF027C40E0F9DE9385F79D598998FCADE704A100379B7D9E
02960F7C0D013CCE063154E006EC3DBFD9106F331F128C794D9D6EF7E18E8301
0405CAA3AF558B2772A5EB6C07862D3090AC8A81D8019BF968EE312103282494
D6472D885F3CFAD49B63B96DA5105CEC17F4DE04D7DB69822968706EB94D1720
FB2879E596D3A7EF942D50173D24763E96F2C385B9F9C34E0382F02EB8C8BF9D
3BACA0FAB8F42D90434A48E3F4993DDF5FDF93C9E21FAF162C920C27726380FB
D329D29ADDF290883487CA328A0102AF3247216D8F96EBD8D1EC18D48FEB29E9
68BEDA93F92B4398FA2E1D6CE1F398ACBABDB5DEEFFFF4DA29E095CCD0114C8B
49875196489903BAEB958166DA9C2088BF9C76C921024B55FC6D5DB5BCCCF772
26C214AE81832A9157AF1175AB47229D0F348EA969DF366D3E164E497528F422
DFFD3B72A168E84519D138C233FED4D468568036B06C33F7273ADF8875EA0E53
899CAA8CCD652C4D5F26A7E0A25B9C7C4F5C4199F13DACC7D8F943E964B009D7
64D79C3C26CF9EFBA94B4FBF6CFE9C75C0F505BE6261EB9A2CB750BE2E146ECB
DD16A1584F3EA2AB3D9A3783D8743C3597C357ABD25D6B8DCB78E81FB5B8D5C7
0217AA3648ADD641A983CA3BCD930955DFBE0DA8B9619E7108A8EAA94000C80C
AB2AD7ACA1D2D0827EFFDD05D4EDE9C2B589686F3F263BC002C8884F38F3BB6E
09768DA7EB3BC1496E363543F04DE5B6F6A9812C7757E990268FFAEFB175466B
422BCC69E8B69400CDE8AE2CF394292067CCAF4F4E32669BE217C096E518A781
20259FE222179A0B410CEF30DD249F2A5D23E5E47C9ECD23288E6C069F496C57
3ED18C446A9892616611F8E6172063E0FCB7C1518524619525DAD95ED33B70A2
CB2356886E9B27AFB10DB195E5EDDB1006AE12755599CF67E27E753AD25C1FC7
5E2D35E33B794FD8F19F03162747FB4086DE7B1C1C800BFD4F229399392038EF
1BF9E659792F783316889221A826EC20ACFEE1E14ED854D3DED0148890086099
5F1623CF43A1C00109AF4F59B91B71B9682CE60E17947EB7915938EEC8A66836
140F02D324C7B4B70BED56A8FF4C1A2EAAAFDAE8BBB5E8E952B17C07E69BBE73
C205BC659E191366CDCFD2BD52526414BE2E70272CE823A43FB0D77B53B2866E
7F21C96896DA4DEE11C94AB03CA1A32018C4B034272D9B8876DAF47EF08D2DB5
D2936909F3E8BA0936E751B73E754A73DF6685DE51FD6A9989881AC4465318DB
FF9E0E5E13435B4A830B5E77C42EE8E41CD5CA9BD0C6E714DAA34F8DC7594332
E895054E5FD3DF1EA44126CCC0345812AFE08FC784E7C4C4287D887EBAC1683A
8CE358ED73989053E0F420D2D4A09E9CFB29726F821A7787E5F817FB905AB350
D466B4D20EE18B679FC1AA857C307C4D2AB54597F47496C8889CF6CF6C6E377D
41AA9E983FF07D8B6356917744AFA6F67477386B69D3DE885AE1F8B52B0FC756
5D358E8D01FC5A9066DBE8E1FE86726B646E864416CF2B7E1E9366A136B9837C
80FB068B3D2290FDC35C286E35763A02A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans8-Regular
%!PS-AdobeFont-1.0: LMSans8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans8-Regular known{/LMSans8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans8-Regular)readonly def
/FamilyName(LMSans8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMSans8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-446 -314 1510 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102E5EBE9986
D95806FBDB9DD41BBEC9E98875643E43D499FFB2E48F58EF7FA59843B8CC092D
AFB67604D9EE4CF2B87CD20222F6DC988B80418F8EBCBA06EB7577DC5FD0473A
55FC62B9B4DBABB8776941636268C7D4F704AFF1C85927E2D0C03585B60D5DDC
D07A1FE61288043CFE477BEC3F1A0BB96666D44F8286474186BD74037C208527
135C090597DEC81C9F985DD84C889A3A32B3805B9A653C816C523D14F6215B89
5E57100A2E43AD20344D45AC8419E928E4DC97E1B1B2285602B23DF89E149B9C
975AAB575A17772D4BD861C8DA1CF693AC37BA57CC51B9CB825607CFDF41347B
D09648E797437823A12DA3ABDAED3E3E1042F4B4BCEC0A9CB2517C0047ECDBDA
507600F57BF0F93B33764E47B5572573253F1439C293C4CBD1F018FCF994A313
30701B46B9E83B3C16E17036EAF2F0072D5CCC8AB293EC15697C72C097565D80
BFDA02AD9357437E60FB57F31BD6E172895D0E1212674C1401A3CE2599E7CED3
EF0A11750E622958C887E58600672A1AF43AEEA1D9BDAF69147E613C610E127C
9C8190A5B3F5F9A3CBC6A9A61D1970F030ED0D623FD6AAE34DD12E7F12B00204
42C239808277550593ADE8004B53B5FC0BB124F58965745A82152F9860FA6FFF
94BFDF287A8FC265B6B0411ACFEFA520E402DA17AA6B6D0904D8DCB1A56E96FC
6A1C7300A4455F6FF98AA6226337D5FC699B1A0900F049453DCF3FCDC8A3E397
C011C9D2E55D0C2845297B4C50597F58C82B0348AC299172DD191715C1FC81E2
BA9F00D26B3D3098006622D2740A0EB0743B1ECEADE8F9697C7F782265A58C4B
7D8B174654EC7F3BB8ACCAD729170D100F5DAC4CB7CC0EEF74D662EEF94702E7
9237CDB6E3DAF2C65E5A10DDD52EB236C227C3DEAB315E5CE479878DD60BCA19
564DA461E2EC66ABD6E7B4952C21C2D3E37C7B97175C5668DB4C64CD1CC23F71
36DE0E644436C67784A3CCE2F3DB601601B011F527AAC3DFA31A51A29C8C564D
794FDAA23AD6B4540055EC4403642C9A62E6138192E19652A050AC81B2D1D4CE
B9E40F7A0C351F8C72E4CBC21733BDE3623932A66FAC82D253D8251331B62150
06FB1CC2CF016E6BCC1D7732019B86C11D799B79F33BB09CB6771F637BEE71E6
FA1A18E90331A61A3162ED7589B05BF937ADBEC739FD624F6763A3B951E33C7E
F5F1AB73604DFCC2AAE3C9DAB3E303F8B56D1161CAF14DC202B636DB484CCA84
03197D7542BC10E7F9CF2FDDFE83B006FE1A6D13C6312FFAE07D32B62AEA32B5
8B8D127C00F3B953CDA49BBEB1B913570A51B2F96D302EF8913C6BB60B5D3924
78A32E11CECAEAFB7D4C6127C4A26EAC47FC77E895E36ECD8881C06314B93496
2984C7FE400CCA5A5007E9E2A5E16116D8483EC235D20B206326C7E4FB54256D
88CC4BD4DC84B5EEFE217BE0B436583B1D92B5C563266755B07C1E9658B8DA9F
48C8E10FB7F29D1EAE6A5E1AB2F9C2FBE93E979D8C74B1ACB91AA5D9EA54F207
742D31C0B69DDD41BA88727A80869626C7998F17B7D86D4D6F2D1C5324484C73
C05C61C3CCBDF28D048F84AA23178B60E4042034918287418FB5133B36447469
4193A44EE745F76035D5073240736B4F1BCE96F57A97F831842958E6B6517018
BFDBDC3423CF739AC5B38303C3D4DF196C462C8742A5F062F69B935148E81C55
7C4E1B77F5441CDA5FCF63459352EAD6B4A2A666CC5D85855641CB31507D0100
B13895988AD2D1F4DC2FB40840A0CA3622532561939CA66F3375B5C3CC39D956
0C010A1363F725ED71E3442C0A00DD938476920CF67869A9DDF5A299FBC13BD0
1C6450DBD0DE1D9CD163520429734028AA2CB185F711441471ED972022B4D84C
F007C1D9B1D7E625D684C53723CEDC5E42A4D17F35791CD367DFB3078ACB6507
E89B97158EADF677C788A0FFC3EEB38D5ABCA560E04852E7DBC79C2DC8561F80
5C0DA1E125B17E572A8DB0D0565F05E271CF122E3770490B395E4DC4AD00B46C
36448FE2DB35CB45276DFB339097E9EF935AE0DE2D8839376A78D70FA44F1974
ABA413D7143EE4742916BEAE0D21F24A3E4D146DEBD198727ECFF842EF5F146D
57D0287D62D1A34793E173D032F71193B2E2990ECE96EF6D712B4FD780875393
92EA302BFF0EAC108829820238728C6305754EF0BDCC8B7204CBBC597F2F9C95
9B69948674FA133F77935F24EF5D7522B401F3A783BF474B153533C05AF2DF8D
DA960CEED2FF28FF48234265B4759B50D24BD711DAC557EF4F768148C131B265
25D173F07ADFE2C2AAF32AA0B556EEE562106998F7FBFAF7313B1FA589C0DD6C
A9B5A8D9DDD843E6E80330277D6DD2356D80BC6180F2E924BAEABAA6E2628007
B37A2029F3D9F5E1728F408B89D85806D6A6AD7618A93DC4A85C4076A95944ED
748D1BA12F86DCE859F1F48AC037F26DEDB1C48ABA2768E9177E799855334DAC
3760EA1B589B5562F3D48655DACF49BA37A4AE429B79608716438BD99613EC67
5F40200FE34CEC934F99C14E909440B5457AE7487221179B9885F7A063D99B45
1BFD666E82909A1D82572176422757988D43159FD814DAF574818FC2CBB20431
9D5AC85C1B43EB9623DB369D2E0217DE72D65B0B051B0CAF9FBB9BF6FBD49BB6
7E0D942F8A6C4128F6504B102B0745FE0B75AC33767B7F328A8E8E537444EA52
7D0ADCC055264CF38070833FE36F3E9E75ED639A567075C6FD56077C00902CA6
AAF0C12EB5696A397E624F888EB2B5E2F8CD8F21B4A6E6FCABA356F58CA99ED5
3039A1BFEA1C40DC1AEA90C0959232198D1F4E26CA8339782ACB8A908C5E7CE6
98479ABD173B95479825415B084F754454ACBF44DCF4961F68DBB06449776DAF
07138F356959B8327FAA6CD71CE5EC69F97CCC84646C78399E063C0AAF44775E
6D1570F08B3085066DB8C38AFFAB5CBEBC7567A0330E68DBACCE1DBF6D7A0ADE
9BF8F8AC548AFDFF12971C763213CD781D208D0E5BBB31FA3647D2B0AA7E0124
3B0C3964184341D8D1ABFDDAE449FE68185327170B046B27F59EF54E9FB7783C
8A81FCC602CCD47F4BFD25E5D4B24CABEDE1436754701F9823D97F39E01DFCD7
F73BDC4069607F52F09F53B087A3E5284B1C41859808C27C7DFDF4D22DCC6CAD
9D6A335B2BCFA6D000A7C579EA6EFFE9BBC688FC7FB98005BF250E91BF91F719
E5568DA27D69EFC526F59DABA970CB94B8CBACF31A8EBD8AB754A936A7F9A209
8050930339C0DB023D08E568308EA1D4D5663E33173E5C99CB752EB3EEB45A26
663E123B8852CA9D2E0F4A930BEDB6F4CE046EE0A9BB4FDDFA475AD631D13A80
2CB7B6D960A86183FAAAA649948FB3F0D55900D5F58F37B8866DE8F3052007F9
104EED7A5DDFC7AC37A6D9E49F46CA0B3AAE98A934A36CCDE8EDA8362FE97F20
9BA574B5D5D039A77BA46591F6E45F73DCA2513811A6517DBDFD7D818F48E683
5C26FC0C7682845F3E4266B7D327312EFB770916FBA0C65A20305AA1A087B1CC
97528D5088D1E07DE9A23C9D41F23C77C5072809B2819B32478FD58A974363AA
8F4D622C39534F12614E0DF155D72F1EB25082796DC38497B4850BDD181EB8A9
6ABE64730301A06C16A74FE25A3C3068A83A513556D05359A393B6C6929BADBE
97502F351D81614CD73E27F230046F89E913D02B0326F68EDD3146F069085199
CC16681FED2AD0A7B141001A3FC4C5D21126A66592F51AB6DEC1CD3393B65C2B
CC478177F585F15CD2912847D0F53FF2986C63691FDB76EAD40D9798E28E803B
BDDE19EB95FB140A227DF24CCB36C662C7BB5E8F7DA664D1CEC437E17D6BF29D
BA2BFA67306C1B77FBCE256EA412CD417BC3BB4B243FC3A0CAE847B3AD58CBE7
B8C5C86283EB434163C89CE51D484F7E49765600A125D6DD423540B78E744459
2036A2427850EBD6C17EF1545EEE457EAEFDAABEAD2039060F8B6BB4C28AB1B9
A5AAFB7FB945AA4671A6A97BD8C6807C21360D0C3F7742F47CBC27562830521A
7BE2EF1D993F75619EAC1B3A7A43761856730BA49A3260BA0E094D9116F8D9C6
46740F45157716658C23144649A72A043685E0A6F25531307FA0CB5148358692
A287F5074A8C01BA5518911789F7767BD4551B1A301528C4F0C5008F19618E63
B50C60FBA08F6449B676DDFF2B9DAB14A41206C3350B9DFC1DEC1CA57547928E
BF55EC09503BF1AFD89227A574BD8D6F6283BF7C4A30E256A366A29BE5ABE787
9DB7FFB127700DFE7357E50376A9CE8E4B6C4211CBFCF9709AA29144F3A40000
E75FBC7E5D5A2A65C07D4FBCBB8FB94BE05DFF2B3FBD09F11CA9C72A278C045B
1D2572EC08DE1424D242091780720E28A4055091ED6C0F733B035CCAC9A2CAA2
8BC0DF33C013CBF06EDF7DF34EAFE36D3104DADE5D30F2104A0C54D49D520611
165AAF3711B005AD3DFBE56FD60E89A4C5C968742603F4FDB0B0B6D446B29F4A
0504DC2F9B420111821EAC567FC09B4517D9443FD0145DD7514B2E09AB2960F8
D54E965C4D8F99DE6CD69EFF58A2B6AC9AF7769E0A6E389AD0B2A5D10CD4C41A
40097EF75607A937A95839A181E6E55835DA3E81C8846980EC5C16651039C0C1
ED728808427CE96611D1F832FA6DB2B8783BB484E18505891086618044B4EE0F
4C3D3AB7CC8FCC4707DE223E7620AD1E77F2C9F7045257D254633BBD96D5D6F4
5696C589BC74CA556158DA32EAD64629BDED7D3AE5205535F92D8DA29782A187
5C6C8E74B0C86C0D3A604CE160F8ED1C2FE09E0AF9A45096060911999B94126D
B0DA5E108DFE59AE74C66857C7516D99DD1DB170A10E67FAEB5FCF007BAAB24E
5088794F62025380E1B1985AA631AA151879B37FEFB6F84B7EB6D57CDE9993D2
AD4F956BCABA7F25705254707445E43F11298F2B2836FC9F145DC459ADFD7815
41EA03A5D6704780155DE7E7B00A8B99E733AA64B78236F752DCA4D16C84E03F
22C9C61D0EF5C2431DEEC9C12A440FC332666E5F5A99C9ACC79B6952D59C46B1
586141301B6535236B09184689D672FB302CDA74DB0C43A77A643142F5804346
C1264135E15756B43D90E252FD16B3D1D07C190A30D72F4DC185613B31DF5DDE
2713384F4A9810BF94FA7E0D033E338E149518B5493D7E3500577099B505E655
9BB8E9664CFA5CB68AA71040D5DC521E1CDCBD27F6AFE6B8BD4E941D2FC154BE
A826E96D9C215ADDF45C88DEB19A25ADF96AA92AED7E26BBB3BBAD087C4DBD66
34637DCCE4848D2BF6E4764ACF0D6D5F26D6B5DE97BBDD74252B3DDB8CBD26D3
8BCBF23B4CC377A5BCFC19948EF5E45DAA4B5A860155B96B4CD17D25C1F69186
16CE476C12B33F2388C1E140DA4004919027257F2186CF716C685176C94E1A15
8E799D50610BA45F2003568AF44E2EE4DC9904BCB4CBA088D3922EEE7150107E
3A46EAF7928ABBBF6F2EAAA1C54F2F501AA172055892C47614A9035E79B01536
93796F91BFA1DDEC196549ABE28871B49AAF2BFD4E836BE55BACB3C737A5C73C
170B6563DA6A0785D44A92E180DD7550442AE3E0F8C1178EFEEB5152EB512122
E9A215EBDC5652B555D498479D289A015F8545F681333A6EAC4EECDB1B8AFA3C
E22F8B07A8C48FDD4D1333898953AEE8244542BFD2849D497F9F8E166005CDD3
ADE33F6D4B2E9C167ADCE832575A237C9637BC3A58D7BB96AFD1BD3F1808F707
5FE193F6C8EFA3CB01B31B63E3DE2D592079B66CFBFD74E98EAD3245271BCF81
1FAFEB8B4AF97E8EBEF4ED0334BF03EFA1554980E13B37FEC33DF3B23FC7BFED
A3E15BCD8494AEB75615C7A8F64D13FDBD4FB5AE98A4AFF2CEB1F92DC495B23E
AB87B339CD87B09F18BB72913812F041D5C00E90C1BB3D58C1A115B39B76EF79
2F7CCB492E4F71538878B4522D1AEE2980FC421B2977AF4C08DB2DC98289D2EC
32B466D21C9B802FF1810458E2756AEA1FD732B806286039E75042D590F24D8F
E9F50D35EC6D1C9950AB0402644E83479EA265192B41D8F3E81B4761EEEFBDEF
7E850602B6815EBCF3E19A3AD3094F5C09C98519210AAAE8AE94F744C02BF2E3
4544BBB19D1B5F87B2B89BE7CBEB6ECC8848D17A70BA8DB8DD6E5B41F5D52781
B40457D3C1C200483C0CDAFE837D984A761286C76125B491DCE3489FA322F968
E512AC8A5FB7C4DADB75C72FF726049E86265687368420C97F3A415D53BCD1CC
19ACBFC6867B4BAB0208DB3C5DD474D8829CFB026CD1F9D4B7A5B18F88BC747D
C2510E822259DDA43D30C33E916524C5E3561BDFF89136385827B7980C2FE0AC
B1C470121D9FCEFBFD625B7348402BEE59368220EB2EC57A6F5DF049C399BB8E
5B26813C6054B0EFD355444F1EFA69BE5A72B52D8380C5112F4CBCCB78C3DF9F
8D82D9EA22FC46617AC1DA9EDB3A2ED55D49DDDEFA61EA1F01DADF99A7D2E492
2E00C3EE943AFDB0739F75F0F1D250DE5B233FBB1B124C8D80AC2794EDB253BF
AD5DEDF0222EB7D72274BC7E475C56DABAD14F32804F0747A3C6E7330B156AA1
E3C01687A658F558B8F61516680DB3C059EECF1C3FDF8417EB931EC402CA0F24
50CC18B4D22872FD58121FEE981541B50456D7D18E788D2DF9753691F4823461
92B463FA2680A5A1E7FED1E46283199D5A2682BE207E04BD4B435A2949159C47
091A0832D4CEDA6CF0852CD2FF4B5719114C0DA6D1B0AD44E8FDB48008504174
7A1895896B8F275D9423DBE3730633BB053B59020B7AFA82C7CD159DC7C72517
CAE1994A0A790E475C4970EC656B89AD428BF4E1035E92E55FB21E639AF66E6A
3A571A8250C9716F9F265E0F76FFF660C54AC08131B56DF060B63E750342AC61
5286E4AC04B289D3EDBE86B8052D096C5864CA94CD5BA274FD97632C6C0F0067
967A1A308B96D5816166A81DF85561DF48DAC4C5DB5A2AA6B01BD0ADBEE35AFF
BD0A14469DBE041582D8B1BA5D736869A1DF71D59811D25FDA43865CAB8E8A20
A9326D2B50B9700E88FD90913D77B6417FEE8C039C12D8CCF516AA5DD9CA48DB
26F515B6576AE85A29BA65112121E1DEDF8153AF59E1B079468F08130FF077F6
6ACC0449643C295D82C70EF177EC0C2D3AAD49BD2A0BF511A722FDCCD19348FF
FB8CC7A4CFE322EBEEE15E3395B062B933EB55FA52E425B02401C79FF0F48D18
32E838472A8F1A94A91A8330634BB7968281E22133A947416DA2238038CC1475
89C36C8196F901BF6D9816FFA07969DD0CEA6C9669890092316F6A01DA7224B0
6AAD1687DBC419EFE2BDAA0F4D090D274A7CB5AC380B1B2006B28BD56725C287
44060877B73087CDACE34651547823DA7503D50E7C2E9451C8658FEB205E020B
27F5307E54B6F4A4858CEF9F21FDECDE3DC0B24BBE34AD7B572EDF436436EB7F
ED0BABD23AD8FCBD71934F0597C65122BD563F761BA4732E96D5BF346C211267
BEED7075B675167872F7A506F4B9E4896A4AA5AB5B5B58046899C9C5993E7302
C870678DEBEB07503EDE0435F57FCCEE637518F5812EB351B6558151AE0B43E0
25D14171FA920BEDF8462A59235F808BFBFB410C50E43A1EC101E5DAF2E71827
28B38441B5B6FE9AE8268540A9FF11ADA29B5A795C29AF1758A378BBED7FC315
2013534861328A5E4673A4B180A8AE1BEA97194C88BA5E67BF880AB2CBFB7909
B93FBE74BEE6955D3E495130BB3D28B42945DA4A9455103CC33474390660C14B
978158418AEC18D647A6DA9DBCF5A10C5007ADBE32E5D0E412FC23069DF8D162
A2B400EDE05DF412F5D3AF80887D36894E21A64F50AA7D53090F61EB25B9FD9B
CCEF9933F75C879222847F855960CC952649426FBD46FBB44432D9D6D92DDE4B
0DA61C03BF4360FEA49064FDE911D20A240ED2B4513467DD2E9F214E625FA0CD
4248B15A936034060334D2136641C1AA345C7642D1913555EA13D1678752CBB9
7A140C81DB516E544E04813437A0B89432E2929DC4A9F5B183E06D2DE8EE9FB8
3985B96CA9D8FDB132881DDB7B0ECCFFCE5E082CD7FF922805C21AB9435E2DEA
D0690379DD5578A156314BC78AA750E91BAC03948D44CE6AA5B6D92365D2EBD0
B357D962770F37D4A4C27A17BEFFE96B9154CF9B9E70BE65FBCF5161148E1C76
4E93EF4D2B88C75F569346AC2B878782D12F909516F74D56C5A927A2E7001730
D7CE823CA5968AE062DA5A54C5CF9AD095E0BD9530D515129F59FC510A6ED785
9DCC5747C69296B7999229531B651E4C98B0BD07C1AA85C261C55F6D7C5ADF69
1D4C163883BB2994826A94CA34D9E5B9B0965C52B191AE01721D88A03BF5FAA2
C6D0FA6444C3920853346594F0D3026F4900770B39B288622172E4D6171BD9AA
3BEA81915B81C56CD5055CD7F5232CBAF282AF59619638A93EC62A029471B607
8CFFD8AFD7D9B25F63CD8CC50A4FC59C2F3F6FD9963174FF863B57D85D994B25
A9E343F133B43FBA30C52CA8A503F3F93E3AB7AF6043F860D5D548B166C25921
D8DDAD33982A420DA8B0FBCED45414AD2285ABCE7D352FBDE6EB1E0F52B0D234
F2618EBCA323CC1B73E3AB241E4E95C8D833871AC8EB9E6A94AC62BB8D3E8500
6332DC7EA4CBCF5EB59A95A2B515DA86A293CD507153759C247901EBA8C4D36B
5C5E989B17A3A72248A138A3CA8622749CD748154EFD706AEBA91893597A866F
289B75B6C623DDC0E21C7E6920076B0AEAD03AB485F43DD669E9F6D78F7F3A3A
F0E163589DCDB652FF0580BE54FC52BD298B1DE626D7398E8DFC0C7BA115D338
8CD49E15D50DF45AB5BE763310556E5D82BB9E05390DEEC769C63967F79359D1
B292A2B968186C25AD5CE0BDA86D6C602F27D4D17370D21B4429ADC336A4AFAC
6A910A6B158DC42E97769D57AB2898FA62921A8D17FA331966743BB807BC62EC
CE310D8DD33666152E7DA26D679ED4D87F89B2D3FF1A88AEC672999B6FDBDE53
381FB28546087A7B8E3203B60A8DB8357CF639B2B4830DA2FFDD7B721978DD64
1CDF0C0459112C4AEC29A28E43DDFECF131E27A82FC1B8BBE36315E41967D1E0
1B09FE682EE128C28E930169DBAF16CB022D5D7BDB13E2A460620B8ED0372A76
B058E4BC1F616F6CFB2E9A0EF9AD85DAF560741A702B11CE084913296F4A3C5D
27DFBB1F3D0BE971812A7A83450DC0675C45C27A1010CBB79A5BCE21BFA46CCF
D6B4158BE06C768C73F344A107706B36EB97D9202C5763599B3C05E1464BA145
F368FAE4C9D1BB679CBABE4996D7829CA57157A0C21ACC8EF55F8E9FF435AFF8
3A7BFEF9BEEC854EC912ABB90EA785DED842C2A0642F862E14B66919AFD491F9
8D841A2DB2F981BFA79544B1A2F756D81ACAE235A58C64DC17B47C1C7C3A820E
A12732D95E3C21CAA8F9B9C27FEE8DA4DC31DACC0163FCEAC4FA882EB97C8739
69EFA04EE0627DD4C2D071F1C8E049E657F5F14377D75506A96CEEE43E33140F
8E91CE236EBFA996C51679100212026FEEE44CC3409440737FCCF58A9899769E
BE684B749A1D5C37CBFF72C7EB5AEBA5C7A3D9BDDCD1ABD7F3AE4C917B3A01F8
83767E8A5D9EB331968579C3DEBB3E382BC15B2751BC21E2E5AACC0CA211F50A
13075ABCF9F440C99FD25A8FEB3C0FB8C09606DF50490C7CAFCE844147A025DA
F903C17E5B0BC25F89AE84006216080ECAF450D8F1E3D7ABD94719F604EA68B1
108EBB5BEBC3EF465BDED4C73738D894770AD27F2BAA1A8AC49D55D311D7B27D
B7CB8AD061C3DC60016EE1F4848CA1A8533BE7D472D0AF407DD9F6C4238A71C1
F3511F227119F68C6EE144530AE8BD1FA0531017D74B47E173553F7727CAB5EA
16F460023E48C20D335FFE5E7239FF72332FA245BB59D385B940205426B2517F
B74FF8E56107FDF9585A1A1DFECFC086DD0D6D414ED8BA6E0D92A29E25918B5B
56C2935B4622F20B9A0C4CD3F80103A6459421C53711953FB5D85F36DDE63115
3EFBD5D42216945BBD05647ED068DCD0074F3A2B08A4CFEDFBB907B363DD79AD
C98AB074AA1C50EDDC6EB68C5B4DC1328B9E56BC0BC1104FF39EFB2360FD3BE0
34FFF6E650B0D9C5050670ABA64C062B5BB10DAE3331C3E3C1B56AB328435C99
64D0D5394345768F4A78E26D7BF1AC08BDBB8351C7F5C1C666E4E0987446F1B4
2166292D0CFAB1AAE6541A3DB6A5707CE98CADD70F81D892B4D2DAB0BABA6621
75C52E526A643F7FA4217D853967AF5E3659D9628533AE56E657371F3508EAFB
FA1E8FE0EE6A8E816CB79B2B26E424A78CFB02CECC37A2BF35D037B2C2EAE5F7
0642658A3C3543EFFD0999E7B2EE12E26D4E4C1998280DA60236796D84A935AD
41A3573879103DF7CE5F167720F3A7F94F2720FF757C2D2BFAF8B3DA862DA1E5
E48C0CF13D0BD5FAC207B7C7FC5AB1BAA9B3A11D34FDA62658B43CBCBC5E8F5A
A03947553BAECD57F4EBDAA673AD0E3ED5F7E7086C53B79066834B3766930924
14F780C2504096C1090865B9E036CC99A4EEC434992490906571E52F477395C5
C5040492FE6426FEDCC330BDFB5B09ECC3EA37300DD4FA4F7BBF2B252A533157
512E649A7B7F199EC63345AAE11DB0D025D8AD3593577DFB0B52B5ECEE8F47E6
C1D8A30C4E5E880AA0EEBB2A053C893FF1AA912ECBDE9B49AF18F66D1BD7BF73
82F89FE9492B2928C308C0373A7CAC1D612C9F3A9ADCFCF2099128D1C3565C6F
5FC2D898DF5C1E59CBDCAF4903835F153170BAD72480247EE13CC0281DC3FCB3
860E9ACAEC0BF95204DBF32AFA9DB2C058F11BC061D8BC48CC05727B71589342
370F8A366E11B3623E4443766368B5169A98B504DD1602FBCC202CC8046A8A60
AA24F57CFA5CCB8485932F527838C9E2F1889D11BA06271BB84AC9AAC072FF6D
5AFDC5A833E61CE4EDBF5868EE0A5930150D0AB4682B25D8FBBB10124FFCE47F
7C93CE9C3F929B0536AE7B9E288A7EB26E63EA1E98F44C92FB6074006BA0A1E1
A4A307BD9015DA3F03FDCA07EBDF9B71492C4F03427D0C1ED063847FD3945335
DCBEE971834F0AD7CE43DC88D5C9BAA5FA0F4D62066C0B7064578316C7C7DF63
49878E52C52E1051BD8785CA07029D855CDF298982AAC5EE9BD88BA864E1A1C1
86C7A2A8C8C70BC438F87957BFEEE5BC5752A4AD500E86ABF0FC0FCF15D09DF7
5C25F8B99BC1146D1509513ADF1CF627BC4C0D8984D01EEF7E17116174B74694
0DAB65039011AD4C5F22986EA0FC188FA30CB08809DA9EE88D490FE15EBC6A69
56477E8B7DAAF1AE28A6B251C5305E493D7A642A63F8C286FC69F1DE5A80C4C8
B98AEF06344921545DD99DB567D5486DF8C29864621BB2A03EA4F70B7ADBB35E
0F1641F668817E64481B4479C7387C9F8F912458C1965BF8BED4AA857E62B7BD
008DCC0B7951B385F7A70A6C3D6D39AB0BDE4E8A048DE4026A9AC527109FB09B
ABE1DE6A9F210B590563EA94F930201DB615B7373759BE4A62F1370FEDE056CE
E265838696FA0D3113738E35732216736F12E3E76D416DE431823060F980576C
90A5A37C5AD57E9AEB2A8717F653103DCAFB4E169855DA91D630F30DF34012DE
1F4C98E20602B36EB9C4EB49C7683B7056EE108F5296FF68DCD3E59302B013FD
FB3268047B4C03A37A680D1F806296BBF9424289AF41637F1864CE423FDF8BF9
B3AF739FC73D34077A744AA6D4D4E5B2BF51908ACA6489430DC92FFFE690A0DB
944262EF894985B1EF68F2EAA7AF9A3574C30D1D4FF53CA84EA834BC8DBBC201
865DD685BF133F7881BA8822D56C27388B0EC125B64BE6317C9BF4DBCE888278
926234B1A806B6DDA724D58044898340527DC91EC9A9A4D22ECD9BA6C4DB5C68
869E97698478CF49C2FA073AAB78D5EEB828B2BA0301AF9FAAF86D736602AF9D
374A8D11CB5F883B5FD6AE51F45362FE19DD066DDFCA49FD3906B7D32C787DE0
6908B02C5F6A9E36799C7822398C82C22A635BAB5D9FB381736C401936521879
1DA09A09C7AB12BE2E64A6DA55B6D50CE1CCEC0FE6ED74FCE37B42320F08639C
21E2A9455CDB01575A2180793394A0E1030EEB320FE1885A52A9BA8F613CF40D
D5AEE9976DD7E75F82C089119BAEC60CB65F11381291193A712212A6425836BF
B7BA7B0C86C87BA65742504DB1CF7C854DD6C6680E12CE77ACE2F4D31C0D4E1E
F83C805ACD94C2BD0401740C0E41DBEFE21209DD13BB4A5D5BF7E2981B87B73D
560A8E6EE0BEE3408D38C8E6AB4C1C7ED9F52818FAC02AC17A1D5484A8ACAE90
2CE9F5395204A7BA3D11006B763ED08B3EABCA1644E74824B92728B491DCE348
9FA322F968E512AC8A5FB7C4DADB77BFE2F3DCA6DAAB758BD7FA7D29C266129C
91A2A5804C165BAA2937974DBEB542E195EAF9D49EDF6190BCA5556700F11CBF
727B0E325EB254CF8F155C6EEA98CA31FA41117D53898BC4C53F469D84294458
62B0D901E4C6095A0F31CFB809A7ECB96980A5074D286ED71A9C482E00FA6412
F6D7A5FF13619795D13D4D739EC41CB885A482238364C123D24E6BF1F85A176D
DA23594D09824B51DF140157FD9954B3CE4C9FE714783E7391DE33C0C05B40BC
ED90CD07200665630896637DFFF8E3C3BE03C7C33CB54FCE37F1FD33C37C611A
FCBF59B67AD80F8F4D376E1B46A28A6E16C1D0A47C331FB855E174EFE813A62B
E4F0FD65715A7B15F3D0B586BE098465B7C1DCD5C9E3B84E1234A199A350D10A
B59AD65E34657555D9DBF091329A4C04DBDC48BE59495C29181964C7D81988B9
2091EB13E2F1277BA6BB7B0772E386CED36FD33CF7539004D4ACBC940EAF782A
3DD97E9D9C38B45594AD68EE45E874625229E7C4090734C7DEF2979422B6513C
C7C19248096BA7FAEA6747165330E085296C2C6FA393DA5D5EEBD9F1716EDCEC
7F291B0F56627438BDF3F29A4D69733BBF3FDCBF836FD5BAE7AE33C0D20B9B4C
E333CFF4D1EDD10BD74E5473A41499E485AE308B92650A286628FE70E07414F4
11C092F1DDB6F6D0887A85E30966A059B1636E4B1AEC751061030E9698C16AD6
D07C9A198489AA1D0FA3717BF3CD52E7FC86C8FE3C7977A14DF4431DB3E8171F
50DD33D78020E9575406D4032E09092A9C413C838DBAE1E76D2BBB2ED50CBC41
2A90190C806D5A035A04E3CF0FE3A71921ACE8D9BBBCC1F8A5D0D4CD7AD9F3C6
EA65504D9B742F99AF7F5AE6138953A982A7A78D7EB862446733B7CA2FAB2836
0724E0928C85C21A9F5D5DF7C234CCD1C14AE308A9DE8E06E047C76391ED93D9
810AC8F694B7DA252B4BABEF2C617F5933E0247210E7507788879E11A2D878FB
2541B561AEC1AFB3BD19017BF75A3E989BB3D1C77BF9ECE6A91142D95593EF9F
D51E9849C7380B4F6D6DA2E75BA9995538603D1E43CD12C950ECDE7E71917C4A
1E8A0D4EA9E7891EDCA725CE52A4AFE9A5E03C0141CF551118083D4CCCDBC9FD
23877034BC39F53BCD2B1D5E20C42CC6EE9775B7BBB561A00DDE1103847082CF
3058E645DA10A428178BA48DF74D54DDF7FBD46D78D457CD1912F93210F98194
A7DC809B6620C88AC1B10B7BFACC1EFAFD38D3EDDA0F89CDDCB653B8EEFB1214
87E9161E9A091684715B666D74F575E694983CDD4CDD976F16FA6AC990433A43
0B06E78424C90FF18A0243A8972172915ADB7131F254AD9E2C534A411593D10A
71D7D05EFFAFF37F9AF74561741AA5E41C758944B9AEF8D40818F06E21855D7B
A2A5D8C022B7F5F331994740A0BD185DB9D94F068D73C4E7576C59C296CB3001
3397EA8FF770AC4F62CB3AF8B17490893712912790B41EF43230CA91E2599B2F
6F443D3D7C8DBEB9FECFEFFFADBDE676D98DD6204B3EAD5002C29FE6D7A8605C
B9B576F4A07C53B4CB1B91F60C618B3560823A7386A25CF46386D6975B70E300
02CEB0144F2AC22C3BB66A51D65D864AA64B5B352D305553A14C59508C8DC825
E8B2EFB8E2803754084084CF308B047CD4389C12B3A1FC467F98A7E2F4511DEB
9FBAB2FEDC321C77CF13B21204776A715DE0C28F61B1C5B1B6CDE7CEF529A009
1209B70BA56CBBC8F894B06AB69A867B1C0322F16D016E992C7DACD8026D7F4C
5AC1E5D796C0E5A79C6083ACE132AEE5BDF71E90DA34D547ACCA61BE6D41EC37
F649CEA273F000F765D1CB762C01F0925CC899206487D69B87184F081BE4FC92
0915ADD1CAF234CCEE71ACB008439D7E0ED44D117E1C942F56B51E615267D9FF
C193186EEDFA412F2A917B97A920878315D488D1E15CCB1D18E9F76104D76978
B921AAF1E522B0134527426997D44471EB75304F9A5C8286AC95FD505FFFCE93
1B60115AFA35544EFEC21F1B21DAB103F2ECD03C45978D34A9AF4898439450F1
21F0DEC0F06B38C966A0AB56FB40FD3C6C4A6F1B92489BC74B93B7D7BED04206
674BCC38AA86F074419F816A5CCE657A26E927CAB2BFFBF4CC1A24A90064BB2E
0CA34E3C531D23DBC3035A95679F52ADC07DCB0BD1F9221EE576454A86A0C2BD
F0AE6914D6F36FA04AD771517929814BAB6CA2E090BC14049FD0BE5940E6A86B
1414F36C25B48A14382CA331926819999E1A5C2FA63104188731A458EFDACBAA
48397E97284B8A8C849D61C1D7D1A30D35C693B9AD261C3CF603FCB87651205D
6CF7D2AECDB5133E5A5D0B5019F9E1D426843264201C49B5F005D081B1C32432
485155F92D59DD66907ADFA1F18B28A8F1795FE08342FB4FA5F83392B4B54E43
ABAEC2B611954E2DE8DF3B36DB44DA46BB19EA1EAF0425B8B8CBF768BE5811DD
097EB0065B1E01ABF5E2D8428D248B1063727C5A6AF81F6238F1912F06CE23D9
B929E7E8CC2459C0E78A7B2FFB41C4992C8CA30CE5024BC62C59AE5F15A7C165
1CF31D319EC3E946CFF341E7B705B7CA5811F503F1E23A866648B75738A5C893
0A07DC64E8794EF123B66C212B7041AAC2F7A021930A6E91115F2FEAE306D1F1
C5ACF4307384369A00AADCE668ED7E814E32669BC829EF1B7EC98568A720100C
C4C8079BADFD302EADA542E45E04E10A6045F46D432299F879232E98F9FFBC32
6D9D0B73DA2804A813D9B83BA91C2B1EA4B102EC16763EE0F5092CAD9090F5C7
F6703D1EF5AC4FF555D8366BEFD891834EE0CCF512FC14D9AC7341D5046C96E9
8C17C37FF5841624BACC8EE6C44899633FD2E401CF66BCB8365EF29A3AD76A07
B35273CDCE50516A57F191028439EC8E5B8122A9C4B58D6C1A9D5A4E40821EE8
089BF5521A19117A0EA41112EA832CFF38AE62A7C42F405EBB4BE70A441D30A0
9C7A64A9C4CF1D411322A0A37992E6EBE6321C5E5B586AA1E12E4D9F314D84F4
FF5E0C0D729CD6C400E312293CD84D7FCD0058393BF81943537DFDEAB03839B3
A0481192391FACD2C83BBB9AC9E5E6BC6F373161076941FBE23CA6E81B848B33
A5D05FEA4DECE4EA88FDA3670AA71ED77DFFD3BAB2373B27FB482E06C093E9EB
E22F3B9FD5B28AB8931F1C96E4584559D47C3240B0D4A30A382DED5AF585C938
A804FC0854BA5F4ECA8379F7F7BFD9CD497E66CBE3728B69B85EB75D9B390B0F
B0E5C3F4CB0D2C1D1430C83390D90697DD4ADA95093D064B0E699C59892B661E
5A0CF700ED157AB521513CD600F052831A924C5DC9771CB880E017A30E64F2A8
7F902F283615BA37673DFAF9E0D2ECB5FBD10BFDA804BD47C3D4933E3B443D47
65DB43B2BD1433C8BCF47A40B72A0344627DA12399A086B6202987510581B57E
EA86ED95F3811AD256DFFE665809102BA715F8EC188EFEAE13FA319E5F388B89
BF950C292C152AE9B95A04D585E6AE259EA0C1E060B1C495ED215C9E3B5A7285
FE3568F5F91EE275365769916EF1BF70C062A45334FE88CFDEFF949914C4B69F
50F6628F9EEC6842B798950DA2A5A6416617A6D6AFDF832B4DBBEE2065A7C30B
63CB9340C50778EDDB5E0A218C79625498AFDDA452036F05A697FDD95DEF8B2D
573EFC2CBFB7C4F51848BFE652FFEB23AF2E20702F9888B531CABC31F73E1809
D29542B8B5D24ED5D673E26A25811D4BCA9D693EF8ABE7814BE8007BEC5BA79B
849449A58453935004FFFC8F5B183F7A4B9DE98FCF9B0FDA17BB2C917239849F
A8B3641B901E5A41C07518C027E399132512240CA99B02A0410974AB1197F948
7981AFBB4D5126B16E72D95B28D1EED1B4040E98E8A74B22C7D8CD3FF06B9FBF
62FB1443AC776F44F0AF34047C9A780F3B520A8E750230D501CCA84CB279D57D
905123FC23D46286CDBD70C1E35DA15F1BBB8EDF5FEBD36C6E600300261D453E
F3794BEF64528D7B4B91515E5442156C41984984E051B9F413865ED26E38CC6C
2563591CE129FDFC7520C5D5CA51DE48C5300CAE606605E951148BE1B66C45BA
04871565797EC537E26B24A4CA076109F2381E24C381185CDE9E231A78C23918
DFDCAECA2B8B7F8EAC363D0D75730D6DEBDCBF85188B95F8E5E17BD5C1FEFF38
2FA7B9B0B46073D4F6665C658431E7FFCC75FE1811BD701298F763AA466B7843
7709A5EC0784A852A32989A63805EEEA8B14A64CFECA4BE02BA114A4CF5869C1
6F750F4788B6B3C3C2776D4DDE23DFA1490CFA3B4C7D0B8794E078FF15A4159F
644CC8DD9EBFD8ABD8ABFBA9D53C42A61026E5BDAF59973977739CCF0FBE3A63
A34884DA9097C0F903F0F05E0F77EA5E07867117D1908D958AD0EFBD5C6CBE68
4E8993B9C485D8B4476F2EF2991878E11F38FF36D1F1D67E0A154F2D264D9813
78A969A5999E0F8A20B81D18E1961AE265B3F086969B4128A52251DB3EBDFA8F
59FFCA5E7FC82E25FA551CCF5E9DD8D6D3A5DB1E28A4B5BEDCF9AF7F4409C627
5E034FEB45E9425DBEF583887879AD93C362A37F0C069E6E22EB77ED0EE9E3E1
0459B9AA355E912CE927A1AED4B962FBD95ECBC414640CD8456E04A5E6F024E0
1294FB6906739CE1B4567C1C777D47A7F2D78950A8F84091E541E0DB8CFB173D
518F9C51019EB4FED063631D168D1A00B9B346B62199A1AAA40D8B35AC2F519F
A7ABF395C0BCAA522AB5851F8574ADB710CCB3FF48D54FE2C65A237E02A7621A
CE732ACF123824D61FFBB85FDC03D7B779BCD8BD13107973003A71F5147CA479
EFC1134966E442A2EEF5D51BE02AC50855B9158840F97FA94CC03969B2DDBC38
390BE7F6F9768E584BE5D3E02209C9F5C6398DB9A763F1BA3386E051BBC1C7FB
8B5CBE3D295F3E94C6484CD39D18A81F7389979EF408D778E57338EDAA1C658F
9C1F6BF01E8C05290B07F87D83C4498EB6B53E33D46BACA453D38B476C7B79AA
3A0EBFCE8A593AF6595410F0F59A79448D44E92E5A691F651E0B095682492BC3
5BB71CE21A3E9C1D1AB20BD6C6CAA328BF57F4FBEA068F1CF5B88FBEF9974213
7438E51623CE0E21C27ABA2D3805F093A069196BAE8DB7E6581F81C57C6E5CCB
B5BB7DC49648D46F2741B3A91D9032F24ED8F7853E8878C5315B93F0F0DCAF80
757EE1EA8A78049B8A9E998818F09E1B5E8D34EB46F04E8ABC5F4D367639B421
6AC785C142CE42FFB593697B786ECFEA320CD49838B5DAD7F3FA0DA3AF073C9D
ED0369646F6B36693E9A3C0BE4919F409768372CC0E84BCA86276BDBA1914660
83845E147A52D5DFD4043ED3AC4DB1DA120971ABC83477E84B2BD3E91C105784
6B76616532B79C929723445D51E55F2C97F1189BA69836D76D228AB453597E80
B7D3FD49E1D3663256360E4DA56184BE9677D3547C4F2765665237408FB4D1D0
7C190A30D72F4DC185613B31DF5DDE27133DB26720E36FF2D28374CFAD56A12B
00C3D409420B491B625E4C43A33EA29CBE2AB98CD0305DD935D8F0F5EE34E73F
44E9909CD4A49E4600DBC7FE9A727D18EA999ED7618E33DC61135BA3E5397F55
DF844F9EFE1E760903FBC228B55B1CF4B2482D465B5835341350E215B0D55DDB
690E1502018D0F42D2C05275C5EE7AC03CDA298908B414007BCC5CCBC4A7C3D0
AD578D0B0451F2767A6BF81979E99EBD6CB8017A27E311AE62FE08BEE58F2B33
AD6C2859059D8D3F20870038B6EA3C5E41A3E6E6EAE70E659701CCC2256A7CEC
A22D415F21FA095C1BDD305F557FA21DA361255FA634F5428046582F1894DE3C
9CF2E56BAD8A834ABCFD39A3CCE63CECBC5962EB3A03C8EDF831D63D2A5F4F9A
5ACF9D140BB42BDF2B5683587B8F7263E4C2C43A4C530DB3EA06EF9672983138
D713933F6760E2C0D9E3811F6D24F00B3EE58C56CC7E9CF8704FFCA8D35C141A
58CC2A46228F2F642101F5B23CE1ED3A79FF543B60E9DC22081E65320BCF3099
187ACC0F680A66AFFE0840D63870B38E4100D67ACF9EB4C072D3196F99F999C9
5A21641634CA6C9B6C1CEFBE4CE4B59F9895ECD8ECAA56D0136C16C2109C8762
7A1CFEA2A6707D6B09A9278F772433F92EE844A6DC01584B8219388C5D8C2630
E1D39F3430FD313C4E64190E98B0FE3A2FED197C64A2F173D67B96DEF8498BCC
17589A700E889B5EDFA8FF2A7CC570159B5621D374878E63B56C35023AFCEB53
97728E52E86616FE3023CDF8F2E3205A114D00FC4CF71B706FE7BAEC876CC50F
A0C3717E91F68E6E2C6DA9D1EB523DF48D10D441ABFA40086967CF3CEDE338D3
76450FAC53777A02A6CC5310ECA24348652BF62276DFED27FA15B47B5D48BDE5
E74F96C82774AF2512D837DB53D1C4791C4A31C1486D6B0646AFBEE8172CD48E
FD8B73CE708704378306780B31793DC3588A170E5A20B20B7C7E7B727D0620E6
F45BD57DB169FD3568C8E044865DE7308E8CBFA87DCB0FD9A4D39EC820E0B658
1A24EB1391BB3DC52178B378B00586F8A890443897F479F5C27BAC92012E8C26
625EDA3D3CE4E46821457498301C03ACF66F2F7EC5CA2D541D3617439C0069B5
5CCBE8D1F0523ECFF6004882B93CF5618D139605D06B8EF066B8FDFF0A4DF05F
CE76504BD81147F35D8989D2CA44BEDE6B8BA09F5117C4480EAD193A55D17766
E680F2D445758324D4264B34CD6D2643914BF569EA1F9CA8277788FADE52905B
6910E32ECBE6E8710E44EA188EAFBF5EA958EF011BE0E24D0F88BD44B30C8B42
88CD98CC5E56DC4D1333DBA8FDACC0DB85515E1096B1240EDC18A0F3BE451E29
C23A32A806529BD07349064CD9EF73D7A938B5AD3D1304F2C6FB438EAC993894
2455FD2F90BDE47DED116F3966B7915695F9EAFE5579F3C80495B6BDB1F24037
096741E04B3165928EC4FE7BD46E4F1C6B9C57378D414E6D7DB7466631822AF1
182EED5055418B4541E469969E60C53858FBDEBE4F725F66138B7C516819F0B5
991B1EFCFFD98E6D7F086B8DCD10391532F33C17437827D857FD477BA5042250
CED0BBFC6FD9825A5826DF34CE0B2C78229F24FFA4A3217EE0DAD89D3D58ACDA
20FF3FFAE1A1D2A73BB74858A015BAAF10F06E1384C1114F45BB3411F870A452
3AE84487D44CF7EA1D07131A8A62E3E9DD828C4C431A7B8BB078F8E328439E6B
8AB2B752FB49612F0D1A7126B450FAF7E16B807ADFEC622AF603CA211390BFF4
8AE9CC71BA9B8CEA1FEB0155DB9C23B3F8FAA8E0D93AD351171C1178E5F66BC4
73B74C3E6292079C2B2D43A59F09A158994B6F2DEC606802157CB31F7C7B524F
D9A7A57E3881A280D8F3EAC2E25EE41E58BC96B9FFA3B04C17065B1C34F194BE
EF98DDD55CA31A58924EAED8F7E8BEAD5304B355ECF4767A0950858BE19002D2
B4CB6DD56D0731B7552E12FBDA45AA1538B9DF9EFFE960AA42FD34136C401767
858310E8CD7276AA1FCA90514C00CD97FC5A09CD8B8D4A3A66DC9C5296DF3A93
ECFA6B76DC3B8C7FB8EA1F69471EF9B5F8628FDCFA2CC3A34B4A5413722E3A76
CC09A48F9C05C8EB145A9713BA7BC97CB557A128D43EC7119599BA999663E0D7
4313CE89766F8BE3C491BC98FB025C7AAFC2022271FE620574767E479BB2314E
0A20F00CAB37A9220ACCFD3BEA219CE217CA917354CD7B5811BCC4EA6D8BCD52
72A11099E6503AE6B47A9A116672553401B7157D0AE9F18D7CB8E40CD6C4FA69
1BE19493F58C953237B311F58B834EFC7A6196D4252CAB7B02B423D0DD2BCD7E
98FD7C35F7D446C5CAD90C19A1E7897D17E6E87BF17577C8E3A8A30165033249
D533856A2CB6E9C1AA0239CDAFB33902020D6EA45A8BA60731A9CFF651E03F1A
E3C2418EC2351DB956BB402DD25D0A48DEAAA63DC1CA574B8577BC542F76EB3F
DFD8004AE796D430B275395D75A99A2C14F47C5FC32202DAB656204D19FBD837
A6EC010C42084701F5770B0BF36DC8E39AE8C87D07ED9337F0F86C9551C6207F
BBFE3E8592626675EB20610C4C3F89BEFB3F1D0975F73FBE95C38FF0132F2F9E
C4932A19D7626D401865C3F32F4D178711861E7CFF54796B9DA96AAEB0ABAAD4
EAFD50EF789E313A3F52526390A48FDBEA688E80115FBB6BA8125BC7045B9ED7
2403B1EA544EA643B82782C150E294DA02F9F2C3BB0375BBA603EDC932F1F72E
59199FF3A48D907D3DE17655C8C8061B079BA8C845935E4E49F0CC9FF306C34B
1F3B56DA90A7697E1BF0A3553661CDA92CF3A581073A646B2EC998E8A7467630
91CAE08357D2B9C13593EDCC27B258C07FB0E279174A3265A1E2F6B63FF82311
62793416FC043D3DA7176DC3676B0D95192C772C129FCD2C9A9E58AF13DAEC63
1E8741BCDF96D62F37E7DEC262DD87B8D34C8DD3C20EBA6483DD41D48A5197F9
8F35348F25E9021FE50176E44F6203BE984312E98FDDA72D2D82687F527E0B67
9C0D5FE02EB2949453CA6ABCEE1E618D485E9895A8E8E5AF35CB731918D2EB4F
21CBE7759D3911F1DA71D12F4202E63A250F94457FBB6951722214D357292DE3
4AD59D0E96C7EE077EFD2CB107838CF298CE66E65983EA86332F8FC11BBBEBB7
199C057AA13B3DA10F76CF915257B58BC533356B6BAF578D802622B5BC8DDAEB
815F9DAB9D6B648631B5538BC3B05B2C9FF37E8805F8F1CAA95A3E493F5BE74F
817F95F102DDCB48C8B666E79D29824774274E960E1B6A2CF26C93F0A2756348
052AE1A2CD4C3A0653
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751416C9EB562F65C3DB7A4AB69D26B5BF8D90B5758CD7435C
20A34F783A4273244DA0E4AB11C078B07BF2786AA78EC0527660082810DD4D12
583633A6CDA00B353267B2BE5B8178E6B7889A33771F86276E6F0FC729A9B845
FA4DB9CDCACCD1804B9444C284E42F73764E076EEE81285FBB3CCD86DBC5251D
2D38483567AD80CF22E61904C92A4FCD68F8C5389BC7B4DDB26033F03C778A1A
810DCD869D660DC33865B7E7C25820CBE0AC3DBD4F5A7BDBDA43B38A384C2DBF
592B0E0A571B36569CD507130E8F9ACD3CD20D9A4008EA074361239D8E8052CC
15B53B907E17802B8F1B15359AA8D6F03661719C67527EB25CCD9328283C9F0A
171E48CEA273F000F765D1CB762C01F0925CC89920648625740073D2F18F5E53
5CF1F0D0D082C889B4F6866E72B09BEC4DECE4EA88FDA367F98790AB0323A4FD
9F2E28963D7CC8767E4719B001B2B4D6E8E7FF796C4B5FE29DC0F93C2DE0ADDB
6BB87BA8423296AA1DCA216EC5AA96CED8CF68CD7F69E003ECD5D48EBA04CA5C
2A3FEA809954726348F27B22E5B99CCC94A4CDB6374418325E79EC4229D8E137
B3C9EF090C510DC30DBBC10E10866513910B65C0B9F0760B7D4F6D28B6CD5B5D
C818257E2541C8D18975EA17CB21EE4C09636917012FB05964E8014BD979C2FB
36965D880AEADADA8D7D37ADC90C999415AD8B6D0F40447FB5FB330A80601B1C
79EE748172D7503E56183EB0E6818FA31EF967
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman7-Regular
%!PS-AdobeFont-1.0: LMRoman7-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman7-Regular known{/LMRoman7-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman7-Regular)readonly def
/FamilyName(LMRoman7)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -102 def
/UnderlineThickness 34 def
end readonly def
/FontName /LMRoman7-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-483 -292 1562 1124}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE26F7ECE50E9B8349D1A7644F2E9
3FF9625116305D3A8AB7EFE9B6CDEC7FF1AFAC2914844571C1C3D55312245E95
1C742DA9DFD51D0481667CE0F0BFADE80CE5955045CAB5B7317D73EAFA74E339
ECC43C39A209A004E5BD75366B006A91D46E1E7C87E6F81FB54A33DD44AF5B3D
F81A333C02842D9C00CD0ED5C5E87B3F9AC063B5D70917E0D90240AB4483CAAE
03746F5AAA3B2FF10270E85CEC5F5B6C1D5C63A93DEEA5ED09EC9951684CFEA1
20C70415BE898E01D695953351189B085F769E96ADD30D2753E7E62AC6BD3326
4861C1295BC7CE82F9159E3523BA56EF6BF3440231B1CF44D9AD4FE3AF0DDDCE
1A9472E941EA03CE48DF71BFABD9E2B329B65B7E9ADFD6FDD24E7C92A41C5254
80BB35DC82178DDF164C9DD247F520BE204F342B1E0E4B08742CC7485D3F26DB
DE3C6ABC9BA64F5A9BF876A3F192FE06068E5424B8423977DEE5530512949172
5D2B28F016A12B3CAB43340F9F2056A32C91149910447F13521AA514BF404CDF
1380337F42EFFE0CA35736FC28E3279720116199109D73B15157E7F6A0447469
1906F7EA7419D404549A72E3714DB6268A66604608BF2CC565579E3472D3C225
987ABCDD43EBEA8D69E8EC0F70AEC9745FF15EDFD83A82E991A3ACB8D3AD3E61
28977A95968B667A2123FDAA74D9F418FF93FEB6F7079F421D9CDE30FE6A7C79
BADF32183CF1B98AD642CBDF68BD6367FF863324063350526B221D33A9029885
76DA13B9CC41540EF9099592334BC7009F6F8721E494E1ED2C1F9D1AF8CF0B7D
F6F02BA03B3B6B275328CB94B539DAD0BCFB00D2C15BBCA5112D232DB8182167
185B478934559B3796E58D2F2F6E03DBA0266168AE6EF6F49249000BC3F16AD1
FFB258A993A704E17346084DDEF46CF7FBC5FA5860CD27DA817F638B0F0EB4E3
33415AF8A9A6AB64C7141933B26EB15DD1008A0910A81DEB2A39B31A6D13251B
7E5E4D23AB35094E6C0BB0B0F240B63C38E6F1D90972E07E5CFC49BA24321F80
A434F30A29E7CAFF159D2421F29E3C09EE7AE506B4F8A2BBE9E498EF25667BDB
2B79A6C97BD472425A53BE15D728D7D835AD381E8437F3B650A7FC244C9C3B54
78FBBA219179F9CFBC03749CE59391338C51207B01ED36B53F1E1FA003F01FFD
511444C6E448691351134AB8A9E139821B15686834A6BAB96EE0F029A27AAFD8
76E1D5EB11DEB30BF7A3CC1FC21E712AEDD4A948F8C10EDBEEAD8F91EB13E7BB
5FDB2C92F44421C7E20BE7E0A78FBA272C69F7A34493DD3DCD6254C0BD756210
F38F01D757B83E20903375DE4619505809407145D7148F40B8FA1D9F0DF626C3
94A6BA3C7EE4290F0D898BB3E404CCAA91FEA4EC2FBB3A7349CE7BAC7CD903D0
AAFEEB0DD8B306E7A79BFB3620929FFD88F15A1BAE76C6EEFC79C130434E6066
038F7A17D436BF9B87FEED4792659E7EBA466964C7134AD5D0447045AF93358A
CF5DE07C87C7C94DED51FED4CCD2D249ECF4B22B21842C8F86DB2D05311C167C
F5BFE161C8612D66A783164ECEA734E43C24EF1C411A4F04267EFF030EF48F8A
72C42BA53B144B8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D515673E4D17D8
832E0E2EE836DB259FEC75B3179FBFA7AECE74EE30AE2C787714B977DF80B7FA
EEBCCBA265C64EA7E1CDBDBC5A0541FF5E194CEC0F3A909C9E8EC3CE112441BB
2A5F77E281FF269C4EECE035BB6FFA507203F64797942F9227920CAAD43D1B48
EC23887DF281EDC3A2249FE4068D529E201B45DD4739C514452FE0BC6B364751
54CACD25A07C74FEAA2928802611B73C375EB881D56F270E8C77CDA90EC7FAD6
46EC17D356E6174C5C555DAD5EEEB9110AE468D1CC587A732C65EB7C738A7D57
3E2345E735B39F7B01398298382D820918B52AE133CC3977DD3448946BD058A0
C86C7B21DFE775C4064934FB530B35AD9155EF03D074AB55333A68A6510AD6BD
87E9BD0F7E93A67159F5E75761299DEC7BD65B80885F9C3574339A61253C3234
BF4E1B89BE65DE7B0CB4DACDAE1FC4F892A2F092A3E45B066E9EE705C681971C
9CA65FDEA97EBFFC01B4B0E381FAA7A0837A0DD1EAD10B0A7A3F70DB740709CF
3201649E488A00C554429F72F81976F8106FC0C276C819700733331432ED8C17
CB4DB47FA3AA70DF55B9B5E0817E08C6A760677CFAF1D482656CB75CF243EEB4
2103985613A5D63DE54712890CFBABE41E2167A6AE54D5DC1BE1810AE5AD8646
CAC4CEE0D417E875D900A39BF8F1E840D5695D70DC4C97884A824855D271FC5E
3C8409D32BEA2B29BD1A08E9B95F964FF6314E7D83013F420403409EFA81F6B5
E80114385D6B52E2CD28E7174BA0E2792D227EDD82ABDD138A2812AC5E2C6030
4078961DE665ABEDA47B214C73AF9982B447F071FFA8CAC2FD1A29623CB12869
FF3B4A25D1A21EC9B9C92D1FD382151CA37EA407BC8C9B9034EB7994DF1AAA37
9A62EDFB1378A82FA82511BF1887387A293593F166C33ADE345C6AB91921B93E
22698328AB963A6A621DF565C08EC5B4DE3CADBB53CC6A863D331500AD49D0A8
5D7764EBB31166A29307F6343DCA5AE98099FD0DF79B13EB5D68B45BDF736A27
654BC2ED09432B072E91F7CB647E1131C0CEE91162DA66C9C1C9B5039A0A01DF
B009FB8D31F7D6F5ABD046FCD1E586824EB69F42B4D0A858F8A3B763760ED716
A24400838780CF5A5C4187AA81C5BA8892EF2FA9F87A6A97405F04DD36950A8F
3D2E430290A40947B84A0D64CB893FD0BAD0C669DE20FF823A10E4EB9325DA08
07D0B3882CFBE4C835B057D5953BA549C0742D661C8D6BA1F78EB952AE750CFD
0800ED2EAA1DF4D0E3D7D524C71285ADE3F3BECE695865AE896BF66C01AA5D9E
328841C2F43A31276A3946D95444CFF436EF0E377B78459CD5B7A1FADD93BD3C
C207D8623EB59F6B3FDF302401C06DE6CACF4C3FF495F0D3B1317D4933E1E097
ADD392E793B1B54A243617AE985BBC01B263933D3E20EE20A1245633FB7A7109
0207070B9EA26895B88672C13EB61842EF56F134AB25DCAD2BD08AE61E233FE6
FEBC87F3261124DC587C5DEF6FF091ED97A96DA52D988006E9D5471B7A2E074D
659C5B0561A34A2F1605CDE754596F8369028CCB95F05432204FE04146BB1300
B726E2EA0A91866201E08792F03323228B622E3015DA93F9850E9A175C83CF70
BD90D19FE47DCB4E86757608AD1D765F168FD2A18582D3204B245758ACE06E2D
2BD43C8D0B7E42AC99697B4B5BAA4E553BFB21986E8672D6AD3E0F12CECB7595
C5E680E31F06B8DF8F8EEF4DBB83B3C77432EE201F41C83B213EBBBC0E684E19
84C107C8FD9285F08FC3C879AE6D42023BE0EF4FB80455AF129EA1A66E87168E
BF926C2A91C5281704EF7AA35548174F41D78903B40367915D4EEBE9B8DBFA67
32FC4F39FFFAE347AFE8B5084386844FA4F0B0331CD57E3C2B42F2B5A96FFBB9
4B086C7847400AE8CA79A797C3A4F27AA9924D6616FC860CCAA34029FA42DFE1
4CB390C69AAF35C89B103DF5666EE9AE0F25FEF4E57B82E05FDD5FC48B57A3F0
802866F884EE3C6348FF0F41BFD3E96F9737FF3C885E083C382D12E73CE475C4
CBC8EC0A76FC971E927451DBABCF75B15E5AD53C8DD8710ACDB3786A919FB356
CC2695CB2BBC2E37B1FA6FDB0D247F4088BB9B710745EA0567811DA030BEF5C4
10DCA1D11F770EBC2E641196A40F4C399616B0A7A154D9577EB6EDFB9F157911
E60BFC35B3168B7CCB53A1D3201066F4FE8D02407177ABD60812B88E20F71C86
5A3C7B1B589C0B5BA0C811390F9DB8513792EB5AB3F57FFFB003F6BD746FEAFF
2AF04969EB7C738A7D573E2345E735B39F7B013982983826237629286D48D652
9E15ADC93E621833FC3E904696E8B4A1FBAAD9E2323EAA0B733EEE1C7A6E6569
7343CA3970CE84EC6B9433F84D118630A3B2233A129E36F6666A3ED9C1AECFBC
3AD200383477D05545B04A5EE55502AE9BB54CED17DE5CE89D628716BF1E306A
A807CCDE6B18DDBF8A83D72F50C48125777489D17D3FD0DDB059B599BDAEE22A
72AFA0F39FFA42BC1097793FD2429EE8478DFF4DB502DBCCDBD61CA5B5E20E1C
FC04C7B0EBF153A18BF0292CD25EAE9A176C9151F9C4EC7FB503019911F2B53E
072D324ADD764851888781FDE97B26FA9914DCD688554EFA8D7F2FC0737E4E6A
6C452DDD5454D1AF29E6541F493C035A9BCDA34EE00F77A025329DE67583AA92
C55955E1D06531A5EED36C30AA15C66D57D4FC3C13595EFAE7BFE2FBE6DE800B
015E80DB2C9CED6F6E7CFDB94695D45D8582AE345AFD978844C404A5C01C3FAF
B530DB9A6A39DB65E568DD3A8ADD05090D2AD766419FE18C377E448EDBB08235
26BD66B40F0519F04EE2F36BB9459C6F41B3B4EE5B63571F18E7077F199062C5
699A900EA9398CFF7BF2CB6AB91D17C5793A8F9EDF8764786B8C6BD6AADD455B
5748055DC43666FFA6D2F73A0656226A67462E3B609E0C07072F3F3E6FC8ACD5
2417325991630F9C4A607450E82546FC0237D63E97E20D34594B3CE2A37EBB06
700474F4A4F93E85707759EA2EF141C0185B6DCCAA31E67DFDC33E9675CCD879
D1FC8F1177B2EE5DAF403311F039C6218F4D2882FA95447F857821DE835260C8
569B437B93FE55D79C954243E49E2E2773540E9DDD953DFD01CAEBA561F02861
1754F949BAACCBEB1CFA5C9924056F33ECDE6F29365A5745012C8ECC5F8B4C94
3BE06E64726A02C5C91F41CD1B73300A2E034FB05F65857EC1CBE59F047E3956
309ECAAA93185590B78058A45EFD065090894BC85CF8943810332F65B3A2754A
294E67CB779C7D84878DC9903EC95C4DCBB81185B62F945375C18AD34B2B57D2
E4BC003F0516C8A63449F24F6C8FF3CF208C7CA7B20F2DEF8D21F45A072A6D5C
F9F29154154A7FDD41ACAE1244753B0445C933A94C5CF53A7A6710CA40677787
776253F81EFD9AB1C64536B34CC71F6EABD6EAE8A6A87593E330FA7384C9D2DD
211B4E26DD455B8C450A3845A54352CC7706279C91938C746FFB2F9BB1859B9E
19B54C00F14B918937517DFE1339E4C6CE0DEB62D1DAAD58CF3E9F8B8B379073
19AA5E3423F9BC866B6FBB910B766B0D3D388699CA4D93546A29395A5BE66101
EC0A83496AF087789F6979D861394B757231173420B130353EAC9DCA944A2D89
1B0605B75435B3075BA7DA5F6434B8BD541500293FEC95E1EA1AEC746CA2670A
1AB63F6EEF2B51E687AC907CBA56DBB99E2CEB0F7A54B87129A7365B3CE17144
B329EF0CD6495A7D1F18FC4E184AB0138C55F58EE5BF45A9986794B83227FD41
17B27984A141A4B19E69598D08489D3836A94AD89F1C51FBD589F3CFD097B2F8
5B4689663237E82970FC0EC032AED2A2FD2D948114EEA9BAD63127434DAB18D3
87013C388D3840182F35ECB419561A1D60569ECC2EEFB7B6B0263B8B5CE6EE63
CED9FA759FCA0F4BA97D0CB89E736FAF9F8379DD126929166BF7C24D233E20BB
CD42F78C46D62EC4BE01C5454E0323B023AD7301DA5939595B1C1550713957F4
ACA332BDCB525B1E4BC8065BAF393FFAB924635579E7CF52B739B523FB56ACF2
4698B7252C22BE36764FE876B236547F6815581A47585A4736B1045640800B09
84898282CB81A3BD0600F696EB582F5EAFD33A8B88C6D49F1AAEFA49BA647616
65208446CAA0AD7FD946EE45EF3C791B05165052B12DDDE6A5B490374097FAA2
C1DF59835E8856E8D8DBEACB517109806DD2CB6704EBB0D4389D1217080B7633
A2896369D59A6B8297CC9EFE00FCB9EFCA2D26256C5DC84FCF60D33CF0386F6A
52C8265C910AF297CDEE3DAC34D82FF26906D52456D8D43114ECF0B4E3D6D917
0F300BA2D369E9DD9EDE9AC14E4FD09695BBDBD7994FDE58C17DF500C5D817F1
2DFEAF581793C1D178E74AA9DE42C1825A46B6D70EB017FBDE39702B4B8B60C2
4B78371A01CEF9340F82F0E079F1C7200DA0E6977B036E69F9303739C6F13F53
4DDA1DA88A06EE36401A2A54A603C5CAC5115789C442E6BEFDADB6D2A741F035
77E7AA7BB2FC22E27B888606031FDD3014D53E32719381936CB0776CAAB98424
E76D01937F9CFE3CF4E3779650D7C2DC3F0609EDFCC22B9C02C7B4DC651BC88C
B2EE8097A410A0335457A47A53B42F29771497E9F5AF68E2540408A717B7E48D
4ECA89C65758520C434F65A0EF3B575960E66A4084030C516E31813AFCA02EC2
AB68D12BB1C155658BB53C93B4D5F379DF239265A61C11462A034CC5D3CECB19
60B8F9BD9F4C10B1CA1196BC062E04A4E5BDC058475F916E40332CC3499D69F1
2F4CCE1ABE416B7B9BE2DD18F351F60F496088AFC5AF7A29C4E365335A08E4F9
42AD08C687F3D4039E456985B3183C918696090AAE9F653E3C7359B9BC53654E
4EA1BC3974206D4EF92EC1E606B991A349ED6A68052CCC845170D1DD32FFAC02
A91ADE9BB38D8CF41DC6D30C3B8744042875AD434486947FDD39C75AF60AA4B2
10562480BA0819931393831F1DAFC3A5D58A026EFA8516683FA3A30649486C00
2BFB9868AFC13851E8F9884F5B9A2F3F1394036A363889F9FF0A0412040AF4FD
DD9069BEA6501105C9AB89E142758EF9A1FA12EC9C9749EF2864DAAFC2B4886C
6E9E9D214EF749285BB78CEA0180CC698A7CD5FD23108486A8D7E350779CF13F
4CC39C1712E057311DF474799C7449FA8F57414D76BDCCC82C60376236C21261
92A7326616CD44DBFBF942FED753FDD26C83FC50615B20D31CCA7EB216D2798A
9933BCFDD1E556F33B9BBFE23344903D5C8ADC6A289F6A4DBDA5AFF5B06734DF
D7E18BFAE98A1C243F368853719821DF82B89E2DD0885CA956529EA49D7B9133
7D1D307C30CAFCE21C74ED943A4EED0C1B3BD32479CB48DE24EAF39BDC40B3CE
28A9BFF70E85FBE7E7CFB5E76F8BB432899ED1D9677A4F8D8524778995AE1435
72154DC945D66A2997E81963E5A017B4FD5A0BF82404A36AFA318D36BD2F492A
AFE1C957383C991714D5A5640E77675657371BD3F69A70793D051FFF5B94C593
04876FAEF1C1150D8F94874DD922AAC1936BEC68BEE119F67756334C9F3247E7
CBDCCD90E10600663B161A15DB54D1C7DC58F8A9F1EAAD5C10BEAD7E583F9BC1
DCB1EA3B8DA7CDAAD7C1F1602194DCD6A4855C5821F7B1165F3ECC1552872B5A
FFF597D94539A163323FE2C8DD7D2E82FFDAE7BD43967525002205BDF49DE4C1
B446CBE6683FADB4A6013EA9E8B4C6BAA6825975EAF495F92FC61205659AB81E
E8A772D2111082CD9BFCAAE019C01BF1F6E94DA8B7B06F422812B050DAE9D1E1
121A5E880CFD73B51A92E540FF09BCC7B6286BD93BC1126317ACD924D5A61FC3
13DB5F4B389E1934B98FFF72243AFF882E061CA00527AA59F906D303CEEF0D9E
89E6660D609C17A3E2095F15EE963EC738C6F23CF4F34A9CED84942968B40D4D
871D7AAA4970ACD95747C134526614321FC136F569E54930311299DC77BC7E6B
1A6CFBD3FB48024ED8DC99FE33F7A05469EE84164E7DA8ED1557A25EA3588B34
522F89E6B7EACEC2DA13A8D0B66AA0C3A368023E194AD04DA05B8585940B8B01
DB390A6D1415D914A899C30A5438CFA2F9D3270AD44DC4EB4988B9CDA334060C
7D8AF83A20F9F5DB0FF74793F3C5263756C50DDFE894BF041792494691B655CB
9C88996A27E4435BDCD0EA870EED9EBA6545141F2F7A7307D30727B94E23FDEA
C8A543ABB1E059247E276E206CB00BED125C8F78A5BC0E882C720C27834570C1
0BF892F79B30340EAD8536BC8F74F4602705B834E9B0391E126C95C045927A17
9F415AA41CE071D9F7F959365E6642C9D6103231E07E3975059198D8F05901C8
97288256E71AD9A18A5544EC30B2135CC85A4383F380C770AD1E44970D66A6C4
73EE1ADD05F69AC3DC5F258FE3C18E87FC474EA4A491419CF5C94D6A6277A32F
6D5D10F8D4EB8147315E5BD5FBE88E6D314983D415861028AADD851711FBFACD
0470F350D9D04EE3EC2A59D9EE46F33362634F9758827B199FD07BD94A26E89E
6BA8CDE849B5131E19307559490FD9016E4361F57D1429AE67240FBC800AF567
51FEEEB6990484948E09050BB25FEBCE1C41A7FFB8FD2EB9C6A3E0B2CB5DC94A
47A9FCC007F910998AA28D18D0C0D347BD4A23ADAC9788E84B4399D4C62D85B4
3354FFB487FDEBB3F2F05C4ADB97D6D5A602B7D3EC89C92FE3CD3ED8A1A2F1FC
61B03210F3BF96D6BF08F38611A67040608203A5C0480402AF3247216D8F96EB
D8D1EC18D48FEB29E968BA877F96BACA6164963C3AA18EF7AE2BD8E0268E6095
87CBB17DC0DF9E4ADEA85D9F8C77DFB4AC7ED4A60011BFB14656E7A1F53FF5ED
7B2E617D6273562E2837A23DAD7BEF910E0CF540BB459E4C13C070931C27705B
ADFB2328E930AB21E97643C5FF3296C63A572B75ABED1360636924D76D2A60F8
88B1514F7C668D8E781B16E78E2D23180EF8A166071BE79D45CFE4070F971EBE
827C4A232D859AE6BF5E56B2FAEE303A56DCBE13825F41740DC0195522F51BA7
5F725249C5FD6FD166C835E1CE79E47B295E7D92147BCD955869B80587746A2C
55B63866E552FB94C1CA66CBB224FBF95B8DE8FB0274CC120718A9ADBA29536C
B67B92DFD2184A508BA545215157AD16CCAB7922AC6A8A1388C4604675EA7384
F3398E49404AFCE19EE92FC4F261DECB1C4B4EEE54C6A9D14DC90A39B3E3C332
6B8D9C930DAAF6848E3A72DFD018BA844429BD3B5847B9B5DE70958048F037C5
6C14FDBCE691048469BC49B23221EE6A2AC98D76EB90FD07A2994748A3C7C8B8
AF416EA44AEFE84130BD4D15BB2EC8597057E4EDEBCE7F9D221E5EDD5DEAA97B
C86C948570063933291D78AB56DC3C6F84CB56870EA2BE9D0B1D1F3D34CEBAA0
367ADBB8F79632C267A05895B76C162F6A87E39DBF326C93EEB46E7F2FD146D7
60727435015213CFB157A1414B13318EE72365D18733275A1938886D2DC10282
5CB3EF2A7F9A3761921A7EA5CB057740CB35662F7663066D76ACB2931169122B
6CE52DFCF82F1ADDA9AB38F68816536772F8C496FFB2E49F5DEDBD72973EEDD3
D9CEF5B4636A0ADA0E4B9F6D550FE6080A7F4735504B58E07898EB92D5A7A257
9165C6AD132C70D61574E96AA1069043F4BD579A0392FE4031F65D892B83A3FD
36EECE644F058C01100D1C7923E65853DF916BFAFE3341CFA4DBCB1CD87EF48A
12A76AAAEC1C8ED1C42A4C6D58F0683E9AE3BA1773B997CF50A0ECBD1743751B
2A5746D139A591AA3CD97D6777A2BA08E242A05D015A9A32809DD51DF932DDED
7A2DA04425D2D64528280D0A829D6889E75E678ED3999155EF4BEF6D4B9A5E07
8D531F9F88649F792346F010FEBFA292D83A577B77F81BAD985C73B05A79D3C8
661A998474756A5A66EF30FB955E04347E34C0950E250511B89F2E044D41E87D
9F04F4FA78553B4C7A0BE6DF82C2EFCB5E5941D6326BFD00F8E2C46B4C975ACA
CB7A8A5A267BE04119F5B53CCF11576A5B3D14BC2AB8ED858D43F5B005BCB014
65B2BC0429162BE040639F2EE9C0FA967A266291566F85A386DC278C8F725377
9EB9D278001C96A7BC802D06AD9D338E22402A30C823DD655DAC47235DC4C044
06CB8E601B345BF60B6462DD7913665633A36EE85087F51AB5DDF2041BCC6827
E45A0370F0F2D6FDBB38DF4FAB04CCECAC1EA93988BE254E865898634CB76B72
254C84D1A517B53B0BEA8A936F9CF329B2F4350B0A0D240E4D2DDBA4D4E7848A
25F2E789C18EB54A635297546BC93EF4449C6E2629BE1EA48D1AD2459946C422
1FED4785D2E9C5611A174BD260A65396CD18AB6DA3F5408A2419D40EE59212D7
FA5FDEB4D87CA52E952ACE33A54A3E535735FB2F12E8DF9C6EF0F015C8184493
FC6CD54A2A0A5ED2A5165A9A2EBC4A7516246D99C18A0A61F653CC9BDA6BCD32
FD6801B19943218F5991432122B9D5B1A59B19697682E4AEA88E2C9D3762C911
AF08BA10D756A6467D96C2EFA24E139633A0AFA816EC666651DB430F8FC3DC0F
D24606E68F9F622CEC90F4E09F25D875B2DF7647DE1DBB43878E3EF52717811B
1078CDB36CFA5193968AFA8EBF05E3DC22E084326D3EF8D34CEBD5EB5177C9C9
A28336603006289544091C3074E04673F0EF8B83BF00BC1A7A9D57AEF1E1DCCE
EBAAE87CF5DEBCE73E80AEAC860B567466240E3A598E0D31B4BBA740CAD476FD
39BB81EC7A1CEB5D36BF344354FAA9B291ACBCF9B256FC81758DCF08BF3BDF8C
4F3B76185AE27922D871458DFF313B22F08E3A8EF4616E1DEC7474C77A194EB2
B313545C5D95792DA6BF1C6E0DAB55FCFE8EB2D6CF6BBD0AC1B7756E06B403EB
E8AA158C45390FC5BDBA02984433F38AE181C974555ACDD144A6062953EDD79A
71710A04B598FA774E9941C942A3DEF853FD48FDC9E2F2A7E135582226F3FAD2
BE387F0BBF649A5EFC7BF136C8ECEA2A26FC0EADF9D03849B9CE01575003819B
BD14E39722A9A286339B1B853385B5877A20D4B5E9E26C70B028FFC3793C9969
AF06A708F7CEAC99A20BCA3573AEC937979B2744D0F969B43B0F361FDADC54CD
1A8B717A6973F46D420890DB1A817C856910A5FE389B1AF013EBCBFF2BC7E5D3
D7EB4DFBCF0C6BC99FDFB74F740579C8460FA4985E6D7E438C0A638968AC0648
1BBB1161022A4A5AB2ABCE9BA9252A603B3E95EB856A85D3762F7A5A783A3F7F
C921181170BB05CC2CAF62830C2C50EFD34C4EF059EB56371BD3F69A70793D05
1FFF5B94C59304876FAEF3A4C02B18B0F3594FA089BAFFD2E73396ACDEE7682F
AE117C464B6C6C497F5FFF1FE0ACA49F9FF46C7B4D7221C8EB5E2D03FFC75FAE
44BC26EA77C8EF6AF3549FF79C4E25ECCD5B627839105D27A32EB653BD28B7D7
315237A822A09050F2086F0B643A4E89E630F99516B2597A03D945D9CAFA0CAE
AF0A927D5C7DDCE03DCCB229C4467E613457153F687ADDBEBECDCE5D51446137
98CBF687F6E5FBE0CA3B9A1D56DABD05371F9479BFA4CAEC5CBAAE9681B29BDA
8B9B5B38E548162584D2EE4508EC7EFC0DC6E59FC30618363E875234D5138D97
26E4C107DB8AF8BCA490837CBE55E8818A643F3F3F88BB227E90541B17B0E29E
EC7A3BA6E3B8BC7A608411A44EFDCD3B7435B6076111B0457287C7B27B9DCFBC
E1DCB7A0211BAA88951B9EB101B01D5D3349B6F868364FA6DEBEFB280385D454
9E6D3F56E6CF780B37CE39F605793D904FA4650A8E2FCD3203CD0D1A78AA64AA
9FF80D4AD28DBF9913982F332B6773276A7C5E9B160FF10E3274DE717BB73FB3
C552A51AE479CD96B4F9C3CF1D39123EF1C1ECA9B83CE441005175BC7F5A2F5C
6763A92AF6C079633B98C875E80B0FEF650F0038275688B9FA5A894C30373899
4C15099DE0F0AFDE6F509CD1687F9CB390D5D74B07A5265E70154C0B73207821
859BB191D53398A26D610D53AE6A1A56553BDCCE31A358933C39B527DEE9A6B1
3A3E53D1F2B2397C641187756FD690E185CD0FD6180D25ED5EF2751BD0BEDBE6
F43F03DE472E51A17BE5E15126B33BF5ADD4312D250FB7ABE7D0D8CE90B7E1BF
4C2BD3DC8A8773391BE5728DAF271377FA7A0B3BE567F630F989B8F247C0894C
DA153DC7E4B034607AFF88F73C5C8DDE321B1BBFDEAB69A49F4499066BCDDBD6
A90DADFDC11833C9333DF63168F9E6EF16312BB687AA3EAF0245885C5CEFC666
C8381CD2DE3DB70458D95772040A5D25C0640844690D361D7732019B86C11D79
9B79F33BB09CB6771F637CA85EA69AEE3175F2541B3E4A4B1776A6E5FDEE28D4
11C16547C6C7E144918FF662A5EE19C1360B5ACB813FE99837D5102E8DB6FFC8
039417A0D61750E1EE624DDF00C12D9A0289664EA62E732C4BD3A421E8F13A71
7538E4F426BC4874E464ADB3D3F07FA22542322B7BEE5EF03C844D6EF7DC3BFA
CCDAC376BD3BABB5CCA048A1AEA30F0078A447B0584D28F6E8A0197C16F29FAC
0342BC6B0B8F263FA546C81C680DDA1973B115AA85779C962E6F14910574D956
A9A0270655811051028B571E39D1A96CCD8BAAA40CC18E3C64077DED2BF90FC4
069F7AD81133405BE2209962BD3406653A98653F419EAFBB18DF86BE789421E5
D9D36A9AA32C283B25D9E35BED54243580FCB57693CF278E0A59282E4D69A452
73B491FD52EFC98B70B118CA20AE333DA3792EE6F9A9BB51B72447F93FF3246F
9A189076CCFC5BD40026EE4F33793041E83EF250DF308B5BF10131BC8969A7E5
2BFC97C3C1CC59ED40A970E434182CA7E70AFF5B14B02B75CBD0738E35DAD8E6
0E282DBB6AC3949FF9CB12318E20B680A50E700B9A05B724F4F4C9503149E551
4B919B0C7D8C0E74CAFDFCFA1D17D9BC2D08D64BDFC3240507494F7F10B401C9
A2671884E581A9DD4D8B87CFB4AA3E3F00080AEC3F0AA14FD5EF4F6A6DF02342
33EF08A17ED68AEFBBC8914D0B4827F7C87D24E2CDE66BC6BA989EBB3EC8E443
63ED00547C9A4403E7291357E4C4F9A6725247F3ACB290054C79127DD662998E
6BD54F3CD5A91EF2EF703BCEE9E7745FA446B39B46EF5DDF9B3D21432F66E1F7
774D9D4BDBBC9D748D82986F6F6D887F5514996D92A211B473C0606C8D78ED8A
E8B8511F987E96279E3AE01FFE68E34547E71A772A21D44F13761959249E1050
8177B1FF8B21E21EA3B768D2AF9356F39EC3901F4654DA943F55F75330C1B81A
649AC2D5492238EA2FBDCB2AF1F9D4FE05F4BAC0C74C501A47585A4736B10456
40800B0984898282CB81A1DC3B369731F5B95646684EBF41E264D943C1929141
E4E2DDA52947D5A7B66B496DFD1B3429F99F87076955C767DCADA10DD79E71C5
27867BB83EC8516C6D3DD88749A0E74BEFBBF77C6C32B88FF3F1046E4EB2CD94
2E70702B7B25358DB0794BE8A1719A90CEC4BA5A6E2F7097ECF124631EAB9979
42759F3D10E56C2735396E21EA48F81BC55A5D96C622B04FCDDB40B675F08105
3377364DEE8AE98E7DF09B18829BE2523F89F383D270C1312811B785792E7720
7E6022E9D50B282B1284DD9EA66137C291132527E0B32C249A45664F725B8465
BDC6263682315CF7BCD0F2BE6B7198ABA63A89989A1A8FF238BA39DD6923775A
1E6B0EFCE23A142BF2A61C072A22F9D743F6821A2BDBF622DBC6438DF6625367
A51A814A04083917280FC80A3636F3B7AC37F415FD2F8EA734FA949289DAC27C
04EBD0893FF0CE4557E2E105DABE212A040FCA30A711DBB9F37CC6B6E6B39564
D3838D43577688FF0EEF88D3BC594F7C2EE6C45CC9EBCFA1CCE5B52441257B03
312AF6F765FD970E1F82C2659A38F8F63251495D697C3E010BC327702B132335
FF288ADF62578F30CDCCCF826CD823498A17C7ECFFAF85013B5C541204F79824
5660D135080BEAD540967E39CFD1466F6E84C2E08AF87D3506B7C1DA714AD9D9
87DEA45368072750CAD0C9ABC3F494AF386ABE01F6B601D390E2DC1104F91B54
A06D57CA568FA385D91DBAA8F8DE600D7A0506B431F2E6897F39ABCB8175EA78
C1E449853FA9B6D42C49637CDFE9D0D56C0DE49DF56331E837562DDFD2B9A20C
64458327A48F32AA3106C1E03028539338323F06B3AF9DDF627537F711151EBF
427E51D901EE474FC82EAF8FDCC119B80A5EC2DB63EDE128761D164A9843955B
BFEC7213307B78378EBEBFAA178F4EDB8DD0AC194DF463639938A5A26374D3B3
248DDD825D7E8041DCDA231DFB8E6ABD97BCDCA958BD3884C8FE3AD9613A6CE7
06DB90796FB0CD95E2E3A746DCC37C2FFC1EF76FA2A69C9AC171C388750C9BB1
65F03A6F560D2688EC215913996F16584BB29CEA62593547DD205240166D84A2
C48EBA62A63C347D512DAD1E9CD6874D9FDFE14D64893669743B6BC2F7C99701
486E6D2AB2B2ACF8559569A120F9BAB156215EA752F4C5C7CC8289A178A35A25
883EDF8A78A8612E5D3F617DB098B94E820F4434BBE0556851FC6BE6C6B7422A
8B1F6A10999077259B56DFFC008CCA4106A9AF77D72A0D2ED22E3316E0EB478B
7AE71A3F43E960F8B52A4B88828D97DCFB70DD83EF7A482EB4081A1D097FB73F
8C1A5B43EC159D670764CC53EAD28CE88289207B582DD18508705EBF47D68C43
6F30764344CCF1B9E47D39540E4B6477A00B88C56C85E93C7D079350C0BAD8EB
BE1FA99D924A09B20966CB3CD1D23D5C8E17CF1B43A482C44FE52E57AF48D3EE
BABCC0993871E9718A75DFFFC74395B532A58983B2FE7ABEF7310F51AE03A0F6
9BA3A5A4B36E62F6AADF26084F27A3FC408EC625E310DA3E7E84BDA3755FE793
314E955F14B9DB208D130BF5160D289564770D0A5EEBDE2265F4E8DAB9DECBEA
C369D71E76447BC024B5BE297075959BEC8A8F9033FF2942402FAAA4B0CE6C24
A17D3A7811A424073F982C9EC093D7F96770C73499AC0AFC3808FBB40998E518
680AAD2CD473A10EBA3DF8E102DB0DEF16FCA0E10862BBAD279F932368BBBCA9
1BD5350FC7C5E59D8A8FFCAE76174518C3C26F3DEF5ED468E6CDB6AF28CFBB09
4848B0FBBC592094E92386152750B09EB46070D995F4154FDB773A7D9E29FE46
E464E602CD2062C28F7CDF33AB3D45654D54C837EDB06438F4533245816AB9A9
3F128456F98B8120A1093B6E213828EB29E0B6BA8715247FADD310C58FC911D2
94EE7E91E866841762CACFB19CDA8EC4D2120A75F8FBE6B0D64D79096233696D
460F312BDB6B1F9B82DB524A8D57FE5C30096F4171E334C81D41A0BDB45D751F
6641FDAD6065A36614A686D6A2ABDF05D656E52E3959574B0B4BCFA0B9C7B259
0D30DD4669F20BDB3CD1453C092943FACFE8DF1F7B0A6AFF5C69A65EAC76ED7C
42F48FC144EE377D810BA7902B7AC8956E753851CB3588E22936FBFB63A58300
298B1454CBB3D788014BCFF4A793A6027E94DF79BEB0058C763B9592C164DFEC
115BCDA359B58305C56E941651E321CCFF5B153DE73B5AFA62C6E671BFA6CFFB
AC0CA1E1FD3340FC987A55ED58D87566C8DCF13322078DE4CF1E97256E6B5E87
EC197F07C4D1914A61CC4F481013B1B3462B77B09CDA782DA7DA169A703543F9
E8685749426E9FA08297FCABFBDC68C6EB5DA286DA3420805F6205E00EBD41BF
BB41433632A244D2CE10DDA45FF84DB78BEB13CB5B794BCEC6361673853B40FF
2D425FAD94B834074992C1ED9B9798C718E4EC9439628D5E5130752A05FA12C4
C0384F1A9E8FC624FF44D2ECD2CE5C88EE8FDB5E32E373785476660078A3C036
2C87214B6C5205D7B59E04B8E731220B8A92BBE5306C4B6FDD3FFDF715BAD21C
53DD5FA74C206BE178320D01B4DF145D6DC515C88CCA35C5CBFD7B8E466D657A
804EEF1619902225A0732B430D9BD9BEAA22714CD44A04CE29C9B414EF463679
A22F00DC77C6552C3719CB2FB7C4B1311ADB97C07BA24772579A0697DA6D7632
947C4AB3AF2133D1A1E2719511F626E1924A9932700C0D7D36755706C2751B3F
A5FD95D949A297BF97C53A08B1D1CAE774656AF075B51DACD371FC298D4D6DA5
B95B9F1D0202567080297D7EA536BC895105246C29897F3873F84BEFD3F9B6CE
C9EBB904C13D024BD43E3B8C71D54471DC77362E329CB71D690E0261FC261DB4
6911D35870C88509B392E1B931F0E402CF17A133F793222659DB735F2A293159
AD84AF082B956F1452E3E62CA7B18E275EB0CF680AFAC9DDE4F9B48568A1F76E
240FA6E4A9E942F3C6B70266EDA218C6D2606A4B705019F11E2EDC39FF4DBC03
7FDEEC19CFB7C208155164D8EA18523F07BEF10B0BB14C4D4DE4F2AEDF89BD89
50209756D14729E8002E4507A1AFD615AD0A613DDA0C472C1B2983F1E3EF1848
1EAF1EFEDA0068BCBDB28A7FC2D0CCC426EE8342A3FD62997CF8C597659008C4
FC1EA0A07BE01E9401FF961C4A20C8F09061B1430C204D4E78A8D40739F5638F
9917A41081B83612B3EB27C2D8530A811B20111B23918EF93CE8C1147B93A7EE
8AAB6F15B5D1D3B835FFD07328565672AFE4D260B3C5CBCDD213E06221861B55
19E7CF062BEA3391C5E44BE01179F69EF6C15AFBA691830B21E3955B49456E7E
3F29A38E96B1956963A744A9FDE44F9811361F0B5E6C8C4D85A2B9A83C154240
945275CB4A4692393F561AC3395F6D9B8AE4F80847C409EEB53974A69D2FC7B2
005207EE7676D8ABC724E7C15DF4DA4120AE6BB7424A76B49084DAA4E59973E8
9A8EB91958D7B43EEA506E0B4A36A18E25B5BDCD75598A4E416B248A6FE29A67
DCF4E1CBFCE603260A277C4FFBBEDF5E26A4CAEAC397152D34458B281D8EA05D
658FAA75ED2CC22B05B89ABA446304EEAAC280A94CF9CAEF78327897FA9A2049
428812234F0873050F420D81EC6C64C968550F721A72A322249CC9FBC004B4DF
CBAA04F2BB56BF961AEDC4EB2355B3321C8469F0783D71E6CBA14FE61E425E23
05BC90F8BABE84F9216B8E07B7117BF84B04DD3C883396E0CD2FBCBAC78714A0
0E89C93A77C1C2B83D7789141CFE611787C952E7ED9A7C4447E7EF63E23150A3
4363BC35D052DA1C3DB6E76F6AD8C9245779FCD3B7470B94624512485C1D5600
32862BC7FC1D4D5929FFBE254FC47E726FFAAE2C2A15063C65B5636B61645E82
AC13268CA45E353D5F4E3378154FD0C9971F45C0BB2CFDF159D52FD8455FE6FB
031B48D904C5120D41EECF7980C0B833315629060D58E961B9CB7015A1998339
17F7F56BDF132EFF5804B0E3186AEE29EB4E627939D46628358BF9DD43B61547
087D33692127A3D2DB4B4D4CBB33E15149CB9F9BA9D2B5D329F9145A1ACAAD2F
D57D9784BDB219185B42731952D812918F76EC614BEA4DDC71B09D0EAB3B1214
182E7DB08E59E004E2255DBDC5959A96CA4FABA813FDA935FA86C092E2DF9B35
F469AC8F322E1FDEEDAB353DAD46B71839C2C70D6C7FD73E907E6840ACE83491
23EFE3513D141C31DD7109BCA7E9DA969E03A4B5CBCCDFEEFC01872476101D65
E487A587B866CFF2031306AEC35BE49D9FA599C7AA78251241B46F1118C8B8E3
B1270C1BEB1C4042BBA0D34125774CAC74136AA44E3E5D00815DCAA94DFFA099
F43FAADBFEE1AB881CECC0DAC4896A3BE12DE0CC5BCDC4EB7A36A833099B48A7
C9ED3A87EFF53786E0DB5EAE8AEA6B6B92D1EAD173B4335E57BD5FA60959002A
9C1C21AF7D54DE81E35974DDDEF661F0DEF2EB406DEE26072B592F8B3BAB502C
07BDAD5FFA2C9A464DDE24084DFA7F497C96D30F7EF07A25649EF738A807BAC7
DF78864C43D9B9EB5F5360CD0BE9077E5ABD6F0F5224EF50BC9B7960EF6ED1F0
41810AED4B3572DBA4CC417E8EA2C13DBD98402015C27205713A9B31042BB5A1
A3B74395F8AD7A723EC1016978201BCA43019F62AC6FBAD2A4F2C83E0B909AD5
8A5FE0C6A58776AEF1D0799F33FEC6EDF59F573E7EE6697013D6AD5984693F87
21BE6B48E82184EDC509992BB7438F7333632DF0689F1A97B9D3262AC9D1AED2
2C2EAAB3293CDF862EFF46EB7DE76BE0D3026F19A2F1C3406EEC3A74BD5C497F
391141F2094F8EAB4CC90B12E10F8B9CE93609B14BBF10E66264FD1E6EAE1759
87CC0DE53803171B4757BF7017016826D699540EDCF90853ACE505658DE7873D
BB40270A199BF4E164BA835ED8A8787359AB93B634DDFE0D47AD8E7849C54306
A2468BDF897E46A82C09EFE23BB77A0AC521762BF9400DFC11284187741289C7
24450BF94DB8EB9048FEB033DE7F8F122196EA8FE0158AC6398DAA7635542485
0CFAF300072C1743732ADF56CC4B37953938910BE98CE0AB2233EB51194B19FA
8DADD216410C6D1EE1F45A328D4D4CEA17E02BAE7A41A843506613E991BA4C7A
AA81B42EC94C58208B09AB28544504409441420F322E752B75D29D4A5C6F7445
C5A0556A316E32F679BF182FFA1055A1BF1F53C0B670FDAAC8CD81508DA92DC1
E0C0F28E3CC64BB4933D3AECC99FEC69C3B0430598C7ACBCF38CC4A173A9AD53
A10D1FE691EEBC3E6CDDCEB9113CC5A830B5C5D5ED73F2F7D159C45B12286E28
DCCE52B192AD7B43340ABCF99A448DD8B51AFC7497CC59FC430CA9B91511B526
93D806D5D979864AFB96FA0DC24349695753D26853FDE765CD995A5AC582FA4B
24AAA1F4256F31AC62554C369797C98009E09A225551EA2C5B6FB1F70D3F243D
629DD9BBB7091801CF686F2ADE092AE0B2FDA803F43FF5451CE889920553DC5F
BDA8D1608973150EC17128AC48A4BC9A1CFB9CE4F4620A7A8F2CF6EA77EC690C
25AAB024108A1E547D1583DC55B0758CC813E0EDC810F88A4B4CC91386C0566B
3ED40825C75260C7BA8A5A0847661FEE0F6B879C376019CEDEFEF088E30AD62E
07505BA7A94F44330D45A3C9EE4E80EF896E9AC268552B0266ACDECB128DAF46
8F2D425619F5251850B773B9AEE7DF52272CD37586B12010FEFB1EADA686DF87
BCB59F4C395D341CED9DECACA272114F628CA13DE8B7EB82B836417308674057
83AD8034EA8976F522C889AA3F48827DD9280D36D698735CE42A15B43AD6F76E
C0AF3761859189D7A93BDECC857B9634787D2C5D4E00A09F155BFDF971B5A4D0
AC102C2D9391D0483802318C52B7C24CC9AF78713A5D180673D943CECB15BB5C
340A21B4537A9834C0B57F6B0404398A16C994D6FC7B8B746C4B214A485F9CE5
7642F42A032DC86AC8DBFF7A20AB9970CF4226B84C5662274AE08FAE2049EB65
118457D5C4E806B2A97ADB2DD5A9F66C4F84DAAC39145A2BFE6D055580AF134B
7DDDBB9BAF947741742AB791DB1A56767B0A22F335A7A5AD395D681A059E5694
F5569529861FAEFDC91E823E0A0EA92E7F1118B8BE0BB0CEE215F5894EAE38B7
EDFAFB64C0891B14D990AE5EA7FF5F8BF26006164709596C0E78321C9CB5060C
45C3569CD39CEA3D28B6228A8E3A9678108178F33EC737B3FB7EC65FE35BA71D
71B119CC7C1B82EE830C39586E0228C360D187286D4769A0166ACA47C3614F7E
4C800F6D654CB5C2B1D6281AD3B91FAC8450BF5CAC4771CFBFC3C42134253C04
FCEE9CB233501A96497FCF85FDAA59D42BE4DADFCB1B2FA2EC3EC848E3099620
83110D406B5604A7BA3D11006B763ED08B3EABCA1644E74824BFDA311A645D78
CADFEA384D74D11F9273358E7F80EE29B65751AA82FA97890367A50F6EC66B43
972080D9DD484045B8011F695455576CBFDB9A0801E5AF54218EBF21C1ACB291
6B86943E19CD454468FBB4187C772745652034ECD6B7457368EEC9C3C172E6FE
5357807A77F869A2F079BA9C7A580D605929D6D790A340847DD751CF51F64A64
3C9D20196C16595542D8F32E962D41213E6B67A648BFC569D9F80305E6C1C2C6
34E83B6570EBC5B25A60051471D8D7F49E99A0F145F0655236CE00D9AAFCBD55
C52EAA306A89B60E01C8D8AA2B2A13F17B8EB838C388EA75977E1210E201BBA9
A805612B4645162EF6350934A57C68F4B5F8628FDCFA2CC376442D78E6F47CB3
78EF76E34E4AC4B818F0CE103B2A5565384DC4280322C94D1725389ADDDEEFBD
0168466231E17CD215F23D75D926B76C659953B639A461392F73D8722E53E632
79BD774C17609E45DE821DEA4F26DE7A26B792C524CF16CCC7F86A0EC6AAD994
4C573D3BF9D01563EBF051E653362117B3260EF71B9D68479D194E883B039619
60F180DF74F2BE556A2AC81C1A18951E3F10229E8FF040BFD4CD3B9F79F1BF79
818A68219E81B6A92E983E07BFCD447294B1F96ED4AC5B1BAF7B88821A5E4E9B
672ACB124FBED6580C39D6A1306781001418CB02B9D13B930E62909CED0EB18D
B2D17A7C0FEFD233EBBBCF3B6D89B5E598CEFE581529073A5E8853C5548253A4
EB3D39A3B9FDEF15DA1F1505CDD37755796CD5FAFD1E6A0A83F333D76A43C1AB
10951F53D733841C68405C8256DB43399E6A6918A887A64B2EEE98060E47C0F7
4578A69DEF4F35816A39E65B1528AE7D952D4A4FBBF09BE659A081B2D1D4CEB9
E40FFAC6BD2F8303F58AD764295A6A997B23CF1B52822FCEA099C47966D70C09
BE16BF84C30DA60205116AB7833FC159283054AA61D40A0AD50B0CCF03F51335
5BD4FC3209B93600F1254FBAE5E3E6C667EA8E1ABFAF6486A9DBF6668550BE78
58F5790F017EFBBB3ECF535EC546A8CD9E1D5DCDC5F03905A1008D696E3B9E18
1071101E184E8C207262119E30EB552DFD9EFB356A8CD7124C119706E8F6070A
92ECB856495E667FACA804CD809616BE4342A5047C07E76889E53BCCFB8B0DAF
510C5EF83D1C082F1869429B0A2626B6321C7A89963F669D996A3A3FFB3A907F
3A1AD2FFBDC8828488A35E85EC79363ACC8A5F234575C256306A3E2B5F6EAC71
4883621CA300ECCB25BF1330E865801A5A5CEB0D44C0A49EF4F7070D60E3EF03
8472302B58EDB8556D049A0AD78BCE5365E1CE48CD621592E13F40A9276AFA53
D114CF090CF5F36B3DA0FF93246A390879AA6AA248BC915B38CD662779BF9273
B7F448B79D76EF0ECDF6D93AA03771DF955001433FE00D93528FEC9ACD003893
98C3ED8CB8A8EF20AD5F81706EAFDD970B0B09BA37237B99DBD9796C8B7268EF
E5EE6B0CC0781AED1350BEEDA282A3D4D0D976EBE8AE53D3AFDDBB926B54EF0C
41B98D15240D11F9EC62467E98ECE66B329193EB624E2D0FFB96DBA8E24D1FF6
B3A5D9FD92C7D9C43A8255D0B63CD276A02A63E9DB55C198934FF5A56D8648FA
85E658D41281D56AC0425D8F374CC51FCB15600FF7A49A4104BC29A4169A0883
F53F8CF6F267B35795C7626A32B6E41849E030EDDDBF1D95FCFEEE32F189B1F6
477232AD8B11FBDFAE664E6175E9B3AF676603DD8C5F5B037022B38CB7DA5332
F09EBE614D4BFA8B7DAA0AEB340D42110B7CBF47CC3D563741DF251006BF7EBE
753A7F2B82FF750829FB629AF770A26D72A2F390B82CAF5BECEBA08708A3D6B5
27552616854D1E757A25D45087B19E408F778E8EFDC934C7EC74AE271326689E
007EF544C2324DD24A7CC42A683A426EB0E6D69461F38D18878CA1FBABACC7C7
5C1BF46DE9F096EA448EEEC36752787F85EB045535E44A65C5739C1427815484
BA6E80A78B0C28C68CAE5A330D8B9C181518D2DB628C3C99D0EBAC0F0017D917
875BD4F42FC983B0C2426B358A2CD7AD380EFAC172D225FB2070011FDE8BBC5A
2D3F437E2BA93E513F2733CEA34DB3AA1050B1490992CF23F617D40D2309AB16
ED7A01EA4CB05D2EB6BC949688B30F0B4F3FD3AFC9CAA04A796E5AFE2DC4107D
887716F94563768073B8C4238F51C1E63C2293B4F4DBF442967F828C69300846
44D6F8C6366587CCD3CBECA33F35F17BC136551AB9E354C905FC9C5EC7472408
60DA0196DD4B0E8AEB23739AF92B579720B119FD2A5806F30EE2F085B06BFE3A
E025A0542F0D7F681BF0FE61FEEAFE31C8A721C2D46AA00C10681BA9970D09F6
D3DBE81B0A41EBD0CC6D71A2E4B5528296D8827B8E9CCC9AD945A72A0D9F6031
3880362B868DE5F556B5B7E99480D6F9E2676A7EF904B019D3B6AD98F74FD037
431B8E2C8A7F771483C26BB2F7622736A0FDD2D813AB43693BCBEFD6B629FA66
1440C361DDE7817154052436A36C6833E05E025879F07A7B91FD062041486083
2D64B6BACC93A58791874E4246C0A7321AE831930F08F586A85F7D302E4CA813
7E90503E63140A7193C83DE369C48C998674764E076EEE81285FBB3CCD86DBC5
251D2D384832D1055705610F6394B36FB58D6D2AA14D81F492A569567D60A662
34B04B0310308C22902DAE8CD6EE1B33BBF5F7258FF4933A7F5E2B732F3079B8
90C59CDE4235335B238C832C75AC8BD1ECDD9992E9F8CF3DB923D549EA4C8C41
B80574B6B93D28A18CF02184DB7B518BCEDEFBED3A5510D10A46991E7EAED177
0016DD9A7191E96ED66AA8C0467BE8886BD4B8075EE897F4FA7C5048C08689E3
490C274A29EE2FC01C25913BC44D69B3AF2FE2CDB27FC9926B0116F86F88A7E9
660AA8253D564A36E960271CCE02BB1A8598FC3ED021147E2BE3B76ED36626C9
3A0009400496D5E85EA99AA922FAA53D9D03C54706B5E9C012305125EBA0BC7D
B7649E845B1A22564F633E1D3DFEE75A9B84DB541D8D299C5C5F56DD69E76350
73B648C48A81A1A69152E89EDD1922C10A3CA1DC2B0BD7BA4FF0DA7CCD8FEB29
7118A6E7E102D5824B95586D2366DF5B7A41630F1CC9B82B395BDCE1885A1D5F
3441B03AC4D322C06E9757945C25657703B7D438285B92A32531A6ED4C8FA439
25639BEF4B041AD7722616B477CCFE4F4D55B36CDD136F67951EC6044FC5AC0F
E18757EB205AEE75837FBC872405B7183D2385AA4D74E4741583059D7B6B3115
FF4B2EBA5E902D9C5ED30617417F403ADD5B2E776E7B6F424CC20A98FBB384FA
3452AAAE1AF13B49281B67E0B149DD482B26C72BCF3CC553E5E8A17FFA5B878E
E7F4637E52C0CE533016DDEEA851DE7E5567C54996178E1A0C5BB937E8118991
2695D91C1FF017D6ED3ECF1AB0967EA0E4C588F40F4683C2295FC0C58D564A2A
4D77054898B2AD1DA3A35E032B8E1D2064BA0B2EEE00A24AC280DDD97C3713D2
D2751EBCDB6B4D935084759EDCFF3E6EA3644EC087D61BD7F509234968915C6A
9FAB3838DC2FB808E047BF014BBEAFCC7772F7F63D27EE5373F942814C283601
A5CF1C41FAB7DD4784CD74B34B93D69FD162852F9EF2C32B53258B6BF4A4A856
647C3240A78B06DA9A69AE9D4255FDFCE29059393B889F479A2D3058DA378055
819967C7CEA6C17BBA5AA16E07F1E26F00C6DBFA3621899D8C72270A9A4320E8
DC181020981DDAD975E4003E7B7FE30D31721B0ADF552294F3AEAF6C9B73089D
7594F90228B1E05A090D42B1D281079C1EF2854E8618616703E6A2A1E2F8AD42
029FFE31D7C09F9B76B4588447675AB6621AFD3E68C14C591584F1896B5F97A3
1A34145D4BB438DCDDA7F91DBB1C8DC8FC6BE36CA3C13E44BEFB1931DD7E2CE0
E540A398AA83F571643D614D0AA39BBE63FA0DF79946504B5DD7292B4C730C54
CFC8B0E494649AF8F9C74E36A9420418AA68FBE3D77450D5D796896A9318D430
B2342B9D3806FAF0FD8C3F73BE7469455B580A4BBE440839A54B385C9E4571C4
66AF1839A28CC26BC8DA4C262467AA66CAC0D20720013D660C4BC916D35E96FA
40AA847DA5E22F00136F21273615D02CC61ACD68ABC3B289208E41AEB71171EA
F17A4FA9A9E45DD0F1BCE51275AA635695BD883B2F6B22C897D133BED1B167D8
7DCBEA2E893E1D90E69E828F3C7E4B3D8AD3E69015FD53827C84050FACE29DC5
A593B40E732D38DFF9C4CAB3ABDCE13D9B38CFBB2E3A468ABC77AB7BD03A261C
506610163FF60586A503ED8D2BFAF7CD7FEC2334FAFDA43776E61F2C3F444F7D
53166A9E188AD8ED8670C6C3045F948A22882BAC405187207AD799C1260629F7
8296D98865ABE2703BB52ECACFCE5B1A7E46E3F2ADACDB634C5A2550F814DB30
9DDE9B17F14BA48B668D770904DD3DAEAC877F8E16E0C392019E33F268CC072F
36EF123104F1C85B224108ED3708C50B070833B9DD6E94F1A578B8388FF6CA10
79FC8DCC158108BE01B14747369E037C2F5CB2D0CB4106B105B825722A1A0FBA
8E217CDBFAD38763F65694328781509A5C4F020EF1D81AA3D7E7FF52F27B5284
BF19FC952FF8D47D723DCAE7E031BC6CAA641CA7E9E52FD0D2CC0989983DFF33
B0CDCEF8101CE47D44302BE2E7EA49AABA75AEEEC5DDE1D8BF68483C3D2008BE
4124E048782F415DA100ED3759D056E3F40CBD3141715F36FB252F0335FB50B3
370C94D0AAFC1CEE5C12B0DE65C9CEEE3E3153FCAB3050CA75A82E9483EC5B3C
8844C7EE6253DD07517660B50E0F93B42842784C17898EACF47F997C4288AA1C
8CDA5E3C6F89AD4B030980886A420AE8519A5898A31DA1739C01711DBD28018A
BA77AC7F5892DA7996380563BF7A3B679EA85FEF772477C541AF8B09E25384B0
C3A3A15EDC6C87355C5F7C8F822EC2A6A95446DA7D8F3577FD992B46486E8482
D66A8180D3E7A4CD33F1B71EA3C7C787E612AFFBFDBB75E5394312D8DDDD4A4A
3EA5B0A1FA84E55ECA7617A41124595BD848F0ED1666CA8B3EE1411D7260FB56
97836EE2A0E623899EB6F8AF8007B3F27A59C82174638FACDEA968C2A07EB82A
56592F27FC27F1D49D5FF4BBC0E16231807AE62867761D0D301AC007CC53D1D6
06A525FFF9B826758428042E938F70FCE180655F2836DF9B831BEC6A625916CE
5052FE6AC212A20E02B86BE559E9AB16B32D0DF241436A6EA773D06645E292CE
D6B53805D9798A83E2D0D608EA4F039C49B39B0B7A38F24A31CF2BBE8A4A77DC
77B21E02A128DCC9D51903ED585E1581310C8DB07D360CBFB27C68931A0C4C0D
DF292C1402A990D44D61AC1BB40989D6115BF34E660434E53077206B06696878
E08D7BE855B7EB3C63A26C4BF383C921D86811929D674767B1A655E8394F2473
FF364F9B0C463624CB5663E1A14933B433E7DB304BA62DDEE9FD4FA5CA1A5EC5
9BDCFE3DA2F8258240D9A5BAEBA34D6B1BA65FEF7DA10CD6E68212AAE25B7361
9A0BFB314E1BCD175907CF7F490D5C686281128E4D3102667251C5FB1EFA0FA3
99B6EE49280433BD0EDE830E85593CAD2A227DBD02266AD67E80916BDA00ACAC
D67683D6C5365ED58436FAA514954BAA5C28AC30B740FD86124B21DFDEC4C984
9A9E7C20A3EB62B5C743D9063C8D8DE82216A3472CE2059E67A995EEE06E4ECD
FA3B06A1188F05C189DA061090E76B4B4717379EA275B60C7C3A569908587DA7
A93B760BF704802385705A94E8F48CCE826844F5BB59E75A80569B68ABC23E13
79381AB6EFA4CF3A00445A8B58A1EAF96BD360C9B6E37BFD4874181DD641F54B
106782735B99518D368366570C4A3A6D8AC3C27AAE959A98D244EA0313026370
E291932445B6F0EB0CCCA6EED616B612335278ADD8EAC1A0C8E4359E3A4AEC99
A17BF2DB23231EF97A2F23E93B122F79
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic10-Regular
%!PS-AdobeFont-1.0: LMMathItalic10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathItalic10-Regular known{/LMMathItalic10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic10-Regular)readonly def
/FamilyName(LMMathItalic10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathItalic10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8028C685C8FFFC2
3C0E2BAF712D9A4BE80B6E38C9F5A449DD2DCD493C0A130001F01DB02EE2BE50
8CF3C1EE0898661980578B4396FB3179F301761100231D260FCA63E74EDCCEC8
08E4BD0AB6545195F32F881C99FE3877DF3BC94657DAE2BD20767AE9DA7D582A
DF256F4A52C57F9D228B3E1CC5DC93FDDE8E791DB1E6FA18E0B9B2423868792A
2BC90B78D9F9640524C758D0FEFB713A9A0D66350CD78C8FC945A63D8C07C8FF
5D66E1D7D963B7567F270FB876D2FF1E76F1FC1AD80246E413D337A718699FE7
EC080448FCCD4B5AD8453287D86BC727C140A6B2C1F62439396AEDC897D546C6
F8241122821F88FE9BA1342B044AE9A33CE496ABD5D7F76B1CBCD331A08C6DD4
37A78E15453AE3B1AB6664CFBD92B9982E6C0F5AAD267804425AEC523A184899
3A2D0259E64F914D353ED128EA5774EA6F87DEFDD1BCA35A413EA5D75E42E3B5
66539B7414AF09F23C1DAEFD913327B6CBEE7B5F6258CFB98B288A2A2019D344
E9335FA5D1887F0A3E6CD430AA65E3A59B396F035C7E84875F5A5E374875FE5F
2B49567A6E8C851A51D8BA4F6AF388BAFFF88D02B166F37F0CE1D4D4201AE26E
047084E2ED3E3662B60089E355AEFEB3964748C5F836C437C042B64BE3AF79DE
75AC4E7255CEC0F20E6D9400D29BC8D9BC2FF1E08D8E020F33BDEA08A38A5E90
CDD238866C66BFEF1B3B61F2564CCDD80BD048586674B94291DB7268CF59686E
D95927FBF8CD3224572B687E01791F40D51A230B9F12EFD86A7F90A0978CF220
FA314AB43197FE6E7C4F22C4BF4C4DF7ACC7EFE7C6B152984BE0FFDD1714ABB9
CE834B59B859F89231021E34E2BEF6C78D5697E25CB5D72D2A5F8093158818EC
60233DE494228ED13DC8AB6685A5332341BC02AB2064AA00FBE26BFD27263C04
461327FBAA2D88B6D1477815F4188980ECF40CD3AD1E29DFA34769ABC993DE8A
AF8A0E27487EA582D55D9D1126410AD7215CF4ACDCC4C85B4FA5A9E1CAA5E94B
08564BB2982FD937A9BC19F3F6B643AE0E6AFFF1E130A8F16DED41E0AD41690F
A26047D97F8F5932C6DA4ACA736474689EE6B65CFB15D1845E618EE1BA5FC873
71F912D3A7BBCF69858CFD235685341F0D95B27ECA06AEA1C21328A8BB64EF2E
A43D7C1FA208EF44EB316981B1CA2997474241F59317F44A60ED73DAB72A2F1A
C1DBC4518306F16F8D4FFAE416ADDD1143EF22050DB7ABBAA819EB8F42657D15
542C6068F59745747E0170E803BDFD7E3147029349AACBCFDAAAE5494EA2DC82
D25D46893657F0489D444F32C80B1DCD77F38D0F2A87F5A4D9DE2BF184898D2E
790305F97BFFD133D7C742EB0453370647B615914B2A71CB041C750FCE94F7E1
BBA5E4CE46CFA949426D0426DAA7A6C26275F727ACF99E804E8B197655907299
E0EECFBECF44A4C01306EFE3EC896E54AE349DBDC8C0FFEB66661FE459BBFF0F
5D989B89D7BA458CA86037DB5A3C88526659AD17B8B6C778E2001BD94CD34F25
DFDC5426DC0B07E9AF351BCFE30E6CECD183EB52BD32D1EB129B8FC87B571B2F
FCC988FC8B4EABEB8550547953E4962CD32D6AEC688F021F9DFDB40008DB07C5
438E299F9CCB2F147C93B4533F92DB5B5F99B1DD838DFF874CAC009EAA32918F
50004005584A460914A41004AEA7A4811A64EDF54C7B9063943726B1E313B0DC
D9817E669A56E75B806FF9A073B629B2FE5491DE7B19F0B440ACE965E492952E
E7A0100017F2C216DDF80533FD1A16771553EC279C7BD9D7E2418A977EBECCC7
290D08617E363E0AA937AFB1046A24A3710E4F1F2A83B650D6BB70E8B3864DE3
36140665D2D91B7EC17A70B840DDB125F4B849F329E321
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: FontAwesome5Free-Solid
%!PS-AdobeFont-1.0: FontAwesome5Free-Solid 330.752 (Font Awesome version: 5.12.0)
9 dict begin
/FontName /FontAwesome5Free-Solid def
/FontInfo 9 dict dup begin
/version (330.752 \(Font Awesome version: 5.12.0\)) readonly def
/Notice (Copyright \(c\) Font Awesome) readonly def
/FullName (Font Awesome 5 Free Solid) readonly def
/FamilyName (Font Awesome 5 Free Solid) readonly def
/Weight (Solid) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -97.6562 def
/UnderlineThickness 48.8281 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-55 -127 7797 876} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB42825F1EE6A16966D49AEE9CA4A40B7A
AF5854776BA4F7EEE4EF09BE48B41B049B631B57F9DEB79BA1DE47B7C025B39F
3CC77C4FBB15C9BF3A39C8D400BD7D15BB1412AE1918DD7B05716B41DA299FCF
AD90249E2810CCCF2846402BA975F3C22EB71AAFC24EA5C6A66D5FB86DEA0D82
A1117C000C5353B2F32B7DF144A69030C8EE0F6971BA336C4C33911E390912FE
FBA5EB88AA67FBD2C8AF8DA2B0A0CCA150F57B850632A58E909DF61D04D76B71
0786C246898D6969AF821D21463B5D770D11D97904922845C026679D889AF774
20B847060B20FA78E265C44C994B20AA9A4749F76E07EFD1CF7C2AB3A433EE2D
A07495342763E2716751093DDA622377EB0C70DF28FCF95DABFAB8884E12E40C
1235BEB723F81A20EAE69E8CE0BE778A97C9D5C1AF3170E6855510853C8C4FCF
CF0D2CE4C6C0710B9584B928C9AC5C465C74B9178A153A434B3F87F01214A69D
4429BFFD0A8DA733179F25B6C15391579ECF0E8725DCF53BCAB814DD38EC0F29
8C225618FA305C623812A1D694E883AF184A0ECF699C9308B3F28A3723530EBB
FAA9CD28A1829FEA371AEA5F8B54D11BF76E15C00CA32DF229892701A4475A6A
734F01EA4438C7E68F17ED1D48D80DA35279189F2FB603FE8F79BC05000007A7
084F12572B7EA09BEBF580B44E76F45650E9E93430AB22AD4292B47B5FB861B8
C20EA254C175EFF7C7CE33228E608FEEE1D9CF299CBA5F727FB11FCD01180520
E9C7510457A9256815BE73930FA7186312B1F1ACF157C44C9BEAE51EBB523877
0086CECA8C6FCFEAE9C0F8156A3FE9B991EDC0CB72C5852F7169A8B98FB8F29B
5A58DBBC136A1E8D1B1A79929E88BCD3886D355A191967C791EADB7A9700D0EF
F276C337E561338D7D02F664A69A127D56BDD67D63C1DF32A80D732FE753B297
08EDF2A1CC7E4617933B49C02A92BD986BB13E68435FB97E81DB37BF578B3AF8
2417947930EEB8A75189696D79615D68BC4BA9238AB9428860AD23E7D8219844
0C741FB72F30CF733FA111B43F33E1D26F464F5999FEBC0888B5E4D8B0E07567
9D90551CDBEB05F9A30F43F45B5210A3007E4D03DD5E05805D3AE898FD752841
54198CDB67A5AABDF7C9F2BE384A98DD9AFFF4E8CCC98FCF480830FA681BF215
3CB11265AB89ADCF53BE360B58DC3621D580F2C7227882B61D155B79B2B43266
4329231C7269A3F30930859BF0A4D5D2CEBA01BB4059A587C6C785E009F19C15
CA40C512E9F5030743BEDD5606CB1C540D829DAF394E13CD4A008EE7F9F1CFFA
95B5C8109B0A8685FDF03A978954D1325F66AF1265829E29C353B84A33388574
B4F73E25F490B88AC3AB2F544988D5CD8459AF56C77885DB50B673602CA70AED
778E4E15F24CEE13A730F1E29D1ED0B74B2F8486AF729E2F0490DD6E2F55F3A7
B4ED7133B02DE4581066B984FE6EDF491454E6CCE895A8A75E0F8E0AF33A7359
E5EB03B1EC74E1885C81F49D2E77939ABD2C66725FA5415CD9265AACA265041C
E228BAB08EDACF4E0AB86D340F5C6FADC65653CBBB25190AB307D29C6FD44AD7
341A399CEBC01967EA5C42552AD19A3DD1DD1BAFCFCA4777528AF5E958E68450
4F95880E2E5594A3FB0D0624D7AFF119981EECFEECA15866AF76B47D283F238B
9D4E9AE5F8549417968001184CE886C1D6AA8396C25E0840EA447F0C2586B021
81A4ED566DE0666A9AB45924378D008A62C2E63BF5394EC9B051E293C9224645
DE121EBBF97E9E1BD85868308FC8186F9BEDDC40357AE239B4F02F00158B87DB
8F9947BDF037FE0532D15D61B38C2EA75CBE50D3330B105E913A071443887BCD
CD7448FB9E03CBA4D711EC4C4CEA1E80D648BA01D3BB41BE8BC9482B0C2A4653
748459A474EE5871E4182A2C14E0D2049F6BCA02129D8B1EA98379E7E8BAF0DB
C2115FC8DE189423A6CF96F3B624FD11C23CA4DAF3293F3FC3B9419FDD02BFE2
01E26AD64F64C6845E0CE09E122DF40D6908B9B6F873A6B8359FD44A37AD1EAC
E2F4E3DC35B12328553CD5FDB59309C317BF49D9A819AD1ACA97D248D8E02DBE
D74AF4F10C41DFE0D90932FADC7ED477550A79F5303533BAC12475EF8D0D1AC2
13E5D5A8A57901118F637BCCBD9AF21516578DCFBF8165AC8C9AA3A601A52A91
EA1B72EF8D4858694D1A5C7C04D68947034889EBB9BC0F6F720F1EAE6D8A8ABE
296B0861C666C1369BDC7BBA46457D3A99A66D975E7F5D1C6DD77CF0A057BF12
7F001A096FC339820E946F636CA2F5D39E4EAC88B2148C5219B1616C53425AF1
1E4A708EC4C3A7928EAB51AF51978FAFFFB2FCCBB6ECBFF8252554B3FDEE05DF
74CA5CFD7B1FB53CFE9E0DCDDCEB8C07F41D8185B10E4287CDBEC9521030B0A7
E706F1865B67C03D749F36AE2F831F159E38017AE2A5D914C676AD9942323C37
95B25E6B0144E78BA5B588222CFF13A2EA3BED7266F79A1074E5DCDBD3BD0AF0
9E1C44241438B8F9FEF51A803D8B74307A3ABC05066687C6800FA1DF62767E92
83811DD10C7A8F6ABFEA1995C317DE4196273C3392DBD9D660030FEECBA7702C
F79AE7F1045B750E199689646466844787CE5559A86835FA39CAD7468662E6FC
B83F6AF669B77400B0511D4510ECD44638EF26170432230E05C2C3DBA6F004F5
F628A1EB008CCAAF16C1B7B759F2A1D0269E4365D98318B0590C62BC52EF9840
999A057D495B8E319EE95C7BD3610F8627E11056A3771AA7458DFDC0443B9054
FE4029D89CE1B04B586869A9C6122D3921EF880C85269AB7635AEC1B6ED1AB71
EC2D8EEFE718975C8F5AD9D1310F764975FD37AB2C30068F8A47BF90C52CB9E3
5496507D403C747874F039959F2B78994EE9090692D1A94BEF2699D17D1F332F
3E93B264B70F73A7340CA8D266EE7799C16443AC8BD2A467493362041E0E3533
26D45985A13FF7B254242BC110A7BC98A9C4645A1BC4EDD802F0639789249100
CE1C557C43EDE5F78AD7D2E36F1107FD8520E12376757500671332190D93976C
C114BCBB0F6B6CD17EC199F588E24327FAF21F0DB8BF26E6808F50DEE9104E34
5D0489346C5A8665A33DCD4401036768758EB25A6609D0088FE1BB01599D8E7B
2FC035268BBA5D1A29EC35C44B1677FECA73E372EF928ED8B67077EC4C55274C
CA4118EFFBE7DD150F7F44E95AD1409C79838CD93764A09AF78BCB2EB79D6AA8
64B7CD3321789D289486659947AB54B4B63DAE783754FCC5FBA74AFA3B0FD4BF
8EBD939A31AC63434F225EF6C99022E39B85A30905EE0EF94F3AFD23DE7299E6
F276EDC265AD00768F3D384F17C236D4555C8D4AB34CC356D96CC4C3ADC1DDE1
7CFC0D7F17C55984B8FCFC72FD93755E84060C2D0E434BF17BCEB50A19790442
09EDC8A058CD39B5CA2E94FB163B4D769E88853C0500373E41EED4EF76557E4E
37BFB3F46B102B250350DBC55F85C82DBF62927C152BE84C76DEBFDA3D795F4F
790A61617F84CA29117B37470E41712F26DEF812CEF41D9D8691532EB72D0E1D
9EF04F8DBF54CA6D66609A0C7B2FCD14BE8F36414462D75F21B572C52EC09EC6
3E7DDCEC847CC6D3EFA2D7E270D930B74376BB0BA82AF94210D51D8204B74FB7
EE69654ACE4577EA85945CFA37EFF0DC5E7BCDAC54CB217B4836CB34BD71DC33
DFD45D383D10779643FF5D0F34B27AF365FC93D94196498468DF8F322E83462B
651C3EDB9C6EED0DFDEBF1BC061ABC48ACA527396B848EA31010DD1995CC4D17
9B4280FBF081B3B3ECECFF24FBA611612ABA11799B791BE95C8905F1CD1B36DE
4FA2573A8587834B9E7004B5F9D768E0AEB93EBE828619524A495E471F42AF6F
82571AE77D7817392A34217C36626D61F75CEE8A5D7C283DFC0BDEACC56560D2
FBBDF51BE7935248B80D4C72A7D75B511E0073A6BF271D440B7F0C63983E4228
92727C7ADA9E27436AA13D9D59E6CB9826C28125E4F9767C3BCC9830F846A2A7
435D5EBE8C5328444CD5B411CBAE3F63171DE32E73D8406A0FEBA498C4E7CBE9
C60B9180545CD51AA4366A849927DE7B83C38F9742E2395538EE29F0A18888C8
FCF0821DE468042FA2FE0C58AD907E93996D94F11F35CDCB7CD14973B7C807BB
1A6CA60883A1D74C3D5F8B26698ECEF7F9B307A9B85FFC3544A0A4093DA00841
0B68FC6B485775BFEC07AA0088CB2D95B1DC37E2437B7A0B13F8BE2FC74B7A24
071B1DB55D67609244BFB5E1887A10C711F0E3D981D7B9024509DA0C14700B6B
3B945FED849189EAD0BB511D7462BE2346D3BA172008B648F1E75DE5B7EA9818
DC9BAA070E04E84DFBEEB8B24D7391FF2FA09F28479007D6FCB926C75C5744E6
1BFFE5904C904C845ADC1DBEDD8DC9CA3A8707D86580C01618776D11D2E86B00
51EBC700B8EDDBD37F78B4B616EE8F3AF2A642B42A13FE5DF058495D1BBB8F01
D7B201219F99DF9ECAB7137F91911E33BEE00B5569886D97F3213D239DD049ED
6A815EF2B9C9C7F76283C21D44BB92897A206BA348EDE2FEDA5621B98650389E
9815E33A17D7DB25EAE6B73230607EF4320A5F03B65BA29AFEB1E609D9090D2B
C12E2ACE102818CEB577840F6A5D09A026F49CC9C67C271BAD106CEA4393C4F6
8F4D7DF0745B3BCBB34E27F41AD6DE6188FF19570280EA1E4950A0E57D0B80CA
4DC1EF8DA79E34D72DDECE2F2D5668B7C5D8B045753B93F43138DC03291DA92D
80EBC10BCFC2E4A4F1D6298650A753B7752DCBE3871343C697C30727022D3347
9434F81CA244113293094802F0B1D3937A7262039981801E3EB72660231A374A
85994B597B17D7D1EA184F04E2973E9674CE5A5B59E5D7C601D8A8A75C2884DD
77917F8FD492E9AB9328EF8E0901DCAB65112CC98E753385111906ECE632B09F
C6E4286156CFCF39F47BF88EF729EE261B767023B0433B9467DCE6B319E84225
E8E9E069D5E80CAC68864456745F608AD7F1DB2A7057A4B60C01E3B48B4F0FC0
A57E6F7D70F0B3099D68828CEF3EB08DD085A46F6AEB847A082D5EE078CA7B10
CCC4335309E6FE477EB7936ADD7770BA3562A4CFAB546D823B7A7685B098DCB5
465959409262902DFF5443B6961E262DB52A34A69D9DBC915D1D979F2D09E8CC
67956FAFE2735096C69A00AA6C9C1421BAF69E1B8F89CF67E5250C659A7D4A19
AE45B58749B3073662F947E7F5BF97A4823DA48BEFE6A643A56D558A474C4055
E9834136244EA39AFDDB3B9BA2B301853A589B355A9B86904D328BF2A61BE758
B1842235C4A4EEE260976EF1644167C2F4070EBDD0B73478C1BF2719880425CC
E4CBFA670CC1E1C6A8BDB75E7B524F977A90FB269661AE8B7C7A351AC33164DF
69839EF4CCC948B1971BDECC3EE24CA73AFC338206AEA78EA76288728ED74CA4
08020B80A53BF23DB3B68F3D0F58E2C7BE658851767A4CAC46F14215BD461B56
DA6E3BBF5DED4486FB1D6C2F60660F14709295FD7B6B4402FAF6EE84EC0E5FCA
8D53CE5CE1FADECA9A7E610105FA17C45AEA5831EC20510FF2330B331C40914C
36F29FEC53C83BCDDE52A40C1DC2C833298BA9C66845C68C0B47D6DEBFFE3F95
A90BA074E34D5AB46ADD2ED15125C4382A1C95B5F9412BCE7B2DEA273664C0F8
4C7788C6F3ACD041B16C9A99A6254FB9B899782664A7ACE087EBA0D48EA7C7F5
D84E04C04694D7ED240C57F885F794BFBD31E89BA753ECF83F6AE705F410368C
0B5213BD561B753676339F0B9FE90C60F82E180F7AA4A9EC783AB037D2F6F2ED
337D854B81D02F2E65C6A913100B8839695517D60FA5B6A125B952B64A1142C6
F39428D8D2B8FF4F1CA15C3E282A1EA0FDDEFCF0434C4123173E38AF82040A4C
F077A335C829D8626D775E72B5502F3769AE6FE8FAA616B8441E702567E898A2
DA6AAC3A314D5DCC26C3721108036A248AF16FD36E00AFC5AC22773740AAD22C
44F44CE2A9EC5A1378354D0EF515DBC0B835738955AD76891B054759FBEAE7F4
717A6118DF303BB77FB7C261E2C91715BBE32E595BFEF8219927C96E0EA2990E
8D729C3D9DABDD29ABD05C1FB213FA9C410C78ADAAC2F16EA19B997E5CF8EEEC
CB2C21340919244745429ADF41BCD1506CB773E28FADF673D70A791711AFFCB0
7D8DB4849837336C3D6DCE6264555AFDCA900E3DF683E54048E01613116C2784
94E20DD2EB17AA2B5CC304906188199CF23D9D54D3DFDF55EDE035DD3563EFB2
74CC50F61FD3428C83F24809D0AD1646380585D0E5D5F28A9353F6784D3CC671
B0FA6F59F3A0347D547C728623FD39A54642E669657AE1E0362D4838EF8177AC
838E414CBAAB3D568D946FE8CA8C25DA2D751FF514A92199AC13F78FEAC5D4FD
0CA34ECE58A8FA8E722FF4625129815E150EC18AAD461DC2DA8C1E6C552D5002
8AE2476F9084AC04C97D6FD5D963A652ED4EF778D021ECAA36830D54A5F9858E
0733034D1F5BFDC20AB2E4902FC4D523AFB607A1A4217F2378650ADC04162F20
8865D6456CD006527E6EF77735F91EA6049E418B901F10FC0A3EF112641C95B8
56F0D87D1389546906D15D9BB1C1A9A946E7EEF8D198562366FC4A89D1C27D33
6133D5488E21C16CB8B66D003CDC73EAE1E5D9EE754660EDF4F9491192A438DB
FD51CA5C5169A2D621134EAD387D472B72A00E3FCDAA121A5A6B5F8D8D6564F9
2339FF8F8305D0970C33AED35D2365BBD9AD50C43666B33ECCCF9754363F3D5E
83EDC43FD61B93DBB81A89763FD4520AF4792C4DCEBB76AA9AC44DFDC4FBB142
0298A665045BCDA5C148E123AFFF96CFD61EEB9C900A19314829CFFC11DB597F
7C55A8A7CC1D8C1245CFD89E7D66E63D1FC972D86D80FA11FA9DAB4BC9968770
BC41B17717A55E5D8A8F06F8378F03A9D9D83E683BBED9AB71BE8C8E5C24E53A
5AFC5DF3401222F292CD0FBAB7F36A7A2E4C582CD4B7ADC254E87493576F75AA
AB9DA284490B1A014F5A9DA7B45CA4D070D83F5BA00415F599E0D7FA55CAD906
0919527012138A4EB36CC9176966B8D949F5A945E578C8DD29FF20796AC3D0E2
9B043E8D6A88357867F8BC52A5786A474539D5B40C1FD85C8B2BEE6A4AB398F3
5D2E5457EEAC9330C8D80DB42EB766C43EA8EFE81CCD0BD4C498F6F335E234DB
1B602BB51593039FC9C7CBC249D24FFBE824F874DD9A9DA5141D56AF49EDE3FE
8AF0EA8374D52E32FB981A846E5CDD5A826B3A045427E0BA44142C86AA0CA4FF
8EB79622F7434C700922343340368914BF3C97314045FAB692C18BE004A54A0D
C17540E09C4D4F7048EBFB72CFF1B8A6BE5957291D85E8E79BEACD319A591395
C24E19E8039021E9AEBC99D1563E7E339C2766450DE25726880A186739D38514
C08684263CD28B3A9C6986635C5524BB6E47E0A2DB9B0D329043D7770D33E11D
8FE67452DDB881B1C1BBDCA90CBC58D066A2ABDBC4A1E40FF9E6585BD427A744
1C6F57CB0B00AC580DFCE9C88735827DED65838696FCF9B04DB72D662C790D17
BCBFDB3F8922EB6414E7B192F9691A2E501EAEE1155688F1F20901EC87FB8A49
B81F8264E12082909FE635AABB7D3A3EDBEBB1782F83B5BEF0A11E716FA25C28
ABE131889B1F40D167EA995B12328C9EDEB28E1288EDB9DC7C607DCC6C3A84D3
D77FDA860DC117D6A8454EA11DF4A385698E0F2EC1F8469AF462256B85AA8408
E17C483570E2A362AA134C1D4308FB33E41F1FED17606C08CD6311774C5E1D01
DC294C6D27A2D8AD61CB386C420D073AE8A3C25ABD8648F82E612674D4F563FE
43F3E76BD675023214098FD9C9446A52633161C81B232BAED7A6B30C9DA7CD53
7BF34087ED6F63D6803874807993AB1C4191E6A14A7B954B28230D53EF75A00D
C64561F449D6F8390151441FB33550D3C88C2780B7FE21FD6B0525A384A8CDF1
9E0C8A7E776E58C6B20E84CA30ECC8B014408FD307763A3CE4A6EDEA771A3852
812A689C42CEDF7DE0169562EE357855AB33E44815DBD178CB6EF5493B4E713C
D19D2DAD25E883AB72BA70A0CFC94ACBEABDF1DF2F17EEC4EA0F525C4A3292CD
AA9E33B88397280947D9D6D6A3E7B3FE99C3B9473D54D8A3D0C9FB55FFE818E6
2D95D1A9639FDCDA3491CC164D07F2F4BCB846DBA54676F40D5F8D550F8ACC4B
E179EBDF4035A37C5443A72141EA551B10A53614DEEFBD46B07386A035608BB2
F421AF4A8BF80684D3F5BB34389E8677FD3271DB0E3AF79BC99A620CA6E7B65F
EFB6E88B7A49D7E74CE274CFB186696DB406057930E7D0AE58544692B5ED12F7
197FDE155696C3D4E8F5546BB41A5A210B69CBBE12724660F56C75BEAD533D5C
6AA0454CEDA92E775A490D72647A7E768F5004D14BAB14A4305B3D64638B6D95
265BDF72C8C9C1F2D315C1EDF38051D6AED7766B0C73701B00850E5ABA2C9696
5A47CC82355D942A7CCAB32DC10AEC6FD658A290CDCD58E5516647AB2E2CC448
B1CCE2D71CFC1AAB938C32790BEAFCC312D204566DB056FADB729564274E37B4
51BE3002CCD5D959288D8E87889135BA6DA942BAD05BC87AAD56928C24D1A37A
58F513B6F57603FF47FF88A439A7AEA49013C20CA744F9211B9886C0858943DD
368118351F048079AF59F37815ED4F2F37A4FF8787FACF011320139D158B9CA2
FFB4B8EDD899E447AB390772C8D454F057B030B4C94657C5279043B23AEF6DB4
34965158BC6EF268311FA02A4AF378B0D88B9BB5867002E14A2DA4C24B5910F2
6071D6617AB838822EA1B465CDBD6441AF02526ADEE264B1AA68ED2F8997F1A4
04853E30DAB29449B42D35388C5D8C263245707DC0374123068474042DCB2011
E076528708382B1DA3670DC982C71F0EDBC90B2F44CB623A7F5B3021C71EF12B
870C62147F7532DBC90698A22D9E9AD1345ACE0B0F653280B1B27C7B6949BCDB
9A59034887368138328FB60C988A9F02D64CD38ED65508938449EA342F21C854
82B32DD6F44FBFE7B79405DEBCC5AB0E3F1502DE769ABD9ADF77C26017573248
3FD05EF7FD123562D59A5DEC2B5353AB2A010D521E532775712BD4F5DB1F7986
030C5F96C2E836A0AC87F4E304CF614560F78988BD59CBDBB954D765955F91EC
0B2285F59D38F449979326F189B9B778BD55A1ED8249B91D2C8DDE8808DC922F
B82851E82A2601FFB05D90A5A823129900636F1B1109A51AF449D6A25A89D51D
B8856C7A0AE64E5D68EC13829547FBDB78EBDFF55E228F39837160B800375848
7522103074F7CB3A5E4A41125B96B6B31AFB1F5DE90C8DCE0ADFAE54FC8B20BE
F8CC214D0EBA1B16ACAE93A0C123C0DBCB14E7E32F196F53155F389219C8D6CB
60D25D9B006D1E2FAD8B39C2992A6DF728EE9EB97F55ED1602D8588AF1EA813B
27DB94091A4DD09F58A59CDB325F71E1100D002271B9B73BA27E1295668DD048
40AC254903FDA3D4B177CA2DF9D7F1EAADA7BA2E8F3308AC56574643B9372388
E8214DFF8DFF95672E2E467338DD78658D30E5A4D27431B1DB18CCA974673C28
6913F42D49935073C848F540B0DB71B88E4AB1E137800DB5F863B6323769828C
53AB083CAD660AF79E4D36B4A04E5063BF12FFD959B3386F3B40A0DC20C1D5F5
59D3917730E10C106A9720B6B7F6BBDAA8818280585BF5876D3EE9007444F9E4
7FD0823DD8467139DFFA34C959CBFB2869B750D087DA50246B87E224B3E8A9F7
205582D957577235DF806B51EEECD4D817E396C4CA3E367CCEAEBF0F006739FF
A7271DF32D5AF5388B012947C82CC76213C0CCB2545012713C7CBD8B129AE436
8D48704CC13132E4B4D71466FB6E1384B061824E7B833E8FBC7A5EA4F7162D03
05F93B5470843F85B06FAE5E9E7A2B0110D5401ECF2DD1F08D3896514AC3C075
0938B8D96E90DCC5A7E098E36713385CD9A2AB1A9CCAF306EC12F62082F9024A
0C3EED363F7DA89E4ECCE8712DA380969D432D227A24D54A22570A504018E34D
96AC2E27D3BB8BB7613C2666ABBD193E255A5A5F9BD92EA316025795683F27D7
68C06E0A3EF50E40B9B58FAA70DF55B9B7443DF787D946FA3C70396E5BB38875
4AE1823961990DBD611B6D70E5692E9E99F6A90DC8CDC752C1A8E924544299C1
8A0A61F5ADD2BEAE1C9B46230481C8B124110BEAD4038DDC5D7D165BAB011AD5
27E221050F342252196B54691321B2165E7253A9C41F502676E8902838DC3B4C
A8F027AAC3DFA31B0D6BA8BA7556E7DC1FE4052517107A32A50F1E62FBFC0C36
86F6CCA05058DA20F5AA72A63F597602AE501A231D325357A24634E254EEA87A
D11067174E47BD24C1843394EF7727BB9109CEEFD2232849FAB1495E0C55BF05
81F0CA160B8537E1E7436FBE5D62D71A09CF87DC55A3BAEA363AF841F9E3D4B0
82D70700E9FBD91045D47986D4959409DEF77C76EAFA146B03A33BE2E8A88736
72C1EC19B23657D34685F351CC0D93D513E3EEE1E90E24C73839B5599D48DD23
79BAD8BD2C90BD52FDDBBA62374BF35F9666BF2C14A63613676D6F3E6F6D86F1
AE28A6B253A107112EFF140633606026749A1436FEB3E6A4454D6FF2B35B0031
AFDEFDE65E02AA64304F9728E902FFB1DFCF8FC52F40EEB80ACA2EFFA90CF8EC
D225A46DA5ED77A1594C9F5ACA5EE3BCD51584855FEE93D8A53178218FF31243
73C9EA0CF12EB7D4F9620BC078EAE5B16A564333DB11687FCB4D1D8112EFEB41
1A32BA1C00842B78D7003A85E0DA3350F3E5052F21B8D00305BA98AF862FBA5B
AEE72CBFE212137A07EEA25168B079EA560D4770613039407E813FCE5339E173
9A53127A03424E2AD58E924F94D9F38EE7F72624B3A8C0D5431A86AF0FA336B8
CDA3661022981EB74341E013E9681A6D7C5F7472B6C0E6BEB99E4432E703A682
2EBBB7BC03FB122DFBE1D2E4AEE69B2FD47EC0C3BC3506372A3CB0669819BC0E
A931DA293B0C7369A11FDC1AC05DE282619F0480126A31E83A51E877E5F31ACD
BD05C06D1C6C489228AB7E562B87FF8A0253C03376BD946A143915A51B1E5E7D
F6BA6323EA3557FC29E98E5AF32D4AF7739604AA78066437CB4D69CB47AE0130
EF67A7AFABE28E49FEC7EA938ACC3A315E523BCB2EBA36143280C65FB0CC1E86
D6957FC57709BBCEF1D42FFB8C7AAC3B732FE81146F9E43B0720FE01B307955F
6284555019495ACAEFFCB6E2FD051D5EFB17229D5B4BEB894DAC343737B9E9E6
D04EF08171541089CF31EA626B47EE5C6C46E504120A38C83212EF1647F38810
45717894806666C1B9316FD6B88968C67AECF1981BEEE4273BFF14BB6E61BAFB
497EAAA779D21AFCA612770E188125BB5AC7A57F25C572EE12F7E50B3DD77778
6B7A9F53603756948A06BF04D894FF62130D611C8CE906146E0866D0BF717F23
4430A8772203F3CE7570D8438A9981B1148530F233D6EE10BE2A94C323374861
29E5B25869E4E6250D89617479B6A637C39924D85E739B239F1D9519FCC4A3A4
A7F37394810E33BF64BEFE5CFBAD84BED03498ADFDF01B1935328249AD9A703F
0CD5F49C670D1747A32E8C0A77E7F8CD2FBCFB703C0E3EFEA78F4EE0AC723693
EF4BAFDF84D8BD5565BE5CC90861F3ECFB5AC63FE62CBC99C0E02D1CC26702E6
8F7BF5AAB3F1D52392951B81CC79F4ABDD8F9038CAF15B560989C7A89CE3BA5A
DCBF48BAA70D18E86C9CE91D3EAE12F48254753EFB11C847E194013CAAA17C95
1013D63E53FA54889102E86A960BDFF56A762C1A267CF8E6C925A83B845ACF20
4AA20C31A589D07207BD2DA7E53849E375B3D1E0CCA34E8FE4318B2F4FE24177
CF2FEC7E6CDF34968DEA733EE1E6BAF46655E88EDD1276660C3F6ECD1B77BE20
6ED379F1C5B3203B46F9E302EDE49C62BFF46B68AAC129FC2988F002506202EF
945208BF2C2387D370DD6069227F77C1A9E505542ED950A6D66AE823D871F57C
E2CB5B5EB60B278CBEA6C7619F7250222041A63CDE9473219D6FF7CDCD485AD0
6520D6E8B1B40F946159FEAD878DCD1076B37736C208EC9F5ACA0DAA2BB203E7
227490B419DDC7ED82A76307B201BE216FF5DF7CAE483EA98453060FAEB53038
8245D8BF6282D86AE417B2244BA942EF6E95B907FF9D9E2F1CA0436BE596BFE9
5110869521223FA2BAECF6042C13B657841B996C35411084610993D03F525F8D
8C09BB0E65DA90A6E9FB3FCB4948386C497BF58A33B5520AD35DA8A8EF430295
387667BDC45ED1F4FF5F2EF1FEA7DC1E2E87DE443308EB1391BB3DC34BDE8EC5
EEE1780A78C587F31B62E3BE18EA1ECB4EFAA85239B8D88AE41A25F0C95C2DDC
3E252B1F7869DB3ED1B6827637A8037A41413DECB376B636651412307AF69D6B
CC3158BD937737ED6FA58D0496515D1B2C654824C4E32C3021EF5291662749FD
FF8ACB5E5AA1BFB81C6F3D46B6E75E681929404487D1C4971FF04991D44FF6BA
E1E0064BF347DEE8ADA552EAD4E0D3887330D1BBD45CB252134D5A2787782D4D
C7AC66134A70FCE8C60E9C0E64772DC84619730C97F54CA87E8CD357461D762F
CBA050ED0F6CE2788B0B3CC56D0CB4DFA3F95B6305892A6E3D9ADB1E344C7853
03AD96200061D269A3CB2084DF6ED038EBC27230FC2303654E4D1D93A03D03EA
E12FFA6B5432BE5777AFDE970F05CD202A35676C071F4EF3E84242BE3AA852D3
52A092CF380BC3822DDC41E023D1AFB90C5F8742746D378D38A1E25B2A8B2D09
C6BEAD19350759CAF0E063EB23D7C837214BCB72B086A48638BFB42CB8071B25
878D824BE50193B8C2D1AE87892ED4735278976C60C521526269D341B35EDB45
865416417AB06811AE523AA438C714B7D0A1013F7A12A8FA566BD9B0D7A6FED0
C03EFB23D40E137F6B0646E6A6698D1C5271D998208A83DED1855D6614E60546
612C37B6AD9F909B0D3653490AE717FA01146EB93CB56A138FC58881870532BD
BD9FE993C90728B12C2B5214B3BA392999C0EB58677B103477A5E89394FDB053
5D5611E1A9DAEB0115E4AE5E31B5232036BC9F876A7730D984FBAF9B1E7D5564
9C0011539930F4B0118E50A9DAB081AE71482416C0C900D8C8BEFB1D63627429
5C610FB2D6483D01F9E29D6F1DE7DB6E24C1190CB6CDC0F70BBE951E4A202AB7
92393429488888D17A08E14D1718F12948D8399179B36A55DA18F331B613442B
58CD59141F1E30EEE6DB872780AE547DA5926A020D142EB069092D906E635EB0
2E01028BB588829D2AD52055452EE14A35302FACC737EE0CE593EC8C41287741
B5E64B0E98E716C0312C847892F04FD3753587DB2DF74F80A4DC676846330376
1896C5CF57713459EA50D0221FFF60AA48B80169F6CF1E9FE4874A58358B7615
AB23EE4AC912B6E181020D6343BC07BB9100B1992D407177ABD6032D6E093A75
79DB5084DE450B4FD774FA68D19828430EC6591FC47CE0E7431D2565FED5D427
299EDBFD1CE59DAEF9B1263614F820BDD7E34D4C9132C0AD46595DA14C0C957B
9900A2C241BE2B06713CE5644EAD18848433C973328D1587DB636AF6422F76D7
CED6F254500270DB3D91FDFFB380F4D1773BAD8A581349979F123F430506ADE9
8CA13BCB5BAB09E7C3DFE2821F5E669B2187E45FA61CD246789FA2F37D76D776
25339B640A94D0011B8F8139AAA5D201F869262631F6D3AD49E8E7CCE56623CA
E0EF9833304CB4345C80692B190C6B9BEA753D3591F144A9DB591D7A8943683E
A2D2753404AECFA3FC10643DCD2C92F00A68A98796CCC53DEE5AF9E6B42B695F
9E79C77BEE3EE1F27A10B32CE40EE460093D2D96932A798FF49D4FA6EAAF6063
DCB4C12A4C65C011FEB9BE3BCDABFC4E7EEA0A7D5BDB6A122F176DE7C7DA1E41
3F34F37D82B3E4B62D54BB5C196B3AD243616B5114E185744A69985AE6EB4DC1
9B208539C59C6B6A8D547338F98A3D9D962E22585D7752358F3ACCCD926C95B5
D8DE5E0B1C2D757B625D054537D03BC59DED43C5EF497D6CCA14BC0A2183BD9B
A4443C8B942BE06C85CB532712D029C7F20352A894B559D811F20F4AA976C880
6796E308BB2A159904C236190575957A83F94EAB8587031174CF56632AB54E99
BA4D1870ACA83A36DBB872AD6C17174C26E28B27D37DA5B22688404A5DE37351
80291E72DE255479D8E1AA7A5AAC929350AFB9FA5F74D61F187662B519FAFEAF
BFC5051DA96FBA9B557C6B569D71D3514318A98C84266E477E80138BCE2F2617
3665A411AF0539D1326B215DCCD6DB9A887C12B092A16569B0835C0A3FB1CAD0
89310D3E97BCBE567DA3EBAED130FD135794915F2CEE4F75337CD5D3C9AA45A6
8D436C41C221BB826EAE9ABF10D117F9D3E0878EAC9457270CCD20F49B3A8C01
64A7BEA283E6971F557C32D3ABE3E767F2F3D5B062FFBD8016613110884964E2
108BC32B54A5278941A38711D79A2CC3702DA3BACF1E5FFBEA4FC8ECC5A6CBAF
5223591B38C40C1D18D83EA9975ED7E11BD704D6E0C41D40D27BF68648141C0D
4BB21577336271C5DB81E42D7A2A0C726A64A81C6C3C737A290008A5918AE91F
25E1198097FADA94D6502956CCA89D9B12570BC0441E063459A95A384051BC2D
A9AC8306CD4D4C72C30EB44CEDA8F3D9855A75F75A2981E131987345E522B942
AF57732AE99AE00B384F2E8D9F9ACDC867171D95C47CFE1D102938E1EC3EA5FC
1420D16281C822654CF5BC5D2D04709D3864CA394E730C65F6999FA322726936
4CCA16643841CDF392CB8534D70129208909B1597C86840618E9ED876991ED87
3F0C1166EE98EBA1F3E8F90D6BF0E2D3FAE246F97DD10CF6CA798DCD665F4CA4
77FBE8891D68A761DB09C9640A5225E4C0FFBB2D4F3A686D4B71AA3ED2E2CF58
8003BC33A7696722D1D5644C10686ABBE6D30D90247E2FDC407FF8B1BBEF71E4
B878EDA120BDE573A8E3CA36B4B1ED766F15C3E11CA368F1D6A566C548B74CB3
BB1F23EC79C6E98C1667EC1E0A7DAB9FDBC9A13EB1E55AEA40B5DF6DB27C986B
82DA3737E09161BC62E8CCDD2FF708C1A4A0415CF406149F7AD39C8B474AEF7C
77EB5C4423EDE799FBBE64A0BA54899B8395CFA2772C6FEEC4002EB9EE799BFF
15D659002DF0B315878EE15115EEA81B9EEC3438A12A2508B88EFFE7526246ED
D6DBC323F686ECFFD58B9A38ABEDB051C4F8D647A01DD0BF5D648BA3F86A0F8F
A6BF2414B32F455DFABFB5DA43979B5A135402C14674BD799197F29BBD3DAEA9
425CEFD2C8E2F1366467FBA24FE9FAD4B523BA84A2CE32F5EFCE79AEA018AE3D
F1743A172DC778B71F64D0CE4CA62E6AFEA142BB08A41ACBEEC17D5A5E920015
EAF2ADC5976D595E9F38DBF8A4D29997FDE9781F6726A072909145A0C22C18C6
F1C609DD2D4245A38BED4FAEB626F320AEE58F3907ED91A2D2CC54613AF62054
AB8B57C4D010C391B51064EBFE0934A0B9F10DDA1B55748399B8E5C2F453F06A
11B083089B6BE4C91E6725845D3C5B8E6211C3F6A7FA3E6F5655E7DE2798CB6F
A5EF4ED2D7523CDA7A43F320006C357D6EDA1AA0D916D63C508F8005DC07F430
290311B1A7ECBCEA48F70444DD3CEDD3A5CA309CB00AA35AA6D42D36C09D3484
710193D79B9B3EACA8BE7AED14C409BDF5032921E636E9F380587CA2E77A81EA
1FDF8368AACA89B74F5235A31C46F92B349BBEEB674C65A36614A681EED0CD78
A2C24E11CA961FAF0E3963EFDF42E3B95C9B37ABE927D7C01AEC33A784DF2137
E66D5BB33F79063A1983C9628290EA57D66B0EFC62A8CA860BD110DF5FA30F45
84AC319B80E289028B004496EA3FC50826144E937D21D9C9BD6D9FFFBE976D49
63BDB9B0D1D53728262EF69D046F30AD0245F482D7895FEE699F98EEAADDBB3C
6B565D26A23087AEC95E407DC63640E04FEC2575888ACB7011A15DC9332C69AC
F9B3FE8367D20EBD7CE6E8FE123A37BE70A2043B9B0E50941A52316166D72C34
2B978000AABB4D80649134C7043EE98CE315B34A05EC13D279AC3B800E8063E4
68CDD95DAA4324F87F4BB7920558A40762A536180205F6835AA84BD201295563
DDAB4619F6DD76A9C55F64CEA44FDF90E83E13D06B5E3612F98C3C20EA1FDBC6
AB3CE9F6F9DCF81BA8EA8CD328F5F06799ED8EBA3C7818D866268C0F308672BA
B1AEECEB0F89150513812B9B2D6D097CD4E4119FE42F7817E41F05ACC7E16F49
8F3CEE08FA74E1A5E40D04B63E1BA1D49D6D5FDE9A1866FEEA2D5BF2E30D6791
EC4E8F8D7CC107E94C23C551DC8C15995764F5ED787312A4E0DC4D34675FBF8A
4163D000A0A549FBC105ADFC87D272EA3FEF39B8BA4E1C9F5B57642691BC0168
D35C37A1339AAFEB38CDCD9224FFED2804B3EFC25B60E4105585E6DA07254E19
8D0FC6068392E9EC12F22008B78B19D91669C52BD49B98E5E0C20DFDEB27E987
6B16F44C81D5C2470207BC65649E514F31F8EF7115E67207A8E469C77C6831A2
A6E92519E0A25A8046E0B65CBA28F3826DE88764FE7439BE4FBFBBD4E186ECEF
CCB1DAEB243C4231F232F3C81073D120FA313D2405BC4A7C2D53B6DB3825AB1E
B547F8933C5FB1577B1231249256E80132ADC455A1834570C7A0BAAE35B2F261
7406112C0BE719F8818E560C7D64282E9A50396CF0F6D278BD02F1E98212003B
09BB6C674F43B5A27CA9A93411803C0FF1033BE0161B5CD0F503B4B1FBADBB42
4E8DEB9AFB5CF93B94C1E1E059A77BAD6C9F6639846317455F28347EAB7789C8
FF5D9381936CB07584F533A2A4A1B516C35777906D2220332B3C481C3216C9FA
B4CAA9631BA11FC742A3DF93FEC73669815B36AC99E924BD35B379106119CC69
3F0052D95F50EC9F275CA081129FB35870C3DF29F96004362D6B0DC62D678368
BE779D08E020782F55E907D237A9A9FEE391AD501757248DE1175D665E6910D5
E7EFEC1760BF5043787035F06D66404E57C3C15E2CEC193497CE8DD4BB8D9B98
96E18F2F19AC18C5BFB03128E6961B63F20BC8C1FE8F3F350FC8ED47A84B4870
04DD88A77954D98B78E17BD39CD5588CAAD1E91A6B5115DD8C4345A046CDBF46
66479515F7BF7BC5DEC79B0A861A31B74E4483DD252B2230F1F6014DD80EE004
BEFB4BFA8E2E4E8FAC187A3F63BCEE11A4C56D6E16583FAE7600FE17D6BA2661
16D033F3201D2A494D27689513F8F6267EE505A06C3135387F3822928AFA0B20
8A66D8CA892386FC69EBEB62368ECBE101E233351AC8E116AA0593AAF1626FF8
A0F31C9682410C68A8F8286A95076EE9F78860F1F9DEAD4C81F8D2385EAD7F4D
FF9B61F821FC4F70980191270EE3BC4B4AF6F8751B19B07B1AB806F715882AF6
209D7502752BFDB8C6F3E65C9F6BC48A4C2BF6A4DC60FB182399B2E0F13C4D3F
2E7527C16DE3C486E0235B061F7B4B1CBF8F3D9F59F4EB106DC166A3D51DD16F
8FA295CEEA2CB22C5C6050F61800C9F578302026FD5DB2A8DC1DC5010BEC71F1
837552972E442200947E235AF0F3C861440E1BB64E758587759DDDA068E597DB
BE42FC930B429912BB295D5BDF6B04188D10AAB2EA25AAD16EF6F45096A631A6
8842B689BBB4F12FD99C4F968EE8E552D2DAC219A8EBFE2F44AA6885B662BC51
9E0381CCCD92B8606041ED592378806DE93E5D88DAE112CB8F8B6686EAB610E5
79BF00C97CF775E1518EB67C27FC3406DF0332D57678EE47A9562F2D44F801CB
9F739B2B395C1E0F24AA5DB7C42DF620DA67D059D62F6879A6A8D7706D26251A
2D6755B06FD2B75AC1987B727E6E7B9E427BE17508A66B071CA1C6EA7BC1CCA7
866F62343BD07C1BF9536A25EE9A60B370DFB938B02D003CFFF22CB3EE03841E
657F3716353862952E960143C1C3922AB95ADD734EB954B7DBD31F593A04C0C7
D6DA4920BD3F129B285A2F5AE58AFD4A3364A47680E82D0B86C5A0914FF8C156
F23F50C9AEEB43F802203C143D995E046C9457D9AB7D81B729A1C5A06A51D398
662F553BEDCE5B6BA16D5828A3386AAAED72B3917699DF6BE1D143950AF82E5B
13387FBB4DC2822D61D9FD8AF2DDCC457ECEAE09E8A9A6B41419E658103DE0C2
8F8B7132FE9C9556F61A1CF019F96B2BB0866D58D25B3C5351EB5F7F61CC55FA
ABD54931B4D1566B478E0D9E6DDD321D5436B184E48B648A96D2DB875A00545D
AA99563DE728EFB64264BCE9A220DFF0F6C95E0D3D233ACF19730B6CE129F9C9
92FEA340B2362A5A21D452B56CB0C518B17E14F873B2C6CA6292AD7F979465F5
E9A8100E3C3FCA07C634890978CD1A0C9503C296E7B8D3D81393B6DBBD70DEA1
F8C17F3A5A05E9FA2238D8F72772A4AEBEC4363DDA29DB81DE9B596202DCCAB0
A939482D896AC7A3965684731B16C8F2CC0EBD60C788119A375D4AB28C72BD20
6B57A0A8CB7F3276BC13716F658A8921F5CF2FC5BB00EF4C3AA5D733BA391782
4C1C2F4D025709D28EECB76E417112148840254EDDDF4833B5B48F8A92F37DE6
8A7111A07846C1C05CE819EFE2BDAA09915DA05A0E10A562194F8B89FE9DDE57
9DF716CE13B61BAD2354CEFFCC8496259C19A0E3EDC960AFC2EDB8C1D7374260
E9C0D73AB34AC63A9F4112FD7FE10D60AF90C8F741C14F7DB79955E881A6C3EF
2FABE1880BA0095EEC50728984BF50DDA0B83CB645B86797742240536C19FAF2
00BDC87BBA43315043BFA125378C040CE759D2510F27032E517DCAF841ACC7CE
180934171169D86699CF53362285E921A1379CB669CD68985E4238370BFD2A83
B0EBD3A791CED6A7D376AB80D77C7DABADE3D426F89EC4F0EF5A35DE1D9804CB
CE93C8E10B4DB3F5470C355EDCF5BB5B9E8972CF88EF90ABF09E377CC2D08433
5E4D777BA1B20B2DC5E7492FC4475DC0A9A8788FAD2E87ADACC4F37702812508
82FDF9B58A4BD5AE89182C03A1C9315A1B5A260B1475849FF83B1380B290054C
79158DACE136E8C8FA66E3436B11979C9FEA55986CB5B85B9F238C2316D93F83
3F07277E96B83E912197BA3C3EF8F0FF4F82A8D7A89DC627F1508AA5317CB8AA
826B08457AE80D966728D6C1D65F381A2A8D1E432A2C5DBCB25B84EF56B9B425
1460F072235E955931A2E0C0BE6265A7AE784CC08B86A3021C3C0341CF464BF1
B464013AA1E0823C22243AC2B2F69452284C05D25293EBC04B795B23AF140EA5
1C09226882E8CF3C022BC1A57CF73F490A0112B01626232FB9A930E7E2FB386B
C57F6A6662759B65A8135C8E1DC15D98DAEA42DB728142C7AF7B9EC9735991A9
40110C70F6FABADF813CBD945DDA55401345B8B2193D971A5154952995156DF7
F7242C3BB3B2B169751ADD8EA94A2BDF2E500185DE744ED480DAB8D447868F9A
B139E2B04CC23254E36869006EDDFF51F5992727686B58639775B8E3EBDA38CB
B136548C4F5C599A7F1371490BC7A73A76C30FA433DAF0A891B11E1AA7EB3F64
E38F2C6937B09D4CAF9C761A91E9C8B00B76112D1D27E923A1FFE6C13B32BED4
E9298407DA8C72ECC70B18821D5B6DA9D8A28A5B5D8CFB67D6DB0CADB653B04F
2614CD81E64F1C330C0EA23D1091604FED7B4C1DAEC4A1654F2D89ACD1045626
A449BCF9CE8E95EAB21669397E92F29EEE41F5A14A7673434C82FC67664CA4B4
E4CE25CB86FC28A0D2F3D084AE1B3DD49053A05065C634197D63BA7C92DA29E8
8A0151700FDB83BC6F551B8B7F001843D6242B717311011667409E1CF5C1B8AE
F5E58AB560344BC15A7A28894B268A8C63765E34F998DB6C269417E327134F72
1BB714972753CBDDB3AAE427E40E13A0A8D22AF6568571A4442DA6778629620B
9907E39B68A9B99D48175DE40F3F1B5069FEF2432F1023814CB5A27CA9A93411
803C0FF1033BE0107CC4C15CF57E47DDE6A33C0A15BA246764EB3C56833CE0E5
AB8C547C662B898F6532574AB69B089AD29954F5E0120718A9ADBDBA122E1E6C
5812D6AA3AEA7CBFAA34A11126BAD2CD42817660C7B26D6ACFD62C7DD5516C2A
039ED025D7D97546EBDD463A19AAD1484E3716B8EC002392BB80D58C28398C91
23FFBDF163D5A5E4758A6AC0A17AFEF03C8F355CC4A6DB102BEAB1E67972EDD1
D93A5CC9877459E17F98A36A628FFCB7CDA6396C40D83E3C1EDD7925C6A36622
D2316F795B1DF214DFCFFA88EED6706DD439CBD355472E97C6ACEDC3CDFA8675
CC72516F8C51957B450B67A984F6CE6F529A894801EBF92D84656F5690DE18A4
77F2DAD4417252151AA1FC6D423BB0B319BF1D3D2FB86419FC45040F8C180C6D
51ED5B06D03E96799FC04D171AD4EF68CC5B3C2C095688B66DF477E7F79A4080
ABDC6FB84FDC636EE6CEA8A0553A1C0511D15411E37050FEF0A022013D6AFA12
2A09081B2218A078EDF6C2650B134B8A5DB747E46FFEB88204F80A9FDC48426C
C57D31CEA08D34BA326D8AC3C275EA6CD700CDE2BE2C5C14D8B964B980FA031C
A92CE326BB4C311F8B056C72BAC8B8450811706C4E6A2816C24D6ADE6ABAC1A2
B9F5E945A1090BA0A8854C2DA87520859209EAC23BDB294003CFB7C926DDD113
9D8A35EDABB9E52BA91478D7E6F4C52474900823B8FE67AA41EF3CE5D6DEB35F
B2C2B85B60A7661022981EB74341E013E9681A6D7C5F7038682C86A7BEE83C0E
3BAE6FA313F76E5A957E8B45D3EDA25DB5B926F9399BCF9023BCBCF9F46A436B
59E50B6046A1ACCBBC6228E022D552BFC12C9271BCC7992E5135086B928622FA
9AEB505F4184C56318C37756EFD85D3B6E6ABC008C86CB01851D492BA26C2F88
25B1988590CFECA2221462479F23D0F42E8C59110F6E7FAA11EFE1A57A0DCAA9
1A55906372E87B007B8C9A43832B2899C574E87FB07BE7B67BC9C461BB0E2F6D
9666AC81ED78CF04EA2EC4B0D216A6C58ED39C3DC5B4A7AED9DEF3077545E1D5
849AE1992478912B980D6229014CB7BEABB6B6F755E9360CB61156981495CA41
34A0613E4034C3FE888B6E960E0C53C27BC61EF207DF643463B3D691578C32C1
FD38C233FED4D7FCB1DC9D5E2B4D3F5C4435FFA48AF001CD76087A0A5C2851F7
708E6619770A190BD9F08F8DF953D94DE4C2585A215AA6838E940D3B0CD9B17F
2F4397976A72E90E3B9DDF0211E8DC8A1B569CD7BA510291D44E807A465637EC
BF73F4A2B27B0E3D4668105642CC2F988226C73E75795A4EBC4E1B5025A92938
2C91D411E017FAF4CF2871EB3B517D23E556C460FC1EB07918434A847BFC9032
D1E5E8141439FF5965BCE7B85ADD21D5A5347D5C5123FF234201F76EEF7592DE
E52865D77415CCC791B8B7754DED7769F5DD20D092DBC6BB8778E2EF974F873C
CD5C71A9DFDC7C7AA5A37C53AFA0FA794945B39D23DE97EE33CA9DDBB6106307
D092DCC56A26D52F882102BB42680E5D125D678FA7AC5BE466FC967435FE2D2E
709CC9D6550784FC47B3EB80FB9CB698F7E773A0CD4248B15D34B1EE31464B43
801A35FBCB962C4EA6798CA07E8BAA1C0EF51801ADA133E6B4D9FD4F0BCA5CA2
8E96BEBB2509AA8979C2394FD4E37CC16BC15E3286B063B5AE98A4AFF60C476F
EC7EF998C17E1BA181478BA5733A01BE64F1FFE56AF226036F139C7A10398696
C5ED817A28B9399D7862EF0B685A1A318FFF330E3D4103A6A38E9FDE9003CCB8
78B46E1EE17105AB0688C6099191A1A1147A9D72AE4499BC639FDB6CD58D5BDA
3E3E04734BB2DD3EEF0434FE0808E13770A8817E11E068741A93B1619231E37F
C30AEB147494C2367457A1632F50FE4DB17F461C93C443ECF8F1306E76031817
835F5DA7088995352B1ACAE4E12B03013D7B9BFE305B9AA670A3EAADBA36DCEA
5054940D797AB7E397CE3445CB876D4A6026D01CC8DAE6E410E16F6B065A9B31
E7F93A9128766072E48BEB858D4D399B65AE5863C3B21A86F4D2537484F0E3C0
BBD1A49AD6470D730DBAD665A4D4EC5205333FC037BADCCF8CB457C3AC8C5B3D
D6A320D9CA98FADAE7294CC29F9AE1D4776F5EF92394C86A6FFDBBC6A27EB822
FACCC2B8B267881053EAAA929A1D4FDEFF6EDA25D0C6130BB6B603ED78153E0C
FE74B37A13815AD6A21AF78047C2348B46BB53422FEBED9AE61AFC1AF1B664E9
BBAB13E9E5ADD955C7526A993B0F3C82BA6D5F35ACCC5EFED6E10DB82416A118
8665435FEC647B6911B23AA960E2E6E76142DFFF1DB2A49C4F98152DE952A6EA
2B53016968266828F4810F43B370599C079DF74C9AD7D44084D0169DB940D4E3
4C2EE195306CB9F10D1D82B57E50EBD75A24F9B1D835A7CC092ADED28952B375
E36C219EF0F80EF2E7C281D0D3DEC5E07BFB16F0653273C97544F888E933C814
85C84F602CE1D0880336D4C1C16389BF746C5DF8665763B685F31B1198C6DA4A
DB65CF7FDEEFC4EB905B0C0BA6C7122682A7981DA4911C2156D24329D105F128
275BD01B86B92A15E6CB3B15DB4E00B462CE4416033A861F4DA0B436A0B7710B
99297D190733534B7284F107340EC5569B2DB12D836C289D0AC044AB6EB9326D
5FC58CADC62515EFC516160A5CD90B1C8A60706034F1B626C4445DF31F296D60
D64FE134A8307A3B928D4095F5DEC32B9265ADF8152818A565BE216ECFD45D80
5234F98021CDA39290FEAF156DDB039C2E6E9E1449CEF79998C7A690C19A2D66
E18FE29270B941530493A90C830CE1D8272BB220D988BCD8C424624CD70E1B4A
C6408CCA4E591028CA601D37EFBB838A46D6738271275F2B06705E64A218658A
D64BDEAB943353E49FD4E764B326737EA56B17E403AFAD974695CC9B91EFE130
65602007EE15DDCBB38C2DAA5D9E328841C441CEDB7A58643D1C64E6DEEA7CB4
E15D67A2D10E4716AF17BB14422C329AE0BA4606C968C69221315BEDBAF32D5C
D155CA52147653E0B1BA466C3B8E7D98A8EB4181F66DAC5FFB6B177D37103CF3
F5D386645656694588B8F410180247DDCF8CE7E9E4B044B7EA1527B9070A0181
DB95FDFE11D18014A83F84CC3804E4B67914FF3A3FECC4F464CC0D7C222EA842
CD160A21AB9B0BAFFAC3A655ED1B788122B592F7EC8168AE7D0CA2EF8017DD8B
7F26F881C130F766695B7642F61F47D075DCCCA81BAD91799B6A9385852D008F
46D39318DBC755F89AC21FC387EE94AE7361EC25C282B6A0A49B5EDFA8FF2892
B2EA75B3678FA870C7A34102DC43A42A02FE17C33D8F30B0432E92BFBA593CE3
4E8AA50AD475C2ADC80140514119D363B0AF71A18E1EFCD97D8EE69BE01B8A86
A35085624C0003E8B8BFAA8A9C9653D2EC568762D7D41E32155699A9300A69D2
BEE293F0C02367BFB807CB1EBB62366746A152BF6389807DDFBE1D5A364A2136
1D9B6A7B9CFDC41FCA15FE9A0D6AB575A0172DB724600C7385C6B945C65C7B77
C7BB8D1DDD81276D743767E470D434EC8ADFDC1B5F3368518793764CC5631681
8AF6592F7C46DBF783C785E6E2F467B74DAC6AD6BC184C2882FDE2F18BB8DB0F
68382649622650B1086F9A24452CE7C2B52AB9CC36C01DF290F796FB12990CA9
86395A5D74DF3EF2E531389878410A4091300E3FDCDECBB37F53DA675076CA56
EF657D03A3626D6331B0DF92C5C166ADC1F1032623EB1CA268E9EE67EEC7772D
CA15E712E3244330D83143145837FB44CE935CB983D4775A064259788D78796D
D33BF106B5B243AB65C5572E951D0BEEAC691DE5848543BE42AFC36C9721FF3C
78CDB36CFA55D44EE28C40258CEA7BD70C9828B4873035778264B2548AAB2045
B32EB9EA26AE7D8E6B0C8E3C422AD6A6011E641B73BD918ABD4E289B92C239C0
E8018952C7AE3F0134DF93242D59DCD84A08273C2FA9FA9242F6C96F885125F1
0E5F1A4DE0F85653A3B131681EF12FE8C83895DF76F1EB7201D4CD352BBEC515
10D917F4EF01782DD1D4D1EE1920CA8A9D54D73227C4298F0B6A19C497B4C541
D93140F57CCA586970E048F92986F511F8FBBED92D2A9A098BEED08176FB0988
008B48AAFAE37C21263D6D9807D720243DF2F3B71C6D89B77133B66BFD0B2147
73D46818E05E5C942182AB71396E9417455C5DF330B8D7B7BAE9CE7EDB09A138
7E31A3179667E86BA45A6CDDB7636DD7B482C08FFDC8D3C7FACE7C7F381777E4
EBC7FE7488B910D0948B0A63A0A016295619F68A9237EF98C464E0E5C5556517
12F633F8F24D7ADE3ECE5AD5A61AFCC8EC3338F70DCE66DBA7DE86E033AE98A7
BB53EE4D694987D9A8FFE73DAB4A62F92A5FA17508876E6B63E503BE02227D16
BD6C75291A1255E592C1AB0CB3B75AFDFD61111A87142D10A8594725A428B169
76E5366CFE5113E899AA0F1EB35A6360822124F21362FD196FC91B921FB8BF63
850A28C991DCAADDC6D3F39635CD0EC255C70F43B20B8B8DE4041464B803E3EB
1DE34101FA5D88F4B8BCAC4070E7C2A9F04C48EC1478CF993A73530B77F5FA31
B09CE363595337EEF614B1991D77567B1408D4DA1AE2584CF8195422A5F38F6D
6C005EACE2A7A0E2F2B1D346F644A8126EADC4813F842F4238BC1037EFB5D63F
8646A2A49D11A35665D51855753A9242547FC61795C412FF93831D9E312BF499
DA82EBC588A756A598AF6A509451E29875F2898237ED7F32F9EF2E6226202A33
2722275A82F8AE601E817961A69EC00F612A8833BE9BA560481D21F68115392C
60C347CC9432AFF499D91052FD85E6092B7623511B0FB2684D80E48C37FCCA0B
B3BAF0019F9735668FECD0653933C657C65499D272B05B8D5CC705E91644DB1E
AF0396EC4F845A140857F842B95161B324F6FA7CF710F40D62F8301FA772AB42
EC156B6C4A937FA5A107D4CC930EA733E735A5E8FEF370558BE133B2C1C7D7E1
76C468E63EB7927788F78F4CC28363CE8CB54B376558917F7B334EF6F60F14C1
BBE3AA3E9EF09539871ABDD88D1E1257A40E473C8A13323EAF08EBA3BD228B40
DE4290FC54BB19612C2E6B256F4E2CF47E1461DB12A5A5B7750008E76BA3E4D1
47A89E853DDACF54388976F7B7F7A369DB7A316130A640FF33932A8F2B740982
F12D56DB0554A9B3CF6D6F613537FC520AA51E86D4AA3CB2C5C1CE36719483A6
17027002AA99A88921716A714D8675A14EB69A87062DE8E561E50D63580B9DCB
84BAC929982E59B5D1E4C701F55F00D57011588382DBDFDB229F242848E74475
5961A8FE4FDA91BE8AEED0216748129E8EA2E064408806F7E791C10900221A00
C1D85541A0300CA668FAEC1E8903AB7CF1862E8A83F14A3EA2C29429B292F885
6E74D38961AAC293019F4912B1489612D2E9E418AE444EDDD3B83186AAD8C094
88F1462668675986DF1618E183F932F7CF11D1C27E019A58B61600D6C20F0116
B403BDE41B5AB9FFB7296F7431097F9C9107A29D15A7CE24DD0C13D8A1A59732
5E914CE46EE796CBDDBE2086F42F0B1428C1780D18B60391C5C4EAFABC8CEA78
0763BD089B0D57068B43EF2DEC52824CB1E6A9E3630D1188C4B82075C60AAE91
C90A35B53858A65E1717040E698C7B0EF8C89F6B691AFA7AB9C5C94B11A5DFF7
74E1B107DBEBE0AD120C5061D8900D17D9614171DB165BBD4FFBCD0CFBC0D6BB
31A72E0C26664DB8CDD1210C3242B4017C11A63694342BE9999C1EACEF89B5E4
0E102D9E5770609DA46431137085E902850B2C6AF69E86D39F616D6ABD1C70EF
1D7F5DFD2EFBDDA8ADF0EE9BBAE2C2034613631837410E485A8809B01693605F
BB6E0BFB7367DD9F75AC6D47C28DA867EBC541A5A2FAE3D78261876355833DC4
3ABF341D280B8171AAF8F65089C91DB6B8CF96455A48CD57295728AA0ED875AF
7721F02506758066FB3667FE472BCE8BCD67A3392FE57C2F05199F5EB9046AA4
73C2756180E0144279C901CDA700966334617B6DBA627216B81E8EDB34E681D7
2BF2385BFF7C1FA58CE568964C974F08DEDE159DD4A7DE8B7A3B2BF3AFAF77B1
53CE1429E059C587627E5A38E8F97EA3795356CEF84F086FEFF483A191FE36C3
7BBD245ADAABEAADBA36DCEA5054940D797AB7E396189A810B38CB7A963F1A74
3580231B6C054EEA8257896BC944D2C8110004057BF9DA5FFB318AD221C5CE49
CC80967B02ED9D87E1DE9C6F276C5A3ED6A7969DFE34921F43BF2B6F8A8DEB3E
817305D008ED7095020356BB2C493EBEB81392955105AEC38EE039AADF6AE7D0
6CB3BDD0D09FF870058252D8704AAD5881E18C2DAEC09606228CF9255B181CF4
FD664CF4A15B6E7BA80F1CFB288A156AB5BA92A1A0175620A4601E0BCC65DD54
F35A644B2CABE1DEA4E1672E3FE980F54BB687F4A711B2F239A11365E6034F7A
BF2DDC8553CB11DE97764ADDF131513EBA327A8B26A737C2182BE183F9B5F81C
3E234FC289BC36351B85A998C6B0DD600EB57A27DA0B4BC8BED1ABE47EA36D0F
5282F333109530C69265B89025963133F6809EBBEBFEB80197AF58479E225A85
580DBDAE3AE4A3EECA75763BCE4712FC0BB9C6F51A1F304BD42E5593697C4F4E
F6C0D5B32D331AA8D21007B6BE4DDBC6DF4768664BF14767F0323B2D44D7EBE2
2A986A1EA77279F9D19501E7AFD598B347947BFB29E19B19B7B1996C8F716E35
68888C89D0BC18996DDCB190225447CDFE7268453DA56BF31816E435F38F6EE6
8F364EA6518C3C77EE962B78D05373B90954D0922E55FE6751257E47D26E7AB2
5C92507EBA29CF148CDEF7F5DD9E18FD23882A7D4488AB58230E33278D4D3415
2220FC015DF302525D56A72F565DFD196AC279DE8D582EDA7A954A0C0FEFAB68
473467CEBBC3DA75D15A4E98108B2B674AE8EBCAE68496019F4912B1489612D2
E9E418AE44415DE680B1C3511FC764C7448537E7372AE0487646E3CDDCEEEAF5
3FA0604F07F199D6F546B39AD632271199853F5FC7B85C89B0F65557C1267425
4BA9350DB9216E742689170992285755E6C27CA5E8CA5023439EC51C5D9C0743
FE3205BFB6711F1026A613DB8EAA16F7566449F2EF32F5DE57CC35175341F980
B44B3F03E5A4745D1E0010118D3D4B94B5C19C760AA0D0182733943B6F21D946
37DB88904A586C0C0AC02A1324ED781F1E61BA30037BB388E1EF9F800D5F7DD5
1E9400952B5B1E3268A58C27BFCF1D5B4E07AF7AF80CFB18FE333314B973859D
B9C3ADDA5B34BC31629E68B9AC1CA8845A3ED80A3844C7B69D7443D52DE6BC42
2D090457D4E70089B437CFC21D923572530E41B75670A704D9770AE380B7F7E4
0C88CE49DBBCC46E385A5E1BA49A6E89EC5AAEF7374AE1DED04FE77441873B6D
8130ED6C59006D0F7A133AFC0FB13AD7DD6015882C948093629618001E2F9E88
17FB8E1EF293D5D7FCC285F2EE89F3A3AEDBA367DD15130B59BD9BB2966FC1D1
20272E0D026B7E87234F09C3F6D775CBD53BEC72B326490979B064A7C3CA82B6
224A0888F4BD7840EFB8F439072616A2944A9FF0C5D31365131234FFEE27F8D1
97A90C28D081F1DD6DC2C82D88B0BF013691BFDFCA270D52DAA835C2F5AD4A68
6ADFE2C53C06258BF0C545AC8A2A5197EB7482AFE8801CDA2C70E9E5D3EEC277
6D4DDE2FAA245FC4CEECD16A03A41F9EC90324A66FBC55EBC9629405F03C9D4A
63D976949A41D70B3D8D768A63E820260D5D6500112863B9E14D3E5A41D8F907
54AA28185D92C9E686B5DB0E34F4EEE140C891ECE93275A3D683548E2E9A1BF9
D2E5842CDDBF74140C33553CB8536140CEC964B987EB28A369B469CCB1ADF413
A5C6A02EEC7D4064DA91822CB380784E873AC972266AE6DAB6064D531B19816D
5712D175CCF9A789028D97F4F7D920A1224699A2F16475999E1D74FA8A73FBB4
359EDAE7EEFC31E92F96662175C52E581DEDB26E0281E13EE25EAC08943710FC
6A4F7DABE3BF2D66FA7EAD71625AFA299217D327A6A71D08C9DCA5C2B21B9A97
FEF3E976F2B6F4C068C0F93E3F967012DF3733533CF38629BB4DB21933C6DA82
D4AA923DC2CB6946E88C38526EE17B457E088ACB6FA1BB8026DB42B2C54E6F42
59B3179FBFA7A4DBFCDE7E3DEAF196E28D4883F8DD04F89AF43C19D749D3313E
294DAED44CEEAB043429D9BF899FC35E307EBB0B0DC46238DC0714E88C2071B8
EB9B661B9A326944FB697FCAC85E12B77DB6B54C920160633B59C2D259F03372
D4356D165B154BBB5807FE2883D8232FDF5E098CA38D68A48E5D912DC574F98A
A6442B793D291590A381B143BD48B507B010FA2136C33749BDDE2C4DA4143A47
A3880CFF61165D2CB140D249765296D30417AD0949F71BF683A2C5C30320B1B6
AF5E743C7F60D6868BD38CB2889D23EC2BB5E0CB3D7E04196AC990715EE7F059
D2A80F1E55CB63E3A54F87016BAF8C5B46A2453BB0A63B1DC3ECBB053C14A80E
40AFFB2EA99B224F9BF6376070C0B61B8B7F78B569AB497635182B25C341CF5F
A8FC5E92A03FCD229C59FA4AE4881BB2F8B2C27F396692FE59047D7D07D21ABE
6A6BD288B0F560170594D9B57096F017ABA020BEC92CE628CB545E0CF0C6085C
2B4F763AFA6FF5EA1F8849332BEFA5F26E06A035C8DB2668A6715609C4197906
3D7C8222B22D8421C1080040F5DDE6056FF7EB345034D6FBCAF77A08AE9F99AA
21E80E241A16D30FCC3D33F8E1545350BB8288DE0B5E89DC62CB398B021CFF57
9D079B20CD2C692DF06DA1487FBC4AB1C18860174F6FD03B2C74B917F30D3F43
D356DA36D525A1053DEEA2134FDA0443A5976A1CDDDBE5BF214DDC13398479EB
9D6BC5330FDF4CF62A429CE3256DB0C624A636BBAEC2F122308B5499BE053BDD
8BB304DD76E08499DB0A687F4A6CC3E5DBC1D6B74C35310D890EB1563A50936F
B3EDE47AB7CCA4EDC20E4E8274DB0835A834140FE5A6FD958CF89A81DDE97D91
80ABA37D2F0405FC314AB509B47379028F3543C4308635E3BCAEF76D26E3F2E2
19087928F3F41D2FB8069A59A59454C9853CE6A95CFED9018F85E7BA1AAC7FF8
4EFFD95E989F4BAF465B5F2C28A99FE9A1C53ACA70E6096CE2C233A0C777A8FC
90691C7DA8CD2EEA99F35A95FE9B0A14B43E1B6B6A6CFB72CA41ECC817275287
10C01949B339009F909E8F2816EBAFCB05DD8378837F0A59491D87094363A611
24EFAF3AEC7AD9DED2E393368D5B739EFE36171719DCE32F0585574DBA56F31A
83C9BF396E8D53A572B6F93B3ADFFBB5D20E9DA6FA4E5BAF7CE23C9AF1E62359
037314FCE71364342FC9822D79957F561E4EF1489083E908651A382419C1AFE6
AF1E5678B913F1ED4766ABA1F70D7DF08890CCB66011C6813D4C565BD994D283
03614722B9A33EED6077891BDDDA536A90DB58EE30B33ED56B35AF4D871F3D72
62A39A5D1529E4A5C32EC8E7C5300F069E6AE8D58C4E9AC13F1B1DD5E631C597
BCD7B542AD4099C81A3D08DF54D34CDFDDD24295078D084563AABA0045D42290
709150F1DDAB700B6CC69B9A1B63AC5634E8D0172DF5FB249A07431EAFE27409
C5183D83ABFC8ECCE443533931FD4E62B83EF6813AE25A6E47DF0967A2E0D894
C2668BB22C49FDF46A3FDA5E9D9C43E6D20691B072D030DCEF0B58644849DC7A
72C8CDFB2C261EAA3F771805121F59D3E1603AEE4140492EAB14F8B641381FE8
BD00F3F708F0CE573D2D80739B9E045F1681269E24107BCE6BE2879BFF8F3FE6
FAAC42FD0E05506A827D28CEDA2089C2327F6843D45E0661D092312D13CF312A
4D56D8154CAF94CA2389220353256343B9CC910212497788D1598596C6D795EA
3E55BB557C491E30D11813801BFDF5FFE6AEC6ED83210A3E1468636CABA978DD
6E359DE08A1DD6CAF629346C4086912C04456329F9BA02401F2E404F1D405F80
F2B34EBA869A6F133B5F190BB105C3D897C3A399B974503EA79A6D6C09B86E34
E5623D6072F2C433D55785D38DE64D6E79F42F69DFB61157E6EF028103BDB5DF
9E7D3F4A4F8FAE6E14E289EB39EEFA23D683ADB06A83021125F4F4BBB7CDC021
620E25A0732B430002805C1EEB1A223ACA7FEE9DB3105919A595FAE84457B33A
A6E13AD349757E51204E1D378DD35662C931A84CF2A18F865240E37122502D69
E4CD6001F6D622CA6454BC1E4EC4D249E9E128A3AD06A18B2C6BBB07686924D7
69F05C8053ACDDA5DF00DF9ED46AE5015A133B1D54F52CAEB5E200761F620A5B
87FCF824907A72492DAB15267C8AEA354145EDB81A05FD6DBFD96D75D6C3850D
9EBB69A27914E4251641C53238FCE81A6B2EA17B67647CE47734D1CC5BC9A9BE
0E1BDC174699A5E89BC2FB4151D8837E72EE7A92F086237DE995FDEF70218571
8AB74E76F44307B843420ADC081057601DAAD9BDC210B0531964DF1186811BB5
19B9FE8F76F50D92ED8179CB19224931D557B2628ED1A1AF81E15FB8046BA34E
3CBCA440F97FA94CCDBCEA90E06D41EC9D1EF6E296C956BBF7C5DD588F0799FA
72BD22790DC5E417A6AFF802633A13D8FC87CDBAB9D317F7CEEF7E5FCA92EE33
CA9DDBB6106307D092DCC56A2A127C34B4B9DA3074E9593663AC861E5E754A27
B5F1863703E0FC40165C8E612E334C3616C0243CC3E8FD348BC23A7C7BE8358F
1D687C2821C839A5C4E59D5333B8666888F2CCA18D56C7BC8E8A5034324BDEDB
481C01C678AA4504D2A45D986A7D7A83DE0161F60DA8B2FEDDC4ECC2F9A1632C
60EB44F960D4702780B3D56D13405C5CB5581D00E8BA8F512238ACDD24422887
A74EB432654AB98485937A76DE9A17C93C1493975ECB14A98191B4584F2DA7D9
A9BF2178D2526865D605D81DD142AF6614CA260DFECA931490ED81282F9016DC
A0602D46705A9C77B52AC401145F747754CA79D8F6EDECE0E8BD877760845550
19495ACAEFFCB6E2FD051D566DE17806E2296B8A82233F708F967186EAAF50F5
C491DFA028C9F1CB6735D3C2DAB0101460A5BD2357E126E973566ECD661D7524
645D49BBFCF53A299D9ECD0995541EFD689CC92E570A8B494389953BF1A2C1CF
F9BACAF73CE56CC638A43A8F7D0E99953A61F2E2E428F10D6361548940602AE0
AA7A23A2F59322A44B38B0B11741030844DFDAE1DC24EBEC19FCC9C87A5B3268
000E98D0A2ECE7E2D05B0A89C535FAC179898DE54B540DE6376AABF1F48A0D3D
75A80D47C776C16C5E82A8DAAC96BB55712D269120B0F07B46A3CDB7CD0A58C0
AD6B9D25F4011488158E50553D0514982224A070A952A079E1ECEE2C4534F1EA
08E9D5AF6885FB82236243D7452F2052DE9165B5FA989AAEFB2F85E5DA1AE985
39016F346C985A92A278BCC9BF88DC7029F73EB762BD6BAF9808711285E39355
F641B9B205E9D0723BD2F9F9B7CB375A9E260A97625D37D92C4555E13DA0B4D3
1C21DE860AB45205F5B3FA8A0D0886AB8596906D6BEC4AA1CD878A13D9B3A0E8
776505F3EE3B411724B861B7BABF1E3CD52790FE057536DA6370C07B2215C3A8
2BFDB446C890CEC8551088F3EAF472E6EDD840B306BB8FFDD3A7D8C74987A7F1
40E0A0A26F9AB1D209A1ABC635EACE73733ABBCA8FA90B32B608806D9BE9CC7C
C4A1CDD901074A7795EBE90E24C73839B5599D48DD2379BAD8BED66F96D63085
87AA86286BA26F4DF59756B0666069BB3C44CAA1BB6D721284DF66C1191CB22C
4F8117C16B811D6EEA8EA9652D678034AB5DF5627AB9042269F6109E69D1B3A6
E496680FA50246580A1AD4AC0F6E5FC6C284B7E30DCF10C67C883541B3FA94D3
F16196B9285FD8E99C83A57283990D59CD72DE470E2D099F3D185657B51B636B
E53938736CF32569B61C958B1CF0DE8D22C91C14210A12F526494C4EF1D3A55A
0BB00ABE3E9094CED18AA524597F8B1F287A2E692C941D88C63D583D1AA7FBC8
453B816DE9EB8762AC1963F6B79AC8744376B782E125B9014610AAF821D09533
D7AD49C647BC3AD01E7464370E3E0F9D4551FC9A84B9CEA1642D15AEA22ED80B
6EA1A74C9A9B724F2F1F792467BA5EBAEA363B116174B74696EA337E44CA074E
759E81FAF7418AC5957D57BD97F7F7AF0E606A892A549D9872F089F8466695F0
A4ABDAAD170734E4A747106750B3A629BDB66D302CD96F26402570CCD74CFE69
77C1BD22A37A173434E158162D2C07BC08690DEA016C5B608F03B4897CE7461A
D5BAB068DCB4D54D2E62460699E13A88BD545A96B78F6A5DFCBCAF961DADF573
5E08E49CDC8AA291BA88AA67D41721BDC769BD67B6E31BC9A983B329070E70ED
B1D81423299432640745A0AB66CDE2504431B7B1B80D8DA4F78DEC07D5975B8C
AC3D8071E29CBE07BFB4AA814CA0DD22B13594F57BE820710F72C9CAE2AD1600
AE40412F29C2BA0E8427A3921F8C0B68AC82C7B988BFC39A3B32A0B1C7879DFB
32D945E18B4BBCE43406DB4D127ED2B9171470D2497612D382F31CA50AD2F0DB
A6621AD08CCA90683DEF9BD656C4ED9FD00797AEE5169BAE41BF0589933A0115
70E54732A5AAF38BDE88DEAB608FF302B4B3C1C2F7807FEAA1E860D426256168
3325AC2F30891DF7D24ED2B44018C9EB0B1AFD560ECC7FC4177BA646A8C4DBAF
B05714C26BCDFE2A91C91AD95A28858F39CF27C45923F49E1B832A654E8F6F60
9232C728129D8B1123D0770AF8D52FA3FAF09FD367927E16F3C221D070D3799C
5063FB5F7488AB463FEA43F72BD370A1E77FB15F34161BE7678E32615CE5C9A3
7FA9BFC5051DA96FBA9B557C6B569D71D0CE45B0A57DCEA9747733BD3C0DF711
84DFFDC6DA5866C1D47F5A594122C6A164A4716C5346BB7AC260ED0E596CD2FF
09E7A787826AB3943A84475B88F687BA24426B162C392D23E2A795C7D9B5413A
E6E0F6D34B98E9F793E6CBFA924ADEE92FCEA136F517DB61E1D3039E5882C5CC
B556EAF74D9DF9554F288B1C652C7CC599A6017EF1CD624C0B89FE857A8AD5CE
C845630990713D4646CB913A984107090BF348A1DB2F2E034EC0DECEE04A5841
B413975C0EDD900A5C87A7B9A59853BE6E2D7570CAC22CA2A35431DF5D240970
812D42C8DFC16E97A77E840F40D5B7BB175FAD081E0C483D7F115BD72126664C
37CAAF5107842A5CBB51A3A168E55446675695018FF1765181852CBD82C7852E
29704EC7B87570AC34C4AC2AB4764D876FCC5400C101F62C24FA3BC408C471AD
74BB39FE3A1FA12B4C4D139AE5B8C5799479C0B57E7D187AABE13B44CBBD6ED3
C3B969DD821155C4D0944361070A5331C55EB5D0DB70D62671A4F9E1744918BB
3B61A85E1B242EA8FCBFA6F4A48BEE3DB953B21EE41BC19C7AD8647A171066F3
D6165E1CB47A15E459D056EC205D49ABDC238C2E292602DBFF74A8EDC509992B
B307C4D4DF2EA2A03654F2008690CBDC3D26280D209B6BE781B72384681013A2
AB8EE4213F1E8610F50CFD976D32595F2FCEE08AB4E79D8D12DD71D396938935
C71043985FB09548A709B506CFA96436A09A66A92692ECB856495A15A6038B8C
773DDDA7920DA5ED34C0BE8A4E5EA9BC353F19CFBD3C3240F597DA5811CD456E
29A8857B003046F55FA1585EE041F16B11B4CF86E5FECE76A8B51894935637F6
D5E464B48FB86CA997ECDC75C8394C05AC0A20E4A188708BEA956455F62EE57D
13B6485B9681996042961ABCE4D243A13CD55176366B5B28AA6020A5A7EFF533
A5AB1FDA2C912562546B9FFC2BFF1919CF145F64BBB144133AC8D20F54443171
E7B7A8B3DC819752AC5D41C6D9B2304618B8C8CF1A8F2E2F40DF97D528ADB443
38BEA583BD44352E372ACD1E8695E2A57AC09E4B467B1E17471E3FABCF3A8113
C5F886C678E4A516807B516444DF2D522579A9764FFEE5AC4027C78878037995
12DD91FBF55788BCF4EC050BAE29B2E06F823FC1AE539FBBD85CE0BB0526EA42
D1A4B1A09526F8CE866E938837C44C7B890E205115D37978C4E030DBAA42C65D
973F3A3854501FC7298E728D3BD1A73515B0D563B84E34BE6B0C5BA9E28FF2CD
EAA9239260240FA2ABB6A93EA230341F8034395A1BA2783E6ABABAEC94F1DA51
BEB0E55396D3BB6720EBEFEFCF0D58128BE8C4BF793DC3D2208A9CED28E3E809
C75CC56CD2E1A786CE64B1406D84F0A6F59B670986C6A81009D3C81A08BFF30B
E4E8EF03028F94B76258726C1DE834C2C856D41D6180AF94C6F9A6360E095962
26F333BDA5C8859118DCE36A4C67AD7E76C12BBE74650C9EB41866C89A2CB152
86EF3157ED7204D74CAF8DEDBEEF3F6183BE793D708ABEF7DAE9BE74DE555DE8
F702531EA5A60DEDB5CEA82A097E12DE4F6AF5D872AAAA47A65D31AE6EB591F4
C6A8A57CBBBAB71D621945DFB7761C0FAA3D0F18345A30EEA69B5DFA2D0047C3
BAE02428ACA10B8CE89B9300E01DB6497645E2F0B7EDD9FD077EA816B3F8D818
EA9EFC386C212EB3C71B994C85EF0D438E1C1546091505CD3BFB0ADF7B0F237B
89F9EE021B222563A71F74DC0F1DFDDB8F56FACD9D11622AF85465D068DE28F3
94F6FDCB6E34435AC61CF10366E58F354BC0D9EDF336E6CB28A6201C90B42C14
FD8551484E8BA0FD9D6BD1AB63701A9EA4AE2D0CC97C731055F0B90046C9C4A8
CFFB4344EC41CDFDADC4442B36968C8DE9FABDE5E7421650478E4DDD4AE91B4C
2E939FECD7AAAABA7D74B2CC4C702BA0CCB76532F1857244907ACB066175EBDF
BC8C2EB17A2A6F7BDCECDD2EF976D26E2ECBFA9CCEBBD7947B768CD17E01854C
1AE77260976FFB7474D8C7EDC5B4D147C921AE491037C19D1086CA4417FD2D27
A35ACEBB88BCB9BD04A2F190859F3DE0E6AA0DE10090EB9E8F78F7775EEAF17A
4FA9AED563DF4746ACD37D7AD7E5A98A1B9980375204DA3A1519D2A0B4ED540E
4B094EF37BC3300C0D53946EF86773A26568B3413C3847ED2A33307985E6C2FB
8ED178066402F999D739FF0485251E276657BC10237BD4CDCBC948477135AC42
6200E4F4B63BA1FD9E77C6607F014A1D257E068E26B803BC80844C9EF91A6AFF
B8A2CDEBD9E34C683CB22A4A4E517F6503AD5890D62D7EBF0F21096E0E0B5A1F
4B31AE214407C84CC1A60F97A46F4AFD6E9EFC799DDB539E92A85C17F514B2F5
6EDF8E5E176D10E70FB731D025A084AED68FB98A625407A01A2ABC54AAECAF8F
77EF4A391F5D1D68158585CB5F0B3AF078BB583C58A983EF09982DE1DC5A7B3A
390D49F67156972835AE1547CF3FCB3A72930C7BCD58E4B5A0C1ACE945F99058
5122CA3435CBA7CFEBF5854429F683EFDCBD00F3FC22BFD0750F9C0921D281C9
0ABFD7E71A80528A8DCC2A8CE8340758AEDCC24EA63876BB37A6A277F4E49C7E
4F4D9FF276AF91F50D9A6BA8EB77CD8D64AC7F49AD3F61B4078D6097DDE03D54
FAFD62883ECCBABAB7C0AB88D400A11A5C28E80A68492C4AF254BA0B055900D3
21DCF1002594A00712B132FA7291B28FB3DC5990D15A6A31B06D51B447E7F215
BF69090B768849BDDDF2E772175273E6AD3DF7B7BA6C646841C22B1FEFDE6DF0
12974241B33B67AA67FD59F63ADE889DF544AF04DB55353F893CD9D9135A00E5
28090977B35B142C0FFB9E1B52AAF6EB858411DB81442BABB4C4E94B5A824A34
EECEADC17DE809C66A71C436D10D890EF1E451CC5742590ED2A819AB14396C68
29C8DEA971A1DBDDCE3966122A67E0E86EF8B6EFE48E0BA707C11E9848170A39
E20D60F86764C4011A43B7F7C536C45CC4380DBB9E5CF8DBBEBC0CEBBD192FD5
256807612EE76BE91554C136EC3EDACD309FA20055557EA8DF883C90AB6A578D
87B56D7804B46E66E2111FF1EBC256A534C848DC1A6586DEB6D302F8913C6BB6
0B5C7D7FA087A308619900EC86DF7EA7033F311C5D1460D73729A04309D9A35D
E57048EE078CEB39D07C1BF9536A25EE9A60B370DFB93DBA1A31D46DAE56DA99
BAAA556E0B313B90AAEB44A4B6512BD1D87B6D2600CD2A72104CF808F5D69EA3
6153253E94441FD4CE17497C213BF985439C3C30F66E3B405508D6FB79796E55
304EC018D8E11AFBFE4982F679177325A6A7AF94207CB79E980C2A6B24F8EB5C
C90E37FB17B18572557BE9E9CAB7F5A3959D5419DD980483A0B4477ACB637213
6AAB81E636CD8B8E0F5AB67D6892DB1F1FC24B32B0207BF2EE5D6FE3E5B3ED19
252541F4A2DF04DBF511A6C904484B554530D8E321AA77AD96270F0C2049F9BA
3F6A18BDB4EAE7D5B7374E36996C3DF3600AE71A08BD11B4D2661E017884DF60
593D422490BFD64A3CDA16F54CF8BA929C597FF93AD1968E1A188F5D1DBB7BB3
DF725DA36324A1E38F364EA6518C3C77EE962B78D053752C8CB082DE5CC1FC54
EDCB110D97ABBE2E2A5E2078396A1C613D7BB9C514A2B70DC0908B6024645862
15BDB62223DB0779E737AF4BB6A580E4A196C0A0C76BC51B7434ACE4CCBEBCD2
06CA7C65C7090E0B50C4AAAA6BF374F459C19262DCA9CEB146DC8ED4A28147C5
84351B43DB40E61A0981301CEA8573FC804919E0ECEA6523AF4FC88F41F7DD7A
73D7661387BD1EB0DC0F1EFA8BB161C5C4C7D441C23B766D1FDCF396E5402A17
9F2CF42A6928536DD4FA06D78EA6C53ACA70E6096CE2C233A0C777A8F535FB5E
A6500F800661DFFFB9B96D2AB7F85604DF198B8EFC588C6A985902C2DF16622A
26875EC2DB21C8F8940995632F0D887AC6A649783EF4E3C0BBD1A49AD6470D73
0DBAD665A3246B31AE87C0C4AB4BC1164FBF23EB2C418578FA6B621CF733A44F
8FD226BFC865D7EDA869A4B80F21D85BD349EA26248081FF6E74A34356FB63F3
445F4839496F01F7775296858047E9E4998225E2BBB09AB708BD9A18C85C1D27
AF04AD9C5FF9E675CCF64208D863BFC858F5B32D4DF8A598E79A0A1E17B7FC54
4C630E1D71A772B8317F50F378013DF0AE2BFEDD44B74489E79EE139C5C9617E
C85B0149324F555024901DB1E246059AB1B9200E56880907BA01770D526B12B3
559D2E1B03230C999615F33A309A9FD26ECC6F8D27D1B62EF4BCFB0B622D4899
A62ABA6EF344788245856108F8E19EF7627DFE0105C040A7713BEB9BAAA38108
E34D329311AC18D6BC28D792D7D78656FDF6432F03F9C5FD81C0CEE235067661
C2716FC800318CF9BED9E09AECA851AA1A7A7519E343C916A7FB04507B26383C
56D93280E20D97F5FABF53D40C0306254F751D17CDCA5EC9CD3B6C400B31BE97
472148DAB4601462D5E4C2CF8ECBB01CD2ED4CDCC5145DD07180A8849721E4E2
619E636ABE466E454D0283F75C864A8B586B0A786E851DF1C389A14075077D03
5218E3E8F4D59562D1FF2E4D93870B6C5212F5E9471C01E76C302D3DF5F542D6
2540110824141608B1CA631082E35B9E49FBF1047A53B5B5960B48CA46571A5E
2DC21AA0E2D2042AFB7CB88F3F437F2ED2CDA84CEC9D581AC2E477F3CC18CC0D
54BCA110E3A914752E4C964575599502DB1C5A143EE32C195510C0C52FF2FDD6
59973F189B603BA2CC39601C7E381B561B1DF2069AA789341B40CA11EE22E662
A6C6F745E00712A67033E37211A4C1AB7F1FAC587DD2E2DD8C6DA0201D628A92
169B8B91A83E9FCCEA8ACEF2B266D8F2774BF3D50E1264996510CCAE4BDC5D39
36B35F448E3348A349847AB61C7C76E79EBD3B61420F5EE1EE6149F64F24067B
60B3F239FA7504659BDFE1E9414264C06A4FBF7A11E8BE6B75267A14F8D23CA5
874C9AA04FC835B9F65BD036308E1D791F330A89AEA8A5936F0F2DE6050AC5A6
A082DAA0AE14CB7BAB6CC4042F7B0AA377FCCC3ADFF44DEF3003F009C27447C7
187C3E64E263E96A16488D5C890150170A486455EFCEBDCDD341E13F86D2587D
EE71F4091A7141BE10DFF3EED771F4F675CF35B882B3DBA9A73A3E6DF53A0A77
69C6EC2F498E51EE750DE4C07EB4CDE5F6B5DD2E74628B130CB286543AB123A3
EB65D1FA082C629F88A4CC4AEF40BF7382F98DA25996E841F82B3F0DE57E9CE0
4DB5A7367877F8B7131209B25DD9786D5D9B4BFF36301C9D89D9E7E8F0FA0FFF
1F4590845F500211A1BCEAC3B263FDDD597C3057CF8F4B140BE36352F8DC9AF4
B0A71E7180609CE5FA770A883D5D0AD262525AC8C8FB47ED25A9BD93D2038D94
BB4C7B503823FFECB23D23F12093EF21DAC4222BAE38A26D14125E1E3031F89A
57F1BF122E057CCFF5CB6F35687A7C9339EA0C7463D3E933032C9D84DB94F4DA
751DBA42440D81C64C56F5990DF03C148C57A35DB63BC83E43F6E03946F11602
8E3B7E1B6E779CB2303F176142CAF005F779CA2C60C50747B072A2F7E6D9C645
D2E90ADF0CBEBF6566D47CC0AFC93110751B5C78C07118E634255A40C3AC12B8
4FAF35CD8A0C468D70839681B34C5C5B3A15A50B543CA6DF81FB4F086FEFF483
A191FE36C37BBD245CB852C96000E63C900F2A6A93878A6EFD56BB4FA856D5DB
9A0A1E27240F3994E0396A0BE7D937B914D515E9EE4923397E773C2829755A28
9CF9B28579B7399A807B6B2A8F1A94A91A88260FC992D57BC7AB57D933AC2500
6B8A7856FD42D4E68AF23ED7704564C832F41C5C2786C8E4A4C90749E7D33F88
C39096D27D3D6DC02F0DE96C8BFDCF05DF072A2494D737455407645AC622B314
CC8305DF0012C9388C4C99BCEA1DF277E52D0399EB6F2622FD2F44F728183243
DFC078C03720C14760B602535D1A8451C0A0E9B522317FB66574C90451FC90F4
85F6030A44AC6747ACD6C9576C3412987F9D1C329152716B5C96C78B5A0F8AA4
39F193E4F2896C5F6FE54816FA2B7AC3B96E65553012A6C59B0BE0E109A83867
B3003DF18120152D010ADDC384943175FAE2025B4873C9C949A2D3F4AAA27E8D
E2F7F84387F87A069B3B0B53EFF868AF7A9DD001D3BEF8D09021E4A0527BAF61
F41F5A15BFEA18870B45D94C61165CAD7E633E1678CF993A73530B77F5FA31B0
9CE36534FB839414FC65F45844AAC2707161B04445EA60BCB4B0248EBFC69CE6
A975273D16EBC60EDA6677C4AA8C1D35EC66BEAFBEA0E6F252F81EA85F2D855F
2F475C5E9BB4C6F79EB002204BA28BBA290BD0217ED23456AC3D4C879D359807
8905F26FB3BD65221227AE1BC097F8ADBBED81784A16F8F33E50BB66F44593DF
8E66EEBCCF3AB60147B9C6F202369C03C964E1320A37FF037C381AD5F35AC6DD
CE7423CF7E4676E3934349AF127325E88E9E867F335A4A9364E1AB369BD6EBFA
968FE2E10C45F01232B8AC9EDAECB94127DC50A40E90BF3094539F02AC027C22
2EA842CD160A21AB9B0BAFFAC45273A8134B9A847FED1654079420802B29F9A8
95D30E264A06E99590AB929A12C1C5D7D6FA7D68595B21D407E149F974168940
6DE2CD62145FD935A427551EDAD1E3B4EC471D3DFD9D370F8673D519C1C81459
7F03CA78B376643622CEA2E60DC211257D4FB69034EB7994DA29AE2C78AEF301
8B398D59A49F27EA5A327BDDAE82A0B4477ACB6372136AAB81E636CD8B8CAB32
D46C2DAF80A0BAECB328AA2DCE45A0F5A94CD4E68AF23ED7704564C832F41C5C
2787FD131140AB19923A496E1D5AE0F672BEC79A4D81B7B0223347D07A09C5FE
46C75BA73E07BE7C5F83E9A415BDB772ECBFDDA721786FD54E1BAFB6680255D2
9719C192CC65DA0071AF55F1EACE21073B0644E4901DD854D2709CF02450B9C5
5684E5F81CFA25492A4509171C189AEC22A5C294744608561DBE5BB722452184
D9FD3D71BD64E595208DDCF7A33D4CD5096A6847C1D9574A64E12A5C240E51A9
730FB9EE889B579AD0005284B4EADB943CB326F29BD6FAD1DAA79807511D4E1F
41BCB2C690161E8328FF1132AB4A0D59696FFC9C060CC2C776A85F15622A11E5
561B3B27A8DAB963F5213145607C7DB5A1BD9DB81BC806F4206253C2DF59EDFF
09B609326206E0562B55EEE6F50AB91D3FC7AE9AD9EDF128A76236561EA185C5
1F2EC8E19650607FF03F1320C0B73A3C9B5FBE578705DCD89054ABCDF5A64BCF
82C547CE1DA1432F9196D299E09079CEF395DC2A70940F1E44D3710530924A3A
76AB4A53AA62D8B63AE7A94A2552AD23625E9F0C7268CEF3416A0C6BB8341B2A
A3D5A9AF0B2F8C724398898949CE605EA9CFE98CB28540C286265666F059FCAC
82523599389F426E4EBACF6F74D03028944CE7242BD239A614A1916ACD13ED7A
E479D21C7E75728E3ADE56BE16435FAD2CA5EC36B3D1442CD487928CB9D8B0F3
F63E76BE9897B98269378917C9D6D6FB197062E3F50166F444E6DADE0D781CDF
1DFD3BC2414EF92EC1E606BDD2614B30E4561B10DFF20AA1870924A2AA4908AD
8F7A6B4DC594CDE8A8696C5AC192C07296B58029BF319E187EDFEB80FB8F7314
6ECC7DD49E05FD209C78FB2A7A63CF259036DC47CFBB7219D749402182E7810F
4EF1A383E2144EFAC52BACF4C1547E4E819AB673C87D621D790CD14AEDABF56F
924E1F81C8DB3FA8EFE68CDFF3C798609482147DB6F8688CBB543F9AB1993853
4893514F17F2EDA0E5BE179E3D0D322B0A8964FC6F72B423E662106CAECCB1C9
2558B5D2CC027F83FE7EFE7CB4B23D2BC10460420EA85E80F313D378F601E46A
79ADAB947877D447B1FB579448DBFD3331AACC94E509BE4965B14F32FA7114B6
A0E9F69477C819E96F0D150B6AC722705899FD8BB1A26E4C2155ECD7D850D8A6
CECE4D88B3B62ADDDCA6FD4D8F48516B1397AA1DC47DC49093792E921A2E7DA8
4D656257BFA398CAF528D72A21FC98EB019E9FA0A7036B2D7CBB55CA02A223AC
A91037AACF59D733F2C3C344015E2266FC409883766D9C1BDD8E68C89EE8712C
9C187AE05D920661482015FAF8928B814DF5223B94F37849401E39C43B31C2DB
4B6C5724EA082C8B2FB95C1A492AC37112816722127029A1E4BC9450FBF60485
ADFB51E5E31D3B8A985CF7B2A8AD12A84CB7346CFFACB29AC7A63035395B7731
4C4B1BD84B1E8F5F267E84DBC86356F050741C65D089A65A1F1825E2CEA774CA
60D8F5B148D3B8CC4C8A553D79290A66AE5D870FEC68D448294DFC2660B69DA0
5AD3347EFE16596C4643C640531F5E5B8F702D27757402E833DDB27208A5B457
AAF17C0B903C55D1075B699BE57B5C8269D4E9849B0301E2FECF6C0E452402B1
8F0EDCBF3EC0756C9F6C608B6E3EE3E0AB9B04CA9AAC012C06718F3D9F12641F
B54E16051362EC94823101E31B9DA75BB9DEAD68F334FCA1E1704B427217AD08
584C65DAC967538B29D9FCF4F9EDFF61EE9864621BB2A2986E3B49530F81871B
DBE2AB0CC375A64D20D75CDD4C7C453E338DE3A170A87E7A66931C6745D5750F
9C0921D281C90ABFD7E71A8052882BFDD86FE3FC469C6F0B3659F056B37F07C2
8295D01D631C2B635D6C0389469227839BE0009F2D7818A95D058ABC884EE745
F76035DF005BB661CA54E95EB4454981FD0F0738902EFA9637A854D3848E4BA2
96E27D7A6620293C2176E531262CC407E38C65F20CF84875845A9A764301DCC4
ECB8228A7D9FC213A1475ED1263D0CD5F49C670D1747A32E8C0A77E7F8C9E5C2
54438EE4F8293071E08541CA185C290A11FED259D5B41005B2C9633E926B7423
6F5CA01228AD29196B9CA4D48F1BD5BB3282B5AEA2F93607F8CA64BA5E639035
B996D439E1AD086DB81B6A6F803474FA564202DE1BE47B17139903D0CB3894B6
6CAFE23E790522806BA1BACFED6C88500EBF8AE6FD21001BAE441DF34A36378A
CE7D3CD045170F95D6191F3282F4F4C05D867211BDB1F54064CF54C8E0A982C0
11279ABA45E3C444DDFED494334254229D482DC728ECD61D0995CE6839ADD496
34114830314E56B1A1BE99B1B9853A8B013892BC8AF788A7D1AC5E70666B5428
33087318B006BB5B4D70C38DB8604E823396A683BF9E6D8821168750D2A8E127
EB160E02EFFDB21824068D3728C339D6112B66F6B2F3A45CD2EE2EC7B2351213
787DAD28FB46F721ADFF237E9135E1DA38F667FF675642AEDFD65B657E7523CF
AD34F1246832B4D71A1BC7C2AF7EFEF9B9024A18F111A063448A07DBFE0080A6
A493180E0EE368C91097BBCE1DA1C76BEF5046F1566F59537C2C5AFBBBBA9BE6
E31C57D9DED0B9584FEBB95AAA5EB661C864C82C9CAC10F2D31DFE532DD06017
39845B78E019F532833D83FCB4EEB7D1FA97F6573D9B1D76BD92C2623460ABA4
F044E9FF3F5E364D960F714FC31B8B27115C45BA356AACD5499DFB0A80019A93
A7A1672BE8A2FEAB4E905F3B3447EF6AE66F30A2BE56CED04C632C968C9361BE
5E42DC9C42A73A4CBB4E15C5764B4E7D65B5F0DDF3EFAB0519A3EECB992987D4
C6DEE8147842D767AA1529E46929CE404D1201CFAA4CEC65535AB32B2D433950
9E8F49B7DCD1877BB400B60B0E04D9A10A00ED2A954C28941F7D629E27D5F963
675060C30424A6C41EB83D5F30233CED47B7985BD06121C32F1571D29E54DAB4
52A9C57BE0BDC04AC534D7D0B6EFC932A876B9275789BA3F4C94669F3C3040C6
A91E3B75A4F0F369AB0930CA1A93AB69041AD6AE85F40FA9B3657A480D2BA3C7
83AA8F645A3144F9CC431C92B981F24E2E958EF58893637397AE47CD1B4DA1C1
EF3F306C531625A79842E857D6EFD83912304E83FFFFF453023387051DB7B81C
359B79F8E4FA41EBBB826EAF87A38E2E8ABE837C908AC945BEFD09A4732DF886
E00782E7830615C5F4AA9FC477D3BEF9B2354FF11A89572B4AA3640CBA10865E
653F350DA97CDE2404862AE0544B2B9D6F1527E038EBC32C05765A002C0AAC3A
3395FE14763172341ADB068C4C46F9FB7973EED9411B6C3F45DC626F59A798CF
B81893B78F164A8EE60898F7F14C43604C169FD0D6EE93070274CAD6433D011F
42872DE556B88C1406C947137BC3D81241D06BA47281EA9E376C388C5E15FA48
EB5563E3C3965077F9965CC9AA4B1FE803578435D6AE07AA131BAD5E6B7AD723
E53749B8619DC7F0B3198759CB0CABCD4F54DA71DA94CA2292BFF8B1CC69BDDC
B6EECDEE5714245B8B59D5A78AAE1EAA766B3359BA66778CC8581D62B7295879
303AFE5D5038FEFBCFE5B79DD7B12CEC8A1DDACCD641BBBD30CD01C9A9D0BDED
CE38EDAF0B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMSans10-Regular
%!PS-AdobeFont-1.0: LMSans10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Regular known{/LMSans10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Regular)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMSans10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-420 -309 1431 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFBD8A43517ED5F05168EBF9D3AFE
25EC2992AF87F286EB5CBCB7AB5454926B000DE86BC7DC7722EA9CC5AF351D71
F88C22A045179501515ECAEDA3F7CF9A23FF4ED29532BCC5A2D9C4566653DC0B
F99B58B303B412848BFDFCDC0BB4CB9FDF30F98236F5A2863FD3E28016CB2182
2E10F5EC6419BBDF2A9031E1EA217B147A06BABF1F87C9585634C5265AD31FFB
EB313C8110270894F41E54896FAE4A5E1A9B04BB8EE53CB5F143D8A3B77AC1B9
96AEFAEB5EA99D855A53026FDEE6A856D3616D7EA42379EC96B931867D9E55CE
3ECD8877C379F6C2FB63E92F146942350BF980AF3D7DE17DC4C2E4B304AFEFB6
F4A34CB06164596B7DF119147C59AA2A1A8D448EB219B2682388F94393CF4D74
532926ED5F2B9D281EF3324258F963D1A460D08DBF08127EE66D40C3C74B98AA
22B9AD6BB84113F84B085EFD4982BFBC507D1215DF109AC39E0B12230FD6DF02
C4B69CAB0B3375C9924071A89A799AFAAC3EE2010B8FC82E42BCBDF021C9DF72
D2D02FBD2CD3E161AF409AFC0828954F2BF56A15E1ABC0815ADB9C244B0AED7F
4B9A54CFA2A286FB4D9DE215B8B5879444B3E683FCAA95D0F1520A716BF2325E
E76716BB5C5DB5600A7CAD11F019AD5B3965B61494D228A3473256E4B8B22A6E
08F055AA199E8E9FB2B6F04B01BC31664D95FE7CAE16648E0344934054BCB06E
44A33F278B8A2215F77018BE752B8FBD6518461CCFAF61F07032398367B284D0
B0AAEF9509F632534C7084BEA8B52EFAF676C38D4A720D4078C0B3B525B7178D
9F85BD44B13272DA283BEA7AC239A3E1A0FEAFD3E9F7AEC9CE3296A054919E74
51FDCDA8344A2E134E285D682648203E81A5343EB6EB96FB42F1034835DD0440
3968C3E86CB7B20B53F9CF8FCB188D635FE58370AEB11453FE69A0DB8341039F
EA654B8FD7323E5536E130FA10100643C234CBDFB8E1CAF1E0C1D9073C3299A0
24F2E4D71EA82005EA002AB6A047F536C9A6F1A73B7C1F1434E29016204C9D6F
DC7AF044AE87EA84552B064222C277E1AC513F8E680C0E0571BC88D99DA041CA
779631639CC03525A001FB54EDD95140AA2EF9FE7CF81EE3DAC83CF76657860C
CA854382AA5CA7D704C65455EFFD4BEA1607F0B0B5FEE06533568B420C9C24E4
1C6E007AC9E398EB33A7BD76C46836B33CCA7986436F26BDDD67D0110B833141
0F1DCF9E65E7338B42FFA4E4C9E8D54121CA17B97876FB07597AFB867B9019A5
BDFB1FA225CEDE409A83E8E129216035F189C787C5709112938ACF9BB2E01187
FC035CEA0FD5C9800D3BD58F5D44F0B16C88AFA1A33F9A3D8C9DE5D7C3AF7709
8424004666BA8435FE10EC622EBE16E4EFCB517109806DD2CB6704EBB0D4389D
1217080B7634462119C3AF991B3613B485BA2B63E25767C311C66FFC607364D5
50859170B4CA391D713F3A00A36877744CF0B1B98E14B1CCE43D91B137EE9096
80E472B6ECBAE2DC26FF4CFFB4C707B8CCEF0694F57A327C4159A74C206BE178
320D01B4DF145D6DC515C88CCA30DCA19A3E01CE3A2143E7A9A40EAFFD714720
506AD33F9F31ACD035E1B6728821A9FD8BCD0CFF5C14B050E2E06CE9466B313B
6255925F7C908937E3BF94DB319EC3E9AACB6E1659234A264036C6017B46AF95
9F7DA2614BB9A9DD0AF18A2C283506A62524C3113CEF99A5748F7DDAE5837FF6
A42C2175860588C97C4BACA0291DDEAD4B2174B954D41CE677D750AD3D02A96C
B61716B044E5EB76A99991D3F944224C91447AF4444E46FF1BFE1921F975BFF1
B3CB9810D0BB68B865F3E4484A3FAD801367224D757CECF5575E8E2B4912569B
B09A57D05D18CEFAD21D9DF63CFEF1592F9F825D09A330FC50AA0F77087F77C4
04116B9C1CA2B72E89520808CB992AD475499C0B04E4B8A795EDE2BED30152A8
D8067BAA339BD77415166F485822EAE643610A560768B3A8764F0BBAC315F8DC
9508220044643405C48F53A26455FE61FC14C74744F93ADF8FE08B4C8BDE976D
18C8F669EFA8C4861DD61A51A3590C50FFEF722E382CDD254C83900C3A2E265A
C2F21881EE4A59FF5C5FA95025C49B067A1995617A900BAAC5DEBB31C678B49D
88365E7B7AD88F3A7F53DB8790493D8EC144A3C3B1586B501DCB68166CD72763
9D26DD574C550AA3864CAD2FE404C29DBE004C358FE71DD4239B8B1730244930
052FCEED3F8ADAD0C42A26913DBA294CD25E3BBB2FA53D9822AE6FD0A1E1A553
A05978A4FBFF7D591254A5E3A2668D8BA68094FA7E0D033E338E149518B5493D
7E3502396892C857A51A8D59DE97F8A01E890DA5008479330F60DF7A27D153F5
B5FAECE0ECB558341F4CF2448C5F0A4A7B42E35A5E61A64238D399C475B37ADB
A958EBE54A1BC5E7269F5317D031A400EE8C4AD035FFAA1293BED1C39420BFA3
EDA081AA379231DB5D3C332F13E7B5EF3EB9270EDD6CAAB47986A3DAF03E4052
9E184DE0449E6AAE79500C42B4EFE4936D0D000FB33CBDC7D6BF5C653FFC1EFE
F8C0967AD886D051CE75BE0514475C9649C7ABC6136BCB308E19DEA3902F3C33
E925B32A178A1E5DB965018AAB7C7884EB7CB4542726470D7D7F201AD2A48693
7EC5E0331D522494F1240EA4FD6A4DDDFF737BC32456C980EBB4EA8B81AC1DDE
250B9B5A29475E6D8C7941A079B1FD89BA0DF0E238768B7F6B8C3381BF4903A7
35B7746BB6812FE53D59C71809F8E21EF907890BBB82CDFABCC6A17BDACB6F1D
5D682ACA36360AC99B9205E4D80CF55870847A5ABFD5A156E3EF0EEA375E6690
5D49892B70588D731002DBBDD088087D333F150BF2C71F0D8AE19B6AE106EEBD
D461895B0CE67EE0F3250A0626C15B61C06843D71FD442CC584FD6EA914F5FCF
A9A23037BD3211ACA956BDAF4392A5C844DF9DFD50B9BEA18D947C7D0E613248
19BD29B657D61E2BA950218A3AAEA34716A2C2593CE3874702EE51D15B14730C
7BE5794100238826ADF5E7524C729305DA2D0F38669F0C1927595DD844E350E3
CD021EF8E51C69EEE25F89C79593177F744ABB7442BD6C77F2EDE3182A4848B7
B53EEEE5439E0B62800559760771873D48F813C093D52026755BB562B94B9356
A1042FA5153ED54458934E1CA2A191EF4FA1566B96E221864A45A24ADAEC63F6
1C9FD1842CC2A70EF3B88CD94B16BDF5D888D6829EB00947CC1ECF0F4808BBC4
AEA4881748C0A2F1F9A03CCD801E26003B8B5A81CF08A783DA026A6192DE5B0C
8E25D07E332D8273DED975BD53607ED94253CB78FFAD6ED25EF56106EE7EFA0B
DED029D2273032E1C8A5CD079FCFC670FED1174757C91B9211C59FA14CAB520B
2E9471AFB86E4FDDC0F31F92595FE56D439417455C5DF20EA422D3C9B3F98541
C5E6704C90D2DEB61A59B82CA780F2F719812D43D7807770C927143018447A70
FC6337B1FF0A69D770C6CA0EB548FA1E4795007691AC11CB059C9AACFA4530B0
25B525FEB521E06B4A2EDE1786D25B71C47AB642B3AAF9765FF790FF2EC2C248
D9DAA35F9880387B45785C2A6FED25180F4035419217C8EAAAC52FF900289981
316BC60E07B9A6F340C4DC9989DBCD244F0C11087A077D2103E494406B1DC32E
178F33BA78DF24F7346872E84795059D0A12F0E9718201CB8E9394CB45F6F5C0
97D36281FFC726E6FC2240493803D47C96A2745580EDC957AC4291730A884419
365218791DA09A09C7AB12BE2E64A6DA55B6DEB70254B5D5B1B6C459CD74B754
A810AC81E5336F5620BA70E63BB928977EEAD4E7CE6AF5644250CAB98F75ABB5
325CD9EDFD49E8901092FF6B232F3CE2B32A71AB178F9DE92107B5ED05FB9B05
CEFDE688FEAD1A57EF87EAF7D39C885971ADCC853799433B9CCD5CE54D90684A
1465FEDF4891ECFCF5CD3D6FCC75A63F185158981A89D3EA8E8A31F4257A2994
12A33AF840C04BEBCA5A91FDDCAC2042AD0EA58773ED0DE9FC13F060D97C462D
2C10D3674F72090CC15AAD971B63A48A812A634C4E7192D8385D9396135C859A
0A499FB00A0FCBEC9BBA82740C4BDC7CE426F4239D4551FC9A8CC491D84775A0
3BD1F7B9955547F2B0BBA26006FD41723875079EFB568ABD139F70C1EA886961
1D9D4D592F5D7F47FD9AD944D046BEFEF429B0A153D676F5D5AF030C6F47A2F2
1CD6B7480D63381B1E2022957AC237C42D5EC23264C8E7977C4C06D2A398200D
E19882B5A30510C98135AC83ACF355B3085E56A4087ED0849BE7D62597D6C517
035EBE97F26B0B58973EA9B5E0D111D9EAC972D8BBCBCAE0D1C27B5342D62B68
098A7C22BD843E8CE42FF115B3C55C7FBDB7F09EB38F7C8CA86C9C89D9B92DA8
603888E74770C07DF34EAFE36D3104DADE5D30F21172286705F0751F9A6B4962
EC51C9B22D9B72E83ABFF5773E046A6F68F5F70F441E5AD1D487917247805FBD
519CF003A195663FFB3A1235FEC42224E08E3030C5772F5A2DEAD0690379DD55
78A156314BC78AA750E91BAFAC851A0FA12A092840A740F3C75A30C1B241A0DF
A7D4F61EDC0DAE9A91044DD214031FE8339581A9798BC43F16E0DC406C8C00B4
76F321DFBDC8D8B289265FD8D01FF9793F7BED77FC223B3E7945603D6015EF45
983A3E02A4895CEE544EA7E773049D63C65BD60F8EA4F783BAA3BC0EFD3C1E58
07203C5389F960C2262A263D11F3C1C43E39C03711927D4E8BCF6DC82DF9608B
80D8E86E8DD6815B9DC68B52DF7F950CE1BDB15548CAD879752198F014E3EDCE
10A4E1CEE9AED9F9539CBC513F3E0F7A4AB111F6C88EE84941135314135CD8FF
A407D97F4E938B943E368C429CB0DD0279D0FC834B3DA7B3B8C176ABD52446A3
AE08A9F210E7F1AB6D353F53B91B12F8AB7B8603AF9637AF4730B348FFE40887
C4D1357C69AFE24A19C63B4D7ACC5DE6C22DF58627399F63ECFF4FE661FD5B53
BBE1F3DE2BD2DFA545A711B2BF58BAB1D382CEC2720EB86540D9F40D12C0D6DD
D6E89A3BA6468B6322EF1EDC173D86B13411F870A4523AE8E16F422AB07D8800
C1D8C46E1FDA02B22AF2A316937A37662E5A9F62E131E8C0782AB0A08A26B002
80FE57F6CB0CB72BC26EF0ECDD2EE3DB75AB4AADB1E2882A00FB05DEE2708485
4A1EB631945932835E34F9F3F4AEEF2B4BCDC6BDFBF55788BCF4EF9A088DA065
84BE2E6A1DFAC98532A65305D47C72308FD9B4DAC6C83A858307703A6F79AC6E
D05FAAC5784C43F4D9FC648CD35B1E03827411BA7AD177E43BD16807DBBA328D
5583D69A74C51A611A4A52206CECC87590037930580FCF14B26666E8F75B6BC6
389E7A85FDEBC0D30BD2C4527982F9CF0D4F945873774ECC50AB47A61072C96C
25680EB3A373793F0656C0B449E94C749BD813E192128E86C15426E4FA49EB96
22E45801FF0A29945D6D560C41C85483A47C5E99A7BD7243045EF3BC63F882AE
D8F217A1979163F3A316640E382B501A6BE18C334DEE79454906BA1E1ADEDDC9
836C789139796AD76F219F2CE9D6D245F8A3D527418B5A668DF06463201B00F8
33E6557E9CB482A3C065CE71C64A50CEB925808E57CB9668D701AB431A9D769C
699B9CDEFE939E955AC00C6D0CDE363CAD7E3D454A365D1D4026A3816DFCC157
2CDAA62B2F1ABC1D6A10EAC63EA4B4E55BAA92BE152FE8233BBC381CE57F7DD4
5F7724B451F6CFC8748E8D2AEFB2509732B7AFCC1E30D0DFB9638E9DC9E65F75
8F0FC4FD7904BCA31268AFC408D019ADF2A20C75052F46FDB53266BF1246CB7D
AB82C4B4329E5CFF8AB0F213E9D5CF55D422C52CA9DC4ED432F5107AAC6C8EA2
01789EC66ACE781A6921FA80259F623646D8005ABF69620C1D5FE90A001E6C7C
AA52C5AA0E215357F7DC728D263C9A3578EF055A3C4335369EB96E6A51C18E0B
C4346921EA3A8BE3B682649F7E211E3B6E052E1597B542399476EBCADDBF3B86
D6B657935C81CF7CC61260CF2B227DED699ADDE69F0822E57F0B0E783C7A5642
6E4FA821BFD8644501E923A1100BA9DB9B12A5D759909821BB1FAA64201B5D90
92328641132440D257110AB63FFE113F356E030FFD1FEAB98BE7F180782F4AC8
C68E473CD0F8C7AE272F8CF645E3DBBB2ECA12783242342904893D044DA384E4
836D27E4FA13DD913ABEE28BFA1EE081811FEA1AE3C2AA46C5AB2B69985818B8
7ECCE3A0213E77E529C2C074B1746254B64ABD8DDAD75355524454167D9A461E
CCB66125A02787D2ACFF0F2E068EA70ED2D5CCB9AF9913BBC020A413F1D9996B
3C557F2EF9182692255F7A98CE9B93A645D67F4139894CBCF394C781FFEA191A
D06ABEBE440B9B4666E593F5C403C5A91AE20F1A22BBBC1B1166547B306D7071
6DDE16DCA52D49E43890022B9245B023385A6B9B279815331E5E45AF34161186
E06076068BA5EA2291547BA83DEA6BC301B831BC479C0295E4599BFC78C907C6
CAC7C6ADF1A8ABF2C8E1C883EDCE8BA8A0360B28CF7A3219423E6C5D3289B152
CE19FDB55A11282FEEFFF3E1B5209ECDF1387960FB843E1A31E4F20296F2B460
8AAF2B88A494F850BD820D668E9F913F1AAF8216CBC34C70052311FDA4C818B0
A3812B714D9025814369FE71C393F00071CCF05245C4AE72F3998A9740C6CE8A
5DDBB1D59F7362E42758C78552E5B1B77418EE03F4BBDB2F7C47595220D7561D
55C9E03EBB587B340A358A65ADDBE9EA3B678A3218998113988006CA5FD98D09
AC897D19DF769C219F568B9ED225D9D69B6581864E351CA800EF63517DE6828D
8A7AE0C2040DE5F9ABF2B4CB8517A0088806EF62FB0900929A29FC28C508A732
16BA87955AD8BFAF577C0EB2CCEFDC74ACDD0A592FFB2DF1672342B98C8B6CC9
121E11712C9DB2DD051A85066E4C8A831785480F2DF77E4DF116E24E0B2C3DAC
F2BB4D4F11C5FE4243E40785B878ADE5BED2698E34B2B91899AD22102AE68686
51F5BC83231A84D8BF9F4346EE7C154C34B7DCC33464755B8085A0849F14EB0E
7D209E507D6D8C32671862B4C0008A952BE760F64560F50B146EC0F3B3FFB1F9
D7B7A30BF05BD9039DFAE90751B085BDF6F5AA9A634B5BD8EE8BA4DB9FFD25C5
5A4F377E53B352830FA336B8CDA36B0479F606DA8804A0A299086D15E11748BC
458ECB2A839AD536274984B73FD1A0039F86E8489003F84951DFD4AB443BE797
04632DF95672602E1556207B8E2CF3F3A185865CB602D83CD2DC870E1AA53E37
12C683F56B2C5BB2101E12DE774C78A0BAF5850C2E53334AFBF076D9EBB70EC3
855E96425AA5F10CA1EF4608FE644DA9ECBC730B86A30BF425F90DF8FD6B50F0
0361B2192A4FE613849DD398C044CB32F94B04ACA74A06B39E50628A40C4DCDD
90B738B16CFB4D80F033A123C16C7092BB267750FFF122216DF93857B8215EBC
A560E04852E7DBC79C2DC8561F805C0DA1E124813A7DFFEF8071B9F1BE8FA484
54B62A6A1F98CF4447F29008324081979ECA8231422739C0C58B4ADD86BF5598
27D8F1695477B7BB307553BA7EBA8ABACAEDDDB40782D98F57F16B0103D116CF
BD51821884D526E8D6153AFB55AC665A846823D2E41417CB5659F4A3CFC8C97F
B88BDC93FFB34D445FF8B74EE25981C24E8C36BFA67F70136D820BBAF867A29A
8186E7CF623A14EF467C870B133486840DEBB6211CE96439F8BC222F59724B11
5086B813F0B0E4F0CEA192A34CAEC47A37ADBEC739FD624F60AF923246B30E96
0A439F315C4093F4AA8854274B18E8D770FEB6AEB27F89F410C8CBAA8F91583D
37680193927C45A1034C34F4D728E9E820131692793929CC3D41976FCA3203CD
0D1A78AA64AA9FF80D4AD28DBF9913982E03F37B1DB0A04FA4A80796D144BC18
75A846990DF6F892077F55A5CB694336732534694A184539909D5294C1C486C3
09EE662B209DB93C5466961AB212A8520DB33B3885F22ECCBDBDB5A63297B06E
72C8929D5202D6A34FC2E2297770D868CC596E737A5234E91EA9C52A86F39033
0F7DE8A1575447CCF3BB6A6037A00FF18EEAC5CB33679FB0FD87620B52710073
8DD02FB92820F84DC9A924C0C9084BB1D69B96D07F2D617ED8BE90E81563C7BD
47B2AB11D861A0076446786FC21962B0FFB2B88609E8821E91E7922F4D6DD044
7518D11B4CEF600EB513433961C41FE047206C072EF4701514195A43A81826D8
B89CC5208E8A1C056D80B361F6C2D8C97C2D2A77E09104B5A1BD640969436A19
AAAF7D56AE4FA0CB1089D002BECFF73E36C085CDDB6DE033212209872667423B
22D9891D741A5AA41ED7303D15E633A518E3E329C40BFA2C5B3357E9FB04862E
30C66C2A1F2B54050E3F5C7E6F5C409DD1B2825BF0CDC15AC1C6890F752F07B3
9791DF3AAC55B66BC4269066FD7220DF1315C0679C0906D77AB2144E823532E3
68E2E4A8353EC4D8A786890021982F6C0B92D618A6FF834DFA815E1F3765392D
2DB2F4AB03FD01A26120FC0FF86D3D7B07DD66C717D9F02BA4C1F8B3B06D2048
DFB5691166D59F99616224E706E080926688173C86CFC66ED8664412597C875D
6A18FF85B17C9070C59EE7E4DDF82F3B9D3F19A09784794753076928F9867BDE
889B990E9CF99917A1902F53E42BCE146452D063A460FC1A3847182327965F97
52C64E9D400BB556C2DD51FE2ED010462CC74BFB60D38C2AA5F2CDB2BD662749
FDFF8ACEEDB86605F30BCF8E570B4341C3751A10FE6C3304EF5C3E342C005EB8
5B3EF2E1DDAA2510837ABA7A29AB19A9E6EA9C9864F5210408AAF96AF66F3FCD
94A42895E278C639714F30B69609C9FB9BAE5CF3030EE1A0A11301E671F63C63
2FF2ED52027089972BEB0644E52D859C38A87C0954645CE99CB2DC823134BB06
D2AF45F42DE4DCCF56CAFA473DD7934595BD999C3A31DA2377FC5BF663B8A1C0
00F74B2719B7DD018C9E8B3390BE0645A187A2B4BDD9326D7F4D9C73B08A835F
9753F3363920AE7C7DF5F09BE8D2214231D8149BF18154B2258D551E75C9A002
70D3984449A1F998C318A8FE36D0D5020E18A496263CC947B40BF4ADAD86EF5B
EE825C3F850B6EE405BD38D32A854460A9934BCAC76B5E9D25F7C24968B44D1B
4B2FC1C425EB6158A7A32EC17DCECE34947BFAA3AFBDEBE250676EF647EC262E
4C15BA42E855E249A63824023320D53815DCDC675CEC58EEB5D5AE5274C223DF
459A727C2DC4425B0A4947CE3C4A3EE986616449FE094A5F9720403F35946C6E
3002646FCD01738AACB9AD52BCD0D01E076ADB2182BF36E33D367D772C362F55
8A7C977717E382D31EE3902D9683ADA479FE08929D2CEF858CDA91B4D2354A23
DB779C68B730D263835BE9FA024038217658611CA9FEAAD87981D6DA72961783
F252E49C5574724F34AF178C2E2E968248D5B79889D9133B6ED6BD14ACB56BF5
AC62C7103B9DB2E308508A82530DB3914B4BC8DD9810B7F695DD49F678A39E12
B39B2397D00BB653C4EACFFCD7E26DE76469479963BBA48B780779CB9F496CE1
1532AE1694E5C1EA3D87459FCA9ED5123D2C60F9D8A10821DD48C10C8ABA3F92
56FEC0FE2F17E6C5678B877CD7084041EEB3FB09643D346C85D389DBCCBBE4CD
B0243BBB86A7B1E2DDDCB2BC12801C4A8ECD0B107CB6197FA0B04416310BA1C0
6DD22A6A57ED89C7614DF95308AD48CF8569A9C0D1F476EEB0ACC357ECF91A39
1B8050E63A5967828D60CC8C0C1792CEF900D2AB0171C4832E1063D4E65585DD
5741BF8FA5615C67DCE3740E009C06CD0A74DF45A0B3BCD6478ED664774225E8
3D3E036A9A9FE42E2259AC71DABEBCCB48DA53279A00B644BEF468D050BDCBC8
29C038EEF4F07B14F01B02C1A4E8BE81DE70F088A80AC3CB19AB4DFFF39AE4D2
918F2F1BA6CCE14AF7B8CFD1429C72E269A2B8FBA0D207B75B05774BD9DD1D90
D3894D4E5BC8240049B266753B194C29B9313EEB0C8A3498A8A37BF1F9C5C075
430490AEA44D1C9062357D08A12DDDA2501C6655411A4DF2DF658F42D355F4FC
53A967DD5572E37D066BEA9DF21D556A9B6781C450D5DE63FDB1CE3CF726D649
33BE3E7B9289E87FBBEFB6F561DB04B6C319DEDE2EC73DE49F4013A0DC7E2E93
7587F93B8F7A361CA77F3E807FF945B24970EC6078E5A0BACC429E3FEDE10EEB
0AA4E778FACD39FC3CFD6530891CCC1E6BD2C89800409EB1790485F53C020767
B5AABD786A256FCBDC8CABB9120CB6FE9C2A2F5E9385BA8C8B3E753A2D70759E
C05FD9870C55B799710662B4FE3DB37A015AE75FD5A8955F09EB5CFEAF9C0DB7
5F5239E014ED1DD061FF15F22DE6C9243D2CAAA5ABF67ABEE3A6F6ED61E1AA97
3C7B5548E26597DB0D49B84BE1362D29F52A3AD9B6B47266B4A1084BE171D036
96A026FA7A544E40915823EA9497425941EC3A8C8B68673C2D1A2560C7AE552F
529CD5EC1517FAEA5DD8FE805F33EF3FC77FB865A58808B0AE054CD40FF05C07
7FBDA7E41941A3FCB28BBECBAB6D0FC04107C550A0651ACFDFF4FF58DC8A4EB7
8E61D4FC7989EE78FFB2B37BD4CB3EC67FF81E7E65FEE175A14E5D6F3AD09167
7CC2E4762AC786600CF0EBA9BDC6FCCAA3DAC323CBE5BDBFF768C9661A027E07
8FAFF485C8B0DDF9A3963D0B1161934B23A5C5C87D078E2EFE674BB56DCB53F9
792361238817BA3548735C48CD47B21A128F9E029E464E1E3637231F4A07102D
E80EAEE6DE194BCBA71DF76FD4BE7B248ED96F219D4D5B7DB151CF21E82E9604
6449A558A88D426B6C046E9A088FA0F6577C1141A7903C924ABA53A4B5C7C390
F436CB4C0F1A91C0A58BB2B0827DBB3DD736D1B2CDCF61FFF6C6F9FDD4EA86B9
5B90559A5E2D64208061D6521E5171333189A739439D1E570285A7EBEBA02471
18996064991B80BF92243D05DBADA8AF7B55574CC26F4B1DABBD0AA23308B5A1
A42667DCED2DA7546D2A60525DC13209A1520ADA94FEC178B948104127A22B60
F093223A64804E46E02D526E5FF90C7382C8BFA25B7A648D21067F8F5DF8B4F5
3C953CFB21EB332B423034CF5D6DA93D934D5C58DE007D562B63DAC1B073442B
E7A1A8C56462C7AC76F1F53471B483758F4B543CA539850DAAA113F937C6CB18
80A21ECFDF65AF0146DF74E0240022D6B75361C9DE43CDFA8F0E317930DFA18A
DFB81C8EB75B0BFB3A2D301EF970C48F3E43237D86822376F40EE3FDB00E6D52
49BFE13C5654C42DE6FFF8AC8683DD62ED727126F236C7905A973AEA52710B82
F265007F942A15246EA5F6A79C01F47F74BCEB864D481F345ECF4FD64EA16D63
0FDE180346BAFF6A2A8DB58351615E25EC792BFC8F1150BFA1A885A78DEB8A78
789EFEA3EB8929EF655F1D5D2918BEB04E4C4150EA31440CA22DBF825096CF1A
BD3A4EECD3B71A4F1EEB02233D61F76028294FCFA010ADBA06F53A700B5A487C
494894F6BFED08A0AAA58FC2983315F8958913A076CFC7CF7E387414E4A017F9
FAE43F47C36E5544A792A21C3C43202CF30FD1073D72AA9C3021981161813956
6B77AABA48CD601358BFC654F3C7516FBE690A67851B823E65D7471AD16F9AEA
07C2B3D39C45726F023EA47C566542BD5BC0BB3EBCE2E7C56E180C73756CCDAE
AD4BD6796220D6EF04EA845A6241FF262C6E8C4C3F2D155F64334076DFF12DE7
2E6B99AC66A919321FFC39B450463D54188D11AF8339662D164EF37BF8635D5E
0A836CD4A50C5C4C7A725889284D623CD8E5DF6BC4ADF8132A0ECF47B642D369
7A3E28517B871A3278AD9C30ED8DF22C8C2D91085B4E047C7F92AF7461811CDA
6D6215BE2B09E9B959957A0BE481889125A9F918B0D589B3F75137AE0A4B9F6D
550FE6080A7F4735504B58E07898EB92D4F74E9FB7783C8A81FCC602CCD47F4B
FD25E5D4B24CAE71A411748EEA4132F47399C1241AA3613DD291F5D1D040CF28
BE96A872391420BFEC53355E4FCFBAF202BE468555F281ACE8DFD6D48A545300
D111C681DF8126C4B10104A975D2C77A9E4B76689F6FC544FDD4A65861C14B6C
53F4B9CBCCADFF6803B31EF9A85BAF11F98DF053BE2AF9F85057119AC29535FA
B365FEB61999671C1DFDF8ABA4086BBB9BDEA30FE67FB424B3373F37DC4B4FBB
216A24075B9DCC920A5FC0D6206DF1B2B7701C20E811C3B205BCB01465B2BC04
29162BE040639F2EE9C0FA967BD53D8607F749259471945843331BB382EFC1B0
C41581268978E8F130575910EC324FD2DF976CFC21F02925692034E05F835143
4248BB8425A5F9FA49189D45C424813727AEF49047078B06C8A968F278BA7BCA
00EA900B242A5985BDB17DFA0E13328CD052650DC4448ADB78D43E510A068172
6C4D377CA89ABD1BEE3C9BD84A05DD11C84DD7A7C6BD6348B96E2B9A86644C79
8549129F0F2E60FF1032A95B595E32FF28C330E73A2D5F605E33B1B0E007A9ED
D800F8BD0C2BB9CB46128D960A10918E369E65C746FD4CE4A1C7BB3FA17F24D8
6227568C2D42B7542219C377FAC71FD55A5490C89142F2844CB7E6352B01A072
5FB384757CDC3F750A55BBBAC8AAEE632092CF95DD5B5C29408AEC4A81493384
59F8BEE4E3EB8047907EE0174552405A6C2908EBEBE3E29F7C6A759857EEF72F
2FF3AAB8D0C7057CA3ED41F50F51F98245557B7C88B47DD3DC4359D5C57E07C0
131287CB8A1CD7229ED655CBB3AFAE78409FD6B64BF03A46E17307A879D563BD
F67451B06D7B6EC1C3314567C88BE2A4333B1E9964BDA8C46925D45D994B25A9
E343F133B43FBA30C52CA8A503F3F808EBA215EBDC5652B555D498479D289A01
5F8545F6839396FEC7266E7F453D4A5CF4E61D2EAEF493AF543626B11BE55AEE
A9E9274D302F4D61072BA0E927B09B9EF2D87A3AA7424245FC0B08830743196E
606A7182AD533295DD446797EFE3C14E5D8D6584B7C311318D8A9DC46654714C
939ABA3B77F6EFFFF1DCDD27AFF1DBBDD3D2604E9C8055393D0D97ABBE2E28E5
89CB54A86A5456A0293797A1BD1FAAB9AF2BAB4804B7D26BC5FEEC5907086772
F4BE1CBA7691480D037E350924B248874A723D1CAC0E6DD815CE279FB0B28D20
F0E4FB775E727637A7399FACE02A9D3F119E9C9E53EEED99657135572232EB42
2CFDABCC87FE919B5562B9D588A4CE9A068F7BF8682C988BBB43DCF241423ABB
B9FB8A7204E871870BCEE93570EF9F95FA36EB42FD653E61511637C2027A8876
3A7F0AF2DD0CCE40F2CEFD4D785A43283DA3AADCE73F5F0181BD8456E553AF71
8E0CF6AC6A2603DE5F31C9B8DD5270A72725DB46EA6B672C3C04B922BD8740A8
16C9CC7B59EEB58335FCDB592821C7797981ECFCB5F93AAA169C140A33209218
7F94485C96847BBE6A256B14801160E4BFA86D1BB635E8AC746436363F68672E
D79633DDD269E32DEA34A8A4369716476AB4C692A0D5E99842BB4AF556DCA84C
A8A156BB1C2EB934BAB3247D81F35EF73EF7C140EEE19D421AF6D93E4AB866B1
A3D1F17FD00159F2E339B1498F0D9DD4A6CF5596FDA53FF17CC7A87BF1B8EE2D
2308BD49DEB714141A10B4334FA5A5B665E0B3FD72A0511E042169E60B4CBF58
6E6627B5968B5BC6C000DC82F94B1A187D0EE152ADFFF6FB35CB22667E746FCA
5BDC029ECEF4E846C3B11474D80FD7EFE56186D215F35C2AB8056BCA70A7E3B7
57A8130BF3BC078B17590D62EE69F3D61142B91F8C3F67B17670F995DDB805EC
D11432FAAFB6FAF2B15432F005D8C50AC672DF501196DBBBFB4EE5D295FF6533
625A82284C6D7DB19EFFA92FFB280E9820D28EAE1AA4304326F7002E83160840
0B6F4621F4C29048731516E16076F3482F71DC6699FA4D9CD1F0FAA258942085
741EE832FAB1F7ED83D1515F89905B63CF391ADA2DF440658BC5CBC9F250F58B
004C4076E8F22C5EAE00C1CA5E0AB1B1C4E91D35DF767EF36EA1E814A85429BF
76E1A7D08ABCA4443ABFF10E737C57B8E26BC4A7D233105724D3ACA934353282
49AD9F7F16792D9EA463C2FB76BC889370A04D8682D0AE03DBDA09EA1FC1D27C
C6A4A1E67DD67ED59060159FBFF46D93BAFEAE07A0CDFC782280B8436B909CB1
2D82ADEEF74047CBA282A9BDD4A1980409CA6EE759981E943CD7230EB7B8E6DC
2182BF36E33D367DFC0BD1AB176395EDAB158FEEDFEE348991B16D09B4BE25F7
878AAE4442DF6BD6EED54215B744908D7C25AF7D3CB24DC3FB20BC41A83F7571
2243D5F217E96E8867FC18342A7E6B8A58E46BA94FFD248FEA4C74D488566D4F
4DBFBB41433632A244D2CE10DDA45FF84DB78BEB13CEE0472942E287483E4CF8
7E1719621E73D1924CA50662FD9BBF3F5B187D8321A0A21D2271C7FAD646EC17
D5CFBDA74B2157ADDE421D5F51D813B577B8741B68891BF061A051A3404D9633
4DAFF3A84B4AA0E78957C95F4B90DCC09238374D5BC908EF970D0E8D3721CE0C
695028705E8EF854921223C8CF29FD813EDD931A53CB338FE6405D294747AC98
60D99A71E821D8F966478C97F5D32E65FF024E380036EC605313952366F3C351
EFC43325650C31BC5A96106B05FD0602066C95C5C4BE2AD8034CE105DF5A3D72
56D18948A1809D2DBA95373E39D2ABEFEB61696155ED2C2E95398C0BE9BC7DC7
84E4ACBC3A4A0EF68D0E36344E84B603738B2776D1C11C1CA08BC250CA889E37
C248BD67BEBCE6E1284CD362B55E72BF69173DB0FEBC511CAB6DABDC2EC9F4D7
78E7384A27AE6A8DDE392B77B6268B7AFB245DE6EE02BF2A97B0542A5CFD6BFD
7A169A266871978FFA3BFECE3465E9F0918267336D6C4F76096BE5CBBF582148
A05C6A25E20180E07A50F499BE2ECA12783242342904893D044DA384E4836D27
E15398EB25E3E98734A0CA4A814D824EE4CA5383C6EB8A8CC6B6B41CAC835A14
B1FA3C5919589CC2B5DC722448E5895ACE4B125EF346F608ECCD4DCDCD47DD77
17EBC286A5454EA21F3593B0C11EBAE00CBFBB83E60B190C331FDBE81805BDFC
625C5717D4CE3E694D40620979205AB9000CCF03F513355BD4FC3209B93600F1
254FBAE5E22263DE16D7E6F42D58A138028FE8FFC29FBE0F933909190D1CA24A
56DA1CA78A8AD61511F8DC678BF43D83CAFA63DF0E62765CB57ECA2162BD29F0
E926A1042B12A9FF1538E9B8032D1946A359281C29D5AC0909EBB172DC52DACF
49BA37A4AE429B79608716438BD99613EC675F4BE7733C4C57410956520F9C16
708AAEE0D9AE34F1001DAFCEA8B3ED641A48ED761A7E9A4853CFBC7243882F6C
93B02EA0F73A2399F6CA5070D2E18CC12104F2031AE45320D6D591D11D35F395
6CDCD2C060A03B7E47417A5E39D2E19B6A5BF6B667F721032A8FE68032B72C34
EB5958A655C95486E41D0558C60309A622D101B48FA7CEF32DF726049E862656
87368420C97F3A415D53BCD1C9F7FA957CDC6C0024F77C781D20356D7838567A
6F66131C36109089E1016DF8FA12A8A16143D6FA33885C9B9ABB3CE33994CE68
6578051B8FA18607195141C582FE88D480C94E798EE0EB746B23CBA21FA29503
240EF2A299814A7A7F75F2CDB9E9B2009EB6FD93BBA3188E47A950D5F3B48E93
4C2FA32D69FDACA41B74D4AC0C0488EF78177D98414A8A2B5FAF4156F63BAF13
327040483E62C93EBDDCD10868090BCD0FF7E07B8873D2E9C085BBB0276E7DD8
87B4A4D21B7F10E3A16FE8F9DBC207EDEAA72C2F7D4B7B7112BFDD1B0DAC1311
DE9106E91B8D869C9EBCDFF01DC1A3FE0885600CBE502673FF855FE49B1B3DCE
B358E59045747E0DC82425C12B7FAFB9D8C0238645C253E713E1AABDD1C94331
53510645FF66168961B7D66288CF36C97474DF133896DBAD092BB709FCF1D2F4
2F6F1D7FAAE03EA53CB5D47F5C54299607C439FAA1E16B9860765031E331E897
A03BCD37FB970F7B11087373B6D43BC6E86AA0D5F8869D082986275483553D8A
07FE60B2E85D5ADA1125B5E8C5768C05216EB395BDC03A687ED357992CBFBF2C
E28334813CFBD921F0CA89ABBEE5B7886F0CB27373524C3A916F41353FD1495B
99CBA96ABA9147ECEF29D69BD30D180E1CA0C559AD8DC9780426676724C86418
4A3E809E761D04167D8701702BD3C055F8CD1EF6E60FF70CBD8C1A2C09AAA8F4
4A6BB4A34F1C35114EBAC0B0F263ACEA4B1C7F324D70F86D047007CDBFE9F54F
0A6C7B80ECACCD96CE7C9B35D08E6D3C3DF11ED0A79F0D71E2D065D0B13C8C42
9CB0DD0279D0FC834B3DA7B3B8C176ABD5213E77A97D3CAC875F3B157CA31D94
764FD69135A8315C2F86C5F5D55CA10F93D53C35497F93A5550CD9DE28454AEA
19E733A2A2B3C97F15CB4FEC940C45FCD7F44ACC0941CC8437A4D888FA4FA477
2845A518108C5548A8E10E765B7DE0751CEB8AC65DF6188D622CFED081D8C2F0
46A086339B1B853385B5877A20D4B5E9E26C70B028F8795FF96BF2056A346F65
6EFAB9595A6B92B409383CCAC3CFE9912B34040061729AC4D74A7A206550FADD
C77E732BB889D16CFE8FC26805B455184C4DD20F01E1A8089B03B49813A6670A
9E52C70A574001501BF13D4D45EC8573906B5CE652DF6DFD04632DD50F538F1E
71F5A2332D9A7C14479025FBC64489304F694A403590D509B25853AB0F25FCA6
BB860E709684EA675856E190454D6D6F0B20513119A844E6A8FB598FE53D04C6
22BCF9BB1AE6F5715FDCC38757056512214E37679380EC5B430C36BDE4DD07CF
59E3280EEE234606234C2BDCE30DC14F1F22085EA743F9C98587768C2816E4F1
7DE94475416262747ACFFD9C16129FB088DDCB10080AEA91D1E393B33E05CA7B
26560B82E8E00D5DCCD6DB9A8E2333C9A7FC4713C309364EC95DE29F6D6E1FE8
C348E74AF37EF9C0A1788B0A8CEEFF080E5D1129031466E747C3E62FEACF80A8
EE0FCE3183E912CB7AD280F09997BCF7E21FF3C98550BCDC5427F0D3CCD9AA11
89F6A2A88137654C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F55399B0FF0C
7BDC027A34721EBF9414261E4D0239A81B32A28278CCAD5FA2CD9E35988FD5B8
584B58D2A96BA165C40062D56DF637E506D06C6A299AD5C3E089B07B48A3EDE2
EAF70680BE2B3D13B9ADE40F20C67E07A91DA476E98531A574C42BA2F296A216
6926C9D207751DE0B9144DD5C63D07B8B577D80F66EACA440D77A9179EFA65E3
D14EE0442D2E487C9425C59EAF0DFC887D850F2AA311987206B1397E32E2D63C
350442E2115B8D8EEB7C05EDEFC822E7774D2E36B7DC679E91F344E2181C9631
F1AF5F9D65F5C97BA8936194BEB61340EF3F8AD3E1BBEC9638D823836C941A80
F6C614865B4BE47ABEB2896314EC8380FE26A1E6314ACB088F4DDF2EF2810260
236767A29702FDFB55C550FD3B67A0094913958D22575E85FE86B486986DEA74
0D744963AE53A1B8DCD067A4C16052FCCD5B051E3DA7AE134145C9BFEB0E526D
408712B813917F2F9B03C23C59305C7A2A9D392AA29F99E97B1A355EF3408366
05EDAD3970BFDD1E7200FE6F7730D33F243767D99D6CF2DCBB97194637FA075E
7CE85BA0C6355B5340808AD7C69616952258C0FE93CD557B6E7ACB7D315A35BB
614830B33AEFDA5E40DF238862E45E699A220E71931A05A5DAB4C473CC5665A3
15BF1B163C9BB372AF156740DC786D901579C497C3EC6D98BCE6B0497E4A4BCD
D4FCEC7F122A635F387049A0C359218F5268C9A28F493E2A291E44EDF3C8E24B
6C3B810F597F13BCF4EF5F8344CBA282A9BDD4A1980409CA6EE759981E943CD7
2241338ECE59A563B4BE5B7CE1DED13F0047C7A6B6CB3A2A59E22543725685D5
3509FA2529A052AA14FA1A81F97BE99D44B74BB321203363B2AFBAFC319A963D
EEE6EB388E6AF17DE250CA1AC04FFD6E62D922CDC694C0A0BC6F9ABBD47048FA
041670EB4449713CF2EF210D0BF5C8DC3484CA36F6027A26FF421BFCE5DAB2D8
53767FE8A6975C9397D02D7F1A024EF4D18D753C02DBB7AE3EA052B4CA61A9FA
D8F5344525EA820AF443E9FF5A66AED00919E1E8E0F8967630D03E48BBB796C2
7845EDBA2C9F4E76ACE2139716A8B8BCE22870B2A8AE0361A40FACAAD3712428
A632351389FA5027404BABEE9B38A41B2049F838C00062D56DF637E506D06C6A
299AD5C3E089B07B495B5D54C561A20205E725588F3CBF187360F7F1D3AC6A08
7B6E33664DAD98E133A61B4182FFB00C635B437AE8B1B74B27F7370B134CDFFF
3FC74BB62F8FBBF658F5DF0D60D36CAB79428A2F246196AF20CB4A1195C76A6A
D3B96CABEF71D59DC7BCCCB1BFFCC5C70B67BB5867F4412FD7E9AF70AD7F40F2
E194844E76B625836C94F281B25BF7BE0E00262B4D50A92969F863CC4E2CC4BB
97B92D19E15BFFF4FBBB8CD834845AE5ACC4988201897A622673EDC9D73F2C76
8710DA5E40DF238862E45E699A220E73087A0E966156DEA6E2F7AAE463C634C4
DE83FEFF8209BDAEEAE9CF1701F6DF625DB40083C9FDB651061986555F8D3496
27FF4BC3D6663890400C2F5BC1E1A1E73CD3882B4440A2B9B09F0064A531B24B
ED099BD4ED00A019D5A7C1C28E6E823E0E6CD2F435AA4F6E1226A5379CFBFB32
126BFE88AA9BEB654A3785E63363B41F13C01103A62C1045FD7E0F586CBF2D96
7E468B2E8E763415D2CA07B905D58856A99BEAE260A8CF01A6F2D73F6A5AFFE1
90C7DE36CAD6DBFECEDFEF976AE5071223CA6D6771B656286E4979DACD3F5A95
3BD9E918D5E46449525A4DEC92A34B24F711FF571E75403D111C5EFE83AB5351
D18380192A26EBA06EF157958C1BC00554409AD56FE715D29FD532709F7A5DC1
80608370FEA2F20521FBF9165EA85E838615E18D79E23B34A5F9869DD15187C0
7058BE01A5D34378914075B7A31ED94233A9690AA696EE8687527B45561770BF
FC22E3411E5E40FF245992A0EC32261B707EC15F6E5BA686EB8295A282705BF1
414AA87E10EB4E8E1D84E1D1C15FA740A00EFAB0C19B7B6C6A3BFA4DAE75E334
5BBA213B3DF67C4111E9564B59B724BD615213D6AD0C4B6C064A73E47F4D7AF8
A0DCF9F836D1436C541D261A1EEDED7DBAD6C2DC9B7A30308EC0D3A9D0E85048
1B1EECACC79B5D18924D08CF82F862935AA9D15EB6A459A6BABBED00D2EB8312
7DF45ABAB8022C8CBF37C27C513D3F842659F1CF5B0E3C192B7C43ACC866B927
62DD7913665633A369E2B7C7A1817D8F283AAA730440EE415843A8F0900489FD
C137858D49BA7B27E4904BF8D855940AF0DF3BEEA5676E97373B2BD37B09BD7B
E26B975CFB5F1762444C521862C8776DB8001F8685FC95EC7EDD60506506EDE0
AB0F35F9C4FF74B7425C2118FE177FD6094EC7065BED449250488893EA46C5C9
397942013B540DD291372C1B05B283DAB2FCE4B01FDE418380A16AEF2B0C50CA
B47B19105E2C27932F70993598837694901EBAEAEC410E2B34EC576B5F081835
95C8E603F6DD62558DBFE78E0CE89B8C1931B73F09457859EDAFD61E7768236F
C0A4304947BC7742467B373760BC57A72FAA1CD068777D347A8B62F0E3892631
7766B100C21EBBCC6C6A9AAAD525FE80231966F8DCA3B5F674D4E56982E5A019
D84A227270D138A5C160E7E19AA0D75663AF5CB33D5641B1D6077818FEDE4568
1764F342047FABD1B30CD997DD370BE73E380B2311B49A57FA350664D6021078
EE1EBFBDBE5AEE9EFE89DA695D85DB4B8EB762BDA2CCDA2F5E5ADA62706D4AF5
885450771F19B59A2760C52C87C36694BE5257D9DC0E67BC0E018F44419EFB00
053102324F4C54961BA2C7168ADC3BD70EB627D06BB45DA78C776FB038615829
8DFE1EFEFE5493FBEA5FB1D26743416B6D20BA817AB49D14D855D602D1FAD4E4
561EE91ED932EBF29214E8FCF673CF7B02A60319B227A40368158EBD90EA17E9
49ECCA417F5BC024835129BC973464E42088642FACFD91D0D8ECD995373CB0F8
C088F35F2CB696C5167910021202680C54752CAC88B12FF919A8DA0A99F729D2
C995E01EA76CAF025C9F7479F64DE90E4A3DB09F7D4988BEF2B66DA3456A9D33
DFDC62868861B6EA02DA05D223700B79E93C47EF6B051FBBA7EAE4D5967EC364
6F547C1BB5DC525AEDA246311A598DF8D7D37C47518AE40EC33AF48577DA743E
072320BC72B839065284ABDF150C4220A12DCB5E3E115E803047AA5B5918D808
16C40281FB8FC65B27B9E2E09EB09A9740013734F63ACF54AB05DE166306659C
3E241D3A427F9B1AD26ECD535E46C137084A835CDFF0DE66239A69C3DEF3E720
A9E3607924D100D3CE0DD26945B753309D8BFF61DF17BFBDBE2FB8BF4BA63A36
3CC4F16653DD40C4DF8D976A9561F7A2A4AAA27D75E801690A3D893C2BD21FB9
293BD39BDB93858819131F364579E0CB83385CDDA42BC4773F93E7A53AE89EF3
89AAAA935A6067C4D7849494E3D850852D77FF7F663D8A185B2122882360C345
14D95C71475C856636519C195CD4A4E3950A71A05573A68527A667FAB6153D2C
8B7A1782DE4CF3BA4E97556D6D7FC819F7E2BFCA54E4EDB605287689B491918A
91D0AF2A14218FED33B84BBE752F54C04DBD85A70828DF513F646823D559FE16
48A3FAD95E18348CBAE0D8076F94073BEB78FEBCD718D11AB6B359D61ABC9B87
7C393770659E1FD32CA2563E0DEDFF05591BAE24595E89A7AA9AC8B6930A33B7
D2C95E0C56FD9E90C12A3EDF90BBAA9B35C1372B7892D3D2D9E3E86398B6CB40
B0A21ADFB484DD83DAF33587D9D1E8FB9AC536739D95D7634587A0680B790BA8
CC1F05C557D6B8F2F55C12D490832AEE5010AE549983A572373695D5A2C0536B
B1969961ADD6C1F1665E16EA9E34A9EA03A66C43F577E44D29FCD8C2D80AA39F
D7A85392459539A5D39FAFF8C6C8D5B42DEFACF451D54DED80E92B080D563267
12B0C1B34C333438976C988D6CD724D39A71387F4D34809DF0E24AF0951F7563
55FA6213C613E79CDD37FDB0713158E6347E630D8B6E01B2DE879B62A28E407E
BBFC6A12BFDE905A8377EC29238FA2B93B1511FDD445E9BA00B5AB2C4FFE6534
11A79765883E643DBAAEA6473DD3A611BF5651D64F288F7DA6393643FA4BB177
470F5964EA547461180DAC98F1B8243597FDBE98FE93601683F09993FA19D96B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E038B5B3B8EF260A0A35D2FE2A391274C38EAE50A6507512
690D2DD4D64276AC5E544B36BE0B51BCB83CE53A6F20F4DC5E2F347A7E54C91D
69204A83F1D46A59DF25AD24664C9D5FEAC7AF6488D173C2BD855385676D8C39
2A82F8DC836C8BB653E4C9A19210AEA6313E62E70EC9BEF8C4560812D60B1472
F6404B1AA6031C346E175A9CFFF3EF2873CFBFD2C69574A5D7DEF679902FF59E
3B86054DF5B3FDF83856591650C9E72BF8E2143D43A1481140B10252DC8E0EB4
8E2446E4AF11C73D52910F14BEF067F255C44923EA6464AC86DBC3773EB7AE9C
408E9CE5EC893F4705C65569101693F0D22636A00F432618538766332BE25A0D
74993713AB2FFA10EDEF127303002CF111DF1BCA43019F62AC6FBAD2A4F2C83E
0B909AD58E95EE807B83CF7E1E095CB10D5CD3263B03C83FC4B7BE57C6625B1A
B3426B888F236D57DB2F5A50B37FD8E60F42B30857EC5CD2FB4EFA5A8E48AB87
BA6E9E942DF5E90DCD355962158491A8FD8AD2C7F470E48D25BBB0F614F72326
C3F650CFD4308DE0425FD9EB666115759AB1B2CAFF3EEE454AB8DF6BA02B83A2
075274CC778873F53AD1ABD686D1351BD5A9CB20517C21CCBAD3E56801DB21DF
90B45A73F62F5840BCABA506F4CB1434403DBEEA9845063F46A9EF1C97C915C9
1E637A223A0F6B13086A33988A6DFAF899A00F8B8EC1202C05C19AEE115A46C4
9A663A888F8B36C5E2345AA680CC0213F630DBB2199A8DC08CAA7DE0E5B6F374
0DD98E2AD199D39C56BE85889670AB5AC6B943C4B9D41C4A6A03DF00E2D87F00
952D0388BAE28280D93E247F05FB893CBE5D859076B5AAE89697E3FC4A6441F3
3A5597D72C82E4BD9A85E2004635A712A8495C2305C7DA7391F7F20453206FC2
7D3F8F02ACC7A579B470A9E340A6985189FF8B6AF914A6B0EF0CF3683D235A0C
FF2135609BE8E89D1210716035D01958DAC0F5A84B217BD0B75692BCF2B45DD7
11488CE444F9AF47CA876366076CA0FDF190DBC423710365236648FD74B10777
24560AA6AFDB6EC9401084DE82B440CFC45DE1634C04CFAAD333FDF84E0F33A2
EDCF78332E793EC734534B91EEC5DDE1D8BF68483C3D2447E31FC56F48648689
B5A0FA8DAEE8CCC5B3CC8C6F270EFC258A343C72A87D5140274C829F239D989C
9E1A28AC72D636AE969256DC91944150153C99FBFF355CCAE7DDB2FE3DF3B0A5
4FA6F218627A66EC82A85F461F951D83972DECD70AA8987112F05C939A6FB070
2AC274C63378573CA78C550B45EE3720261CAB35E0934CD29EB760C8F0114D19
D4BA0161537A4B2E5569FA0D73DFB2FCC6CA510D1697AC1FF0A19C372A97327B
8974079E36D67129C17A6FCC288B9CB288231E1706112A781CB563378D8C5CB7
F8729D436B65B80B3B634949E55CC2A2BB87E8E9DB44DB791D1C46AFE2BA7EBA
63CD47F5B91A075F5BE42A3BF17038D2ACCA7EC331156E0315F306643F0BFF06
EB0DA016066AFD30FABBDCE740367F31FAD328F6A15B0148E05213561DDCE9AC
B79888AF725FDD44F3B23F8FBACF1E5FFBEDD180E94CA387F4ECE353A14E82FF
7D86251B59C66D81FF8FBC05291063120165B4379B1A4DC9D967DBF0F4AC2679
EC035DDBA628E6C4EEA8E4B391FE883E586BBBF83B38E149825FCFFD89AEC9CA
FDB57DC0C4C3BF0A0255ABDEB555EE5EA7AD4D7782A8387E49B8F6D4940F8B3B
B3E8C7295B779748273C485A5F88DC1F92DC8452D0F3C5AF89D64754D9F00DB8
B4F16252C67205713A9B31042BB5A1A3B74395F8AD7A723EC10160DEE4BD2E4A
16523198B2E05EC8749D3D46AA1882968591775A445645D175505AFB1AC5CE8B
310138933B6CF4B205301FE5A2F54624315981DB9E59213A103E32A41A879A41
C90FFD91A30625AE7C9E1E3501BF9686543ED82DD7C0F29D3522C88917F45064
8A58EAE4242CE5BE6A645C2653FE55D062B786BC3C6651B1BC9E4132E2BF7FE5
6CF6503EAC88E8B4F4DCE6515698117D87585797FBD853408549AFE87D9E1FB6
3B8A0F2BA279C60649618BE2D9B1E10DECA9090F66F08EEFEA3FBEF65ED35C6D
8E31D2914E409D64B390B0BF48547BB2DC104E45B02002887372A7028342D5DA
1ABDC4A1D071EAC263297A33CDD908F8CE2CFC49E0FC2FAEF512224950615DA2
039D4EB3B18C87BC21D807874FD5500C5FD4773525A9E12912D6B2A265DE09B5
EBEF1BF8D4003E95F831AE1D7FA22B15E6DAC8C7C1DE7A41D2F69B4CB22412ED
01BDAC0BE83554A4BEA15BF6581D93BB225684B50FC56691BB3A1D226C2E053E
1B5CE76BDCEBA951B61BA48FC22AEA6EAE2B2167EB61D185E06F8741AE6FBB6D
DA9C8EBDE42F5C0EB5BF594EFBA262EB2C414E43D8ACC9CB195D12F3B2ABC959
7EE5FD1996F8AAE791FF65FB53F78C6F639F55A99D3332B13D2D991742FAB22D
66F51581C9885CA1DFBDB4CA8582DAF2809A41072FD817E7072D80C5465BDE1E
01D0E78EC979866E4CA2F3528521C1815333FBA22309F3094A2950EE0299930B
FB1D34B257F66BDBB19596012837CA40EDBAAA2ACD2B44574480A07B37CD37FB
970F7B11087373B6D43BC6E86AA0D5F88AD77FD873378141C0D5E654274F0A88
4B4E81A5864A528819D054345DF144731DD2332B0F7F5E84C46AFFB88747D798
ABE0A28C3F80352864A3F80BB3DCAB9B2B4A4F206B13B702DC4E76A76885AF0B
09EB7F87742DFFB8367445B690245E81AE0A38693F0318A61A07BFE6B7268BCF
2B4DDAA573EC35918A522431497700E2780071A93BC36DFBE6029F878FC59A65
461578501277042937E911586EA16547F111B035E4950C2E9BAE720075EAD569
E7BEF81B824DA5A6D2B21C7CB49F1A8737E0EC21F7CD596D42A88458B89786C2
F6D960EF60FF37AC5021250FBD02B7D5DCA774B841330A240F0E18641EAC906A
5EF0F9BC2108062134A7F1095636B882F29EBF3868C43355F65197E939AAC716
BA62D67350819D14FE3ED2226B71E37AB4EC84EC4C9C1CC45D8723CA7D2A6B00
CCA24AC55E90EC48E4ACC15BE22CBC4FE38AF37D16325FB9929DEE8C2848745C
4BAF9EF2911A80F453FE60FAC91C0F1C634BC8303F8893192AEE80D5A156E3EF
0EEA375E66905D49892B70588D776F15A036FA09D383749CE7FB7E4F83319252
5F8D0110DE3D487C130D8C59F8E6BC0A3D6A21AA60543F3470B8218D56D90B90
C3F3C665E41CBBD9BE223629132D9D75062A01EC5CB1BE74CE9522C06896B9E6
41673A87B47E3089DEC533A7F9759BF94C667916F166A4AD0D7458B845E067EF
C7F9128A17CD447047E6DBADB7AE9A7B205CBCBF1ED0549BAD624D9A1762B670
A9A506C02981DDD545CED0C7CE429D9BF87A7718A844BBA2C252FD10651BE0F4
BDE45B9E7C914E0074C4F6D3A398A33A4BBBB1AAE7858B7001DB7CB38F2ED456
8BD464C960DBF2CA9A24878608565B1F8768FB56B3F2C98AEFBBC8914D0B4825
15B453B86879DFE1185BF04B4E527C706E114259F9942E38D3DBAB5C51E5FFC0
F527C5B59A59FE5C3360A0CB509C16145FCF7D27CB7F13F38FF4ABD16D2FC226
56FA5BFFB230D7AF6ABF63C7B805C438ADBE8AE3408EBB68EC85E3C03E3D6921
2E49DF05A42ED088BEDCC2539F8C81C6A798B6E803A0A99CABA87DA35B532BCA
16C510BC253CC45C7158D89312F84726F3677654FBFFA4E3A2642A93F64831A6
B4924EB4F3D49A5986FAD9F7D46C06CCC29B6F75C799F437E74F0E185AD518B7
E446C30415C8A350E2504DC6092E53F92783E0AF62957C5F79B80DA2B906210F
E250E64C24A95C9342F0DCC0ADAC14486166030FF41D29EA8262E689C52530CB
43926685FF502BBEDAB6258A37008484F27750EAEAE17A63DC636EE6CEACFF46
61232A95ED2B05C01B32EF1CAD05AB36A40A0F84857BE3FE4DE1CC269861657D
AE11CA5F1565C3CEA89BF993E2FC817E3DDD87C11EF838615E71CC77B5C73821
592CA186393E54CE628FADB2EF2900351B44723044DC05BF90F7E1C056F383E8
DCA508D292D4A3ECF30AA655E6029AF347B9DC266A92E183960EC2B89D57EEB4
E8BF20057979A98A4A14F0BD92099DDCF12CCC343C8B6FB1C29368F6CE9D13DD
C823A5E4052ED21E50BBC80F93F95F2F4AFE08768C448D879D8E474A3945350F
D283F04E72AE6EA40AD3FDE96B83C6EDFB990882F149552ACB7B9A8DD5D9F805
42B64A45FF544987ED8A77AF9F935651D38A73163A41122907F0A3DC00626022
EA69F7ABE64B951812CA248AA9F2A0B2D5DAC354F55645D40D9CD64B4D9C6015
D2BF709337CA0058E648347405573D737AC2C6BE8BAAEE2BFBE600F1D9DD0E0A
CD84D43E356F2F4279001DF10597C882C7A5E2768D210FA622491C4B224888BA
29A5A423704CD3EF0235E14156EB241070DE216B7E52495C9E02C5DE45A3519F
7136A882713399C831384FA1269349E2FB528CB4E8CFD3A1B17BCD1A2D969513
0DFB4454B705197FACB989416E6AA9FA07A30EB80A9F2FD46681B24229FB80D1
A2E5CD343CDDF6652C06EE776A4C64991E6B6CE08EBBC0C484315EE485A8714E
B6009A9C06DAA34722F1D67522E273B443AE9820ADB5303CD0D839FC482F55C0
7518C027E3991325D0F2D8DA38371B463A5CA090DEAD07135CBB70B81D3DD534
83BE7CFAA66508B79EB694F2C3C4563F802F8C21B71F0C9983A9780ACB75A37A
63DDF3174A09E363E92A1EAC874E4BF7544FC321A7736F5ABFB20CE24ED96E7E
E72A3AD5AC654B29BE5C5FED13A4D07728245BAE9EAAEDC600B0EF658DD1A4D8
B1F8567040DCD5C54B9234618410808685806BDBC524FEB7967BDD5BB072E876
DBD7E310E31D3CC5E760B82248FBEE526F8689777BD80A56CF580246A8A3A04D
B4866E643A11636472F5845AF507C8EBA6518215D75034137CF269848D4D5A13
A5294A43A58BF8C2AF55531FE0FEA523A21B250F0E7988C50E45B6AC7F41EEDA
416B03695A7A04D5A51CB2A268CEC6763A9B86752AF24A305C366150DFACB4A3
32E59A9E9A5F87ED3D870BEE3C9F8692AF81C932BBBE93F4D07A038B6FC5BF77
6DB24668F0F4594572EAE33CFF7D5476FEB6AEB27F89F410C8CBAA8F91583D37
68019391498DB010CE72D2EAFC631BC4AFD026878619663C9B54CF724F21B97E
41AEA8DBB99B156D3D5E566E70CEBEBD21E52E2D85938BA3F031B6383E1D780A
8128664A8F14E91CED8BABAFE9416AA5E06C7C4C600BF38B70C87E5E03FE3B3F
45A4F6DD39F210719B4DDB86DAEA2CA0CF47D76CDD82D1A1D297D1973E6125FF
805E17D38C76F5B31FEFDFF072B31EF41D3CE547C06EE0EE5BB40C75DB20FDDD
59827A252CB81BA042C2834C6D68F3A0B7F152A9EACD5E0E0D21CD6BEDD69439
FA5AE08E56576D2148D4A90A7DB5437D587EDCEC678B44CF01330EF8FEEA0DD4
D2C7E80850B49E6AE04C878049F20E7ADF22AE9612796DEB9138059A4C12D60E
AAC306E48B967253105BB2A689D9C05CF8ECA2B283E3DA3EF7CB0CD6D034A76D
32DC844CE009C6EBBF9C942EC616BFDCF80180EE6DC71C01AC6AD353810CA793
8EBE8C7116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E619D0BA070CA8F4562F
321D000ADC343E2B193185435682C6B4A8F1A4C4D94DB447EA927D72F34A6476
3FDFBC3EA37B5CEBF5D03BBC3C2FAA19D4E7C58231807317CEF7341A65DE711C
EEFD4A6B79611D6A3E572DA1E7CF89BFDEAE9AE9D984422D428200823D674B18
93F033848A1DF8739A2B43BFA2363CA74FA72668FC761D1A17B9C3C90889D611
5BF34E660434E53077206B06696878E08B94E76261D47759D92D9231A7717976
FBB04E6A3577A665C148C5C31523B52641B2281242D1E8539722361277D11C30
5197AD48A99FAE28983406A9C3B59D1F0962EE0034544EFEC21F1B21DAB103F2
ECD03C45978D34A9ADD8B941211C603B834BB03CF4C025EA6E666E1555A111AB
E7290B983A7CFD19B9DB65CB41D0CE65F05CC6ADE5EC02D9A3A0D376856B2036
634A72710FC8DA959A662893BEFF8D46AC997C8ED678DBBECEC95B1E3EB16DD6
DB80D77A202C1FB3301369DFCF49F694EB6011932191573C71371CD3FA09466C
F2D7B195E84B2DA1F5CC19C957FDF55426702A7FF9EE61B06E514A1192EC4836
9810AD83B2A8D91896E73AFC4DA03A52EEFD6EC22A739146504099A287935F0E
7AF6D49CB9DC59427AA75801EF639C5C36793891A9E69E6B18A95A9D277318EB
7238692EB3AA1E16CCE9A37170F0C02A9C7143D722CFC08677622799577778F3
34C4E5AD44BF7FB5BCC56F8A2A99AF87086CEE2B103889A61FD11075AABCE9F2
517EC9B53D7DB67FF30790DC31D5F15BBEBFCDF0409CAE4DF288E9F7D930A94E
89C36AC72560140421800FFBFCF4372B123AB3752116C4BFE510F180C63CD039
D399B1D9C4208BDE9E7B5FAEEC690CF237B5C9AA6C81744861352351811FFDA8
888C6E882D97673A70BC845767366CDE0D37A82F0234FABBDCE740367F31FAD3
28F6A15B0148E05213561B78CBBE7BD4241CB4AF9E7DBE74C7DAB52EF2E3DC5A
CF1009758191D4A463094635F4756F74ADF67A0BE67D62765D087F117A6F028D
2F2BB95F7428AAB77EBC61E0556F7003F7C8EC8D25C8D12B6346BEC24FE59880
303D59BD664214B4E095F2C33829E7A0740198C15E1DDEBE0364664DBDA5AFF5
B06734DFD7E18BFAE98A1C243F368BE75BD5A0E98313585FF78E1E9626CE3536
948AE25915E53245CFC13D346DED4E5C41BA28ED0B2D4F7D552B0D6507099CFC
3E1E4DF8435E646688A6CAC6190A493574F420308CD62EC74FDFC7CA0F918183
21B3EE726C661B0708ADCBADBC2933C1D0DAC1035A5A6B41BE612088E1641D90
D104EBADB9DA09321173442805CF8F8F6BA06A148730A2283B586870FE655D63
08126DE32C494C6AA9DF87974C3232713DD060A3874834ED552DD7293D1D39ED
6F00439826D9CCD763F5BAB3DB9A7863049488C39ABB74F6696F248F026AE036
29275E879208F7C1CAEE3C80D5FAC1883222A1C90CA4E940136520C8AF7DC481
A5C75780832196D27869EE01D169FC58F743CD16C8F0A6927EAF0B60B94730BE
E4FCEA18980D0D31894C3C4DBEE7354E0F6220F6063DD3A44072F1D24EEBD0E9
D5EDA9F6159CFF603DA5764A6244BFA0338B0E76D4F510B78D86E5F43DE6FCB7
C928450BFDD46DDF88004A089BAECC3E2590EEA23D08ADA7F66A3DC74D6126B8
BC8E30EC6D6CF13AC5EDE1BC9D3352E68C0B94ACE162AF33323B01FA2BBF294F
E3CE1EF37AA659B04631F2482F244C74A5EE2192271F818BFDFC8AF8099CBCDD
CDFFE15EE19FBB7ACB0390DEBA757BEA45FA3171095052B839F7A2A9E367C95F
DD62F98D8CAAECD64C7D8468DA6DCF2767A731B396E5465BFA656C08344C43DA
E47ECC664BCF70081C2EC2DE98E22CFB40A99FE068305C740DD13E70A4B7BA4F
6A794D01CB48972C196E0C10B2F50F32E1E3EFD8CA45E46EB04AA53AEAF4DBDB
F6F0800EBEF9EA787C014FFB589F132635E835D2D74CBBB259F1F07DC7F74A0D
22F3161783C3D81BA82AB06651EE7211E9B621BD851AC42AA89D875019E23C31
650A25CBEEC6B93C575C363FAD73FDFCE1920A890F6AB64F6326C1262B4249BA
9ACCECBE8D81A0259809EE9F92F76660472C5BA5E78AB435F918E066F5383FC4
539D3C5601350E11027DBFE4659DEE197BAF092943B9666224238D328C48F6D8
A346D64691A97135947A0E57EA057A9973974AA074BF8FEAC4F0A4DF24EBE820
5F2653C608EEC3D845B12F3975C5EAFB95B3A886838F1CF017F9E87057F94EC1
25B3ECF744CD52A9A0F3B79124A9E47F4F5A8A15D697DF7E5483790A5239A128
5E1D91B95D756569BB1CF2627F31E8858BFE5BE1DB4A2D38625EE58E39BA27C9
B6DFA186E0352A985DEEFE09BCC7B6286BD93BC1126317ACD924D5A61FC313DE
E12DCECA53608173E9DC5D8292AAE110DCA268598251A394453D99349FC4F651
30127A3BE6784780833674F16889A216475D75EEB838186C788942057588B3DB
CD715F651003587894EB357482F68EE8437F47D2A1F30E4E26A5189AC0B7C3E8
F577815F260E90F2C24F9A9A15775D340C36307497E0CE91B6D1F1607EDB09F9
C68ED7A1E6A527FFDDC287D5849A44A883B5F501E3CFB25426A8746B5610954A
6E5471F8D8344C07DB8E45BE3409866E5D4ADB97D6D5A602B7D3EC89C92FE3CD
3ED8A1A2F1F9D38DEF261C3CE14538C0AF5D07EEFCACD74368BDAA7AE9870EED
9EBA6545141F2F7A7307D30727B94E23FDED5D2DEAD0690379DD5578A156314B
C78AA750E91BAC07EB1DB8A81E4164F827F359A4630C2955964D0D808F21DC02
00638DF7E3599F62B0286A83FE867DE833DA39108A666C72993BF21DA93935F9
0595BDBD4D274FD4284A28493BE4774F66DF77395F433DD8A1317B2053BE6DC8
6D1AF29869CCAD648554A228836C1290AE4EBFBC50E46ACBBAD8CFF61BB6F906
17233EFBCECF61496F8795405CCD2896298503F94188127439890831943816E8
64F87F777089C2097D945A59E873F5171ADB17357090B1444695E3A4A5C17DE6
823755F59BB9E3A052F69C780F5A9DDC6A255BE6483A3AA13B3ECEE040DA2809
02D3F0D32C891B0605B75435B3075BA7DA5F6434B8BD541503B1B9CABC5928AE
68403AC7D2174BADE4B196DE9E61C31849A1B3C5FD5763CC275434AED1CD23DD
F4C4304585159C2E862434D6CB5D80F69E0010B97E1A371ECA95C393449FB13C
E8590A7BEBAF2770DFB333EA66621A561648670A42C4B8309E79BEA25A9E2BE4
D1A042E188EB18D670D1420555ACB4E3E205CBE8D2CD22B1B00C5F181DD9BE96
7D5D2F30D1986CCB571F91D96EC8DFC16E97A4DBD5CC07D307DDBF52E27B7578
7AE81EA98B34D8DAEF3C469488EB3E098A4AEAF3CE1FC15922E4C38271928B3B
64783AC9A3A8A50D9E4040DC6ADF8979C2C77291AF44F4AF573A9C560C53F4EC
10F01B24BD3061707FE66EC53518FD1238EADD3C52B5C6F80151201DF7794D74
7B3560B67DE7676E4338BB923A4E3B2F946324EBDE7EF0C6D198C3588D856421
AD456105F4F4FF47779A5523F55D7945209973E0142B0C866367FD92E4073016
32F4E430D0EBE4AD895425E4FB3315BEA6E2A5443A083B4EC772744863FD93CA
0F1CD26CF593A7326E022BA9CDF2FA9E8981A7E225278BDC2BF0038E66D2C9EC
ACBB3BA33BC441948D231559DBD1FB713E6646BBA1A606F7BF96575E1ABF417B
376266C585B6F3B17B1E23C26B4279C37D7ED8578C34519695EAD030B18D2B1B
928D2CB8CAF6B441EC9D5A4C763EC2A172263718D3C0B2DC97F50E034CCD038E
3BC1299256E1D1E4EDD740CB6D461FE1CCBC3AD91886DF0C8DB362171EE6945F
7B3B383BD93111D710154572E5B63CCD257C0314F99E0E0E74769685BD6C6007
D2B31C3B79CC12A12989636404D1AE3271837120F36F659153EBA5E4A91EA734
77B75333510D419E477E7ADA8439181AE77338F7A45BFF3ABBA75B3C5272D5BB
D7C0324B0FB13575A3128991794AD36351F8A8B4A09FC472962A79ABD230CF14
8457FA16C18A62FAF64BA95B490859881B07218CA48BC688FB299CEB1030A8A9
959F3243F410A36032D13BE99BE23D9030CE41D39C20CE46C98C10A060C09502
E182EAB0E7D0D01ABC1E310F7D2A29673099205DE91F70834CD87323DEE71159
8377B8A1C8735F43A6A69628B40736B1AAFBADA2DE6F39CD5991317968DEFA52
D5CA51A2D32C686D32579EF7430063A099B06F4134BEA5C8986EF4AB4C97092A
1D17169AE6FABD5F2045618882C233355671AC35DC5B2B886C4663E74625F98F
3CFF7DC2A43FAAC36B2BE303195268BE490C9B8EE99E0DF35C6B43C7C81B9135
8CF6517C9C418DA0933DBEB6601794E5B4C81CF3F7384A29702F0BA28FB2F6FD
01A2A4B998108CCF28ADD9B258A6A814B80D6EFB556EA6B67F81777539B67CD7
64463DB1F9969492AE0BD1AE48FA9916C296ECFE12F15F05FA631070BF9D4FF5
BBB92B1582B81D5D2FD011D120D0C59BA5CB14DDD2D5ABCC15A915DE6AFDB50A
9DD4D9E8774E33BE031FEA7E8439A2239955705012667E346C390D9641413CED
36060BBA2543B9B49E9A5E06940230DCD7ED970C8D7911DC00DC459B6849FF77
28A6C5FF3F0ADE1EB4DE93C91DDB40B4E30776133F695899B1F2CC0C69C7195D
DA63FFC07231A6AAD9AE2CE351CD2348264F5277BC5EF11B01A588399B10A825
5C3409FF6CC8F3C38638084F8F4F7DA8B4AEEED926F3821556064A55FC2CE634
031B2D1759C1C252686167F9D064D67FCDC5BFFCC5CE9C78BFA2B830328F9A6D
47593546515B1EE31660B76219EE4C2F891E2EA012B331A3289E7D0BBAD6E383
CF9E8D0ECE8EC47CB9D61C5F5B240403261C60884073554BD0771EAE6A1500B6
4835A7EBECB7DD6B6C1E79369FAE640729ED0A010BBAD2A98CB9C874190A4616
5FBE654065FEA56AD83B17114EC5A676DF1E364FFBA48BB844B5623950E6053B
0068BC64EFE3FF1303844285752BD61638AECE7EAEB36A070B070F3CF86986E1
43A620190406409E997AD5336173B74335082F1E2D97BA8D3BAB84CF7068EB16
D13BA07154D1F2074EAAF70BFB5C6BC5A0678FB654BABF6DAD5857F1B6819B8F
AAF6ED6BF6C8B5E4545CC17C398BE0D172E469B7415B74F2BF312BD9625CCDF9
C3318F3BB49EC630844A691CD4F932C0368445BCBEA7FB573CA285E18E9B42E0
451215A83A763ECBCB6915E8E99848FB5887F0DA3AC7F84487FC62F474699B13
83F5F3DE2DC36D5427F65093EDB58EA45CEC2AFB0B16C4540ED9969E2054CEC1
0C0E83A3C7BD7646FCB6C28886EC210A1F84DB23B6BFB0203AE53A7D864F2C9E
474CA311B75106DCE52C129884EC807CBA4792B24564658504290618A4AD4962
C6721EFDC10CA164F462CA22DDA16EDFD6DB7692A30A71416DC34AB2A2496930
6D9A1392B286F3F1623A3859D22E6BB20C0F943318660E5E850E500506856126
99319ADA973DCB7773285E2E02EE204305CFC05A74A7FEDEE1627900D02BDFCB
04E9AEC578115125195B22B15B8F57812DAF86E4BE60611581FCDFEF2EF03F94
DC211CB2CB94A27524A4C2516A816238F4B8E47880F9AA8145A18255BFBA19DF
9635CD0EC25189E648BC7433F828DE8110D50926E8D85CC53C7802DBB5E7C097
719A22BFF5D31C9C6C0FF56F9B3DF19637371263AB1B4F59F97F2A13C267EFF9
D7CFD1A202580A24E4331B2E2A253AD125B82674AF983FC223A55FBF61096C9E
D17ED05868E556C18D0866E97EC8F77D6F54DCB801A404C465F93E9719ECCC20
67B9FFD03692B957A6C530FA80B011B6C12327592F8B086ACDB860B1B84DB9BC
FB47B1E26FF20C75007F00EF200564FB5482E70985D09F4AEB36853B0C68D2C7
608E594F9BEF7C5B7D407534681905DA3B72EEC9C1B38F428A3ED9EE95AE9F34
0D5CE056954EB8B347918C4920C7142A2AC68231DD2AF5749105A81EE1200FFF
4250D413CF7BBC96C2C16A6A10A8BDA751CB8CDF4AF66B46FCE6648D6B376C94
1151FCB3128F3D0F9C3049C9F1CBC7BAC82A38EAC1FDAA5DDBA9D5D38CE1FC18
6A8D091738A6AB29C50C1376D02A3CB577BCEC451F6232990940E0983965E2CA
FA437950767A0C5ED8C8CB4191E950DBCCD311A20B14B41776496754C1AAF015
B9F8B0A1A057B354D8D8A6BA18F7E824A4E132AEE5BDF71E90DA34D547ACCA61
BE6D41EC37F64BABA6CAB659ADB6006EF4F9B28A39687AEB89B30191210387B0
25179C6C7BCBBB8D9714249A9A7C328D7DDB567883C68E63FB3ABEE97DD7FFDB
55C192759CA1522AB1D4B320012A6EA10D9C8D74B078D5E2F3765D392378CA4D
BEF35521F41D33C6BA6EE980BC1C242C8B0E527225C7EE2D2B8BECEEA182ACAD
7118CD470184B3A2BF8A8873064C909351625D2C9C187AE05F08158E34950BA2
906B425FE484270855BC7372D1C0A2ECA164285A9A8EA08171D1D742344C2C9B
7168C610BF03FC6D88D94B5C171A294A2A8C26324832795536528776E2CE3F72
50608058EF90ACC54A90659DD7AF69B2FFF3273E2A6C4884C57CECE0AB1CC156
049E60651AE8356D7770DD11EA6E1A14EBB1BBB062CE726E106E13371E267EFC
9E691906709AC46D6632950282A4CD40C3B8DE022F31B6CBA3D9E7EA775BBA2E
C97CC91D926CC76EB20F334D46262F0331241D87492D92E8936325CF2A10298B
88FEC93D5370B05FEEFF8434A405C1A2E7250CAD24C78D2DCD8363EBDBAC7178
8DAFE6A1BC9781B67AF1569760ACA4BEF88D6863CBBADCEF9DA606AC5E44FB36
EBC0CEEC44E9FA20527447AB0F461D59F11676B657D610F54BBA9085E4AF0C6D
38BD1C592B23BE6ED6CF65E33A9520C169310617C44B7CF1F853EF87EAF7D39C
885971ADCC853799433B9CCD5CEFB8C91CECA3DEBEB081964C6150ABBD5B3A4B
88B8F215CBE3245DA950A72D479C48D67816F04AD0E3DC993DC5D0CCC426EE83
42A3FD62997CF8C597659008C4FC1EA70B6C51C1F89AA9AB1F8C02D0DC35746E
97C2B29B7A46AD2FA144FA7AF1CD28488C1F2033A233D91D90392860F5A4BF71
6407E9F63873237D152347D3AA2C575D1C09645B8F026B5509AA74D73D0A15F0
EDCBC64BA8F67F4946AF3F56EECB028F93FC3751A9EBD1D97C1B4A3D172AD37C
9DDE3198A8A37BF1F9C5C01668FA79AA6E44A9FC235EFD3A252838BE71FFBF03
821D50DAE4C5FBBB33E3C262F07A51146FA5324626030419810FC5EF576B1DE9
85AAAC82F4647D674AEEC41A3E496FDEC2C0A1F90C1F4FF6202689B76EED4084
5D9AFB54CAA90EB44E4C1819F1DB54F4C3D398A0F977D29ECDB26BE99D660D82
695536658C79FB07B89AC5220EDA163A25BD6676A0D66DBD9040755647785C43
3D4E18A02ABA38F55742DC36E4FF07A70B879B068E5C3998334F901C79DA37DE
E290F4391448A5238F41975F0CF5FE0048F6752008074D6FBCC56FAEB5C009D8
B386AE9C4F392FA8A590BB59A0C9F513CAE09CD08ABF58438D5EAFA88FAED568
46812277FC08AFAD4E383B131E0166720490A124A7B69AC60FE3DF5B6B158873
E6605627253D41770B70B930E9CD2BEFD6F9B08EA2EE19F911F956218A503A16
943D18C1028CC9AFCB9650527EC0FE20458000AA7477BE9544F384A49AE0C70F
71EA41B02E1DDF2DE8630CFC5F2DB47CC63BCDFF874A75714FD324FDD866414E
D5F0DD2A15B62AA0023E80872307E08BDEE03F6F7368F422D978FEF87B4949B3
B5E1DC217E8A1FBD9B828B8E5DDE1174218F07CC4EB3E5BBF668827AD1CE9ED3
9E7242C84FA54B49CA1F6A10254698BE7BE357F70AA574B925801792718F61D5
7DE5ACECFAE9F3CD33E155543275D8C75FFACE5693C35B2D84985090CA164DF0
AAE5DF997D626929C8091E2E9A6A644510454A0A41DEBAE7BF7A16F17D727283
FCFD9F1B3523CFC02DD50D55C0575EAF4EBEA0BABFBB26B1A463F3F2DC46DD4C
7847179BC0AB88D400A4A7DFA3D23431DE441E0D14ADD66C3B5C2E9F7BE3D10B
CC9C4334704C3D384379D34147F7D163AF3CB42599EF813C2F72E9C13ADF5D52
49AC0BAB1827E656AD6F74D8674FBE4057B8ED311C8DCA7E0867CF171A13599A
A744FBCAE61116B02A7E9D101D9C257B71EBC9912F1E40B1D64238195E5BFFEC
CC678323EA19DC6A3AE997EE55316BEBDD683978286133F03C778A1A810DCD86
9D660DC33865B7E7C25D1038F5B4891F92369E9379CE45F6CBE7E3178917EF86
CA0CAFD553AFE0EDF8A1D4878FBE6A8D6BD31793309E3DD72978383E95F08F5F
B761C4C8E01C2CE6F2AEE092FD0EE0CC91BA538D029C2A24630DDEEE06E70D21
4AA026EF39312CBE6F0B9A0F97A3A7C218C09F823AEC1C65AA548C78ACFC656C
1228B9B2F296281350C23CEE1D869C4B895052A0F2C1557DC315AC891C390C8A
1733C2DE844A1F915F7646730E278828CBF869D7E5E8AC6296D5821F1DFC9B51
2509C556F99D6D0A7E6D0F72BA8FBA57162992D850D1EF0DDB693AFE84246AB1
8279A2B24E5B50A2FF633180A191B5583768198AF9E8856D7DD159EC22E61916
8252FD3242FBA0351FE639313C561BB821C5577F7ABE90E8848566F026E25F35
08C48A8BB31377DE3B1B91161BC5ED3C19993C2158D476D0FE0765FBF3875512
DC9DFE07079343E86951833B158D4177AF55E933A02A9789369C26AB6F80F18D
018C0E385EC920FAD6BF4B52A6E5C64ECF9059EA2DDB07B40A9EE4443CAC95E1
C12DF3F5DA70D5014387B064500C857F06F90D95C79E5BA65FB1CF4CB7F6C1FD
5174F5EC78D1B2379918C8034B08588C4B773B077234ECED88FFA5ED8C04A377
5C1BFC366180B84A5E930A6CE175920C2EC7B3815B58F2A48BC4D4A1AB8C36B2
C37824D4C02333AB0F9A9DDD4B765D10F4EF859038563D676BFB63735B05E009
D2A6E67764EF34A8BC4AC34A940737DB745C0D8DD2F671D2A884B20F8C64B753
BC0DA94017AD381785FE9B32720E93FEE80FCA58A4A752A9B3B6C33B84EEE975
D1DE07002E86961D2048A927713588BB8FC5EEC5F9FAA81AD2E91846D59CBAB8
9268B6CB078368109A393E2C67B8E41D6377CFFC482CF19EB60D25A785F89BC7
561C5395FDC906160716A0ECF62C7E95EEE2ADBF8A716AED5903E916CB56CB43
A8AFC185DDD7EAFC7C40E503803E72AC1343EE49D70ECDD929CC095BC98810F4
3B9866180F9D58D0497793CD7F3D9AA5CA7EDBB00B60E26CAD17086C48CEA3FF
695D5FB54C945FD86ACA7C98EAE4E54EC58EB7B7A435663117E1D085848F0384
85EE701DFE15086D6492464AAAB6F90A6B8848DED6E8EC6A58365D7A62C2FDBD
0B7FB6D869AC042AF8B942265142A0B33145DB1F3C339A30E9D1DA8DE6733F04
3E86C3F7B277F2391B1EED111BB98B0A37D73794AEE4FB12D9EB4B069E3C6460
A7A1DFDFC053AB5BB384125E634C71F84A9BE9E92B7D3A40B4134415B874E52C
A7B18E275EB0CF680AFAC9DDE4F9B48568A1F76D7B9B81A2598C9422463D8B1D
450DC7E71CA5DE4E227B89B26ECEB21A1007D6F0600E6791BA1EC07C6CD73235
CDF73BB1572F7875CC54AE4EDF1087D5254167A218889C7CBBD7D11FFECA4C32
6D9D8B30A01DDE65747AFF58C1312A91C85AC54FC15D87D6F547E8537886E333
90360E9607D0489A7B4B371E43C63C3EB5FA1968717B1E3CB16B8EDF761B46A2
B7CC4F110FF3E578A210697A6DECC9F689C87497AC544402C80DC7D665E1DB96
647C9654D20BC7BC1A9AA6155BB0695CB857D7D18E788D2DF9753691F487200D
35A2988F74C13F38BA26ED7D36C34AC14C42BDABE7D4B28BEE5E71772C8921D6
9D11ACDDE095D43077D3B4352BBC0F0F89FE477C2413903A61E139B0D0A1F46C
B27C99EA0B4A4AE8F1ACECD1339A3FC0F865201B6D7976DF85558056EFDE8757
BD40D52FE71FB417926EE7E7D6A75A76CAD3C02792CB44A20B9E1C011671685B
BF0C8591BCE40406F89A721E6573680B7CBD772DC7C4CE787F438BE5307F0462
4DC1F0E05BCCD097059201A6464B8C49CF740734665C5887D21F219A295EA233
C465D3CB265CF381F02FBF83D19176AC10FC91325361347B21EBD48F301B04F4
6631626586FD77921C79F575F851A2221351B0C59C9F6CC71B257345C6CF339D
33335AA3C2E385C837EE253220A279F05876328864C9C22480F8403D485AB985
8152E3FA121F9BDD04B7EA8A00B2A4250BC326EFBE9E02C61D74DE137A8A0D6B
BAC6FD78F8550B7D19F73EEE205A47785EF3C453E6F77A08AE9F9555169164D6
F9F6B7C3C24258D58F35232088B67BBE9704595F52A799C9520C13DFDA4E1D95
A677CAFDA9B34F878D26AF2C70DDAF438047D9DA1E8AF5F4C16E56A0379EF0BA
4882A18B6602235F026F9D4CE871E5CC7EB30930F925BD95B3F8C1A49E900D44
1635184524E2C51E70624B2648506E87CD85E84C54E47C448AB0EECCCBC6EDBB
BCA57E4F424403B407AAF88101D7E9CC89CBAD30C8258CFC4DD9E2B7C8DF1C24
1030B68FBDBA63C29C3A6043D113BA33D7645CEDEFB9E2B4D16A0550D061EDBC
66BF5AD4483699548992C6522649274648B6D218EE5A941BEC640390C353F464
EAFB984ED9535EEF0550084F465DC433C0C5299769BF8A3C47EA80A353B71E82
D1A5312BEBED931F56CDC90C677070565126AD56CB4E65D9BB14B8EE9F60AE9F
E8C66DFDBDD5204D158278F67FC3DA55165B3B6BEA75570A5959C157C4DB5221
EEF186188ABB06947AEAD6D9670DD996AA9FE4D4268A3FDBF8F1AA40FA3859FD
9E1D5455234F366F8919BBA377177966FB9E3D0FB560095F56B93D56DF69CFA3
5151A3764BC6638873006940CFA204508108B0B89E8ED21757A638B2EBADDEA5
2E0210B9848E6FB91C81497FC1AA96D6B48174E7A48CCDE5BBCAB3731366C3B7
4072044D3EF2EBC1CA0FBD5C493F0DF9044517835C5A18B6EDACA49FE842BFC0
A0C000F74B2719B7DD018C9E8B3390BE0645A187A42676AC08A9BC2BB7783E87
F35E9752D76D9E7A10EC5047549A94C5E410F1CD89DDDB2D5CA8BE744B66F291
42260D0BB9427C07939EB5649DED6075ECFF58FBACC2E7A43260193FCAB6E40E
4859823D5532B40A2FEC7C78C03ACD274490520FEBE076B8FAACF504DA1030B5
A97339BBCF367151C840D11BF79397C17BE61B0803DE1A88EF6F375A8A64D248
8FD5562C307837ABBC42CE0AE98F7C3960A508FBD0C338ECAB53C74DC4E88380
3F2FB7FB3C9CC011519B3F4AAD5AC4DE679C5AACA4F9EEB15E13927AD464D631
41B1EDA0E6FFD1D82CE4D084352E97F093072451EC633967352C75105A122275
1EDFBB3E8B72927E96805A4660A5BA95D0E215CD8E4357259257698DDF1EA568
EC0EEEAC5B338AB82863AA355DE4B122317B61701B492F7075C9C6693914B9A8
F47F30452D5F272EDBE6C66B7D8E377DDB6A4594A569CB008CA30E8977819F62
C59F6D6BEEA9FF38C55FCDFCF9BF875507A06D7175D6798207FA3CE3BE935702
F8A3915CAD9206027739C4AA9D7D9D4CB1DBCF751C748A7ECE0F4FDCCA3F1B81
FE358C39ED703F7B55B6097E73553EED34DF8DA712C29D72EB360AB4E5ECB496
6369BA85B6E7733A5C7123CD22F3A9DF63E0D6B5706557B831934ABE6D113D7F
CC36B327983854C9EA86DA22AB40A3B3886A6C0542C01CAC664AD93060423C3F
372669CC5806C15153C70C0C11253D1463AC7F723D7F0CB707ABCCB23D597FE9
3D3F846475B9BD76DDFF2B9DAB14A41206C3350B9DFC1DEC1CA5710D4ECA1FB7
AC7E65D5A5D8C5FCFDB41707B035520A5DDF709C161E40A8A8AD8074AABD6A06
EA11E40F1F4F4D1D29510D2933E0819A4A0855E5AF6497F674F2BF93F11C9C89
55BE49E6E2C27C0E78D11D16AF8CFE9373FBF1A18B938E289D66EDD30965D997
D6FFF4DCE02D82496EBAC0315B46B7EBAF4D51258AD07F49A868C4FFC458419B
419A988692F0931B645389DD9EEFA606C7C16504FF6F86B68D6CA9C60D3A774A
C7448624EBE6A7D0067E3614933B60E1F257C77A72CD8C5D0C8A1AE705A62A18
A4DCA5086F73B47C98A95D9C33AC9AB81AF734CB3B071EB4C902EA68A34BEC8C
10EEC80002C330C81431E79A54453F8852CA9D2E0F4A930BEDB6F4CE046EE0A9
BB4FDF5EE3BB70E64EEDEF0CA24784A1DB7F945DA3C9310C96D5075878A91B20
D4919792C03CA93AFC986C34C0835953D357596E3A2D629461953F256D85FFA2
5FBAE4BF70F127C75F285A7C4D903A367CDCB74C56BF8356F948177AD52B17F6
059A1AFC17A51EA38AF85539833E865A51B52EBF294FE3CE1EF37AA659B04631
F2482F244C74A240C01E853272B9CFC744A71B4001F9CA02A6E5FE2C42ED13AC
D2549A8AE864481D4F76BB941B1832E3FDBFA3396AFBB9B9F62E3A3E951935FD
C18090714B60E3CC526700A4598A0C9C494449C69B415B8A30C5BCC1A675A61A
4F37D3E87D399B65090F5CDEF1325975357562C9DA6EC8AE6C99D80E14D8E02C
1D3C4CD54DCCA57CA4B536D73DAAC2B681D7A60153CE19AB3CE48BB89C85B9B0
B5F1022A4BF938AF76A97EDD40B7F6F9D15E91CCF9B8BF580801EE2009B8B1BB
2CBC48AC2F425E8150E0A2C21389191114A3F53E9A4C8A796E104EC899AC0F12
E39360C3DA5116533BAE1B750318362BF85D9A4FED0550257AA1E0DF26F58D77
1229C2A3A491455426500E410A707C19DD693C2DEF0AADA7436FB16103C8E0D0
D3F83D6DA3CCAF5F4DA7743A09AFECA6DC807448B48C85E46121022676DE4323
899C637CC86D15F14C4B08FC9AAF420CCF17FA4F0CA9A2241619C4B2F00E32C6
03FC2A137FC9C4BCBE092E42E39BE9FA1A286BCEB88A48580C77D110B7E2923E
9327FB8671DC9F1B6ECB2EC7EE483531E3DF9F068C8B7166683E6CCC89ACF2A1
AAE288A1D14C5ECC532CF995570823CC7EFD6A611546F46D5A6913E417A0DE93
0D3B35F6F183E9E4A1C21B4493D5FC5C120441981FCF9234D2423C9602E7D957
655B6F7F726247E6CABCC252CE308897EEBCBDA4B00A67B27F14BBEEB319BE15
3EE35DB499AA42EA63623AC4C9762BE727C5FB5ECD6C907F7732B40A1CB08B79
30951C7BBC506AAA131029938231AB7538ECADDABC9CF8543DF5A7D4A7A30C14
8B9CC15E62D2CFF2A335D8E21B798E273C3D9513FB280FBCAA3D76C1B4009054
04D2C84B65D68CFF6687283DF95B90E87824B0C75BF51884C64B9B18980E245F
BF17974E39C2D425B97A7E3900868F251EED24C104D34F5A12FA3404ABE38A1D
3BE1DFEEFDC66B7C1307A91DA8FE1D33F294480D833CC54309BB9AA821E4D7B1
E3EA394B6DFDF31F424C284666618280B96267ADCABD02AD41265563A50BC6AA
068DAAE3376E945B9547291060D523D9CB35856C9BA1A3EA6726C0EA098AFC7D
08665A7EBBFD4367C74A099EDC289F5294F9FADB9D2EABCE4AC536782872F0A9
42546833BB567DEE744CEE5C7674A356A7ECDA4A6BB6727EAE5E646178568B0A
88CFCA243C9DBEBD21921CE498A2289C43A10D5C2F624E9D89BC11C4C91B4E05
DAA501530D52B6873996D75F57B63FA3CF732F443D1B308AEF755A19C86E198B
B309E21E7B779EA2B50ACBC952B39BEB69A34A8AA8C76CA998B1F660EE1CE629
FBE9DAFE109ECEABDA4C0C05613D4B53A42010702CCB30EDC4DED8BCE87EF16E
69A1247136A1162DEDFD716F873F6AD9A3AE11C6BA89FEEA1B165541DCE123F2
88B664BD4966AE41A167B1412FEA6C31EED41FB0CA11763C15109324E1B4ADD8
57E119803F93CDD41D3EDAE113E0822D99B61EA811B43B6DDDB5257674539666
6A0B50B656725A4EAC934945ADEA6D265ABC41E0FE0599670489E13185A4ABFD
BB4E9A9E71528E3C011256250383F212ECBEA0EE2581CD3C50588F22DEF85A60
98A3E5E82DE9DDAF337E042778DE0E8FCFA5EF132BA97FA5D67E7CD7DAC27026
35F7D6F9F0909FC1B029E55242E2E342353DC4A2D82BFAAB3EB069391C3512BB
941F7C8C5F57DF6D60240D9DC4F6F65B2DD52B2EF9CEC51C57333D12B1B876FB
614BCF3D81DF91484408D4FD5BE2D5378D22F2563C97ACB630596BFE41424A8B
BC22F67D46FE2699C6890B74245F4B8E35199FE4F4F9F271CD3E84BCD4E45C14
55
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans10-Bold
%!PS-AdobeFont-1.0: LMSans10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans10-Bold known{/LMSans10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans10-Bold)readonly def
/FamilyName(LMSans10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 83 def
end readonly def
/FontName /LMSans10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-460 -297 1761 1134}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFA25B3D2E21970B61BEF6BD441C0
853BA8F00600E933C80C0916170925A5E999AE3F4523441CBE8209ED95298D28
7897FD39E60633B3341F7B1EE39A74B7CFCA379A6C2390E7C26A4B9C8C556F25
96A90868B428CDFF58080D414AFBA9B90E752A5C7F4EEF6EAED9684DCA7DB0CC
268AB1DF914EEFDF740F44F538F1E841659F02898565FE3B1F13BC87C5713FE4
FB373864385E506D1C0BB65A3CB8E10A78C20E5BE320989BC3E8C8E8E399FC24
E0BD4271E70E8D7A8F7683A4756AA988C5E78DEE26995F197F2360620656FEEA
739826F54E14481B446F1D7F68111FFA8C859137AB1F8E90583B98BFAF5C6329
59CCC441D095D44570B010FEFDC0DAA465ADDF3CBAB31B8A5E7672C9EEAEA7B7
A345AFB8889D3C53E0F9619B8F0C11FCFA80839B0574D91CE6AD50613E12BAA0
115864303556F3EBF5B786035121016A72100BD90BB46818BE2E8AA15252FA00
9F20B1F01EC0EC35CBF7D6C9684AF91F00880B4F0721698DD568E1B3D09641C0
58E5856E324DB2E378120A56ED141762775C5AB88AE8BB5B6B18158A7A9202E8
651774A479D4308E7F29052733CD2724314AF8C61999D544071407B7774A5610
C7A8F6EFB5792C23498F7D5347CABBA2DA469A957BF2BF33E8E3045016270416
4B71642412D880A7601B66C002B4EEA76041F2746847EC01F5EB5744F1EA82F4
163BE681F7F568158C214BBB58CF2BED8BA9B4030D081D755D41B0F8DE4AD0E1
F33A1CE6E38EBEE8CEC6203C2474727309D75E85A83DD36CA1A05A37C9D1FAF7
E1AD48F23A222889F92F15AE9C33A8B3E343774FA496C5BFD6D9C1328E16F748
4D6390CDDA8EA19D086DC2E49DAFC1535299AF0F42A16E89B2D395B183098334
286F4678662DDD87FE71DAC85B1BEA9546CDC788FE623C0EC28B6F1208F01B4C
5956B9402DCD2BA235EA01291DE436B80388FE6B31D225383E1054FDC6AF7600
608EF8DD116B8443675F86A09522E784197B8AF0E94FB9D58D648860A2C26A05
6498B7555DABF92B298EFA1344A2C5487F80442D8E6D4A3023139FAC780E9F5B
712394804BD39D2348F61E0B528F4873256714D01012B77A5E56B1C92DC7FC0F
ADFC71C5F898C408273388E448AA4D9519F85B14ACC1D796F99D4B3778E50274
F69BB81ABA1EEC1B49E0472E92EE0653382141E523A585E7CC5B063C4643CC84
4A757BEDCD054DE680D23B992D7F754479CD369719297616419BBC9881BB6CE7
6FAFC31BD5EC1A698AFBEE2418D5B8CA978D6AC89C5D7D115D20015326BBB45A
5A1E5C98CB559929FD0D5E8A13520FA7BDB2C711E3BBAF7CB7E7ED91CB43236F
BCC50D20C11C6929C93AAA213F8B058DC741C12B1EC9BF6BFB6BC306585A1667
7E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E69DE0F04859B03FCEDCC765058
76A049DA9D644D232C7B91334762A700EE46CCFF0F8222069A239E9C090F9CC7
AEF418EF47ACD1255068A21969742C55D97F1EF3AE7EEFF90937C6FB7A0C27C5
6B44B37C97E610E7DEF4545EBC55591235C56A4CA40CB555A4BA1A2E780FD5BD
796ABA334160229587F4DC11F6EC986B036C55794A4DC92BF186068C71B851A7
F85B6333C19C91E6C9EAA9292428B9368284EDCDE7B6926FA86E4866511AF195
CF03E794D87502CD2BA63EAA5B1F9282216AAD543641E0F8A3E7314914C30754
9274C1929A4B7367C259A83EA0D92DF798FE51658E2648D8CEFB68D0B28B3B0E
1CFA30BAF3D8E649F28EA66D111E69BDE1C7C95D376D2C48FFEA0D825AA3CE8F
F2CDEAA920024C50D65665E065DADBF514DA09934CD93AFE8100037709DDE2E7
2E16C80CC9C0E7940FFA97F2BAAE7A9AE52B2BC3CFD181277D371765E3F5FE73
B7D1E30EEA5D377D3EC454B9E8E4E4B7897387234F730A1D2D567540E1F13D80
1C5535585729C06A53A8E6819D45D752A50B02C5AA368E0EA45AE3A0C9A76C32
0DDC3352FE0F2EBBB1972248F0E4BB8AE3948A408FAA0CB73C6CF5E6C128A31D
BF93F0566A59DF25AD24664C9C831F84B02AEC078CCEEB604BF5F39840266A3E
CAF4B9AEB821FCF47ED1D902DF005570FA47070FC79D841478CADE0EE48913BB
0C4CB09F2124ED1AD4B59F7861A8B9F4BC91A9DFC03C3F55166FC377E829EB5F
F4891F388983E560AE31E321A14D78E952EEED8A2021B8258A37008484F27750
EAEAE17A63DC636EE6CEAE50A934221765FE0CC6A3A745FEB2C1986547967107
503C32955BC90EE29DEB37DDF577BFA71B8A651C05E1D55C8CC5658531DF6FE3
FF0E539F1DD25B1C97541EFE4F5C2067E4206F8D4F3AF4B2C7D95E63DA3C2B2F
3F09AB7709626F52CC421949017016918F0AB2DB82DAB2FCE4B01FDE418380A1
6AEF2B0C50CAB47B186DEBAF6E9A2C69F153AE233488B2D41B812A11DD57D1B0
02B45B933534C0B4C51DDC50BE37BB6E42B8FCB00F6AE8FA7C6A8DFEF294B426
8517F1857924960FCF6A048C8AEAE9C9724A170FAC6BCF6A85AA31C1BE8F832F
7BA209A0A5D865E3A32F47B1EE818B18C981A546A36DFDA767967A43B3D1F3FC
4F591BFE0EA1D77FB7872B90950DE333A444BE5476340C4F274EF8D4394BDD17
AA5505268CA9DF32C3DAB7A37106D82ACF5DD9316A8E0CE4F32521B65F83F152
87234F09C3FBD9CE265B6A223D0ED3DA70C143CA4F4B21EBDB9E1DCACC031B2C
AF4126501FB9071E10C2DA4065A3082F0725C2E0322AD914573DD12540F02C2D
847365CB105542F9B02CEB5178A3F3C2F9D266CD2DF15E9CC37C64310B4681C5
8D18345EE64DC11A1319A075FF8711FFFC1662493942C21F78C831ADAF4E4061
1505FAEE80170CEA28F54B643A9BBE064D3B9237193F2BA024F5AB99E8207FFD
ABC084BCDFC2A202F15B5E590EE4CE5A27A0AA6E874293E89DC1292F3A57FD6F
3A111ECF2D6A40C4A95AA66BE98967F52A855DB02C498F136AEEDCF7E1E1A36E
82BCB10E5E51B131A7CE8E5023FAE9BBE4AC0AD95EBAE53E28EDB2678C3E34B4
13BFC96005A1999A95B5B8A42DE5BB1384878378F1C62D1E60A63F3A1388DF56
F8DF2224597766D01BD59A88FF2ACB9624AEB7824D5B0AE928DA1E4073F2400F
AD5466C50E41E94B66B5CE1ED0AD1ED3B185D5177C13CEFCD66025CFCA26CA60
70F3F138947E9552402C310FD42E81E47337DCAA2F7C8594264A6EA23E30B3AD
C0F3919739DB56F4522D02299507F5DF31CA0AF4D5443894775B2DF1F871924C
E2C0479EA8C8C337504ABBDA175BC6EE3758754FD6C8FD4018889D8E86926DBD
586A0FFF6BD2983A840B68D656FC15842D694DFE6AE0B5F37A43352667CAD340
C0D42D850BD31A8B4C79D08FD7B68352CACCA2D75D486446E7369DE48716A15C
1DB4324935F474EDCB620ADD71ABF4845AF9933A5AF485AFF1AB405004CA0DED
FF110AD9468A0E4A0820F81AC3AEBEB0996DEEE69DC68C138FB4F7E2F3EC19E4
7AE9E2B9BCE3ABE6EC68FFE98B8597A648022ABC49F5FDFCA8BE38549AE53F72
B85A6F03B58AEAC876572FE440D7EDC6EBCD2AF0D56D5CB3D90AE897FA3095FE
A499DC328054BF07CD1CA1159872E9A32735940BD3AD8C75262EF6C5B60BD81D
2770945D3D676612C77A23C8C3364DAD8E407319772C9B201C49BE3E38E08060
DB989AF3F538CF0D5D1234E2DB9A16B6B263605242F5BCBA9C0E5A09B0AB344A
F757886F30FB3AC53A51C4843802081696785BF15D76F545786E9E8871D12531
7E14B83714D18F84E5C4E50BC74E4F1E3D24763E96F2C385B9F9C34E0382F02E
B8C8BF921CD3914D1C0CAF2F2A8C3E8248880242AE015219D75E3C858A28BF72
B6F0779DFCCA2EC7F97C2795CC16E2C18E3A112F342B108DA6FBFDB214B31347
11BCDA381676C3926651F5B3F8666E369D50682A921BA05409A9AA8B6E77856A
3C6A7B37B39E92BBA5C42182D98EA16770B47D01CEA50E0D6555854323FE0032
0EE30A24BB155265E2EA7402BF17ECD71219A16E5A1B19A5CBCC9086AB4D09E3
59B41CF74AED5B75C01085EAAD720C96BA9839BB9028425F71EF541587018C30
EDF9198F1887BB13D0DC1902B31D1DC2CF9C9DF2B07BBE67E7D564D63141B1ED
A0E6FFD1D82CE4D084352E97F09699AA642FCAEB99606BC079F3230443D11313
D6EBB931956615A4CEBCCB7E1BDCE1C7CD54907F2ED4CB1E9D602AB9746BDC1B
A4A84F7B70846E33CE5F285F32FC4E501636113B251001F008DE01DF02DAEDAE
3EE92816034793A280F073E6670E32EFDF47A249652E266DFE7348AA4396CE93
D5063F7D87E6F759A29F32ADBF5D37B697E2B01DE1E902D53E24B71DD4F1CC13
482C48FD1456BB3B63DA7E4A3C59ED5565F2096BC24D7F12FC905E2D6DC010ED
5F06D14E4FB96F0F69193E868789380DC127C1A51D2CD81565EF1E13AA97507A
9841FE083B062CCDDB60B9A1C3E0FE565DDBD45AE467A782725D8B3E30CF0797
DF9A714165D136FC4F83699DEB28DC0008736A49D1FAA25CAA28B66BCCFC7855
461372B4CF5400F4B7BCF0DDE934373E145F340A6E7770D5A0915D4862F8867C
39DF1B394D2BB66A287D2BA92A6C662858584EBFBA53E8DDEFCD80DDD97C3713
D2D2751EBCDB6B4D935084759EDBCB44ABA49269C8F547DCD6E7B147D53DB0D8
DB88F2B4490016C23FDB7EEA6972691E6770B37A0E467B8708B0056727A640F6
E8A33CC915D2F836ECCCE234C13F17FB03853F28E77309B1D0E6185370CF1261
BD2325B000A6AF469200E5F7A3C35D2DAC2AD31A4A8FE8112B67C5D286DB3EF5
94D6D04687B8DA91E8858B8E533CDCA7E454973BA1235728AF9156CBD143BA26
2279BFFF61E504C08C38F06CF72D76D460EF34B60223FC6170F5DD66C1444DA6
D26976D77A35534B6390EDC2DCCDFC038A7C57FF6B6F5C882CDB6A03A7921BB9
F85B93AC64F9C82C455E037A4DEA33C89BE01AA3AFE8B3CBAB88C535BD22357F
9B16487A929DEFCF0103834714C42B1C0B53164C8FE73C9C77520327CCB89B0E
B07AE1EC07FD93D19F9C0A6B2B12B071BB90419EFA4512B1227E6D1174CC7D3D
57B60C9DF22A1434E7D661083C7F8D02F91CCD580EA19FC753FF3B8C81C618B4
7F60FA4ABE5032B7ABE1136C4AEB513AB5F50DCAD816D501A60C51FB1F38771C
27251A57EBFCAECEE3E2A12AA6B6DC66B2B18F6D030844DFDAE96D588C704EAB
A8A055F8A2E33E28344A7A9EC8F2CD1865F8FE99AD7ADAD0922C1BEAAAD9B337
968A02FCA013241B4D42210504E4254BC7510C4BDFDF53EB3D5F54D35F685E74
E502EA63AC05DEF56481C0395E893486EEFAEB6226F2D6775F15948A9D4DC82D
6F60D7DC6F7146540053F4B84AF763EECCA28D26DCDDEBA956D677C9E906B80D
0C908B6A3308B89B8E77CAA452289A98F10329E0F6661A5D69B3A9B39695AC4C
95D2B8073B0700F3CF51B4D76FCBF266295BE92A624BCE6EE9EEF09589FEAD41
4B7358C0256872F31FF228D50C61A38FD38C134DE8C2FBD4D94ADD48BCAF6733
5C61B7F2B2B654C70F5370E255761089559C972F241B85C3465B3C551DA08889
24FE68EAA0080CF4DFCACEE5513EAF3E903BAB38790E8729785643D17BB03343
2F3E62939E834B48B4D7F9A1ECD0120BCE1EE6302C0AC1C7CA421B81B6DDFEA5
6902F01DB81F7AD4C4556A6C66B986A873AFB901376427AC06A1EF338ECB6383
C6EBBFB2B61FE04B0B13B26BFA8A80D5650D815BC8AB200BFF20B2977882BF47
9DCAE546EF6551176B9A7E900D060011EA3A3DCB102E369C03C964E135A81A4A
96CFBDEFF4DE11AB022E33B2765DF15FC2A853F595DE7334E31E8BAEF4799FF6
8EDBBA8148EA7FE288BAE5898638982FF191687F723B02A05EA5F95D79F4447D
B12628C0F838AD7ED830886303207DF666D3E2E369E4D47ECED72963406AB794
26A14A17B3118E50A9D983FC7CC1EE9EB90AA437D14EA2377CFD4893E36CE80C
B6F9DB98327322342EEFC4AB610AAC8F27F0CB185D054422107B077BAC69AA8D
C1EC35AF2C3E12674A53B3A5554EA4B18CCFDE020B76AF50EFF43A273D7BD0EC
942FDC0F4BCE2FCAD37FC498AD7D881491C1D06444915B1694367AF88E699F74
37339478BE40C39D57DD280BEF8C3DC6FA34E9CDD920B0F7E2C38F138EE0922F
BDD3D7BC6E31AACF67DDE0217905ED11DF349F54153281472BA8FC18BDA7E4AE
474B2BCDB5FC24A7087B8D7CF10A370661D3203C86D3D32879A5F548ECF75B98
07C8A60296C2418A32FEA362D83933ACA7B1AE394824C03E2B60F67B07F837CB
3303A57193A074A75CD8BB734D2D090457DD2014C50B246A7DC70C99B7DBFADA
1E01B81749EE49A70F3841D9F4437F9AFEBA80E85A7302FFC4B5D0A21DD0C5C0
5D82EBEC804D15C0FEF51E81E63603AB1E9281C6109145BDF78DA02134990233
2707106BBB5D307960EC8264AEFB56A44965744053106BD5B5E99175BBC27E42
14EEC211161F1E96FAF30510796F922E69F5EA83BF870D345327A582968548D1
C5648CBE6BA93CEA0DE409F9A545C3287761E54228CC345D7C5AD72C7EB3C42A
A354022B2595A07CBF1BD05B68870AA4FE5CEAEFF2DCF0078332084E34C49210
5344559784EDCABE56305EF1BEE14C78D1107EBD32D2B3818E7FA41C0527DE43
6726C968CB7177A203D53DC8B5A858574BFE1E1A7B100DFE9725026694310E4C
81D9D739DF88C655165C148CA55C7A1E2EB9AC33218BCA18B0B8D728F5EB7AB0
D7C7210B0254209709127509854D16573B1A35137947B8D1D0BDC602B0A16D55
0B6CE0190281BA4CEBF16ACFA4FD94730CD97B18366C6192D003985BAB6E49DA
96211DF7CA971E36C849446C77F005D897D944251600E7A6B304DD76E08DDAF5
58FABD99D3015F6D8CCCF97174ABCF4EBF0228321EAEFB90C37D73638049850A
D019D2BFC45ADBA04637EFCBAAAA8A72683C54B45F81F355D9D19496D0F80477
B51B9B9877E7AB494E1AA44C47A3C883DEFDE65E02AA6E2C1D7FA918D72051DB
6CFBA44520B5B5689C875412D210DCBF1EB1C95BBFFA540EE5710E884911F452
C33B54F20DA0A9318C09C86A3CB60F8FF548AF36F41E219BCE7F18B0337447EE
38A02F76C2350AE180C2CE885D84F4D18B976210456F13FCD152FF9102718D0F
C57EC5B1B1485DE99814AD4A0798392364FE0BEFFF89A5599AA782354983D415
861028AADD851711FBFACD0470F350D9D227A5FB5B497F4632B1E1826CFE0467
96B89912BCD080A523A7B79DE04D5E3E9E29E2C6B2A27D0F7DE207770D439E52
D42C8B3806FA06180F1EFF5CEA5ACE58B452EB3620F58FFF4C5A60CCF5DD51CC
3DCE518DD210DB1E8D7A624A37B48C6DAFB92FC1F21A4EC7894E2A0D724C3F61
5F6B7EA884C1A171A7280E8FF4AC0D4C8A2199EFA8517B8C2E43E8716526220C
E629452D507C04521B40E2F0C4CB23306030744F3CBDFCC6BC3388641BCD7334
202357494F739C8C730BD62FE336E47CC8CA845F90A7341EBF10B71D8253E6F8
FA7AC8DD1F4DA7BB92EE841F520CDA6E9E32F903296B80F87B179719D6338755
9497E6D1CE847D45300282249B72ECEB7969E7C8D0538240EE7CEE083BD1CE64
1C8300C59704605BC49BA3C89C2AA19CC20F76FD420E7D6384152DF0CDEFD087
BAFFC6C93AF8FE338E70387B4F1BA2119C97F4733659F7942BD75F3D839477B4
EFD118CAAF66882758648D18517C9EBCAF62677E87399AB9DDA66D726EB07DA7
230653A5A96AC2CF1C5C0A71AB7E9A77A1671EE7D22F08424BAD2A76790BBB18
E9A73A3AC40F568487AF4A9A9C7DF8232322B09B2380C063A52D3CECC51DE9CD
71C657B199A800BBA9D7715DFC217D2B3A1FE9844CBA467A7CA919EB41D7E8BC
0BD4D3EA61170F94D3DF372F5698F8F36DB986C6C618AA75E527C04ED4016B8B
573BCC3B2FA7E676945E56923350BBAC0CF7CE13F17B3C048B898E7B9FD865F6
ACEBEE0048A023AF77116B70EAC3684F5FAFA68FDD22AD422869E28828137C70
6B0CC3E51C002C5FF185A72F8B21D6486CD41A80EC051E875DFC7859542BA952
A714D454416CB94A007509B3DEE24F99E9B2877B4D05F3AB9FE13C64C2287FF3
E9D5D12E3A2AE94355A2170325114C5985EED0B4F03E7872206B3DC4382D8860
9728B4DAB8CAC5EBDC7F940047AD1108ACEBBA1564A034FF2F3B60508154B089
81B62A2E9974E37699E431A9B3E3471C609BFFD6A27A96351DC61E31ABD7C655
BA5E53124F7FC666801C182AF99D4A8A3DEAE18E6D6DC105623C29DD9D16904A
62D35521EC38382AE500A61FCE8D612125A9132BBE333BF49BE67A05EF66329D
204C9A33DBCA5087D9E044FAEE66BA2446568997D1B64BE9282348E3069139B4
14FB4171EA645516FDB1ED0186D0B0D95FF70261749C498DA498FCBE33353764
3482346BCD751AC2AD65E979A31E979859ACBC25317F23C7C0DA714AD9D987DE
A45368072750CAD0C9ABC3F4923723A0CCC2D98CFA8E2EA9517AC5FF1A9E33AD
5279557411E0F7E6160CC2B113F5C9F44CFB38976D7D00609C36ABD1DF64C6AE
6FBCFBD9E9879DE2E51C85B3597B7E6E0D92F2C3B62AEF7077B8FA5B0B126BB8
7FF3DF515ADF3D241CB9D6C81C4D965F85EA14F4839C4D3ADAFAD4EDED5CD771
D0452943086457A0A9E830C0658485CA60FC2621D7082423D46EB801F8502449
684418493C3E014E1F6AA466F61345D046731E6DA80678EC9916BB64EF2B241D
783908AD56EECF4C09B41756481D7AF31066A1F0C47653783A51198028FF2C46
980F42821A0BC9D23F0242AA2C6DD59F4CB5511FBAE3C48B1B02C98798499DB4
76B5B41D4821DD03215A441D04F7C6F42E0BDB28F36F00955C1F1B0F125261DA
0D2F7312CE5B3F3A1DF65DD5455F539B3EB6425D06959A7011DAAED3FA80BF13
0776D5B1969AED96B7999229531B651E4C98B0BD07C1AA836460C3DF99FD8A37
EFDA8A3CCF56AD9EE9F5DC02440C00A2A06E998BC239F96D24325048BACC9ABD
A9206E3DA37E5F142C781072CFAF2D3371632319B253DBB329415C99D1F14379
5E2A0F0A30C13DF094D14F4872A439CC85576DC46136E789DFBB551AE2C28389
82303318BA6F1A5401AB2ABD3C25D5C9A2FA8C392A82F8DC836C8AFEE9C9D6BE
A0F10C0E78AEEF5C198B41FF65262A326E23437A72FED312680E7155F6CD439A
A96488958D2808FACE11273AEB78CCE20956F1F48D71825B795DCE25480A49C7
0D16F721EE8768AF0C5A6E66411D4612096425933BB94B7B4387ABEAB4935BD5
7F48DFDF2E1D79D468A8974B43A4D5ADA81C5EC47F92F95E3333FA6D055226A9
58D75A0A63D485FCC987A796F51CCB0F6C7F85853F17DDCE552712BD7DAFDE8A
CA844DD34A2EC1F5C5C77453535F3CED5BD186A7EEDA89531BB7870689AFA703
C1420E2A18B1EF60A4D042BB742B4C08754D9F00C2C9FE5B9C43CB0B9D921B4A
6980F6B22FE3C7B7CF6357CCA868737C58E5E0A5E1340670398319FEA4E9FF01
B22C0BAD4AF95C85DAB7A4BF4D13E49C8348AA90CBDC3D262B9FA9C0EAFC795E
E82FEC8FEA7C675B171F8128ACF24D34093FC721D2AB878551E230E37FE21382
B89450EF7B02AA325DC5A5B0D8ADB5563588D38C1151A012779EA95F6F1D8C29
68A3E83FC00043F27F1E73B67016A5054B29B3A0400380EA3BA460046252E2CE
AA182531481CAA126483CD370CE208AAC25A0E32F30EADF2050B71A79E27563B
DD4FBD95600E6C1AA3D680E83A730A4642CE4F87E46CCA80C618C1814F112E44
5F32C0970817BC4051479AF259E0895B44F511485B30A84709054F39D5251737
5B943E33FD627F1A45160CD3D048416BA31CC103BC3FCC24FB8371A04B262492
5CBEE7787D68CABBE011703744D8AD0BAFCF511263B3A79824A37390769F2EDD
568BE8045467FC5DA356DFF298F0E2BF9E46CBE6493F708D6BB8FE78D5C3354C
17511541D364CA8C1F2723231562151679BF791A6809164532D7CE3126709FF0
83B86840C3A9B27F2B44615B72C93110F53373C50E14657ED32A3833C87D3DA3
F5DB311E5672052E05C3A5CCB847F0663D9582AA6642773A62555FD57DCF1448
BEC02304B79469A72A3CC8C866B77F225EB04390858BFF70300B09A590091679
3412AEDD15191DDD1B6A3FCCE3EBB841B07B83627A20855A6BEFC921B4896D04
E61B913B6C4175C1CF0C09C86486F508AE91D36AB08E7214960AC4ED7666DEE0
302A3F923AEC792F34C5A9EE4A2883849E7CCA7D5FD80F35173EB83FD223EC7B
62C2AA656388145B7FEF555BCB1430713B988916487ACE0AAF272EAB35BE27FF
B45D0CC6E61277E23AE3D35A9206DB8F5959CDBAE2D0BBDFC8720511E9754F3D
3E68B5D7652489FAE2DBDDE5A18D23AB92E8A97C2CE2BCD216B45A7F12D8A7E2
D22809FD8FBEDD5EC891750D70F99C2645865C0356D3C5E1B156EB62E04FEA0A
55503F88BFDF011436D9D508891EDAB3B22BFF3FA494F5FBFA38486197A1CED5
292DB6B8E49D4469DC7E5A9141AD2C56C395D1B1542BDDF61B5A54BB13725B28
DE3AD77F1D2FD848EE14B51B2D985FA01E005DAF108ED84B38AE432E26D07AEA
271F903D7BCEECDB602A670CA6E94C8BCCF83DB0AC7B39632F0D44030F7584C7
1AFECE41946AE57589E52A9DAB9B4C13315F71C74E886762140314F3F2106069
D58578B215A96116C1F8FFD925675379569A1DB1723E07A385333CEAE7D0E18E
DC00A8415D70BD5463DC64D0B5DA5324939592A8CF830DEC524749A6C5C0F205
71C577ED03D63028C0AE37575A71EBB8954C3A90EEC264E6115950FC91D0DE9A
5D8E2E18762F7C3094CCD0E1DD07EFAFB9C0229B52E8C4381F8AA02414C2FF62
583D166455F7821A44C27B70F2C85EA632F544082BBDC9B77C55B4D4E68066D9
BD4156E9478D3251ACCC0EA722FC9DCF37794E7186404BB358D7E5031793A4E7
0219B6569340B59671BD93C1554B4F6421A437931A2EBD816C7AC81F42E9372D
E5AF66525EBA8965CF383F4F4AE6DA98D1611D05E59ED9BE07F63A4957485E52
C2815090CA3B1221A12F749E5C419161FC98D9B711D0DBFDE94205CA706005B3
B61C2C80341A9852E7F1E520E0F0F50C287A850CB8F474F37399F5CF0FFD880E
519D305B0313F71DCAE5B69DF9551D56E6DAA3D4B800D58CFC32379D202E9FE8
70D53EC343C11E633D4D471A4D7A6449D75188F3F600D5FE70576EA4213A5455
39CB2A58832AA92DA5F34F197E3EFBF17115F9A60F56F78D26B63043DA049792
55F46F985FB09548A5AF1AFEFFD5E8FC133B2DD91215E75E596E08D144D0801B
855207E8C79FE8C1E98BACBDDB68AF7CCF8E9071B7400D28CDCB4D31C8E5E6DB
585C2DD28B5C0305C968BF0DEA21415D8D35C6D0A1B3322114B056BD56EDF5FA
00BD071446DB6AC8045322CC1A97A9B09A310929427179385ABB10BAF0E8A484
D4D688683ED2B878504A44F08E943886E184BC32D3AEC992B620A98338F962CD
1669D18AC1550B19A610AC87D4D4B0A80797BE2BC7CA32B4541A0AED2F504EA1
F92B4D96DB412E5FDDF6355DBCCFF589C204206DDBDEE99048E6D8D3238AB7B1
66C4CD509A9C5A8B4911B8C82EA079623BA19E2CD19ACC174A587AC54A1344E4
14D0D88A66D6B4F56BEB9360478E29A020E377AC092A285AF9574D6391C93B97
13965E239269385ADD16BA311C9236501F2717DDAB52753B36705655AD44733D
2E25CD1E5BB0CD6685444271EA2BF01587CE8C9EC15E2A4FE2658D8835158A2B
E0E39E2553001E8333DA228AA2169A24F246F586326169BCD4B8508F98E9A4BD
BBA40702199AAF7F906A361BDAD5F0C921B6F044348C7853FB4FBAEB6078B410
935DF7D6D5064271899314F198A26AFBBBA1E86D352FF8A9BC757F9DD3565AC9
CBA3B272499B916012CECABF4989E9508EC480AD837EEC61E1635A6261D204B3
F0A74072A491F62A09D70000B1C715C36D91336AE0304148313B27E1641665CD
C62F480030A6745372290334969E9320AF8E7330A29CFEA10FB6367627ED3AD4
456E3A67BF5BB49920F6FE6620D69F58BA165C38AA49D69F2E0D329684551C90
12158313A8230985FC5EECBE80F4F0307AC6A1696E4EF84A749920A0F64992BE
D1A2323DAB45601994C67F6A07F238E7B098D636AE141331BE35D1D5308C927B
A3940B773F20E48EB70C8A5BED21A826EC20AC4384A8CFF8CECF07A5913189E5
4F54A88EFD2D990D55E3781E25465E34B0E51938AC3ECD62EBE43B473FEC1F76
DA6C55089AF3D95E3B850DE236D848BF0FCAB713EDBFE54E4BA5BA08543D80BF
EDEEF34B2C0D9BA404F1298C27D6C69CDD6E0F3F6DBD68716A5D86A42D4AC9B5
4C9D41E0DCB52E647555DB7172CB031B993103C259CF4C774C9505F9C992FEA3
471A971C242D395273D98D7A005395D8821E2A6B0A654C878C6FDF951D8F9ECE
F97273B7554C01E052854856272A3680A51EC039AF5DA58C53421D968C241C48
6AEFA942F68F6E8615BCD0E6CFFE077688C365888921E4560AACCC98CE06A8F0
9FE0D3E9AB19869F677B7E8B05981B519B5CE4E5D6AA1C6F813D68C3D0E18DEC
5682F646080A54225C2920E3BCEE9D09CA5C60F22B07F24A26DD84B9FB085ED3
41B449BAABADC34F4B6DBCBF48F54C949EFA278B3398FBBD0D4765CAD178A6F9
3C5217BD2547756D5A915EE69CDE1336040C536CCFF439BC8E43553D813DC1A9
B63695100CBFC23DA2F68B499386161B4BD1F94F022EDC64B06481A32733AD83
4B294F36E3BE132254C3B0A8DA1B30A710FDA8E19C96C0CF4B8DD9CE727EBBB4
FD0C1D5E62A860C77CDFC3849E58F278AF879D60E59EF98DE172104A59134C57
CD5CD0305BBF875D7087C38B676764F90484747EB6E236A366D8046477D04EBE
56E5F7EB5DEADE51BF7B714B972DCBF7D9C11B71CBDF3E2B0FEF648E977D3EC9
2D101BC75248B957A4A5B851435BDD511017E77DE30E4887C0E7B8F2A0D884F8
C09A5A6A8572B933865552B6B9F998FF85298CBBAC78BBA0A3D3FA6680A7C734
917A00C16F249A333A1F83E14DFB06C6292C65BE92FC109B2B38EF8C02F86120
E587F7F3E5E0860AAC284813B298DD1D7EF648B69F693C23EA484E50B737A121
5CD4D151B6435DA8D43A7D14F9806D2710B94EF62DC6AC474AC2F11808940D6E
9AFAA51EF6C23C32E9741DC2B9D578DAF502D940AEA08876BE071C01DD020E92
4DB6ABD954BFF51D758526655FA1A05A37C9CD769CAEA7484F17687D2F3900B9
524B578BCF2CA6C2E48A488A5EEBF43CA37A12B2E1CD2F18F2D5563CFAC92826
22CD698615EF49518B3ECB53EC320AAD6CECD064FBCA7B5F67BEECF4995DC35D
4691A78401D7453549879D9B14A6C73F8BD7A245A6DD826398954FBD5E7ABCC7
7B6ACC91D84775A03BD1F7B9955547F2B0BBA26006FD4C1AF44052F09F53B087
A3E5284B1C41859808C27C7DFF5ACB2AF407F6AAD2DE8B745EA3CF0414890044
719DE582F2E79B9BD4C929C8A03801A388315DE6EEBCAC80D4830C86A6D07647
3DA09D5EB6334E81FD2B536C53C1E6FF2C97ACABC52E9DB146BAA3A8A02B7C53
0BED308AC8702F80A9DE69E7B499C26BAEF2BAA95ED2BB89444613EF37B7A971
4834A884A4957B1168D1E1F46742DC29BB4F0E6D0A81386816EAF7CBD2677FCD
108F4166A65971EF3C4EB86B99949ECB190D3C92B459F86E2DF7096A631712F5
0EFF6DEC3B15060C553536AFA1AB550740F7286EC7CF1CAE3ED55EEF399CA17B
715C8A6DA4099DE692F23664DC71629D041E4669A05B6754EE7CE90EE8C3B030
2A0A8E141775ED7DA74734480B48D114719BD5B3596576BA928FF7D401437FAA
45A7875DE9FBE63BEFFEC23FB701CDD3C429BD4CC3F96584C065FAFEA3EEC98A
13787627BFCAD617463B1D8D5CB6770DBDDFD8C0EC2F403A5ABB10BAF0E8A484
D4D688683ED2B878504A44F089AECB8E941B1E7F573D8C0964194509C21E8560
0DCB77A933C1FFD3D1EF05061D80B5E3C87AC8A76D16591A313198D01BAE3BB5
6977F0E8D21158CD18F6523CF7B633C9D7DB81CFEC33DD7CE3D15A87D1A6367C
AEA1CC29DE4D3EBF8B5872580E379881BE02909D7E57B80AD9F00C6CF69E057B
1A71343DACC41CBCDC0E30F2E76DCB7724F4917A6F436B823B1A2FD914DDADEF
B5C5CA3A43E344994199A75DB103C3AE71702350D62048D1958D36E17019B49B
4770CEFB37B0EED373279A334CF98A4F749DB6B9EF49617809FB8B2F24322AB3
10F16A60F884A5889DE0D4695F0AD014E72156DDE45CAD34F29913BBF4ECFD83
ADAE0F66B2652B9E71D3AF022B675E9A48B8C3E765FD671669E0D271F30024C0
488C71FB30791F330A89AB1CD2ED6390ABE1CBB68FA80D3BE4430E9C9FFF5747
D196541BE96D98F0401D2545E9FACD008B4ADB50EB9F0238514DD6544595D1EA
952901FDD537C1B1EF54E133B020E19F93C37C5FC2502E459B18ED19CF7AABFC
7D45935CCA74EEE28CFA47054DC41A389203BFB3D601BC9A44CD13069FC4A80C
E9AAE79F064761AEBB2558EF18E945F06E37B435FF635B80BCC4B4912AC3076B
863D865D83AAD62E2B5202ADE986B4B00DFF04207C0D5E50634A4E01A6DBAC88
BF012B53F8D3262E9BA4F370699C8678DE73D14D8911F60949C075630D5E2991
2CD7E6362E52891A80DC3A55C75248E4DB744F6E0C54E83C14066C3446C36E7B
69063847180B6DCA83EB97A55FFB23788271A49C53225C2920E3BCEE9D09CA5C
60F22B07F24A26DD83F4F260444E08EA8214CD4647D62D216E540277D26CC543
C6623C7F03BCBCD562759C12B4BFEB798B4578ED88B2E29C613EB234EA2AC527
C5E0F43C29B797B00D04AF6B534A749ACFB3F74DEAF14979CA99648AC7971810
F7EB9D2F14ED40653C899AD3D26C369A7FCF5D2513062CD4155578F86FEB25C1
ACB394183F31D783711AE45C4D16119B366A8F2005ECCE7B2ED90343D23E006E
CB2828450D1E2F1B972B143DA98F5CF93DB14805DB66731CE36CE160FAFF76ED
5DFCAD3B0F3C59A4D52A0E0346357CE6DD0453682BB3519205D57BAC8E8D1035
C703855410DD289929090294676AAE3ECABB2F4E65F5271B585DF3C4E7D83D5A
2230B4673692A3A3E95A52591D79473418C511E7FBC75362064CBC02FE63B784
0E7374C5EA086FD894AFCA2AEFD997AD21C556376D21FB706D26251A2D61A98D
51B6F3880C38FB2349BE51D981A08AA153E57F9EF1220C9C272DCD31C53CD08A
BD163F8DE60A4579474A7060A9FBF7B5252C0274C581A2005CB515170BEC29F9
980E9E3155CB94633C9CA212ADDBDCBDDDA4E87A9BBE3EDE32DC8120E6304500
2D044B71370D2195B0745A347A57BCDD94A615D500276FBB0FBBB421B64622C3
5D16A5920E0BDE7C64BBC23EA554AAC9BA95BA57603A8EBA86FE7A0CADC3AECD
739C9C425D09CB50B4B4BE281C7CF009EC096036351451AE7425A26CDC319A31
BDE48D9A9E7142687362FC574EB79B143A4BC2515A46A3FCFA46CBBC2310AF7E
66F09F04BBC8B01F009D09BAD4E0AEE22CC4FCCC7A4BAC3D34E426D7D9D90823
6037C83A7097B9D57B97F5CD56CB80CC88111C9E1CC5A95D86E66763AF781294
F18B5E7ED330B352D98EA20DAD98F7031F94793F7B3A279F3291925B9A3579ED
72125D6388D077A2037B7D29EE7053D34AC69C2DBBB9FF00AE72F942042D778A
CE5C18720E3E3C72B08FB19807710498752E1CCFBE2DA0F3D2CAE3F2C028C5EF
249DA376F0F229976064291F05A2B5F750ED1A437DF6480BC21F9903195EA84D
4365B68DE81582F0FA4728B81578FC2EB39C989C6B500BD034F31C23B04EE90F
CB4484AB2053E8DD69A2E935DAC0C86D9C66ED01B85534A1E39BD5C20DE216B3
342CC9894D177FBBF1DA7D23111F9CE050A46D17DA14A9463282FCA08C17ADA3
3296FC68701C42E853DE286F4DFA25EC7F9E54E92E75E48291ABB565C1F8644C
D5D9F7EA30EA59334CFAF4EF43F7C72C787A33E70D3F3F47A37432E69B29DFA8
44C6B2085D6A445D1F877635AD15214DE56BDDA1E3D2DE9C549844667E28F6FF
56261B6FB1D404A73E92348FE74AE5B8CED1F61DE6B4F56754BB3FE1A443CD7E
8E17FCB8B4ED57D7C61B0C70972F86F6764A7B876F5A6555C04D0A86619FA462
49868CE8429DD6D77D99B505E6559BB8E9664CFA5CB68AA71040D5DC570C993C
158C2C2C11CF6126D1716B808D97E787F5BB19D90FAEF1596A2319473A95AB28
7043C5A32B1ECC192FE012F5BFF946CE8D7834A3410F5E6EC14CC8E473378982
8933DD55B109F616080F5BF29107A418F686DD276382DC118D0DB9EEFAF6FB97
D66CE67F532CFD2FF2ECFFD0197C5374FE3D6DE742A6980C8C55A9DD737F2069
BF9A73FFABD0D0D68492768C7F55E9952987100AFC0EC6E59B0B6301B1902F23
3736792B3CCAE73DEF3F7438ECBBA29A27CDF940B9C096DBBA4915FBF8489EDF
6E2BA563FA7F0397CD075EF9CD41082CCBF63E849C48835E14A9DFBDB4CA8582
DAF2809A41072FD817E7072D80C54B43991D4A47FA52E1221C072B8C983B8A83
BF9E6D88256C4BF012FFB59340D23E1BFE1487D82689119BB85672D5E84D3B54
28A9558234C569604441691CDCAC602029A2A38F7F2648E1819966BC2476D4AC
4E4347E74591994A23E99F51EBF66192E45DF1F3899D636D518807D02B5D5690
931A7FB96C757689A5139FB1A3D7983862931AAF085D2BD19712926E230DD02A
EAE6461EDD83AC935AF04BA71C9E0244FE096571F074F07CC1AAC1DF294CF839
120053B7E9268CF93B9763BA70C77A82B01C2B17403B9007DA39BA7C96926AA7
769E7702305CEF74EC07C79EE7E2D42213218F2ACBB2F5361C86BECDAEEEC705
F7A8823AA2943C05C912B7B60343A7DC7A3F6F1AEA9D874100526E18C29421DB
4FEFD57CD2B0B7721EAF2B21AB693B970F89B6BA6E8B05DDF2B538BC24B526EC
DC0AD8A2E4EF069977E88971C070FBAE2C25A7104589EF3882C85E8CA9ED2804
4819A5F8BB070D9D04A40BCC9D3AA321C8805B2C22BEA0036BF28FA9E0AE74E2
8C8F300E6FD6F33FD53BBC4E00115880F608DD3B6988EC6038D4B9612F8BC361
C35875B7CEB0AC221CC2F141AB6BD9951ABAD6FC67FE4434D11D412FBAF34855
004E5E47A0E5D6D2A513DCCE575B832D0844553EEA4738FEA3F244DEC95C3148
293B0952B0FD400FD469408790D6EFEC98821433C4170D36B73C2426864F0381
0F9FFB98F07CA6252C381A0EBD6B1C70BBF86966F7914282CC412D0F131CCF4F
800D0C3E8BD00B108257F92AE1869430C6DE57F026F2E9C82F572AE49002D43E
0BFC4D3E0EB2729F2C58CA851EA676D738B40DBAE7620F27C3A01F2DA8A5556C
FC8F4A9F067ECB8C163606C3851355ACA79EF5C5033D499C434C165785DC7B08
5956E2B31CBF164EF31284DC4C49E1D55DC081E8B58F2F29E19F7D715AD567F5
56BF4DB8239AB8431BBBAA5E86057757808322DF216865D48D428474F0A80A2E
23211930F1C5D7F231365BE2C51E7110DA3CBC1CFE349AED0167FEB6593EECBC
997193BEC71A63F7B741344010B345394F22199DE571B5E71F57DAD370E98E31
FD3021485E3D82A817866FE481DF6360BCC2154B652F0EBFBB4BAA62641F852A
26CBFC6A61A481F1AB43739F20CA3AF2491CCFE7D42ADC53F67BB32848114C36
F9E6A25F53AB0F25FCA6BB860E709684EA67590F1A83A39CCB7E05896DE70696
93EFC870CB86162614133E0E2C08646BE73DF766E216FCC9E0D3B13991A136BF
E6D2F33F2A6FCA03FB36EF8FFBBD71CEA57FFDEECE1C6223109832853C664B53
C4ECDF81B0004DBE82B86EAEDF5FA5A9342C085C5FD2C774FDCF4DB4D4997018
28FC22F723CE25814E30876470F16C5E8F87F74CFB89CC763954190E9D909671
965AC8849B3B885B7DAA70ADD8804FC5661CCCBA123B2C56BCA4F1724FD3C64E
1B66C4C9B7BBEF8C466E8E71908038D3C02B1F5E8293BE9BBFE63C5BBF46B92C
DE3C52068336290D74705098D4582CC07991334762A700EE46CCFF0F8222069A
239E9C090B5B26813D247827B40DC36A2CBA4A701C45942DB1C91D2734D2E252
BAE9299E709FD22DA1E8E2CD3FBD3C82D6B76DFC63797A999F4405E08A4737EF
3B38F974D988A0876FF8AFD9374011AFBE3B5417B07D10B751B4D088DD921DFE
4EDBB7A447DA4C99661BC83BBC77655DC7D7D3F0167239170D82A1EC5B2469B6
6B4160DA342B14BE2D13F07D54255AC3CE51E835850E61D153F982B67F7B706D
57B398D4C89F58C85445101468001F40721E8DADDADEF4778B3132C7499FE427
8E1D36A434FAC6E77F6A0FE97FBB5B18B8A9D20D1F534C56C075C97D92490662
D7A1C0F7540FA825DE6E0B910F0CAF88E6309CB00AA35C1A0B21DCC7556834DD
3F66EFC7134F543BF9748641D4D5D80CEB089401871C26C7DDFC5D5CBEEAE249
871AC12C29BAC09A81BDB082FA5134A367B198BF1D5888DAC7AF368CF215ECA5
3E73C0C347A0C47DE886A1E1F78EE7BB132ED56EB6794BBB90FBF34BBEAF282A
69007BF678CFE03C4A91948FCAE03F3DF3E6963455CFB22972CD65D3BF92BA1A
84845B61318A6BEABA06D2F8C0210A26195471815D47CD6A5B2ED1DC997146A2
2768AC82C7B98CFFC426634F3D05C8F61EE2068824B4AAE5F3D674ADA847CC76
266C3DC920559EE4F73496FDD2B58F8B140D41A726830A38C7B58AF68CFECB09
313F5745B02B4BB60BD80D11F86B65BB10B62593DEA56DBFF08DF61B80CF18E1
540FCFF3F25B87B75D65CDB23CB54D3C2666ABBD1D7FD20200638DF7E3599F62
B0286A83FE867DE833DA3E181D456AF64058A403CC63CA5572DE3BDD86015BEC
60CEE8ADEEEE96C2499E4D5C40DEEFB9EEC8853BB3E2BD7F6D6F4E5983D415EE
EE370D240B29E25042B9F624674250A728C5C04C53726596250661D7ED3F9424
B8B7E988273E4751A88881FD5D5E7CBA740B6A4A544179C5B3641C5EEA4D59F9
8C4B03FB77685A0AD426DC914790763AC5F9D7E3FA7FCA7E8558FF8EDE9B11BE
ECA6CEAEA814DF82F5AAB27AA9B071B8493902802AF4206253C2DB076270A01E
13666A84DFEBC5A5DC04BFB1D49BF5BEB55C2EC6CB22155A37D36FDC2843EDBD
271BEC306E1817DE0DEF648E977D3EC92D101BC75248B957A4A5B851453720ED
51B9123DA0DA1143CA9AA32E28424B735BDFEF4890D3FB68C544D8790143B7C8
FFDCBC8B95F1B879C6050DEA1FC1D27CC6A4A1E67DD67ED59060159FBFF46CEC
88DE74BE36312504D8F7F6AC051CE1ED882DB34E14C9620BD6760B31870D69C4
C15EEA09E1831354F7C4A66651C65182B961927DE098C08A66D1E33FF54A29BD
64A57DE26B5C3E7CAED86C85B5E190C5C8294E49F4B99C908E7CDDFBEF799995
98E57464E82D184CF76BE6CC53B06D531DB9D7ECA48701B5D4511FF86644AE56
F463938254323C21D8208CF7F2854D681BBF176A08D3C975EEFAD3F2EECA1995
94CF093FB8D49DAB28DA0EDB9463FC653F6F87D1A473A40A3EDF8B197CD2F369
9339E66CA645DE5D3CEF127DB53383AA2FFAC31D3058E6044EAFD51F58A33BEC
1D91D932FEA8A790C218DD6FCF27146065947DA7F7282FBD398422F52DD7D4F1
99BBD874DD442E19D532EACDC90C78A145838224866EA5C1299D94203D112A7E
BBD5193878AF0D3EE755BD5958FD3632E67037C4FCD495F7B532647689F1F213
6657C025AD24664C9A2A718813DDF7E2AFA021A6B5EB84E7D0850954AAFE86CB
5B340FEE679C2524FA0A0192DBC4C4BF0DFE03973BB79FEDACB514713586695C
0797C7900E8E6AC46A6B34ACEC55E337FB59EF89B24C28163F9270AA4C95CA0F
58CF6DA72A3CC8C866B77F225EB04390858BFF70300B0DE649301C641D45DA8F
0F3F695B404F351F8ED22F8D659FF4A30682892C8314CEC9BD005A5B0610214F
0A6CBB7F133E2BED41CE8DA5C50E9EDFB70047B6D2CFA4ECE8A9B0C865179B3F
AB830E1EAAC293AE37EE0993D38EEF5A9675B16D071E432931CD32FB8C360C24
FBFD400EB65F8FA53B5D5FCE9161F188077CC0963A83396A250BA5C883FB9B33
DB98E520A332422433D2DAEBE5ADF4585469D5191951C3EE46B13C8E08646484
B644D0C2556467A4104D101A5A0C0601758F644CA8B09B5C3E973F69EF7A9EDD
4C5A69890997C8243C404AF7E10F76CCFFABDDE4F773864DF886BE2C21FF7BB3
47D45455A0628C7EEF92A86664FA20D07AEF6DC4C3D25B0E6BA61F704CAA3FD5
136F8F3B0DFB89AA1D0FA3717BF3CD52E7FC86C8FBACFDBF66F347EE1D6DB954
61595C9938581921663D3F263122C3B1AE04709B28E38E80485BAC718F97F280
5DACC303CDD10D18F3D2433B05EF6B1F64A14FAA7DFCBA562AEBE8205F2653C6
08EEC3D845B12F3975C5EAFB917D9B85730A4930EF1E3E733292C806C80C8865
645C656072930E0A221BEE8B2CD455AF9B5F2A6343E45D28AF8C7B561500E9AD
B8BE5D338698293881FF237E9135E6C47FD08FD7B68352CACCA2D75D486446E7
369DE487175AE41C4352941A09AB5A195A605234B9D3F08D50F8EAC85B60354A
739F6DDBB748D0B86F21F9497121887FC181C644B1D6E9C29C2E65C25A7376AB
0951A98F668907097E2ABD9120750E6F5E40B38FAECD02D709420B4919855B84
28BDC73E408DF460EDA11739AF3788BABB313CA9B72AA3FBFBE9BB816B42EDF4
45E9984AD71187BE7D6EEB6EB3037ECFF18C13247D13EB838401FE050B089354
0293D5FAF5B4BBEC5416501276491B79153F8DF73AE8E2B9F5FDC218C305A5CF
3A81942435388ADD4BDCA2FB8AF83FDA1E8ACC3588B776A0F38DA32B37B3D6B8
75062F5638493156301A8EB7277801B6E41841E2DE908A2E4FF1752C33E6FDC9
67E75503D554FA90FE87FF6A567AAFE49C9CA1CDAECC0FFB2C3B2EF0396CBE6E
45181D6D03988E9727FE6F8AEF5969EFF87EA400501A3B3236EA1FCF0C423A86
C57CBAE8F9F82E65EDBCCB17469C401E02ACA6C99A0C9920CE6B42AAFBC28BF1
A25BB7E76BEDEEE6A8C24AB041F3C6E2B44AA95479E4E9813350499BBC1E06A5
D7D9D85748FD8B81BE6AC0D179D8120F9A17CF653245AA60D404B3187D0FEB65
CF565A912A654AD47D419099F0279F6755E232669B65A7A46A6161F9AABF5AD2
7361E68D79B52B6C9A96C1A40596F048A31C4E0CDA2A53AD5E8DEEA70B9D144D
3E1EE72343AD613C086D475CF100156741524F3B68C24FFB3540448715CC3EDF
AEA40FB98C1F251CB49EAE29A3AE0601DB63F00AEFA040E9F80D1180B1FCA1A7
5090DCBAE8DB96C15B1849DDEA817D05A4BD642DFAD8B91BF0B9EDAC69886326
6D7A83290DCB8BC01CBF67436CEDBF502C4013C1C4FB989C5C331622A8090D0C
2F709654C55A596B7D4F164FFC3952CF9F04A95ADF3F80F3C4CE59FAF9545125
1659F162B1EAA0489C6D09EA559B9E0DFCCA1A39673371E8005C2A8E32152AC6
76F9B1F252F8D0ED029E610CFDBA894C8C0F2BFB2C8381E13CB69A288CFB8408
890ECB590BDC976A8C93E809536E9087CCA809106A42A594173590DAC64E0738
6A0104CC5ED2C68B08B6321F881E98B4C5193E771E9A7D0B357E17E473AD9FF8
4AAEF7E144982C6DEAD461FE4C204A0A6D7BA9819C8F68CACFF439CA1A153479
7CA46AC19F1F91712B30A195D15523961A2724F5C33A8738A4105E394ACA6EAD
2890CE7643A5C44777DDAEFA56B27091598B2DFB77BC1215DA752B69298B3664
5A69B98423DDA04A18DF5410EEECE6E9471EB02F38BDE00115A21706BC3AE8F2
9C792E45583B16A84E1779CADECE0C75A70B6E70154AB80C5A40BEC0CA793789
74A281B8F074456303CAE324705BE0751CCDE651FB514D0FEFBBF1F53606B848
1ECD5FA685C54DECB92073CC036BA1DC8D789B86226E38B0DB3AFD1896686F8E
478603573F9FFDD42D1DA7BA6D125B96B6B314C7875FE456A79A38623745FC7B
C778B3765D421C915AECD756654DDB145511CECAF4267E9D378CDCD13B00F96C
45B113866881201429FDA949FE1F364C2F744079F5937E2988B08711D1C26A6F
7FC2E24FD64F7B74BEE205BB7E6DD226AB585C11A08A3E33D5F5D10E8177B9BD
F9B526C14065D013427D282B07510C3A6A9597B5C69D8E48C54F7809FC501981
0C4A106297F15E7E6E7B9E42790272E28447EB420D12CDF741FC2782257F20E4
430D54B93AAC4A0FE3595C5D7E2FE528C85539D2FB653AA5B93CF70C4EE4A172
4BED4905EDAA8A46A337EA53E0871270B7FF6F19FFCAF6627099C08DDE996F9D
3B8A2E27B9D4BB11A7D7613AA7C519BCE1182B6C30F93DD0D7DEAF262C2A42C0
2E3D1C41FD46552E7CA1B36B02C66505D08E17C2ACBF106156AA2D5B790AFDEF
FD04B04AB3469F34999A3BAB4047E252ADB05C6BB87648C7A4EE7A3FD4FAA95E
98C99D2E5C078B5199A8AA5AC678091C4C8B2CA6692F3F28B7794A9FE5A62A82
32106093EA39091D5B4204AD9BDD2B9ACFC3FF359CC8667D7887C9BDB503D1ED
64E643D728556B4481C7F77B18BBC1EEB43200DB0C6379BF1F5FAF474A0F2127
19A259549EF7BD5AEFFA0DF810DF1E0034DCFE58B45A71D4E9FDDFCB897B46D6
C40A3B4BAF0C4AFBAE8CFD73A596F7C7AF437B8AD4F2F652EDDFF165186D73C5
275BC9638D8A733D3E5905EB64725D9D9140ADD2348CA838B3A1CA68A22C5A51
34CB01D450721319B911DB91692758F1907EC08F5E8ADB0E9F7DAE0D0486B75F
E82E88EAA03F65077776C747047E336DD497E22194A490DCFBAF39159FB3A63B
24AA15B2D36ED7F45623D0AF7E21A589ECF73E8ABEC3C69594738E8945AAF2ED
1D90FDF92AC9F25075CE7D76366B5B28AD82661F75AC6C8238797C13451EF9C9
E21B9C60F64B2455C109DEEFDA4C340958D49A0C8B4E4459B7C691BF6A674655
823DB7D1D12E2435634CF69890D14A1FF76CDC75ADF83339A0A4E5F1AA194B2F
C8593DE970B2C883FA21B46E2BFF68C724446933E8927F3AACE64BE6623CC6A3
6CB5E9E1260F6699D945A611A7EA348DB3C86BE4B588DBB9FD75BB548E4988A5
80586486CB75E1C4E4C7A7C603456F2EBF2705ECCE7B2ED90343D23E006ECB28
2BEBD7D7CDFD1D6BEFB5B196144E026FD76EF7A00B67824026CD9C4CB0C0C97C
BCBFCC599720FC9CA0A2B44361747D6E81960CC0321BF3AC8193758B4610EF33
F894F278E517DA54270BFCBA2FF5C2064628045617B0D434CE813F69456FD365
BAE24F737E9FA5DBC1CBFBCFBB273936721273DC120969CAAF54CD5F89FD89D1
53C58F0D648A28014FC7DA1A9AB3C09DD30928904494416E3DF1D6CA3B527FB8
826F7F17E5F5D5C98C960B3F7873A164EEFCF23B39579CC1D94AD59B64A54DA9
FE4C01E4EBADFA3C5757BA5C9BA0897E711DFFF1EE6ABE33479FC9E093CAA18D
20F308C43A95299545F27EA902F484D7EF76D8BF50E4A992CBCA5E1285AA1067
D470813C4EE0034375EBCAA822840BC8FA3E02D9B520F7E8785DFEF225DBB69D
606219F17E801AF5F30613E7A2C3D32301ADBCFAACE88F804DAA2B51B443839D
49DE5CE537DF8352F46115C8B3E4679B46C25E44BE0A77A52F49B360BDC5FD87
44E86E19C9B1F9D62740A6C1E4ACA130DD76A67920DBB347FCCB3A3B7622E5A7
04402F59B2EFB224107BCE6BECF4A6FBC27D932CBB65408DEEBB298E1EA6E3E3
EEAF3528EB6CCBF43EE9C02CB6F255587300FD433C3B4D9FF294537074922108
1D1C75F39C3FDED02C7B5394E5358E70A516237FFD7A58EA0C7A39DEAAFF74F3
865CBD9DF5199EE51515D2BA0D44855014654D1A999CAD1A5E9DD35EE33E8DF3
662840E32409951CADA934F8896AA60376DD0865F7BC578D010289CAB665AEA6
C2A88BFA33BE22261AFA8B150CEF52C48C478EADF2E58D3CB1CA23A332D92C80
D89FAF2BD300218B879BE060706CA4081CEDEAAE4CA9986794B83227FD4117B2
7984A141A4B19E695FBC8D4D3C542F83821C56B4F44B70462F9975A6E314A365
BFA26DAFB54B00702F9DC177B9EA20E7A398A633DA1587E3728E345F81A68635
81C22A349B8AB7B3BDBC53EA79B2E8AF3DB3E40BE9E22D7346A518C7B6B74768
50EE3055DC42F2E66AAA8E40FB4F9A575B9C83CF9529AD5E622C5ECD72D3C635
376F88F28238E2BC34D15E5DF40E5B5AA30AF7284A186924F1D3A07710FB1D1A
1DAE107AFFB1C6759C04C3E507FCB495AAE4A10B6CA01ADAFDE9A3FB2169A90B
01F68B87DB15669D9DB11CC7D2A9C358C6CD7BE10F253C9FD64B2C102911B1A7
ECED04F404A73C533DE7E6939262620A5A94328781509A5C4F82A23E3FC8CEAE
6032E8B5A9B42CEFCC75626861C86A5F677E76C5FEDCC0700A44FB1C89313483
A9358BBE32587E7EC04F8876134E5B5D81C916E7AEAED0A847331E84A61E6731
69378F50886160BA2544847411195FD1A4B269D118F9CDA8DD4CE67BEA9D73F4
94DB70D53E7EA2561BAAA0451FEF267A774678018637FC87BFAA82B8D905D4CE
8F21DE9FA6E2578F9A146E90569E6551E81C3FFD0B1858C54E41C055
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23867906 17900936 1000 600 600
(/home/fenarius/Travail/Cours/MkDocs/docs/pdf/C10/couches.dvi)
@start /Fa 137[25 1[25 7[21 2[13 3[23 3[25 18[34 78[{
 enclmec ReEncodeFont }7 41.511 /LMRomanCaps10-Regular
rf /Fb 22[20 111[20 5[17 15 2[22 23 1[11 2[11 3[20 23
20 1[21 18[31 1[24 5[25 4[29 7[22 22 5[22 22 22 22 12
15 3[17 17 40[{ enclmec ReEncodeFont }26 41.511 /LMSans8-Regular
rf /Fc 240[42 15[{ enclmmathsy ReEncodeFont }1 83.022
/LMMathSymbols10-Regular rf /Fd 202[33 33 33 33 33 49[{
 enclmrm ReEncodeFont }5 58.1154 /LMRoman7-Regular rf
/Fe 175[53 80[{ enclmmathit ReEncodeFont }1 83.022
/LMMathItalic10-Regular rf /Ff 237[31 18[{ fa5free2 ReEncodeFont }1
83.022 /FontAwesome5Free-Solid rf /Fg 22[37 121[42 43
8[37 2[43 29[60 1[55 66[{ enclmec ReEncodeFont }7 83.022
/LMSans10-Regular rf /Fh 23[52 110[54 54 3[42 45 2[60
59 60 93 28 2[28 3[52 60 2[56 13[65 43[33 39[{ enclmec ReEncodeFont }16
119.552 /LMSans12-Regular rf /Fi 188[84 17[66 49[{
 enclmec ReEncodeFont }2 119.552 /LMSans10-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -525 -608 a
SDict begin H.S end
 -525 -608
a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608 a
SDict begin [/View [/XYZ H.V]/Dest (Navigation1) cvn /DEST pdfmark
end
 -525 -608 a -525
-608 a
SDict begin H.S end
 -525 -608 a -525 -608 a
SDict begin H.R end
 -525 -608 a -525 -608
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -525 -608 a 0 0 a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 0 0 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray -600 1668 3024 2268 v 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2424 1668
a
SDict begin [ {ThisPage}<</Trans << /S /R >> >> /PUT pdfmark end
 2424 1668 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.2 0.2 0.7
TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.68 0.68 0.88 TeXcolorrgb 1345 1579 a

 1345 1579 a 1345
1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf2

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf1

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc



1345 1591 a
SDict begin H.S end
 1345 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1395 1529 a
SDict begin H.R end
 1395 1529 a 1395 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1395
1591 a 1395 1591 a
SDict begin H.S end
 1395 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1461 1529 a
SDict begin H.R end
 1461 1529 a 1461
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoToPage>>/Subtype /Link H.B /ANN pdfmark end
 1461 1591 a 1461 1591 a
SDict begin H.S end
 1461 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1511 1529 a
SDict begin H.R end
 1511
1529 a 1511 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1511 1591 a 1523 1579 a

 1523 1579
a 1523 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf4

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf3

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1523 1591 a
SDict begin H.S end
 1523 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1564 1529 a
SDict begin H.R end
 1564 1529 a 1564
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1564 1591 a 1564 1591 a
SDict begin H.S end
 1564 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1606 1529 a
SDict begin H.R end
 1606
1529 a 1606 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1606 1591 a 1606 1591 a
SDict begin H.S end
 1606 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1647 1529 a
SDict begin H.R end
 1647 1529 a 1647 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1647 1591 a 1647
1591 a
SDict begin H.S end
 1647 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1689 1529 a
SDict begin H.R end
 1689 1529 a 1689 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1689
1591 a 1701 1579 a

 1701 1579 a 1701 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf6

 restore
 0.84 0.84 0.94
TeXcolorrgb
 save

 pgf5

 restore
 0.68 0.68 0.88 TeXcolorrgb
 newpath

 restore

 pgfc


 1701 1591 a
SDict begin H.S end
 1701
1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
1742 1529 a
SDict begin H.R end
 1742 1529 a 1742 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1742 1591 a 1742
1591 a
SDict begin H.S end
 1742 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 1784 1529 a
SDict begin H.R end
 1784 1529 a 1784 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1784
1591 a 1784 1591 a
SDict begin H.S end
 1784 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1825 1529 a
SDict begin H.R end
 1825 1529 a 1825
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1825 1591 a 1825 1591 a
SDict begin H.S end
 1825 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1867 1529 a
SDict begin H.R end
 1867
1529 a 1867 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1867 1591 a 1878 1579 a

 1878 1579
a 1878 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf8

 restore
 0.84 0.84 0.94 TeXcolorrgb
 save

 pgf7

 restore
 0.68 0.68 0.88
TeXcolorrgb
 newpath

 restore

 pgfc


 1878 1591 a
SDict begin H.S end
 1878 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 1920 1529 a
SDict begin H.R end
 1920 1529 a 1920
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1920 1591 a 1920 1591 a
SDict begin H.S end
 1920 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 1961 1529 a
SDict begin H.R end
 1961
1529 a 1961 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 1961 1591 a 1961 1591 a
SDict begin H.S end
 1961 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2003 1529 a
SDict begin H.R end
 2003 1529 a 2003 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2003 1591 a 2003
1591 a
SDict begin H.S end
 2003 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2044 1529 a
SDict begin H.R end
 2044 1529 a 2044 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2044
1591 a 2056 1579 a

 2056 1579 a 2056 1579 a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf11

 restore

 newpath

 restore

 pgfc


 2056 1591
a
SDict begin H.S end
 2056 1591 a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88
TeXcolorrgb 2131 1529 a
SDict begin H.R end
 2131 1529 a 2131 1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2131
1591 a 2131 1591 a
SDict begin H.S end
 2131 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2222 1529 a
SDict begin H.R end
 2222 1529 a 2222
1591 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 2222 1591 a 2234 1579 a

 2234 1579 a 2234 1579
a


 pgfo

 save

 0.68 0.68 0.88 setrgbcolor

 0.3985 pgfw

 save

 pgf12

 restore

 newpath

 restore

 pgfc


 2234 1591 a
SDict begin H.S end
 2234 1591 a 0.68 0.68 0.88 TeXcolorrgb
0.68 0.68 0.88 TeXcolorrgb 2292 1529 a
SDict begin H.R end
 2292 1529 a 2292
1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoBack>>/Subtype /Link H.B /ANN pdfmark end
 2292 1591 a 2292 1591 a
SDict begin H.S end
 2292 1591 a 0.68 0.68 0.88
TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb 2342 1529 a
SDict begin H.R end
 2342
1529 a 2342 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/Find>>/Subtype /Link H.B /ANN pdfmark end
 2342 1591 a 2342 1591 a
SDict begin H.S end
 2342 1591
a 0.68 0.68 0.88 TeXcolorrgb 0.68 0.68 0.88 TeXcolorrgb
2400 1529 a
SDict begin H.R end
 2400 1529 a 2400 1591 a
SDict begin [/H /N/Border [0 0 0]BorderArrayPatch/Color [1 0 0]/Action
<</Subtype/Named/N/GoForward>>/Subtype /Link H.B /ANN pdfmark end
 2400 1591 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray Black 0
TeXcolorgray -517 -517 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517
-517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -517 -517 a -517 -517 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -517 -517
a -517 -517 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -517 -517 a -517 -517 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -517 -517 a -517
-517 a
SDict begin H.S end
 -517 -517 a -517 -517 a
SDict begin 12 H.A end
 -517 -517 a -517 -517
a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -517 -517 a -517 -517 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with Beamer class)/Author (F. Nativel)/Keywords () /DOCINFO
pdfmark end
 -517 -517 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7 TeXcolorrgb
-600 -287 3024 230 v 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
1 TeXcolorgray 0 0 1 0 TeXcolorcmyk -500 -350 a Fi(C1)p
1 TeXcolorgray -529 -458 208 5 v -529 -323 5 137 v -325
-323 V -529 -321 208 5 v 68 w Fh(Syst\350me)38 b(d'exploitation)p
1 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 1 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray -467 116 a
tx@Dict begin  tx@NodeDict begin {10.9445 4.0 46.11101 23.0555 3.47224
} false /N@E 16 {InitRnode } /NodeScale {} def NewNode end  end
 -467 116 a 33
w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin Sepia end  0. true 4.0
neg 4.0 neg 42.11101 10.9445 .5 Frame  gsave 1.0 SLW TeXDict begin
Sepia end  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 0 0.83 1 0.7
TeXcolorcmyk Fg(Donn\351e)p 0 TeXcolorgray 657 116 a
tx@Dict begin  tx@NodeDict begin {12.73499 5.25 38.91698 19.45848 3.7425
} false /N@R 16 {InitRnode } /NodeScale {} def NewNode end  end

657 116 a 8 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.0 SLW TeXDict begin BlueViolet end  0.3 true
1.0 neg 5.25 neg 37.91698 12.73499 .5 Frame  gsave 1.0 SLW TeXDict
begin BlueViolet end  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
25 w @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.75  setgray  0.3 true 3.0 neg 4.25
neg 33.91698 11.73499 .5 Frame  gsave 0.75  setgray  1. .setopacityalpha
 fill  grestore end
 
@endspecial 0.86 0.91 0 0.04
TeXcolorcmyk 31 w Ff(\022)28 b Fg(Bob)p 0 TeXcolorgray
0 0.83 1 0.7 TeXcolorcmyk -467 330 a Fe(P)-414 342 y
Fd(1)-321 329 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et1 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 329 a Fc(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 725 428 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt1 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 428 a Fc(\017)794 429 y Fe(P)847
441 y Fd(1)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk
-467 529 a Fe(P)-414 541 y Fd(2)-321 528 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et2 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 528 a
Fc(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk
725 628 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt2 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 628 a Fc(\017)794 629 y Fe(P)847 641 y
Fd(2)p 0 TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467
728 a Fe(P)-414 740 y Fd(3)-321 727 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et3 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 727 a Fc(\017)p
0 TeXcolorgray 0.86 0.91 0 0.04 TeXcolorcmyk 725 827
a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt3 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 827 a Fc(\017)794 828 y Fe(P)847 840 y Fd(3)p 0
TeXcolorgray 0 0.83 1 0.7 TeXcolorcmyk -467 927 a Fe(P)-414
939 y Fd(4)-321 926 y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et4 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 926 a Fc(\017)p 0 TeXcolorgray
0.86 0.91 0 0.04 TeXcolorcmyk 725 1026 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt4 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 1026 a Fc(\017)794
1027 y Fe(P)847 1039 y Fd(4)p 0 TeXcolorgray 0 0.83 1 0.7
TeXcolorcmyk -467 1127 a Fe(P)-414 1139 y Fd(5)-321 1126
y
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Et5 16 {InitRnode } /NodeScale {} def NewNode end  end
 -321 1126 a Fc(\017)p 0 TeXcolorgray 0.86 0.91 0 0.04
TeXcolorcmyk 725 1225 a
tx@Dict begin  tx@NodeDict begin {4.44444 0.0 5.00002 2.5 2.22221 }
false /N@Rt5 16 {InitRnode } /NodeScale {} def NewNode end  end
 725 1225 a Fc(\017)794 1226 y
Fe(P)847 1238 y Fd(5)p 0 TeXcolorgray 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Et2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Et3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Et4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225
653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Et5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Et6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt1 /N@Rt2 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225
653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt2 /N@Rt3 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt3 /N@Rt4 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225
653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt4 /N@Rt5 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def /ArrowInside { } def  0.4 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  /NCLW CLW def tx@NodeDict begin
0.0 0.0 neg 0.0 0.0 0 0 /N@Rt5 /N@Rt6 InitNC { NCCoor tx@Dict begin
ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2 ED /y1 ED /x1 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan def /ArrowPos 0.  def /Length
x2 x1 sub y2 y1 sub Pyth def /dArrowPos 0.5  abs def {/ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } loop }{/ArrowPos
0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def
1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul
x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat }
ifelse pop pop lineto pop pop end  } if end  gsave 0.4 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et1 /N@Rt1 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225
653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et2 /N@Rt2 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et3 /N@Rt3 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 1225
653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et4 /N@Rt4 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 1225 653 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.4
SLW TeXDict begin Green end  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 5.69046 0. CLW mul add dup 2 div /w ED
mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto
0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Et5 /N@Rt5 InitNC
{ NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB 4 copy /y2 ED /x2
ED /y1 ED /x1 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub atan
def /ArrowPos 0.  def /Length x2 x1 sub y2 y1 sub Pyth def /dArrowPos
0.5  abs def {/ArrowPos ArrowPos dArrowPos add def ArrowPos Length
gt { exit } if x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } loop }{/ArrowPos 0.  def /dArrowPos 1.
1 gt {1.0 1. 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos
mul y1 add ArrowInside pop pop } repeat } ifelse pop pop lineto pop
pop end  } if end  gsave 0.4 SLW TeXDict begin Green end  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1225 653 a 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0.09999 0.09999 0.34999 TeXcolorrgb -600
1751 1008 60 v 0.09999 0.09999 0.34999 TeXcolorrgb 0
TeXcolorgray 1 TeXcolorgray -340 1732 a Fb(F.)16 b Fa(Na)m(tivel)29
b Fb(\(Lyc\351e)14 b(No)o(rd\))p 0 TeXcolorgray 0.09999 0.09999 0.34999
TeXcolorrgb 0 TeXcolorgray 0.15 0.15 0.525 TeXcolorrgb
0.15 0.15 0.525 TeXcolorrgb 408 1751 V 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.S end

912 1732 a 1 TeXcolorgray 1 TeXcolorgray 912 1732 a
SDict begin H.R end
 912
1732 a 912 1732 a
SDict begin [/Color [.5 .5 .5]/H /N/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (Navigation1) cvn H.B /ANN pdfmark end
 912 1732 a 0 TeXcolorgray 0.15 0.15 0.525
TeXcolorrgb 0 TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0.2 0.2 0.7
TeXcolorrgb 1416 1751 1008 60 v 0.2 0.2 0.7 TeXcolorrgb
0 TeXcolorgray 1 TeXcolorgray 821 w Fb(Ann\351e)g(scolaire)f(2018-2019)
p 1 TeXcolorgray 103 w(1)7 b(/)h(0)p 1 TeXcolorgray 0
TeXcolorgray 0.2 0.2 0.7 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
