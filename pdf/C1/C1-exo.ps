%!PS-Adobe-2.0
%%Creator: dvips(k) 5.999 Copyright 2019 Radical Eye Software
%%Title: /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C1/C1-exo.dvi
%%CreationDate: Sun Jul  4 08:36:10 2021
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Dingbats FontAwesome5Free-Solid
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o
%+ /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C1/C1-exo.ps
%+ /home/fenarius/Travail/Cours/MkDocs/docs/pdf/C1/C1-exo.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.07.04:1236
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 872 2018-12-21 20:39:31Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup xGridOffset add y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% $Id: pst-text.pro 891 2018-12-29 19:42:20Z herbert $
%
% PostScript header file pst-text.pro
% Version 1.02, 2018-12-28 (hv)
% For distribution, see pstricks.tex.
%
/tx@TextPathDict 45 dict def
tx@TextPathDict begin
%
% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def
%
/movetoproc { continue { @movetoproc } { pop pop } ifelse } def
%
/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def
%
/linetoproc { continue { @linetoproc } { pop pop } ifelse } def
%
/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def
%
/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def
%
% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def
%
/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def
%
/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
%
%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
/warp {
    1 index
    1.4 mul
    cos 2 add
    mul
} def
/warpmove{
    2 index {
        newpath
    } if
    warp moveto
    pop false
} def
/warpline { warp lineto } def
/warpcurve {
    6 2 roll warp
    6 2 roll warp
    6 2 roll warp
    curveto
} def
/warpit {
    true
    { warpmove } { warpline } { warpcurve } { closepath } pathforall
    pop
} def
%
/circle {
    exch neg
    % .5 mul
    90 add
    dup cos 2 index mul
    3 1 roll
    sin mul
} bind def

/circmove{
    2 index { newpath } if
    circle moveto
    pop false
} bind def

/circline { circle lineto } bind def

/circcurve {
    6 2 roll circle
    6 2 roll circle
    6 2 roll circle
    curveto
} bind def

/circit { true { circmove } { circline } { circcurve } { closepath } pathforall pop } bind def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.03 2020/01/09
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 }
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the line coefficents Ax+By+C=0
%% x1 y1 x2 y2 -> A B C
/LineCoefABC {
  0 index 3 index sub % A=y2-y1
  4 index 3 index sub % B=x1-x2
  3 index 5 index mul 6 index 4 index mul sub % C=x2y1-x1y2
  7 3 roll pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% calculate the 2-order determinant
%% |a11 a12|
%% |a21 a22|
%% a11 a12, a21 a22 -> X
/DeterminantTwo {
  4 1 roll mul 3 1 roll mul exch sub
} def
%% calculate the 3-order determinant
%% |a11 a12 a13|
%% |a21 a22 a23|
%% |a31 a32 a33|
%%   8   7   6    5   4   3    2   1   0
%% a11 a12 a13, a21 a22 a23, a31 a32 a33 -> X
/DeterminantThree {
  % |a22 a23, a32 a33| * (-1)^(1+1)a11
  8 index abs 1E-5 lt { %a11=0
    0
  } {
    4 index 4 index 3 index 3 index DeterminantTwo
    9 index mul
  } ifelse
  % |a12 a13, a32 a33| * (-1)^(1+2)a21
  6 index abs 1E-5 lt { %a12=0
    0 sub
  } {
    8 index 8 index 4 index 4 index DeterminantTwo
    7 index mul sub
  } ifelse
  % |a12 a13, a22 a23| * (-1)^(1+3)a31
  3 index abs 1E-5 lt { %a13=0
    0 add
  } {
    8 index 8 index 7 index 7 index DeterminantTwo
    4 index mul add
  } ifelse
  10 1 roll pop pop pop pop pop pop pop pop pop
} def
%% calculate the 4-order determinant
%% |a11 a12 a13 a14|
%% |a21 a22 a23 a24|
%% |a31 a32 a33 a34|
%% |a41 a42 a43 a44|
%%  15  14  13  12   11  10   9   8    7   6   5   4    3   2   1   0
%% a11 a12 a13 a14, a21 a22 a23 a24, a31 a32 a33 a34, a41 a42 a43 a44 -> X
/DeterminantFour {
  % |a22 a23 a24, a32 a33 a34, a42 a43 a44| * (-1)^(1+1)a11
  15 index abs 1E-5 lt { %a11=0
    0
  } {
    10 index 10 index 10 index 9 index 9 index 9 index 8 index 8 index 8 index DeterminantThree
    16 index mul
  } ifelse
  % |a12 a13 a14, a32 a33 a34, a42 a43 a44| * (-1)^(1+2)a21
  12 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    15 index 15 index 15 index 10 index 10 index 10 index 9 index 9 index 9 index DeterminantThree
    13 index mul sub
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a42 a43 a44| * (-1)^(1+3)a31
  8 index abs 1E-5 lt { %a31=0
    0 add
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 9 index 9 index 9 index DeterminantThree
    9 index mul add
  } ifelse
  % |a12 a13 a14, a22 a23 a24, a32 a33 a34| * (-1)^(1+4)a41
  4 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    15 index 15 index 15 index 14 index 14 index 14 index 13 index 13 index 13 index DeterminantThree
    5 index mul sub
  } ifelse
  17 1 roll pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop
} def
%% calculate the 5-order determinant
%% |a11 a12 a13 a14 a15|
%% |a21 a22 a23 a24 a25|
%% |a31 a32 a33 a34 a35|
%% |a41 a42 a43 a44 a45|
%% |a51 a52 a53 a54 a55|
%%  24  23  22  21  20   19  18  17  16  15   14  13  12  11  10    9   8   7   6   5    4   3   2   1   0
%% a11 a12 a13 a14 a15, a21 a22 a23 a24 a25, a31 a32 a33 a34 a35, a41 a42 a43 a44 a45, a51 a52 a53 a54 a55-> X
/DeterminantFive {
  % |a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+1)a11
  24 index abs 1E-5 lt { %a11=0
    0
  } {
    18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index 15 index 15 index 15 index 15 index DeterminantFour
    25 index mul
  } ifelse
  % |a12 a13 a14 a15, a32 a33 a34 a35, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+2)a21
  20 index abs 1E-5 lt { %a21=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 18 index 18 index 18 index 18 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    21 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a42 a43 a44 a45, a52 a53 a54 a55| * (-1)^(1+3)a31
  15 index abs 1E-5 lt { %a31=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 17 index 17 index 17 index 17 index 16 index 16 index 16 index 16 index DeterminantFour
    16 index mul add
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a52 a53 a54 a55| * (-1)^(1+4)a41
  10 index abs 1E-5 lt { %a41=0
    0 sub
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 16 index 16 index 16 index 16 index DeterminantFour
    11 index mul sub
  } ifelse
  % |a12 a13 a14 a15, a22 a23 a24 a25, a32 a33 a34 a35, a42 a43 a44 a45| * (-1)^(1+5)a51
  5 index abs 1E-5 lt { %a51=0
    0 add
  } {
    24 index 24 index 24 index 24 index 23 index 23 index 23 index 23 index 22 index 22 index 22 index 22 index 21 index 21 index 21 index 21 index DeterminantFour
    6 index mul add
  } ifelse
  26 1 roll pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop pop pop pop pop pop
  pop pop pop pop pop
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: fa5free1.enc 0 0
/fa5free1 [
/dice-two
/digital-tachograph
/directions
/divide
/dizzy
/dna
/dog
/dollar-sign
/dolly
/dolly-flatbed
/donate
/door-closed
/door-open
/dot-circle
/dove
/download
/drafting-compass
/dragon
/draw-polygon
/drum
/drum-steelpan
/drumstick-bite
/dumbbell
/dumpster
/dumpster-fire
/dungeon
/edit
/egg
/eject
/ellipsis-h
/ellipsis-v
/envelope
/envelope-open
/envelope-open-text
/envelope-square
/equals
/eraser
/ethernet
/euro-sign
/exchange-alt
/exclamation
/exclamation-circle
/exclamation-triangle
/expand
/expand-alt
/expand-arrows-alt
/external-link-alt
/external-link-square-alt
/eye
/eye-dropper
/eye-slash
/fan
/fast-backward
/fast-forward
/fax
/feather
/feather-alt
/female
/fighter-jet
/file
/file-alt
/file-archive
/file-audio
/file-code
/file-contract
/file-csv
/file-download
/file-excel
/file-export
/file-image
/file-import
/file-invoice
/file-invoice-dollar
/file-medical
/file-medical-alt
/file-pdf
/file-powerpoint
/file-prescription
/file-signature
/file-upload
/file-video
/file-word
/fill
/fill-drip
/film
/filter
/fingerprint
/fire
/fire-alt
/fire-extinguisher
/first-aid
/fish
/fist-raised
/flag
/flag-checkered
/flag-usa
/flask
/flushed
/folder
/folder-minus
/folder-open
/folder-plus
/font
/football-ball
/forward
/frog
/frown
/frown-open
/funnel-dollar
/futbol
/gamepad
/gas-pump
/gavel
/gem
/genderless
/ghost
/gift
/gifts
/glass-cheers
/glasses
/glass-martini
/glass-martini-alt
/glass-whiskey
/globe
/globe-africa
/globe-americas
/globe-asia
/globe-europe
/golf-ball
/gopuram
/graduation-cap
/greater-than
/greater-than-equal
/grimace
/grin
/grin-alt
/grin-beam
/grin-beam-sweat
/grin-hearts
/grin-squint
/grin-squint-tears
/grin-stars
/grin-tears
/grin-tongue
/grin-tongue-squint
/grin-tongue-wink
/grin-wink
/grip-horizontal
/grip-lines
/grip-lines-vertical
/grip-vertical
/guitar
/hamburger
/hammer
/hamsa
/hand-holding
/hand-holding-heart
/hand-holding-usd
/hand-lizard
/hand-middle-finger
/hand-paper
/hand-peace
/hand-point-down
/hand-pointer
/hand-point-left
/hand-point-right
/hand-point-up
/hand-rock
/hands
/hand-scissors
/handshake
/hands-helping
/hand-spock
/hanukiah
/hard-hat
/hashtag
/hat-cowboy
/hat-cowboy-side
/hat-wizard
/hdd
/heading
/headphones
/headphones-alt
/headset
/heart
/heartbeat
/heart-broken
/helicopter
/highlighter
/hiking
/hippo
/history
/hockey-puck
/holly-berry
/home
/horse
/horse-head
/hospital
/hospital-alt
/hospital-symbol
/hotdog
/hotel
/hot-tub
/hourglass
/hourglass-end
/hourglass-half
/hourglass-start
/house-damage
/hryvnia
/h-square
/ice-cream
/icicles
/icons
/i-cursor
/id-badge
/id-card
/id-card-alt
/igloo
/image
/images
/inbox
/indent
/industry
/infinity
/info
/info-circle
/italic
/jedi
/joint
/journal-whills
/kaaba
/key
/keyboard
/khanda
/kiss
/kiss-beam
/kiss-wink-heart
/kiwi-bird
/landmark
/language
/laptop
/laptop-code
/laptop-medical
/laugh
/laugh-beam
/laugh-squint
/laugh-wink
/layer-group
/leaf
/lemon
/less-than
/less-than-equal
/level-down-alt
/level-up-alt
/life-ring
/lightbulb
] def

%%EndProcSet
%%BeginProcSet: fa5free0.enc 0 0
/fa5free0 [
/ad
/address-book
/address-card
/adjust
/air-freshener
/align-center
/align-justify
/align-left
/align-right
/allergies
/ambulance
/american-sign-language-interpreting
/anchor
/angle-double-down
/angle-double-left
/angle-double-right
/angle-double-up
/angle-down
/angle-left
/angle-right
/angle-up
/angry
/ankh
/apple-alt
/archive
/archway
/arrow-alt-circle-down
/arrow-alt-circle-left
/arrow-alt-circle-right
/arrow-alt-circle-up
/arrow-circle-down
/arrow-circle-left
/arrow-circle-right
/arrow-circle-up
/arrow-down
/arrow-left
/arrow-right
/arrows-alt
/arrows-alt-h
/arrows-alt-v
/arrow-up
/assistive-listening-systems
/asterisk
/at
/atlas
/atom
/audio-description
/award
/baby
/baby-carriage
/backspace
/backward
/bacon
/bahai
/balance-scale
/balance-scale-left
/balance-scale-right
/ban
/band-aid
/barcode
/bars
/baseball-ball
/basketball-ball
/bath
/battery-empty
/battery-full
/battery-half
/battery-quarter
/battery-three-quarters
/bed
/beer
/bell
/bell-slash
/bezier-curve
/bible
/bicycle
/biking
/binoculars
/biohazard
/birthday-cake
/blender
/blender-phone
/blind
/blog
/bold
/bolt
/bomb
/bone
/bong
/book
/book-dead
/bookmark
/book-medical
/book-open
/book-reader
/border-all
/border-none
/border-style
/bowling-ball
/box
/boxes
/box-open
/braille
/brain
/bread-slice
/briefcase
/briefcase-medical
/broadcast-tower
/broom
/brush
/bug
/building
/bullhorn
/bullseye
/burn
/bus
/bus-alt
/business-time
/calculator
/calendar
/calendar-alt
/calendar-check
/calendar-day
/calendar-minus
/calendar-plus
/calendar-times
/calendar-week
/camera
/camera-retro
/campground
/candy-cane
/cannabis
/capsules
/car
/car-alt
/caravan
/car-battery
/car-crash
/caret-down
/caret-left
/caret-right
/caret-square-down
/caret-square-left
/caret-square-right
/caret-square-up
/caret-up
/carrot
/car-side
/cart-arrow-down
/cart-plus
/cash-register
/cat
/certificate
/chair
/chalkboard
/chalkboard-teacher
/charging-station
/chart-area
/chart-bar
/chart-line
/chart-pie
/check
/check-circle
/check-double
/check-square
/cheese
/chess
/chess-bishop
/chess-board
/chess-king
/chess-knight
/chess-pawn
/chess-queen
/chess-rook
/chevron-circle-down
/chevron-circle-left
/chevron-circle-right
/chevron-circle-up
/chevron-down
/chevron-left
/chevron-right
/chevron-up
/child
/church
/circle
/circle-notch
/city
/clinic-medical
/clipboard
/clipboard-check
/clipboard-list
/clock
/clone
/closed-captioning
/cloud
/cloud-download-alt
/cloud-meatball
/cloud-moon
/cloud-moon-rain
/cloud-rain
/cloud-showers-heavy
/cloud-sun
/cloud-sun-rain
/cloud-upload-alt
/cocktail
/code
/code-branch
/coffee
/cog
/cogs
/coins
/columns
/comment
/comment-alt
/comment-dollar
/comment-dots
/comment-medical
/comments
/comments-dollar
/comment-slash
/compact-disc
/compass
/compress
/compress-alt
/compress-arrows-alt
/concierge-bell
/cookie
/cookie-bite
/copy
/copyright
/couch
/credit-card
/crop
/crop-alt
/cross
/crosshairs
/crow
/crown
/crutch
/cube
/cubes
/cut
/database
/deaf
/democrat
/desktop
/dharmachakra
/diagnoses
/dice
/dice-d20
/dice-d6
/dice-five
/dice-four
/dice-one
/dice-six
/dice-three
] def

%%EndProcSet
%%BeginProcSet: fa5free2.enc 0 0
/fa5free2 [
/link
/lira-sign
/list
/list-alt
/list-ol
/list-ul
/location-arrow
/lock
/lock-open
/long-arrow-alt-down
/long-arrow-alt-left
/long-arrow-alt-right
/long-arrow-alt-up
/low-vision
/luggage-cart
/magic
/magnet
/mail-bulk
/male
/map
/map-marked
/map-marked-alt
/map-marker
/map-marker-alt
/map-pin
/map-signs
/marker
/mars
/mars-double
/mars-stroke
/mars-stroke-h
/mars-stroke-v
/mask
/medal
/medkit
/meh
/meh-blank
/meh-rolling-eyes
/memory
/menorah
/mercury
/meteor
/microchip
/microphone
/microphone-alt
/microphone-alt-slash
/microphone-slash
/microscope
/minus
/minus-circle
/minus-square
/mitten
/mobile
/mobile-alt
/money-bill
/money-bill-alt
/money-bill-wave
/money-bill-wave-alt
/money-check
/money-check-alt
/monument
/moon
/mortar-pestle
/mosque
/motorcycle
/mountain
/mouse
/mouse-pointer
/mug-hot
/music
/network-wired
/neuter
/newspaper
/not-equal
/notes-medical
/object-group
/object-ungroup
/oil-can
/om
/otter
/outdent
/pager
/paint-brush
/paint-roller
/palette
/pallet
/paperclip
/paper-plane
/parachute-box
/paragraph
/parking
/passport
/pastafarianism
/paste
/pause
/pause-circle
/paw
/peace
/pen
/pen-alt
/pencil-alt
/pencil-ruler
/pen-fancy
/pen-nib
/pen-square
/people-carry
/pepper-hot
/percent
/percentage
/person-booth
/phone
/phone-alt
/phone-slash
/phone-square
/phone-square-alt
/phone-volume
/photo-video
/piggy-bank
/pills
/pizza-slice
/place-of-worship
/plane
/plane-arrival
/plane-departure
/play
/play-circle
/plug
/plus
/plus-circle
/plus-square
/podcast
/poll
/poll-h
/poo
/poop
/poo-storm
/portrait
/pound-sign
/power-off
/pray
/praying-hands
/prescription
/prescription-bottle
/prescription-bottle-alt
/print
/procedures
/project-diagram
/puzzle-piece
/qrcode
/question
/question-circle
/quidditch
/quote-left
/quote-right
/quran
/radiation
/radiation-alt
/rainbow
/random
/receipt
/record-vinyl
/recycle
/redo
/redo-alt
/registered
/remove-format
/reply
/reply-all
/republican
/restroom
/retweet
/ribbon
/ring
/road
/robot
/rocket
/route
/rss
/rss-square
/ruble-sign
/ruler
/ruler-combined
/ruler-horizontal
/ruler-vertical
/running
/rupee-sign
/sad-cry
/sad-tear
/satellite
/satellite-dish
/save
/school
/screwdriver
/scroll
/sd-card
/search
/search-dollar
/search-location
/search-minus
/search-plus
/seedling
/server
/shapes
/share
/share-alt
/share-alt-square
/share-square
/shekel-sign
/shield-alt
/ship
/shipping-fast
/shoe-prints
/shopping-bag
/shopping-basket
/shopping-cart
/shower
/shuttle-van
/sign
/signal
/signature
/sign-in-alt
/sign-language
/sign-out-alt
/sim-card
/sitemap
/skating
/skiing
/skiing-nordic
/skull
/skull-crossbones
/slash
/sleigh
/sliders-h
/smile
/smile-beam
/smile-wink
/smog
/smoking
/smoking-ban
/sms
/snowboarding
/snowflake
/snowman
/snowplow
/socks
/solar-panel
/sort
/sort-alpha-down
/sort-alpha-down-alt
/sort-alpha-up
/sort-alpha-up-alt
/sort-amount-down
/sort-amount-down-alt
/sort-amount-up
/sort-amount-up-alt
/sort-down
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def product (Ghostscript)
search {pop pop pop revision 927 gt}{pop false} ifelse{/BorderArrayPatch{}
def}{/BorderArrayPatch{[exch{dup dup type/integertype eq exch type/realtype
eq or{BPToDvips}if}forall]}def} ifelse /HyperBorder {1 PDFToDvips}
def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx pdf@lly pdf@urx
pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly exch def dup
DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx exch
def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: FontAwesome5Free-Solid
%!PS-AdobeFont-1.0: FontAwesome5Free-Solid 330.752 (Font Awesome version: 5.12.0)
9 dict begin
/FontName /FontAwesome5Free-Solid def
/FontInfo 9 dict dup begin
/version (330.752 \(Font Awesome version: 5.12.0\)) readonly def
/Notice (Copyright \(c\) Font Awesome) readonly def
/FullName (Font Awesome 5 Free Solid) readonly def
/FamilyName (Font Awesome 5 Free Solid) readonly def
/Weight (Solid) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -97.6562 def
/UnderlineThickness 48.8281 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-55 -127 7797 876} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB42825F1EE6A16966D49AEE9CA4A40B7A
AF5854776BA4F7EEE4EF09BE48B41B049B631B57F9DEB79BA1DE47B7C025B39F
3CC77C4FBB15C9BF3A39C8D400BD7D15BB1412AE1918DD7B05716B41DA299FCF
AD90249E2810CCCF2846402BA975F3C22EB71AAFC24EA5C6A66D5FB86DEA0D82
A1117C000C5353B2F32B7DF144A69030C8EE0F6971BA336C4C33911E390912FE
FBA5EB88AA67FBD2C8AF8DA2B0A0CCA150F57B850632A58E909DF61D04D76B71
0786C246898D6969AF821D21463B5D770D11D97904922845C026679D889AF774
20B847060B20FA78E265C44C994B20AA9A4749F76E07EFD1CF7C2AB3A433EE2D
A07495342763E2716751093DDA622377EB0C70DF28FCF95DABFAB8884E12E40C
1235BEB723F81A20EAE69E8CE0BE778A97C9D5C1AF3170E6855510853C8C4FCF
CF0D2CE4C6C0710B9584B928C9AC5C465C74B9178A153A434B3F87F01214A69D
4429BFFD0A8DA733179F25B6C15391579ECF0E8725DCF53BCAB814DD38EC0F29
8C225618FA305C623812A1D694E883AF184A0ECF699C9308B3F28A3723530EBB
FAA9CD28A1829FEA371AEA5F8B54D11BF76E15C00CA32DF229892701A4475A6A
734F01EA4438C7E68F17ED1D48D80DA35279189F2FB603FE8F79BC05000007A7
084F12572B7EA09BEBF580B44E76F45650E9E93430AB22AD4292B47B5FB861B8
C20EA254C175EFF7C7CE33228E608FEEE1D9CF299CBA5F727FB11FCD01180520
E9C7510457A9256815BE73930FA7186312B1F1ACF157C44C9BEAE51EBB523877
0086CECA8C6FCFEAE9C0F8156A3FE9B991EDC0CB72C5852F7169A8B98FB8F29B
5A58DBBC136A1E8D1B1A79929E88BCD3886D355A191967C791EADB7A9700D0EF
F276C337E561338D7D02F664A69A127D56BDD67D63C1DF32A80D732FE753B297
08EDF2A1CC7E4617933B49C02A92BD986BB13E68435FB97E81DB37BF578B3AF8
2417947930EEB8A75189696D79615D68BC4BA9238AB9428860AD23E7D8219844
0C741FB72F30CF733FA111B43F33E1D26F464F5999FEBC0888B5E4D8B0E07567
9D90551CDBEB05F9A30F43F45B5210A3007E4D03DD5E05805D3AE898FD752841
54198CDB67A5AABDF7C9F2BE384A98DD9AFFF4E8CCC98FCF480830FA681BF215
3CB11265AB89ADCF53BE360B58DC3621D580F2C7227882B61D155B79B2B43266
4329231C7269A3F30930859BF0A4D5D2CEBA01BB4059A587C6C785E009F19C15
CA40C512E9F5030743BEDD5606CB1C540D829DAF394E13CD4A008EE7F9F1CFFA
95B5C8109B0A8685FDF03A978954D1325F66AF1265829E29C353B84A33388574
B4F73E25F490B88AC3AB2F544988D5CD8459AF56C77885DB50B673602CA70AED
778E4E15F24CEE13A730F1E29D1ED0B74B2F8486AF729E2F0490DD6E2F55F3A7
B4ED7133B02DE4581066B984FE6EDF491454E6CCE895A8A75E0F8E0AF33A7359
E5EB03B1EC74E1885C81F49D2E77939ABD2C66725FA5415CD9265AACA265041C
E228BAB08EDACF4E0AB86D340F5C6FADC65653CBBB25190AB307D29C6FD44AD7
341A399CEBC01967EA5C42552AD19A3DD1DD1BAFCFCA4777528AF5E958E68450
4F95880E2E5594A3FB0D0624D7AFF119981EECFEECA15866AF76B47D283F238B
9D4E9AE5F8549417968001184CE886C1D6AA8396C25E0840EA447F0C2586B021
81A4ED566DE0666A9AB45924378D008A62C2E63BF5394EC9B051E293C9224645
DE121EBBF97E9E1BD85868308FC8186F9BEDDC40357AE239B4F02F00158B87DB
8F9947BDF037FE0532D15D61B38C2EA75CBE50D3330B105E913A071443887BCD
CD7448FB9E03CBA4D711EC4C4CEA1E80D648BA01D3BB41BE8BC9482B0C2A4653
748459A474EE5871E4182A2C14E0D2049F6BCA02129D8B1EA98379E7E8BAF0DB
C2115FC8DE189423A6CF96F3B624FD11C23CA4DAF3293F3FC3B9419FDD02BFE2
01E26AD64F64C6845E0CE09E122DF40D6908B9B6F873A6B8359FD44A37AD1EAC
E2F4E3DC35B12328553CD5FDB59309C317BF49D9A819AD1ACA97D248D8E02DBE
D74AF4F10C41DFE0D90932FADC7ED477550A79F5303533BAC12475EF8D0D1AC2
13E5D5A8A57901118F637BCCBD9AF21516578DCFBF8165AC8C9AA3A601A52A91
EA1B72EF8D4858694D1A5C7C04D68947034889EBB9BC0F6F720F1EAE6D8A8ABE
296B0861C666C1369BDC7BBA46457D3A99A66D975E7F5D1C6DD77CF0A057BF12
7F001A096FC339820E946F636CA2F5D39E4EAC88B2148C5219B1616C53425AF1
1E4A708EC4C3A7928EAB51AF51978FAFFFB2FCCBB6ECBFF8252554B3FDEE05DF
74CA5CFD7B1FB53CFE9E0DCDDCEB8C07F41D8185B10E4287CDBEC9521030B0A7
E706F1865B67C03D749F36AE2F831F159E38017AE2A5D914C676AD9942323C37
95B25E6B0144E78BA5B588222CFF13A2EA3BED7266F79A1074E5DCDBD3BD0AF0
9E1C44241438B8F9FEF51A803D8B74307A3ABC05066687C6800FA1DF62767E92
83811DD10C7A8F6ABFEA1995C317DE4196273C3392DBD9D660030FEECBA7702C
F79AE7F1045B750E199689646466844787CE5559A86835FA39CAD7468662E6FC
B83F6AF669B77400B0511D4510ECD44638EF26170432230E05C2C3DBA6F004F5
F628A1EB008CCAAF16C1B7B759F2A1D0269E4365D98318B0590C62BC52EF9840
999A057D495B8E319EE95C7BD3610F8627E11056A3771AA7458DFDC0443B9054
FE4029D89CE1B04B586869A9C6122D3921EF880C85269AB7635AEC1B6ED1AB71
EC2D8EEFE718975C8F5AD9D1310F764975FD37AB2C30068F8A47BF90C52CB9E3
5496507D403C747874F039959F2B78994EE9090692D1A94BEF2699D17D1F332F
3E93B264B70F73A7340CA8D266EE7799C16443AC8BD2A467493362041E0E3533
26D45985A13FF7B254242BC110A7BC98A9C4645A1BC4EDD802F0639789249100
CE1C557C43EDE5F78AD7D2E36F1107FD8520E12376757500671332190D93976C
C114BCBB0F6B6CD17EC199F588E24327FAF21F0DB8BF26E6808F50DEE9104E34
5D0489346C5A8665A33DCD4401036768758EB25A6609D0088FE1BB01599D8E7B
2FC035268BBA5D1A29EC35C44B1677FECA73E372EF928ED8B67077EC4C55274C
CA4118EFFBE7DD150F7F44E95AD1409C79838CD93764A09AF78BCB2EB79D6AA8
64B7CD3321789D289486659947AB54B4B63DAE783754FCC5FBA74AFA3B0FD4BF
8EBD939A31AC63434F225EF6C99022E39B85A30905EE0EF94F3AFD23DE7299E6
F276EDC265AD00768F3D384F17C236D4555C8D4AB34CC356D96CC4C3ADC1DDE1
7CFC0D7F17C55984B8FCFC72FD93755E84060C2D0E434BF17BCEB50A19790442
09EDC8A058CD39B5CA2E94FB163B4D769E88853C0500373E41EED4EF76557E4E
37BFB3F46B102B250350DBC55F85C82DBF62927C152BE84C76DEBFDA3D795F4F
790A61617F84CA29117B37470E41712F26DEF812CEF41D9D8691532EB72D0E1D
9EF04F8DBF54CA6D66609A0C7B2FCD14BE8F36414462D75F21B572C52EC09EC6
3E7DDCEC847CC6D3EFA2D7E270D930B74376BB0BA82AF94210D51D8204B74FB7
EE69654ACE4577EA85945CFA37EFF0DC5E7BCDAC54CB217B4836CB34BD71DC33
DFD45D383D10779643FF5D0F34B27AF365FC93D94196498468DF8F322E83462B
651C3EDB9C6EED0DFDEBF1BC061ABC48ACA527396B848EA31010DD1995CC4D17
9B4280FBF081B3B3ECECFF24FBA611612ABA11799B791BE95C8905F1CD1B36DE
4FA2573A8587834B9E7004B5F9D768E0AEB93EBE828619524A495E471F42AF6F
82571AE77D7817392A34217C36626D61F75CEE8A5D7C283DFC0BDEACC56560D2
FBBDF51BE7935248B80D4C72A7D75B511E0073A6BF271D440B7F0C63983E4228
92727C7ADA9E27436AA13D9D59E6CB9826C28125E4F9767C3BCC9830F846A2A7
435D5EBE8C5328444CD5B411CBAE3F63171DE32E73D8406A0FEBA498C4E7CBE9
C60B9180545CD51AA4366A849927DE7B83C38F9742E2395538EE29F0A18888C8
FCF0821DE468042FA2FE0C58AD907E93996D94F11F35CDCB7CD14973B7C807BB
1A6CA60883A1D74C3D5F8B26698ECEF7F9B307A9B85FFC3544A0A4093DA00841
0B68FC6B485775BFEC07AA0088CB2D95B1DC37E2437B7A0B13F8BE2FC74B7A24
071B1DB55D67609244BFB5E1887A10C711F0E3D981D7B9024509DA0C14700B6B
3B945FED849189EAD0BB511D7462BE2346D3BA172008B648F1E75DE5B7EA9818
DC9BAA070E04E84DFBEEB8B24D7391FF2FA09F28479007D6FCB926C75C5744E6
1BFFE5904C904C845ADC1DBEDD8DC9CA3A8707D86580C01618776D11D2E86B00
51EBC700B8EDDBD37F78B4B616EE8F3AF2A642B42A13FE5DF058495D1BBB8F01
D7B201219F99DF9ECAB7137F91911E33BEE00B5569886D97F3213D239DD049ED
6A815EF2B9C9C7F76283C21D44BB92897A206BA348EDE2FEDA5621B98650389E
9815E33A17D7DB25EAE6B73230607EF4320A5F03B65BA29AFEB1E609D9090D2B
C12E2ACE102818CEB577840F6A5D09A026F49CC9C67C271BAD106CEA4393C4F6
8F4D7DF0745B3BCBB34E27F41AD6DE6188FF19570280EA1E4950A0E57D0B80CA
4DC1EF8DA79E34D72DDECE2F2D5668B7C5D8B045753B93F43138DC03291DA92D
80EBC10BCFC2E4A4F1D6298650A753B7752DCBE3871343C697C30727022D3347
9434F81CA244113293094802F0B1D3937A7262039981801E3EB72660231A374A
85994B597B17D7D1EA184F04E2973E9674CE5A5B59E5D7C601D8A8A75C2884DD
77917F8FD492E9AB9328EF8E0901DCAB65112CC98E753385111906ECE632B09F
C6E4286156CFCF39F47BF88EF729EE261B767023B0433B9467DCE6B319E84225
E8E9E069D5E80CAC68864456745F608AD7F1DB2A7057A4B60C01E3B48B4F0FC0
A57E6F7D70F0B3099D68828CEF3EB08DD085A46F6AEB847A082D5EE078CA7B10
CCC4335309E6FE477EB7936ADD7770BA3562A4CFAB546D823B7A7685B098DCB5
465959409262902DFF5443B6961E262DB52A34A69D9DBC915D1D979F2D09E8CC
67956FAFE2735096C69A00AA6C9C1421BAF69E1B8F89CF67E5250C659A7D4A19
AE45B58749B3073662F947E7F5BF97A4823DA48BEFE6A643A56D558A474C4055
E9834136244EA39AFDDB3B9BA2B301853A589B355A9B86904D328BF2A61BE758
B1842235C4A4EEE260976EF1644167C2F4070EBDD0B73478C1BF2719880425CC
E4CBFA670CC1E1C6A8BDB75E7B524F977A90FB269661AE8B7C7A351AC33164DF
69839EF4CCC948B1971BDECC3EE24CA73AFC338206AEA78EA76288728ED74CA4
08020B80A53BF23DB3B68F3D0F58E2C7BE658851767A4CAC46F14215BD461B56
DA6E3BBF5DED4486FB1D6C2F60660F14709295FD7B6B4402FAF6EE84EC0E5FCA
8D53CE5CE1FADECA9A7E610105FA17C45AEA5831EC20510FF2330B331C40914C
36F29FEC53C83BCDDE52A40C1DC2C833298BA9C66845C68C0B47D6DEBFFE3F95
A90BA074E34D5AB46ADD2ED15125C4382A1C95B5F9412BCE7B2DEA273664C0F8
4C7788C6F3ACD041B16C9A99A6254FB9B899782664A7ACE087EBA0D48EA7C7F5
D84E04C04694D7ED240C57F885F794BFBD31E89BA753ECF83F6AE705F410368C
0B5213BD561B753676339F0B9FE90C60F82E180F7AA4A9EC783AB037D2F6F2ED
337D854B81D02F2E65C6A913100B8839695517D60FA5B6A125B952B64A1142C6
F39428D8D2B8FF4F1CA15C3E282A1EA0FDDEFCF0434C4123173E38AF82040A4C
F077A335C829D8626D775E72B5502F3769AE6FE8FAA616B8441E702567E898A2
DA6AAC3A314D5DCC26C3721108036A248AF16FD36E00AFC5AC22773740AAD22C
44F44CE2A9EC5A1378354D0EF515DBC0B835738955AD76891B054759FBEAE7F4
717A6118DF303BB77FB7C261E2C91715BBE32E595BFEF8219927C96E0EA2990E
8D729C3D9DABDD29ABD05C1FB213FA9C410C78ADAAC2F16EA19B997E5CF8EEEC
CB2C21340919244745429ADF41BCD1506CB773E28FADF673D70A791711AFFCB0
7D8DB4849837336C3D6DCE6264555AFDCA900E3DF683E54048E01613116C2784
94E20DD2EB17AA2B5CC304906188199CF23D9D54D3DFDF55EDE035DD3563EFB2
74CC50F61FD3428C83F24809D0AD1646380585D0E5D5F28A9353F6784D3CC671
B0FA6F59F3A0347D547C728623FD39A54642E669657AE1E0362D4838EF8177AC
838E414CBAAB3D568D946FE8CA8C25DA2D751FF514A92199AC13F78FEAC5D4FD
0CA34ECE58A8FA8E722FF4625129815E150EC18AAD461DC2DA8C1E6C552D5002
8AE2476F9084AC04C97D6FD5D963A652ED4EF778D021ECAA36830D54A5F9858E
0733034D1F5BFDC20AB2E4902FC4D523AFB607A1A4217F2378650ADC04162F20
8865D6456CD006527E6EF77735F91EA6049E418B901F10FC0A3EF112641C95B8
56F0D87D1389546906D15D9BB1C1A9A946E7EEF8D198562366FC4A89D1C27D33
6133D5488E21C16CB8B66D003CDC73EAE1E5D9EE754660EDF4F9491192A438DB
FD51CA5C5169A2D621134EAD387D472B72A00E3FCDAA121A5A6B5F8D8D6564F9
2339FF8F8305D0970C33AED35D2365BBD9AD50C43666B33ECCCF9754363F3D5E
83EDC43FD61B93DBB81A89763FD4520AF4792C4DCEBB76AA9AC44DFDC4FBB142
0298A665045BCDA5C148E123AFFF96CFD61EEB9C900A19314829CFFC11DB597F
7C55A8A7CC1D8C1245CFD89E7D66E63D1FC972D86D80FA11FA9DAB4BC9968770
BC41B17717A55E5D8A8F06F8378F03A9D9D83E683BBED9AB71BE8C8E5C24E53A
5AFC5DF3401222F292CD0FBAB7F36A7A2E4C582CD4B7ADC254E87493576F75AA
AB9DA284490B1A014F5A9DA7B45CA4D070D83F5BA00415F599E0D7FA55CAD906
0919527012138A4EB36CC9176966B8D949F5A945E578C8DD29FF20796AC3D0E2
9B043E8D6A88357867F8BC52A5786A474539D5B40C1FD85C8B2BEE6A4AB398F3
5D2E5457EEAC9330C8D80DB42EB766C43EA8EFE81CCD0BD4C498F6F335E234DB
1B602BB51593039FC9C7CBC249D24FFBE824F874DD9A9DA5141D56AF49EDE3FE
8AF0EA8374D52E32FB981A846E5CDD5A826B3A045427E0BA44142C86AA0CA4FF
8EB79622F7434C700922343340368914BF3C97314045FAB692C18BE004A54A0D
C17540E09C4D4F7048EBFB72CFF1B8A6BE5957291D85E8E79BEACD319A591395
C24E1ED0DD0FE26C7B1912CAB589A8864099A5F94B50CAAC26255E0389121137
98EA84C519C2D79EC99FDCDDD3E095A903D94881F14A331EA44FA926093F6551
E60DBDF706C21990A5898038B50C0E55205931CFA52CF0DF41AD6FAC800F9909
99B406E03AB83AD8AD9F239D989C9877567D125E058B3DFDABD7F3AE4C95A62E
763B13816795FF5F6BCEB84691A4D7A19F27444F05DC7CEC6D1BB14045472FEF
600F8BEA8C04245E590EEB81AD17CCC0268CBE545EE521B5D53A75BA697F3719
A949EC7BC3CE225C0FDA75B6AC2AB13D030BAFFC09271852AB2FB5DC9D5E2B4D
3F5C4435FFA48AF001C9354C362406B84312CA225AE2CE32B6DDFAECD30D6018
5D9F0D56049A962AB365C0729B2C1DB0D0F91735E8930680CCBC9B908C279F4D
79D8D6541D1D3A02FFCE3B2D8A626621778463D1287DB8D742D6A1507246FD35
E3625A47686FBAF26679413AE9350EF157BD7A256037583594697ED5A3206F9E
CB0FABBDACD9CA3A9E34D1469E715E26AE66082B43864A50D37AB21CCE5EE140
F19C9C41D5762189E8BAE95CA57AD20C60B50B7B314C784BEE07164AE786097A
51304E43F58B741F6458E093F18BDC5B52E6DF05E63CA91A99D774111DDE5DED
A97EE65C2DDECD3D907E28E2CAB82ACB5BDFCA3D338D87D5B02B43ACCD63FF65
8A8C58C74B40F86B92F3AF00056C5FA29492AEF376A4A160238E5ABD9A827E50
A4A73ECDB2BF3FBC77584A6500556792047D05869D915695F9BB87C494EA6552
7E8708279B3B2437BF1D57B331D6C96525BB043302CE675DC14CA5F6122C84B6
2AB4C9B2B5D21EAAD7A9ECD4CA7B148DD6935AEBBE2803411D616AB5BB14CAF0
71A4F8C642FE5E99634ACD70132644D1A72FDBB617FEBC47D697CDC2EA2C6CA9
D786F6FC61B7C9EE627611F9C20A254C224CA0688B6C93A1602A5700E4F50E5C
C70FAD3A21917D15D5DD3B3C72821B00063BDCA7068E8F6CBB6A7ABCEB51E7B2
2833F54B876DD8797D2E17EC96D9EF6D9F7836B85251D4DB9CC5C16C86D46BB1
3688AB941A8EDE313FDB0C8F140CB009A24A80270037C9B5E513340E5CCC2E9B
B45AF8EEC8E4CDE0FAEB9886F1215DF3E5020C43EBD25557B85D305CC41C5768
A59ACB8E42C225939689A1E13A16BF7C51340B9C57773FFB718AD1B92D8CE067
C5FA2D25595969EB32214277C7AF5A22A618783B8C6685588249B192A0FD5344
9F0E881F42404EE1EDA56284274579C92E08214ADE09FE538B27A57674C4F745
6E4202CC902D375208054D9E578F1415F6A48EEE5523AF3CDCDA8159BFC935CE
517D1C8416F6272CB6C6CEDB3C581B65ECE095212C6951438E3BD9F5FE699F33
AB65D58C7AF3094DF38B038A7C00E0EB5AE87EA37D3A5BD929E839A60E6CFCBD
E1A0C7885666F8153871954D30E372C63D8D09B4A69BA804B9AA2C563D04304B
D5935BCE99B671F1CC3803F44DEDA8ADEBDE1049C0FB12D24CD1DB5BB2A1BC1C
BF2D6FBF64BA6446D5BF768847590F9EC86E2B28FAF168AC45A337EBE667F6A5
0049DD7BD01F6292FCEBF10AC5D78C52F25DEEEF3B7BDCBB8DE21938EF29C178
C0A82E1EF5332C616238CD44B20AA739324A027E200A1F3193B87F3F7DEF8639
E8BAC6AD317F78E19A851307F6C61B9AA815F71BA9CDA2CC27850827EA9F8F5B
89C3D39C5ACF3D46952D2B931A3C680419A924C8D725F63A6FF8A98B0D6952F9
79219B247AD14CFD0DE1265294214481C13BB3EBB7CF6357CCAD5E1BBF5B83EA
873BF54190A91D904C95DC7E005EBD98589E6AC84C709CD5C318FE4D870B9854
7EF6F2A579C2C77291AA4D2ADD6AFE3AB47FD31803B563AA12FC0382EABF8038
8BD3F177CB73C7BDB045BB0B65F7FDBA53EDCCF52BE7BC5EC38D1CBF42FC738A
2DAA04D63516D012A2CF81775579FF5F530091D95453A1FA4D7F520E7165EC5F
38C70EC606501B0FC5394853ECE439CBF8178126E4FA8ABB03AD90E8F29974F3
4E0985B9FCAFBC381358B8F70E40CDDD0811D99FE7268CA9315F0E649DC650A3
5B6D9C4CE0E469761CEDF6F6A1324476F6552F22BCE8B8A67D32928B082C9E23
8CF18C13D8DF7AD56976F3E2B8AEF1FAB9B3C603BAECA0A0EA93F113B87A7E6E
2FBA6FEEE4CE7FF33F6244B2C0AB206549DBF565560DBF9060400CC8085AE23E
6F3A0CE3767FB3E937D435771FBA6214E4822AE2A122A36D71CAFCB56689C7B3
071ACACCD0D3F83D6DAF9237A9D6EB203764D922A68615B1B717D84F73C8C840
F9E5BC086DC5D6C0E5F64285A41C27BDEEA7A48CACB4AC69B3D9515C416D7C5A
3292CB2FFEA4F79A8E5FD8B897300D3C7E2B8B39F0185E5A426C787EA1B8389C
249A86EA1764EAD2D65F03B4F41EA48A439C1EC69C56A987D9CC0AEA3839C7F3
3B38534C95E98D90CF65FB8120D2C09EBC9D667ABD0148DDAF1A67EE9AEE7129
E62778C0ED9F0FE81A58F720904E41A09E69816998863DCB080FDA85C6C4D289
60B3C70675808D37510FF1A39A9549E7E411C2902493EADAC1D4DA3156166A44
89D046C4D4A42DBEC7BECAC3928066BD5949AE733BDAA3743F861C50F00BE89C
E410D469A7844BA04CBD289078EE33EA5C2F0BA28FB2F401E365C45D9A595D0D
9CBC916924BEAA0DA2D31E36D196951E1C8DED4F198DBA7A8E2453CC39B53E6F
9E5DE2D1F66C28E1A266614B8729BA682F26DC1906CC5070524D184C2636CF6E
B61AEAC0055420B08DFDE19DF04412623A09B3C5D3AE355DF9C651AA32CEF916
1AD5F05F3ED4A51952A1F042947FB7F2215FB2695B18D4ACBC83442AA199326C
32CBFAB7F6DC7DE6878DC968928FCD63D63A233E7EC8CA8A32C29601C7C0E4B8
D8EF9A5468582DCA44D3498593E505B0F7619171AFBCA8617719FF30D6EC4751
4E5876FD70F4E5D0BD1C80AC7D28BD9F35A475A415B85E33F68C57D3BDA30101
40F5FFEDA157354A11A8E1945C250BF5D6A7E2A9CF1253FE5CB85317CFD5AA48
A8F8DD351882D80EBC9EF22CA8F00F15435E86F13E92BEC25EFC87D163E10389
55DBAE6B680DCD927E3652FAFAAA1378D4464957ED7310E6743A5A288B82893D
147750D848A81AF067B6B849D2DE66E7BCB5C50141EA9BAB87EE221515F713B8
7A7E6E2FBA6FEEE4CE7FF33F6AD8892CBB8D988310BD1F78F981D212A0F1A8AE
F4A829AE012B1942D59B4CF1A5FA79C4FF36D55D8783F1032B9ED4E72B03779B
88BC6BE00E225048E5F1649AEFCAF7E228E1BF874666B181D0E8F7D15965B0A9
705D17758361B43CA02DB2C0F0A8250D0E561E29C030653DE9F59D4C43F4754F
BF01CDFE66AA14A095F6D9E0822C5F3B371BF3603696D448A52171592A38E008
117C71EC058BF8B0D8C342605941EFB5C5C8813CB052EFFF77B485774E66DBD8
F1271174F933BF4F772EA2EF066CA11AF63E720FE1F28D656756B929E622CFC8
07533D65CEA21B8FE27506DF5B12C687B39B276E2BF158FFE415CDF9324E0AF5
6E304C6B88F50EF6E20BACCD7614314EADEA7667F1AC068167CE1B3F34805919
6617559C5402452EAB30E0F9C56E03853C4D15DE4DE5EE14C952E8DCE8D6F73C
DB59AF2AB680A8025144694C04BAA5591D0F54BCA110E3A914752E4C96457559
950561BA30037BB388E1EF9F800D5F7DD517355569D5ADCA7CC8617FB3A8CF7B
BB5FE8810D2E0688353ADE6C40E334CF9BA5D7AC4FFBC52FDBEC766BBD66D236
6D93F2BD8279FE9F7B086A27B5C3BAA441DC9D15ADF1CF8ABC66843F4175A92A
DB000E1978A9EE6543D933DF5B214BB42B6DD39C20CE46CB6FC115115AEACD61
985EDF817CF7182D1FB7B9AB0AACA2517D9AA7AF0B6820671816DCD3932B5C62
1FF490AFD5F86DB88FC6C7F25304A0881247865F4F1E64D8E2AEE7576A96E469
E1B32218943EE1913C60D921572C0394318CEABD4227F982C2F0EB03E3ECBA5F
7FF2C9F44C823193FA3C76BF1963918273761B0C619AB2A66679B71CCA5EA45C
54788FB02B9C55E918E23EFB32956A7D1961B6A9371CF8D25172B3CC1D64D56E
8C4FD941F65AD2DA72802633C3604179CE6CC6557D0104EAE73EBF64A004FC65
27AB2B14A80F8060425C4CF25FF0649ABC33EFC47FA192DED7D84C0DEB4E55CC
559BB3918BC5F8417436DB47C540119825D6D65D9F18F20F2897A4B5B87D1DEF
C1BC0BD7DF733F057A31FE22C51E6136B260C6135225157DBC405EA681D24CBF
5B6B2351D287FA96E369FA24EAF653D8CC184E633B763D0C226C18FFE8EEF4CC
55BB3ABB0E37660C7C103D418C7831D46D5A8EEDA916B33541DFF07C1A6189D1
958999FF76F23CF17109BCA7E9DED929072954F4C9C3913E92C96B4FCA84D7BD
FDDC2932DDBB65530229694A84795BBAC0A5C89D53C2F53F12EDC70FDA3EE2B1
EDC50590A243D5ADB51E05F76EF52427E0B2A53467D836B45EB9932871981C28
7FA9BCB442A715DCA6CC49EBA72D304263EFF2F25C295C7E65E2FDF8E5BCBD0A
F297CDEE3DA067FB0CF9D3B7CAEB7F354C21EE91693DFAA57C041B52A0FAED2A
6CB461A9D43E9941B9FEDA5D2707EFA622A7B69EA1BE414FB1B4651F606E678D
F2FF576BE5C494D3BA1A8181A6E3A24671E32EB74FED57E91C36CB0416C7F9CF
2C65D4178CD686041177ACA47242F7F7615C6AF98CBE72A3B524CC9CC901A3CC
4286B985B5DD0530EE95ABAE64FD514FF8176C4B7BEDC38A9CB92C96236B56F1
C1819320B766793F249827D7B0C796FB7A7162A328A79AD0D6A9D442D6F6CE73
F2A57D615942D4005A7DA61E982E521144D2A9EF42CEC44FBEA1958D2A5C83C6
5E54BA67B7536196CDB6A39C32166C61126E8E054C1AFCC5E735349E09117C1D
B5FCB99631A8CC25DAD4032A8CBCDF482F71DC6698C529A06700572785C5DC13
939FFC5263B754A582C6F9B862736D867D927772803D96BB13593BBE7A0BBE3F
1109BEFC01623754880208BA1282D3087C829589941219026A3089B4D301378B
9F47FC29F3246AEC0CFB09776A79557EB78F42641DAE343F37D03E2C9B361F0E
AC85811A3417AD06A62ACA41E83D306C33EF6522555056CC0F680A66A9DEFBB8
96CA118CAC320B4DD8293CE15791C61358C31C5159E068C96E35F4BA28952FAD
57FD5C0576E959C3C2A98C5CB21BE95D04ACB7FF2FA9C2EB77D6CEB6F20266F1
13A113565B2461FE3CA07BB12AB6FD30228163E94FA2D71F849D38D50182290B
D895D61B2597DB6C7408DCBB56987A5DAC995C0C87FE7E4B3C232F662DADD25D
145C73670EC50A53425B85B62BD09EA2C6FD9374D7CF7B7CC1B4F6E91182FE8B
D84C620BFDB72DD0BDDF7A40109543A0E33F06DFB8454F8BAA641BB55F93496D
24B80EAF77C4678AAB20A58356071C2EB29003554CB8008AB91617FEE07E417B
F51DDCD9042B1240D3E464E37D22537E86BB09C3EDD6C2784D902D6894EF0671
B809D61FAED0A5206F65681738F472093086AB594C10C1B6C38AAD2250E9F218
AFB6680255D29719C192CC65DA007259959CC50B0EE4C75B3F8CD9989BEDC946
4F7342F580FA791E17E1FAEA0CF0B00E33F36BEAD18AA153C3AE5D373F1714B1
B6219C0AAD9B5B45276BA04D2450D625FE73C61A9622E4F0610F89EA5293FBF4
CC1A24A85B2555C0F2FA693224FB4F4BF9DFDB4973AC14F5D7B571D85E101B15
8DB7B747DB4E3517D9D8DF403A554FA06AB29F4A0504DFBDC9F6702057D971DC
24C2F805F7A02459B0E4D47B15CE3E8740C1ED599F55E134ADDC4434D46A099C
8F789B1218D9F88CF8442BA4B72C5980EE40BEF1DF5A8AD87222C54FE4E691AB
6BCC20E2E62DAD3F671582D9C646875FF0566E52E890A4A83CB6FCB8095DA141
8E56B6B68D39EE50F1BE39E1089D21A73198BA54FCD94646F6BFD96E5F335079
741BB6A3EBA3B57A96E413AADF797F635497D9F36BA1C25927C36E9B9C4E5FE9
8043DD38FE9400C351D86CDB7C52B72879152B486427D5FEFDF5B03EDF103842
514176A4A4EADA044ADCC1E1AD42918C8C67320CD318FC7214E15FE42B8E217D
E2197E5C96C96A2538499F2E97BE6764B7B53EEEE547D183F0A7766FDADB5C90
E2E028F14B6856F9B87781C0170356357B3542790EBDF135610E173E4C2CAA86
3FB1217806B03A4DBF0BB72606DBE4E6D7FBC8BF450D19267E3281E44A8E5085
628D81A0039B772CD7C7AE178D7365A8A3CDA333DFA7012316E75249137D93DA
3B42F8B404028E03377F7D1E885F69C8DF39C4E969E8BAEDE16F206873FAB6A8
59B79FF3B2407906652934045E4EC211F28C3908048FF3BFEF5CDF1BC516C8AB
B60BB76940C54D4789A66E14F3C046A1F5BD1A73E3C0C22A4F74BBAA8D379093
C76A72931C253024DB79F400D52CBC5FA902E416679452E60C3CFEC8CD8CC969
76DCDAE971ABF95E7E78AFD1B7373AF534CB8E4EEC5577679603CF160E25353F
D9A6BA6B3E100A6A9B210EE71FDD7AA6C8BF44B5672639E525FBE110BE627489
5A3FF937C6CB18816836AA7DBEEFE263B5FB83E8BAF9435EBC4C7C1FA2B81AE0
1A9AF35BB0C43821F044457C0C613A59A3EEDA53854FFFE3D9F9F98BC5631737
5C196C980AF6F28122ECCBCBD5E5CB542ABD1410D8C03AFB3029ADCFE6F1445C
410574219353816B83F3F123332441679FFD1CE4298042C8931486A8CBBAE0A8
88C22F6ACEE69164FAF9754ADF5D3023E5CC039418845780ED20697C67C54DC0
8C8BC4B7DEF14217ED30B42286360C270404F1E0AADA988F50BA8643D826DFF6
B247F423857D978EA767E825D62E28C2E864DE86CD0B3292864C84EFFE9F7DE7
23288E6C56443913C1BBD15A95A466CAC735BC6E2F7E7BCC84C0C44F637FB287
5040061417CF95E75C00E7ADA71974E12ABCB895E018395323C5CA3487B25F43
61A920A3F5CF1FFB771CB29D98F4D92F1E38EE50A479EFC1134F11D4831D5A09
8E27DB9314EFEC915577D321AB65064887899C110A23D2970B441E2D57E26E06
43A87E6BE3400B41F28F26C0F4AAD5048D244DE20202BF6071C66236E532BEB0
56ED641AABA269DCDD24DE122BA637CB04F1EB12E99D79E01811154265A22CD3
75D5FCB937BEB4E988547EFBF80C009DAF1E44BF0DBE4AB6CC3CE36DB461FB6C
3A56897FA1E14EE6E04C23EA07681C391F7CE2155332677318872E67A366F444
AC5EABFB6B70528708382B1DA3670DC982C71F0EDE573D431332B0111FE214CF
4C0611932FBCCC47292F8F328F543E6D4E5F2D535767C3A07EED458746BCA75B
DCED06B56125EDE0DDE1D4CD41BD57B80239376BE0AB7233315A300E2C7D0B0D
2DC0B0A629F10E88312DF09392C4DDB92FEE258477A403904CA67DB8FF8F9858
E539ED637A3A637CB9592936CA86FF583A510C4873472D8E00965DEFC7E2DF2E
2F8C5354BE4706169254DC034E6A57BDAD5EB4E582001ED7811C9FC47EC5051B
1B1066A9D8C620BDC0F22D5DCAB19AF783D1506BA03FF5F4EB75E671AD1D4058
AEC15F9518B7D2509F710753C9AC13F612CC0423320E3EA51E566D2DF64A9390
00AB078994EF1188ECEE4B6B88ABF5B5C3DC10D3575C7ADFB60B533130DEC2FF
5F93E3AD13BD0728C56224CB5AB241B70626C45A3FAA8D83F0A6F59B670986C6
A81009D3C81A0A1E1D210F648A0B9354067076F88B3EC71B4A946A5BCF8807DC
55E18DC0E5BB406AC3BD2013AE4E40B9175F83E287BEF5068B1578EF12476CF0
E5C63879653996A2A6290D672F653EE9D144C706BDE9EEA9F569F1E0AF07FD3F
597C38189CFB31BD28018ABA73514B937D21D9C9BD6D9FFFBE976D4963BDBEB3
40C69B8DDA0059097ED2E47A9725EED0F72128ADD8CB00F1FA2F3D083625FFCA
8522C789F90A650344E60D96FE85284B33D163A669265AF62F01E4AC601B97C4
1B96EDC2D2FCEA81A60A1B3C98F6714D41A2D500DF6AE2928BB9D5104751F3EB
A27244EC63D9E697EB4EE9541A935EAA4240AC015F52F147F56F6B3CB10EB6F7
E806E51B294376BECF6DFF8AD9925D383FD83D481291F37A3C87AA0D1F7AED11
A47A998142D7125BCC7B0A2C8CE1E04B07D5B38FC3526705D7F01B87942E28D1
946372B3F2652453807BE2D8DD066DA1C061356DED2876CA7F7DF9CDF82A9E0C
0F647798F5D67F361A73429B4B36081AB834161B97806438B333EF11AD60781B
E76620814EC44E5B91BA04C1F0D5C89B37C681626A87E271F7CFCFB62238DC39
56553C848088BF730669D197098DBA0DBDF6708349C25680ED6DAE22761BB999
3B4422947B5C4D6B3D136FCDC2AEEE1911EDF6973F5EE82EFCEBE653CAEAA3E5
4E66EDF93F3A6A1B1C21705F8B6AC6C253E91AB01EC8B7DF72D1C340A25BB821
AB550DB7F649090E1F1738CFAF41795A2D0D7D90DB36AB67AA20C9DD6A16EB57
68D9D4835F7F3775FC5B2ACFBD1D9BA68AA4AC702CD6EB50075911EDFADBFB9C
2639835A0665FF2248BE07F08E62D663AEDB1A49232BE739AF0DE8FCAABD2C55
B74280C65F7495F33CA417DD2B05A5B7E3074054412A33979B9FE7F3952DD126
DBE82FFF53221C171ADA792E155E7B7EC4185C67E0DD7100D5A9A4D384EE44AA
F225D3B0CA628010FA55F83392CE86D167D1B54611655BFDE684AB4936EA7B24
D6FB4D8586911F73FB7B4EF52147208D99D475A36BAC6BD3789AF882C28588C1
8231DA4A724F0D03DFE321AA77AD96270F0C22236BAFA7BDED664D6021284E90
80E3162B5BF1D9F46EF16605F8E5A270AFD52D5B627A4312976CC258019D26F6
4FAB5DD7F61F1050E253837BDB4F98FE4268D84C4B105065700EB9FEC05CF95E
DD202E744CC3B65AA9E919E531476DDD566202B157C4BE8DE18F693657058067
0F8A698BDBC94418D96618A27549CA07417E5EF3C41E23B770F5B57090EA783A
E82B07CD64F4C202A4A34D52F4B1460A07FDF3C8B4C736E2EE6C98ED6038A9EA
AAB404BC495072124859B4EBBEE4A11BED5E2184628C658BAFBFB368388BF564
DFEBFF3E277645B276E79C0DF2342B709DC786E5FDC4A441C6E71B42B088247A
A035F3DC27FA986E5EC3B139CA0862496499FD4A4CB2F8D01C4CD2B524B40A3A
B641E36D401FC7A72D6E69069F73BAD96B899AB069AC1BAA7FFFAEDEE7979DF7
57694CB3AF4FEFB31D3FB57FE0A686155C8F5A89348E2A3DEF71F4FA68D626A9
929BF6B8A281AFECE31B6B52206DF89B127FABEF6FD03DEF266C1B00362C6F44
2147435B5CCC85FE887D72CC63C58D29AA0A0C38D8C2A0F73A00C3492C8EDEC2
27F2BC6CDDFC00D98E345EBAC4CFE6DA1137E970733CE480FB161356F8E43670
9B2BDC523385B3B4FDFFC81474F0513AFE93E9C6CF76096B54D067FC40C4E8E9
100EF56CB495808CDBEC406C675B06E524263A8012A67C84D35DFBC47998037D
5E17B5289F3C429FDF271C136B8BBA284B87B841F581DFFC5021E4FBA621CF27
AFDB3856C29B60419B443D50BB15FEBDC8CF5E25E0A52385E8A0D50E496DF7F6
EEDAD257EF5211EF321F7C21C684E755908E37FAF55C214ED75745D7E41F98D7
860DAEF04DAE6C7B81F630DC3B47F2E32A07545017127DC3F5F3A36B569371FB
7D1652A62D116F125CC0533BCF18F1F156C0650D4A0B81934D0004E1D8D31676
E31769129F43D0E7FC258766AFDA475B518230A0CF54F0BA788AC4B01F5A4209
3EEE5F01B034E421AD66D3AF7D734837A7848FD9C1991FA99DC5E168EF03CE48
DF60F8D7B1FFA5136753451F75F619FA22BB21829737AF2D393DA6D6161F7FE6
EA8A1EFE5496CE7808330CB7E9D9A8664C443252181342F3A692E0BB3FCA5940
BD443B8071E29CBE07BFB4AA814CA0DD22B4411070E53AD0B0C0E85C96E6B1D0
A098DCB1CE211DBE74FB0A9C11EA8AA0B892E2B8F2C868988701EAF0C4B0F61D
FE6F3936898A4FE850C7AD6D74FCC0851826159569889E231C00E8BB0781C2E5
4EC4CE72A35BFF13D561A56F1882CE75D5E9ACCDF2C02B249F64C32439B62B32
B0AE38FECC40C49413991CD2BF413CB128327442D69D1B7FB6E8C0C15CDA7BF3
D23E4F9C070F3684CC2E3AB0F8B0B1A8C29D9CA9FCB788794DAF9F676A200660
CAEBCC0634E58BF0D4DDBDC49AC0ED275920F27A27D792849CBFE02D3C61E933
36AE4857093BEED8C005289F6CAEF5FE3CB7782BDF2C80470532E692C31077AA
7FD6F60981911AA0A54BAD1B982896932F31851C3E494C40709588F26272576C
6C5DC24F81181EEC09160F77FA1AAC4452EE18E115380DE970989674955A90A7
59E2AD149B24E2AC4B36F2C45A807CC7D3453824D10499EE8536A6C4DA236D42
2483E9C4F22F89B13F6ACB6DDC5C3F0E5EC0F6AC2DA72BD9FD183CC8FA118FF3
32A36A296F42C631B8D5E398A356870AAD459FB136FE6D181705D0E6C9B23B57
4EEA2295AC45F5AE9D286BE27CC16BC15E3286B063B5AE98A4AFF730169F3D1D
B228021ACD2D067C2EAB9873E222D201102998D39066D46524EF155613096896
BBC93615F1F3E68BF3AA81126A7A546CAE4AD9830DB4DC4E62E44BE4AB58ECC6
268DDD05AF787E22CC8806C10DEEF830F26F46BB02ED428AE51D893615FFD23F
2517E1C5F60D6A771C9F2E33F486AC03EDEC5D41BBE259BE4B02E0598B3AB259
EEE0DFB4521966A4FD7DDA84F1DB93DD6C37FFA98C1A3994AC3C539A5F5B35F5
2B949B4102DC6CE89A9737A689D91FC2688632BA024FD222DDCA28A4AB685FDD
D6D3428690834AD88729D87BF206717E2741A0D8264EAA3DCF5FC3105FB046DB
6219CDB48619F12AA1C572AC0D6485766334EB95ECF4787CF3CEA44C5C133A39
0003D59619BC5E655B8B3970A30E927FAD4102EC84DEDEECFCD5E0AD8C489F03
86BAEF51B49A16C0C9F6154C4C998E7979F11F3A99296ED7B76001E331CAA319
EBD8CDD7A77B98A615AA26973696EA19CA22768363EAA491DB3D9E9C9E53EEEA
001D6460CFB0C47469CA52E624006CE68D9EAC7E8BAA1C0EF51801ADA133E6B4
D9FC9F15DE3E8E77E0CF73CEF75DDF931CBD691A97BD5910EEE107EABA9CD156
3E7E3398FBD25661A1ACC3C815DA811FA80328613AA4E4CB877210431C88D058
D8945AD99BE3B6CCB5586FFE8A1B0A3766E92A79516C2CA4B6E463EE135D9D9C
902B17B51AAC0CB7457447DC1B49DA90151B669DC82D26722E4EB43F6ACB6DDC
5C3F0E5EC0F6AC2DA72BDC01F4186ED33AD656664632B6E41849E2A8EE8641A7
55898C004F831ECBA1C6E90ED06EBA512884B03BA3C0E60A55961A476568D109
A2AF7A67981A3D830A3681F6951B29B99752E4B15956A171AD001BCAACD3E948
9465A33525A438DF5CF7D0350614D631AEC67DF5835A1564A7922C399BC707F7
B0948AD53E21ABE5039EA537253B5A055B93F15F24ABF466A2228AC8D2C0732A
013ED1BC535EAEA643AF6614CA260DFECA93149D6194DEA749C42115F44D6586
8CE8429DD6D82B15E63776442B8387AE96D8827B8E9EA492FEC5FFFB3DC1914D
3B9B63C702200A0564DD860B99D577AC63CAC4E41625B6CCA739205CACB2605B
FEDAE595738B082B31CA5675276F20D6151DA115FAFB6C30A39F9BFD6EEB7BAE
ECE62F49BBB48F381A17E51226176BE295AF7F8A7A7DC7D39682CE2491C04404
C8A5DD928D7A82AAA44F81687FBA7F2BC21B3F12A88DD8305E833A8174051F45
9B443AF7861235D247D1C113A2A3EA25D613DAD55D4DCE65E9B482D616159785
EE3064DD28CD502881D30E137838B8BA1B5CD92110179A76BEBFE0E6F6982403
D935766840A8AE1A93141DEF3E4520AA121FAF214FF59E3D1A0EA3A059F6075A
69EAD7D44F9F669AFF90DC783DE6191B4A5FED8651BAA8577E685DD676801BE1
AB0FC229362CBC3C375A7F598004D9967BB5A52F96956795F82FB292F30D852D
DE60E6818C162251915552282BCCD4BCE641F36355C6230595BA6040D6B935E1
CC0F1D31D3D04EB580E29B1F8CE8342AEF1D687F5D78972ACEE54C5EDE4D57C8
664ACCED3723C6DBDD597640F05DA8A4163A4481A7034689616B1055691D9F5A
CC965ABE961C05F527AB6AA16C65676FDFDAC5E26C2123DBB49314E1619220B2
20505DF922C8A8E5A787DE997CE19D306AA01703F105CC68C429E2A6F87A9E34
2751F8D7DED428DA1F1F0FFBC2039816785D7EA7A28265109ECEAE081F286512
B4C60C8677E347A0E68AAD5A0A63AA127A4CC9675C906806476C35617E8C9A08
231D2920B6A17D6C4A61586CAC37479E5B1C87ABBB901BC6E665246F9C46B42F
FC202DB1B3CECB9EB309417F5D7C9C730C7B30695ADEFF8E2A9D6E151EE943E3
01D9F0A0B584944059755BE22109DF7B5CEE3A7CF276290101A8921DFFD59DE6
18859702BC64841BC9B7B58CC22C79287E82D35E257E2F0F346F762324E4C07F
B9C4C046E0C3D9644250CAB982E0C2A18CD57382BEE27703243705101C7CE3D7
C5E07BFB16F0653273C97544F888EAE29E000CD5A84961416338D136FB96E441
F31A64610341523137D15DF9FADA0222F683AB54833D1BDA70B1EA8BFD930B94
1211CCB85F5A5C3BA859887FA484A3BCE88C9C86045B0C49585B696E0DB2231A
78C23919891DC8EDE07493C9211DCED20F02C44D69B2A2CB7A27189824DF510F
5722B50C788AEE13FBEA7EFB67FF93509400EDC6B8980EE8AED59A384ED1F967
54854EE4E5537AB70BF7E15B3BBA7210546FB7F5422C7025D0860B51DF8017BA
63096272B30D4982435C18550D15A9B55C35252DB7994386AF7575D0B98D59AC
8F6410E7E7179A352EE96991D6289C5E8743F566EDAB756423433A18036018D7
515A1E3344EC2F9B354A48713B4FD8F652EFEB0FD429C53D35D082CE150C3FF3
3C014F3C26AB00BA7C9D83B2D5CBFEC92ED1E12E332A9EC0505EEBB8EA2153BE
9913A9BF76A2DD39113095C0AFBA6BDEA59AFA6D56484CFC0BE8AA27284A5C2A
AA6CCBE07ADE45985B898D9FAC27B8B6CE2AC29BF6AC98E9D3CDAFE35798B908
F5087CBF8B4C40AEB4318FDD9A16483BEB00217E5324F922E026BCE753BE1105
F4CEF6A8D68263AF5B18DB05FC20E3C8C69E20DC470F094451424CE5008F36EC
17D6ECFFBFCCF21DF91FE878D10D62E7C8426F0492E94414ABBC3C14789B9A97
D64F2FD32F3598C8F095B540EF5818FB07E86DAB7FA029F067A65A55B940915B
E0F1EA9A79BA2231FB47B4F77B87C3D919143E8D648BF4907880134F6DD94E65
01A445568AE64874DC8265F3D767FC381C43E90F0B6DC046305FEBD4D52570D6
896ADEFC55F6456D266D470B4EF2F9A8AE85B1E0D5993DBF217522B96396E29C
438F4123A098468F1A59DC48A202BB2E6C2BEAC4EC7293B4FADB68FECA8BA748
A63C6E87C70B5626A449BCF9CE8E95EAB21669397E97EB3DAE37B1972B9B62F1
27A9EF99E12AEF066D0EFB1EC2240A77F4DEE558D56E13BF65685D5594F53184
FB2A6949A02C4E3734497AC957EF4565DDFA9136A016CF0C48E03E4312B13DD1
3275898FF3B5CFACD779049EE15508B184AC3FA99938A32295BC58049BAAB739
35B8776BBD26FA2766FDE9E3A6FBFAAACF9B5F4D32070A7BEC1DB4C5283F200D
6D6DDC7E383D796B65DB43B2BD15E78544F2B86517499CCCC18A122CB8657D84
E1A49836009D57A2A48E2077FDDCF0DCE1998BD94A35F727BA81F787A97F4742
5C4ED44A2B3686D16072A2D9462FC528DFD8076528CD4C851298DC0200C785D9
57EFCD1B67E191FC5CD4F14E044BAE897C450BE9C5CD0D9545FA3476377A53D9
0E2A9A4EB016D1CFFE7020D539D6AB25713AABEDFB9153E5054B7E991717CBC6
9F99548F4727E88AFC021D82019BD808D64196EF68407F3613B12C4AF59DE093
AE4C3CFD7581BDDC20AC736E8217C72FB291858CA3A619BAF5F0583FBE65731A
4F478A2811CA7986436F26A5BFBD238E751808873AF06AB0708EA9066889FECD
764C9F9EFC8F22985B783590AA659002F8013F1A6410102E99D4FF7FBCFA6982
3CFB574F2E83E071F772638D3F81F06A10A111B2562B2F104FD8DDC4709FF15A
FD8BB013522D7BF9EB2541F38ED4E2751C5807F44DEDA8ADEBDE1049C0FB12D2
4CD286B3518403134F42A259F0DBBA4409162466B0681CA5FBB16AD4C77CE215
B0D55DDAA970B84089DF9CBE5AA4BA56C615245BC482F9F0DEAFE7F9511E9E96
5D487A53150734F487036F394019EE90ABA712CCC0EE9A0C40519DDAF6BEA9D8
7462EDDE8B7549800248C4D65021E8B58D8287D6241D2D9C1D397B368B031616
831F236E4D8A7581AB384DBE6FBBEB709848FF02492BDB5552535CEDA291FEC3
699255C43C52F64B9B2F36211DCC80077D037EA8DC31714AB4CFAC640244C31D
74FB02D446B8E39245AFFEE4A231354BD4E68AF23ED7704564C832F41C5C203F
B782DF9004064B733884BC081F33CB01096DC017D667BB9A681A62EAFCA393AB
86C7625582BC712F2F4092522739D920F7E4B57D991EA721964E9EBEFCA6F34D
79C334F45403F7496ABB9CB1B83C5D94730061218A9771F8A0BC1D9ABAAAA032
CA6A6C6F8ACB5CD5A9D35951838F2172447C660843C72EE0A49836009D57A2A4
8E2077FDDCF0DF711109CA4A09EB1E5BB6912AECD4004E6D5DB14FE0C1266549
168126AB66DFBB8C8E14BDCDE4E44BCC2382581186CA91A8BE711CB41C9F5060
B20C3D912D45893081D5292B785D4ABF102AA521EF2D5E80DB2C9CEAC5D5B318
C2B02094A90E24E4C47AEE2820D0754838AB3B4C7FAD52033FE6CC7D57FBE33D
DCB279A4E2A54FADCFB041A69B2444CE08CEEB189A75A385F95C8BD7A51A7B8E
6CA6E213A2A6444AFB453AC29836F93ED805057CF094AE79594D5BDE7B8DC4C5
D866528E091D228A25A1341801F9753691F48545E46AF8F1278E207ED31803B5
63AA12F211D181C7887349FCEB2296CB0504F911A2E4AE331EDB36BE642BF599
F6719EAC28B35C84751FC8A196672FAF4F23F9D40B19553AEB550769AE4BE7C0
541599DD68E0DAE20A470C85A7CFF5E2D1F86434479279EE12CB96D0B1D86F49
F7D780AEE751A70A0EAF11F79B0D77C775B26AF9C3A198FF5739C37F6FA4E0CC
FBE2BC4A87CB00A1CE8C185A9C53C5CADFE5B0F23FD2A05C02204EA9DB124A0C
509A8C0E723B7D58AA416C667FCAF72FD810AA2EB948C4E076417268C53465B3
85C7C9DB23E160159D52D28606969DFCE71A9947F3E44BC25C885A37FABD1965
E184EE116A65563C720B8177BA68FB0D443C27AB44F1B6EB45D59C4FB173EA96
FEF283F0F479C761B27836BB5E275FC898BFA5532FB0620A535CA4C7E11C5596
56ABF9DED48DB97B3E004D2B7693BE034322C05285167ACE1E6F0C763E0074A5
8831AB0E740971CB8E7410DDDB927F5086E3AD402ABF2203CC4F4B5411CC7269
76BD2008108FD2BEB0B474C108ECD290F44490DB9C708B0954CDD97A1BB7247F
B3D811C7C1DBC6FBDE23ACC411C0583A510C4873472D8E00965DEFC2FF7B9A78
529F835ED70B702152DC52D90C6895FDE8F78B5782616386454D40FD1173560C
2F9540D210D7D581906975B78218F6BDDCCB2263F112E7F34704AB6378F650DF
2B8E2B5C18C72E560041E97F9ECCF6D8C6065F82A6E25960467011A1D594F9FD
D3F1FB062620E5123CB6F6B133DFBA5A3E652BD043FF31E0205B591711112E7A
4517FE0E627FFE00844D07B311E7B480D4A8DB59D403BBB276F7089F213F7275
BA69DCCE0B54A5B5D7E6888A99CAB18B9B15340059B49A77E9B59E909601EAFE
E241876108A668735EC0FD7E4764A5CD84078C8BC5DFD9C47E6B684AD9DE7E2D
0BF854B6433ABB0C95B59CAD11DC5A9B8947CE12B4532AF24D5D29974076EDAD
14C8CB198BD619F1A79AC9BDD4BD96C9CA2E4AA52D6814C3A90F49453E20A0C6
1651B9B343AF05BF06F07C03FFC8DE0C477124C4F7876F000365F49426F8DCE6
A1B8D8FDDEC74AACBD09883E3130C654101F9AA4675DD752CF31CB2DF8F2762B
BE0450F35C5874A9204432243E66A9837BBA7457F7E75218CE0A873A42666E15
55A116AC908C609F306B920A6273DF40CA19B78F023FAA98E50C3DDA1776C145
DE69B39119E67A20EB658FCC5384DDAC234B3A29D8E8991ACB4F7B3C625D0030
CB226F6720890AE85669D375138A2A0A253C2F42CB9955D40F17A4F038407D07
0A2B4F59EE9D23C7E1722A9164587DBA6DDA6D6D4EEC20824BD6B9071442E188
15763403CA120EBDD792725BEDDDBC278C409D5A1C3943EC7117EABB1E315809
5E13259234695F958E5805EA01018E7D65C7FB93E43A7914297DB82A1C7BBDD7
ED62D967B847DFB274BEAE378AA9B414B3CC3C3D7150122533C24435D71ADBBD
052D4F81C9E33E6F74B63038FDCC677896FE04D1FCEBEAB98AC97FEE43FBFB8D
D3A50125FE4522EC7A22EE83F4E6D7EAD84B4C70706DD9D9039D5770ACDC4D40
49A6FC494E8D5D765F2F94AA5F495E82BDC153E1A6FA17F410F6880F4CCEC2AB
001F03E1AAF8354BBE45B5CDD3184DE1913E575CE433B48A55A33CDF0FCB1578
B0D25E327737A97B76425ABC1004DD62587DF729A99B4DBC1940EF59C31B4CA1
D1428FA0E147553296D7FB8781D522128043D34A694FC67C6D401D4C3FE29332
EEE4E3948315AF02693C47AFD8ECE1F5E38E2A84081166327F296E625A3709C3
6E17087B1F3CAACDD925A31D8A26E5870778AD2BF151A8AF269ED67B09A105ED
E23F10CF1358C9520D105217BD25477068598FB8A2848A065149AD199D09DB77
5E2766A11A9F46B4452676B2867990A56AFE98D40FE1D59B63046CE650447902
EEF917ED2BFF0D2A577843D88220BB8B9E59E1BB1FC7B1CC9E11F2BAA4D1DD88
DE5EEF09434E2006614C0D32CF8405C5FC094A8241D3C9A3ED0F1515BCE53148
836C6E111EDC9387B19C0E7A1655BDE9B3FFAA2C575D1C0DA50AA67F0589778E
B1CE8A4B4B22737987859C68D37677A5DA20361C7F5ED154EE1C422C55753C2D
3FE9A6732800C10C6DFF0D40D21DD84AE75C05893B870D4D6E8DE5D127E03F15
0CB351260EE4A86FA23E83FB2B4A0197C19F80871ABE3F6CC25FA70652F16D1C
0B1FA5FB0375064AA5A94293F8B023DA0D70BCEDF28AC65210C3652D589681C2
3466867C03431A4A5A55D9AB034EDF79DDF490AC6FD5C0568235505B90A7AA4C
F7F0C826D159D698658694CB3343505CE3D7489FED48063D92EFF51EFE6AD62C
E7EC7BFFB53A5710925D0597110D83A37A73A0FB826593697D12D9BAFA843B24
9E6544907FD98E21E8A014CFB8691DF942B87D3A7155DCCFAFC1CD28161F5B56
3C86E0DB157CC78C4B73DA3DDA663EE554A01BEAD6AD931C177EAEAED945D9F4
93B24C9E0A28FB47181DF6562D4EAF61C588EBD478D1FC534C1F02D759EDEC18
9B41C30A81769F62E131E8C613717240613B189DE9691A0EBB285D67A8907769
4CE76949F58F31816635D2412028C5B86B11F1E34583E8E102E8622B3B97C068
A4FABB6FA48EFA1AF24F4D33B42527A371CEC032E373925D12D1C65A9CBA58CC
AEDA1DB6A4B33C567542F05816979CD2644D811D2BDAB17C31C4CE7A17C95C43
9EE69194C419BAAD5F369B7D7569300D17BDE9A70DE85D9E7B0F5690FE284D14
29DADB394824A1213F0EE69E5163C8DA30F989B8F24389CED0C751AEE7894F61
6D93B36278E4419BE029C1A61B0AED92B67AE4BDF333D06BC76F7CF97FC8CA7C
22CD6CB22806C5AB6751B391157F74B14FF20415743D0DF6AD42296ABFB97B90
B56765ACD02A788EDB10196AF8FC131CA39B3920ED65A4A095E93E7E5D72A39A
BBBEE36D477F64CC768BB8F13C1AF4D770960289B32F87CD81A612268EF5FBE6
0731FBEAAF9B227E34D7A56746D45AA5FC052A58BFC5E35E868CA2C3FBDB4336
D9C865397705FA916F5F1FEFBDACB6C76465644E642EDDB5764AAB01B27E6C1A
558C8454247A30E508E8A825B3EB8FC14062F17E78D06C7DBFCEBC475522DF5E
61031D898FD7FCE8055BBE9738D9450FFEB4B0BE09CA7581284A04229D58A680
77CE35CF5734A56D83667318D2C268BE086FC75DE3D8ACA43E66FCB01DDF5562
44251C0A6701288086BABE4A276AD9AFABEA8FA43A98760A56D5263E454F59D8
A721EE49A2A7FC13B78A9AED472AC4556673628FEE559E173E758877DD4F90B4
F59050A001CA100C36281297059C9B162EF0502AC9A3A20481DB2B8030090CD8
1B9AB9949DD30A8FD8F64CA95E2D3D5453E46D31608321F45468D6C4D857CDA8
0FF66C75458A4CE2B431458BBC8CB550C2C9ADC17DE809C66A71C436D10D890E
F79DF1B71F2638DE722ADD2D6D893B519887EF5EAF70C64C19D13699569928B4
DA77817C7C0EB9FEC05CF95EDD202E744CC3B65EEED081C48241295CA41A497C
DD10544227A6EF4685D87C1736690F7BE1E1B9D9BA4E9F657075490FA8F7B2F3
F797D883FC874411A6709E67E9974FBBD35DAE87BB22E4757DAC85A90BD05BF0
08B2625F9556985A8DD742DB097598F65DF36FD0B8FCB635C4ED1EE10F18E285
98EE6A6859BB4B5754D6AFFE4277C9E67F6F58FEDB7E7D77240D880301324F99
1F298E71C69839783DB864303EA983212036D3FB977E066A4E5C295447027EF6
C432E1F4B00C331C41B3187F017A7C465E52593C997CF959E00469F192A288CF
5373FBEFBAABBB5653131C242B346868876C304D1025B630C12D4DFED8701860
12B2396AC65836EDEE9953BD8A70456AE850743B178AC46F7AD2B6A2A8D1867E
CDCEA7763746C284CD15D913C9C69E721972CF98BA76A27A3097BC5DA3BCA4E4
03BB2FED2540AC36B887AC956F6A23353B163E07E3317C6FE7EA99DF2C75BC3B
5677440C24318B20837F44CB8871CC777E96E930266427264FC16154A57FFAE5
18E5E07299F792A4C096D044C4D65021E8B58D8287D6241D2D9C1FA4F3FC10A3
D9F0DB24F1F9D8A1DA540D8EA120D8F5A24B398CF8BA4ABF9C9A6E54E2969B10
1E947C7D0018194BA4AD5F0D63CEFA0F1B488FBF053E88191707EC3DF25246F7
04BFE25722391619E5EABBC815C3DB9381CFD4819F6CC2401C41405AB4179BA7
95CB278C105263F9677ABF4A6EA92F348B21D6B345E31B714DB56DE48AD59C71
961E6266770C928EA1A3F74F81086E5EE2764623EF6D004A0D51B5FBA2844823
F926F7D56708AD95BA96D760CE68694390AFD127A5018426D2039547E193AFCD
45AD360A543C7268F98F6BCECCDF7F2878DA0F0329462D257F900B6DBCCBA1E7
7C5FC561F61D0090395FEC8F55EF9E8C2526137E3DC0CBB3604CF93754FF88D7
C341CF2414A6EBB4649316FBE4ADEA67F55F01CF6AB6ECBDAD3753F7B3F12392
DDE3E686AFAF257293D1C9772A07430898D16423AF8D86CB53C2DEA7E42021D6
1B52BB5403C48362EAD0D4D06D60D06AE72144163949E491485E824259C3CB3B
52EC3C1E8914C7A66EC96C028BDB77F8ECA2F8CB3DBF5C9072E669B862B373C5
9D81602F5C7CE0FAC02DBDAB88E34AB38324183FD6CB2263F112E7F34704AB63
78F650D1E57C46B106FDA19C1A3B0604A2F2C6DE7A3E2D8545644A2AC8EB8EDE
8BEE3DF01BAEFB978C67140829411E43BE5494C15C812828DEADA7CC349EA80B
8EDAC35E1C0A7E8CDEEE00905E767530464F17C7E38B333C76252590B814188B
E648279F4302DF9C9D41D0CC185D3A00EE1ACEF1C93FEBE1B7B92C158429B8D7
AB908900514B671C829F078037301F49C056111CBC3C5D5F8A297A925E9BF930
DE6945370AD05472C33C523F93D3444C79EC2A2506959E98ACB5D041E2A870DD
D976370D2FA91D8951CC685C147401256879A7F3EE96FEBB2B6B25047497982E
1A0D9D6F0EAC12FD843C89A4FEBDF78B3124D6C37B0864873DEDD318221375DC
1FA053BBBD291AB473A00410E7BBE87B957DFC0758168C4BC529B7C62F3F399B
6C371950DD817A69EA0A619B8EED89BB20D5A39B2331F5F78AB4EABF4E9F025E
FB9B17F2D3ABCEC5B1AFCD61B6C7D54446F593668999C3A1F374C33E8761BE75
212BEA10D50E8F3FBC58BAF2591F64092AF06FD7B68CDB7C90D8A67EB6AB7496
76BC04F01A86646EEAD7152B3AB4979BF5E2BA0169B709385B88D9EFA89A7200
3FB974939869E6DA7BF32FD8B4A4F7BC529DDEC4EABAC514FF139A3634B0A1FB
CFF6F9AE1706DD04C8EB8090679A03CE819BB404BB93773B2DBA3AA1543F24AA
7AF55B5C966EE99D19B9AE4A760282014E7E49070CD1E4926BF659319C3734B8
1C21920864990A10A7E773AA17DE186465B79F190B3FC3E792B28A29D2455D91
1FB99BB5C355BCA530CF6C7A33BCABA86891397537F87E820380894809BD6320
4A82F810D4E8E9F3B6434473B77A17592EF326227FAD718EA7230EE29C737300
8D96F784D79C2F04EE8AC541621F6D1E70A1F55856B0483413AF8EA17C9DB699
1F69B23DCE13ABD5A5396FDC0B453AF73B7EBF741BC17C9B261665E1B8A299B8
6F6E948310A945A761892E4586B60C3EE1A85AA98C564B60FA5C65BF53B8AFC1
CFACFF4F6755FA08DF21A5EEBA22D0F6E3C3817FD2B94198132570951103FE3B
01734ED86FFE50F7406524570EA7934A3B4946D2ADCA3134984B6823FD2C0C1A
F33D5F1BEDA607606D9EBA6E7D4554B341EAD49A5188FED3B46A0429248D1C8A
69D8493836B242128B907F82CA9CA946E84E839A36686A62F5B4C956201F4A4B
F83492D16D10F825E62518994DA1849A5F552E93429CFAFEED7F1FA21F604A14
0AC4A34300BFE7815E558BB4CDD3A5B56704E1675EC90CF67AAA27CD9AAC53A5
939076FA1F1B9709B7CDC3DB21C8F8940995632F0D887AC6A64031612647CB6A
E3166D815680B622E09816F1B52790E31142F43DCE633AE318FCF4D6FB818872
056BA273A77B03D51B7A46D69D2EC040F8FCF970473794DCA19C372A973EC214
B5FB82279C872225D80245D72882B63DA19BFC2A806FCC5ABBBF8CBA6F1699D0
B2DC503A4F895F40C2797C6F4C56D862C9328DEB8C2DDF32FCB0EDEB70D4F7E8
64F63F8248E3CB947F083768C7254FC019CBD22E6D7A70056A21793FE7B37848
BD9CE2D3E56717436080A87CEB094791533637D5DC5B81CF5F17E324EA2A09D4
BDA4312FAD29E4D2996F2887AEBAC72632E25E1B5D82132536CE2A982CDDFEEE
1C519D623037D394E5EF6C9FEB3CE0F5A910A0CE339CB2A61BBE939B1BDE92F2
52D5EC9E7A5E810DA322E4BB4B40B7341777E7598BE81A846E535470DC22DE80
1471D171CAB2B4FED06363114DEDD7A89EE3513704DA2B3C64D1161E1781F9CE
6DFFD983BCDA424008DA3B7FC066409B9A8E189C40388CD91B52A7B4534BC950
8D4A38A9F3726BBFDB3403736F02F04102F04445F88F9E2E6FD2D8A4F18A6EEF
A075B6FDE346285FA3BEA661D6922E03850DAFAF56D705FE9D95B8F8C871B595
868C22B5288CFF475DD2BE2AE834F013993287632373D39D3F5DE89590F8D748
9C07010A46BE54488E52F2FF97AE49DC99A22855EF7E527D6C4AAE1F54F4D5CD
3DE04C8D2362150BAE25F6112FAE7D16D6F3462574F4AEE792750E0945241084
0591D8FF50620AB8DAFA0D20E03558D34A16744457EC281AB2ADE7658B4117AD
A6E8C937D0AFB580AF741D9D4CC7B69D7443D52DE6BC422D090457D594EFAE65
D8CC33BDBE60C02061DFB9076B5341247674D8853C2E8CF493676DE502557F8C
355CC4A6DB102BEAB1E67972EDD1D5FE3094DF2A4E2C4B1EE23DDFE63DA3C7C4
3F4B1BD748B8DD3024FCE0195C3ECDBEB413F6ECB45F5DCB6BFB8E3B400D051B
27D516BD15917727B4D51249CE322EFC487703BC10E041AEF9893EA76C85995F
B0E88F7090D1C15743C99BFDEE1C06C98575E4DD480DBA1DF7515CA570A1BEF3
DDF1175E327E40D06ED325CCD0C50FAF01BC264C611E81ED9C0E963B2BBF7521
9ED782C88901DD8752462DBC4364A0EC97F3AF135AB26A74DB1646BD697CEA85
2ADA1044A34E643E607F342F109C7A2A808449F44D04C8F05A2A19BAB256ECE3
869B3F35B8648EC2CA310B034909E71C7F2B51F705E19C87F668AEBDE3813C7C
33002E8ABA94AD5EE4BB26D59396C75A7C108A688749134752680446F888A8C0
E9910B535FEC4BA5407BF619E50346DBB3B494F63C0883DCC34C88395ABA3406
584DB5F1AE6CDE47ADB09766CA6EAD2890C1FA39DE88426CE527E58F14EDB790
CC444FE2EA149AF3A7FD4FCA041CD83BC8D134C35F7E127591257922EED0393B
6D4F7B38EA271D2FC6D49FA474324CC034D5947C9F8A47B21C6F0EBFDC63445C
C494D6189EA60EA7E3705DF65D5186FC86B77E88A9EB85A18B512DB19155776D
311C47FF72D385A5F3E7D0F5FE699F33AB65D58C7AF3094DF38732157C866FB1
D697016FC2B739584F60D39F3DEC7E2C27D3C8A91C732C92B79B8A01FEE52DCF
80CFEE01485B8E7799E63F1365BBEEF155A3727C419522B569CE4D13F0E9CBB8
4BF1634E724F4E2277D88CC2F21D20E575764C52592909478B62A06012B241EA
1CCAE78EB586A88A353D6E4556BDEB6D67275BFD5CF7F52BA12BB1C6278477BC
1D0B754CED09D5A583EF8F35C5E340BFB3CA7BB1BFB44FC52C7D788E47CE302C
71DE5E817DFB1D0525852CA7D9F733FBD0822E7A06F0D041B9CD089176A2EE20
1807CB287B954855F879D8AE5E6207B2B71655E83CAD3C9CEEF52E4C229B1F6B
B4BBD8190E80B9FC65E64637F6B081CFCC2382D7CC5E36F02109EA48D92095F3
FFACEADE336F1994F8194F0DA09CF4893F757ADB576C0F8F856AB9D4C5B556EA
F74D9DF9554F288B1C652C74B413434BEC3351C00DFD29F397413DF960E2A131
7CD10962F6BDEA3B09E1A3FA4C12743291AE68A887F6E971A1E8120FB303D116
93BA284EC86D5315ECE0B2B447A534333F6D43B613377FB8AE92DD1FC2357FA3
A3B28C4FA1D4CCE3369A3F20D09617237F5230A5B3236F3D88E079699973F303
39A97247E5147F7EB2755A6B2434BCE500F78A2E33BEC8301A7E20BBD0D26677
0520FE706DC82F6DB834DF814798119A81B598F26B26108E999BFC46FCBC8286
C9DEF03CDB67FEF438DE384D43B7967C05D0453B90FEA4A944B1258CECA5E786
A8BDB826155ABFD0D9F9DF56CAA19053D4A493150A4581052B6DA209731C110F
B4DE8725048A69ED6EDE2A39CB457A126F3CB38158107AA45C6703940AB9D1BE
C0A9D7EAED8FC6EF2A79A4B3F551B56679588B742DA5CF16D235005859329FA8
76A2CF96968783A6BDA3D5C55971A44D4ABD3AF0772C9EAE378FCC3A8318A93B
C21896163153862C5E2D059CD0A4EBDAB9FC572C2591DADEBAD154BEB335CB8D
729C8A3E2D8A626621778463D1287DB8D742DE3B375AF1CDBAD2238164B0F1D3
366F83D3F9CA0BFE2E37E299EF2A6EFF6442DD52BC48D141B6157C5BC2F0CADA
32C45DE55DAD48BB7E3D3B0831F0DE0DE96C5F110F19596D422E9645A501287A
1230186C1DEE5D7837819C7FC5DD1953CF3116849EB440CC7E895F026B4AB8E3
6CE86BE1A5D26523B8445240DD8F042BC283D303EB357DF3C02C15EF9A409C4B
5B57B1A5E6E94DA233359CEB1C8BA007879DF5916AAF93A3A7FD94B0BE829F90
8C74423E0C4EC5E2F2949742FA5754ADD4BF4085BFC3FDB6040A19FB38556A92
FC0E509A7906EC70234C0F5E53BBF5FDB7ED91091CB575ECBB38CBDCF48A1E09
2F97D32FBF3ACFC1F41B7707ECA0EA73E1E094B0E47E7F401693E83C45B0C95D
4FB12F47AEA1DB1F0F58116E052A766636F54246D96298F0F9F971F042D98510
B6AC680A8579DFFCB67E73B2A8A340774EBE13E39448EFFA78BB583C58A983EF
09982DE1DC5A73A1774DEFEEEFD3A0CC17E2B5C030A7D2FCFF5FBFD3EC16DA20
56D327DA01637CEEEC0D6FDEE1B7A76D200015F8DD8E99CEB62DCE20A6AA5846
D2821F7196DD6DB0A56637EF91706CA03D2EFCB2A22391F96B3297733F7BF99D
376BFD72358862A7F5CD9AC2164E79F2AE6BFAF25A5EFABA2AB2A420AA53D4F7
CC121DDD79982864BDCA48C069C9F0A229BF25A90C33929B0AB145F95B37A237
066E9212CF8B9C160D3CFFF488CC65C440766587F7D98E8FCDD762A697375CD5
92F9556FCF0E596A83C5F19BCD68839750E4F49F2E536C29E981678E2328BE11
65CE5D7D3F3E0F7A4AB113544AC4D65021E8B58D8287D6241D2D9C19F67B1404
454B952104FF25A308FDD23BF1D26B7A01D73DDCAFDD96490D651504BD8B5A22
F514D14FDE4D34758503D858C464F3D842055A2616C7F508928DEC8CC04EDFBD
0B5D90A7909A6265FCB05015D25DA40A9F4634C7DF6C88B441264C8A460D0A2A
6DECB325BA32CFC5DDBC9FBCCAC5073CAB38B8102C0D7C2FEF351186A6DEBE1E
BF80FBD241FD064DBF03040D4497825B23D9BCA52770E18B4037035D2268CC54
5346B48D95B56A049C11FF103A055F53B6AB9BE079821ECF676FDDC71CEBA885
B228F1296C50E878C940FA012315C2D4EDDC0B38FF1620ED27E8A316965E6950
2F7E922C5B63587876501E4EC2A667C270C67E21DB0F715316CD97A98C82803E
C7673E3823CF91A9275A340096C31ECAEE48C00A820F6751D9EF22125E19D6D1
372D21BC4343DB4D790D552E9D724DD5B77735D6B9D97839779EFCE712EB0B9F
26C45EC264A9850F49994397F54EFDC5C30D38EE73CA2B1CCD46451C7E4B6B4F
66F415916711538E2E9A1BF9D2E5842CDDBF74140C3A3675BDCB92D4167656AF
118BC2572E92D94EB429F75395A16AB3B91490A3347C1E8C514E8045BA8EE06E
A5082EEE6E9228E1F9CE055EF41DFBA47DCF8DC829927255ACEA830AB445D9CB
A46FD7E028EB1A9F30FBCEF78D51D42444724F1877C5D8515C405F275EF5835B
84831F694C72FE5217CF628681F2B015C731EDF9EC0F9C1613DE3CD76E398B6F
E7C50DD0AF3047BA25ADC873EE78EA707258484791223B705BA3A46A20102DE0
5AF4F63A98520F27F654CF833F8F242BC959B11423C1DDCC0994130EE4C2AA62
D6B46C27C79F6AC96B370A532047DFDE471266A9855A1DBC3B7A7DA70D25CD27
0106BFEECB575E7141F032A0068DAAD15CE73071867E40CC9ED578C838BBA025
06798071F2A33ED5172059A4C68A0FC20DDFA568EAF540440737FE9564DE4107
69B5C15D3972B2F2C8F1D617CA3442F5D911C6DD2E488A3F223E6F2E15C2DF4A
EA2A2B4B88AF0EC8AC16DFA6D71C71930F0EF11892C03D30B06363EB36E1DD12
722580C6012C8B68FE9EC0BC715F29822A9A8AED742FD3A5A753AD7B5638D765
3727D169CB689B7F03CFB7C926DDD1139D8A35E956AF4CAE0367B180F4A154C8
A28EAFA97A58758B37917FA7EE6FD539C8535C495E6CDA68305F2324E92B59FF
C977DBF5C007D632AD6931B33857FF798C2CF820418245421B52AA33B0B19BBE
D2B9375E521BA342365A5B30FB02ED120A27E8A84E04D1223F89320C3DBBAABA
6369F2F24403FF6A5ECD9AB3C3FA395199FAE4F7E9C856B07350101C70B1C859
9D4CA426D0C62BC505625BB4E3BB98F555FE41A89340810301C99691074DF344
DE03B350D208B44458C9BAA26A2C45A0F05379B059DCE0D9FAD6F46CF5FAAE8B
A4181A6EF2D2CA5F50626F215083CA74EE657CFE3900D0D792FF2E8F49880189
9ED65C0DFE3D104403B4F469068B96F7ACF8526FE54816FA2B7AC3B96E655530
12A6C77FE53E36CD2D9FBB84407FBEA91A5C184F439E722D48BCC68DFF3DBADD
06488328477542F9186D04FF6E85C65C85AF0CCD8D5B824BB69448E92CAA28AB
52F38357AEF4D7A7376ABBF4AAB930045F07CD60FAA8B62F0E5DDFBAB2765166
A2B403BE7078B7C1B18967E8E6D301142F4AE889EF801ABF8140B75CF243EEB6
841B0431BDB4E06E1988D30B77B0CBA5B8921ED45F7778BE3CF49987BC2F7661
56316B82B65630C73FF8FDB977A6A9BB2D9C19FB99AA0AACCBBCF3F895A19491
2DEAC61B7606A35DD5B868BBF939AE594E5851E75A258A29105953FD17CFD9F4
4C776360BE5D268088C01940092A52C71C35C4E409626DD6A89CE01362B90799
279479650C1444E480E8CD320B25BC09D45CB38BB2B2B1B4099027DEFC72D04C
39314EDD698B2FAA7F2B8C269ED50990FC04F4D7A6A955918C737927D3A30E28
AF6A1251535B63620D6D0C76E373791666B11CF8595DC99806034451CAA470B5
F7E63E15C5E1B3C64C0EA273D8B53B83CD774B80B3716E0D02C684076ACC9A20
CA270D52DAA835C2F5AD4A686AD6A069C35666D2C1D17FC43203CF6537CA712E
787DF041B0D58C531BD4AB2BBD9DC974B52433998A07C68F9783FF987C5558A6
DCD6B261095EFA2E5B13387FBB4DC2822D61D9FD8AF7C151B01D286ACAE96B30
9C64327955365285933A48ABA2909881D871C6B84CD8468B6922848870F029DD
64C0F7BBE3407BAEADEE68B498F136D46FE609764C1EE288A3A49D63DC01ED11
3F568581BA9806EABB808210BA22E3170DF993DB798DD1FCEFA2667B487A9DF5
CF6F26178217D4DF5DEC4DEE9F20BDCCB31A8E2ACE45857365A8A3CDA333DFA7
012316E7524AC2360D2A1D6C5A8FC9F0B9B47D3138F766C682F0ED7CAF255AF7
0B480888C335B9EBDD118A7E57B69159A9F1B94D11F94905EDE644200697A576
73C0438691F4B576E35D7122F1EFDF5D35EBE667F6A50049DD7BD01F6292FCEC
A54CA72FF968C5549BAA7E0F5B9D9F26A50B23BD1822695DF59F17E0F166CD48
F80B0D4DA161BF49BD779C3C7F4523AF2038AA1A96A3A26EEDA4C9FA9D30CC55
384267425303B80549B20C400221C12A9D8EA7A2B57540F4BD82CE9AF4CA7079
33CD98FF1787CA37D69717C8BEBF714838AB3B4C7FAD52033FE6CC7D57FC9089
43EB939EE4A36676CC7F3DC004D6F4C75B1B0432C400759DF9919FA794021A7E
5A5DB46DF6F85B5245D2D15DA5EDEB4B417A21B8789F2F992C0F6F3E38881D5B
80450F8F003456A68EEDC5A5E75AD296256090004F41A1FAF91A109619EA0D0D
7F392615CD906C7502098BE9CA71A11C776391B8FA4438E92AEEF0BC973C8DD7
D9A2E145D1D0961BE703278B2023FE34DDC73488252BC063941611DD87363261
51DD732ED5F085F24804E19C4AD8F1767A4D92474E5884F19F5F9D223013F8FD
3EAF3840E15381543712F436ABD472395980DAAB0F15B64B06882D2812D741D2
17882F6A342FAFA7AC38D33DC6705C5F70C84ABCDF3F07E2D6269B7C5BF40983
DE82A2CC16FE187136E1E889E484EAB221EB1E6A811CED76FF36E0A79983B74F
D629CB15E326218521C7CD6C3AD71A1D9B6B9DCDEFD4DA7117B713FCD71B2B06
D74B7B385D26FE7A9137CFBA6BAAB5078DB3DE917B42017899160E3F5DD6D824
26C71F72B7AB62D9BD4452DE5094942EFBFB0995DF003B77EEDB25C5D54CB21A
5BE50BB39E499346B2E37CB7429D7D8DD713BA1357618AFDBAC7A28A8C81D206
DFF506CD428F68A5E78792EC3F52A561E49013081DAE4FFEBC10DCA2BDBDBB79
0D1B0A268FA3FE78059077CED5E9EC06945DC7A9E2116AB215993E7A1C87B7A8
C644DE5A67FB7444C904E8CBE2319788F40A7C7E88561572B47C18F5C798CC34
749093472F780F092622E8C43D83F2E81488637ED5C6424C6D0A2E0AC6F15DDB
A4059E7EF4F63EA1A434F744E3A2CC7623B31715A8FD033303A2AD9E74B12853
0392F64A4F88A6282A036F6698E3A879D2E1987FEED01625938C05778D06A527
BA83FED67E8DCD665F4CA477FBE8891D68A761D9AAAD64A8BFB26A56361DEA17
4B3970F587F4B66165ABEAB6E0BFB6DF84EFC5830D796F81037E3672CEA83B03
E27769ED2EB5696A397A2AEBFE892735BF37ACF18799E003D704FC6F8C7402DD
325CD55B00736D3361742673891401749D3D06723B0EEEEF4282446F02349139
149486F183AF761F112B5C25157E4D9109A2BE5A6EBFB97B90B56765ACD02A78
8EDB101F041D1EF279DC12832379941C598F44A65E2D97771925C9203E539817
CB0472CB805AA9A5863BB9645FDC8926BF939719BF3CBA3CBEF3E9672B83BCB3
496743D705B04F5FDA21D1E5C75F5DF953DAEC243FE25DC85F44E84ED06EA562
B8E2FA148D62DF3440F95E97DD9B83ED66274E1F912313533AA5B9C92312E0FC
17B737BAF8AA0E6953C599B6F73807B202F3CD19E68F91E822AE4FD4556D2EDA
E6DC038F502460A6703AF8538AAB6D00DE1FB58368D34E5B922D3E12B9FC45B7
9A38D8AC26AB554031EF6D0181C1355BF15154F8FBBC5896F87AE2C12CD8B46C
0B8140A92B6C9D37E4268D2ABD61D48CD861A5BDED1BB9E9B6AADDD481DA478C
DF81FEAD1F872F3020C2C86966C36A1DE4782F5E9C5E88A9E462427A868A2D33
7FCD128E551D1476F453DA9B16C6927981E3955A5ED06F8E9A530FE1BB6705F9
661760CA5A4D28C573895A6FE24264A1C8DE16548E65FDD0BC61D74522DFFE8B
B7708AF53B123F4C64EDBD8A47E507CBEC1DA09C5FFF0B69D2E8BA2A1A2778D1
D855EEDAC7EA440A5A6247F6C48155A192B6006E99A99121F4C6627C5605273C
5532C4F30DBACC4C774CE88D446E608FFD38593EE95DFB1C5BB382627AC9B7F5
565043816BDD84A19DD864B38875095F67D4B68E9063DE5962E22705D4859C75
F40CDE19DA75FA891762F84656ACC3B4B2B67E676A29CCA9BDB8E391EB192786
EE78CD8F9970D8961FA4C3229B25DB8790B02BE8128D8630107499F345E2AAFC
C8873564DD28CD502881D30E137838B8BA1EE1CD75876B6089B8FB12422B0DF8
A4E24785C6B87CF68B96773569C69E4542A6888B1B3FAF0465A3554E9DB7010A
2F93DAF2A51516374652F8A4AE15770DEF0A687E8521C181533A5FC87BA5BFB4
5363451A7835400C21CE4724C05B477DD974A9546DF809ED64AA57C5E4521060
0D4ABE2C5A450D0A9AF03435E1294132AD605B915EDBA5D1ACA5372FFE67ADDA
409F1558B5DD28B065C22E160EB74339C799EA83D0191D01B22DCA5BE67E15E1
AF4CFA20F1D16943CCA0DEE7EDB63358DDD7FF85285CFE4B73ADF5E8F88C977D
D0EB7BF13CA419BC2D309171FE54236B7987E5FC7D19FE3A7CC3A4737169DF13
0F27F494FA4EF1F3ED532F10127C9560F32E8C59110F6E7FAA11EFE1A57A0DCE
E7BAE0C82B1E3557000281C40EC1BFEB6B16714F2C9EC384DECC1A97814F8E3B
D2FDDA12F2C8FBFB36A2A946D31979CD7E81F552B607827769483E5EF6E5C840
6D8E60E60CC675EC3FEFCDF48D1C43C7B4C40032E5385748A6AF55991A9D0205
C60458A32502468326D0FC4026AFB2EE7CA685090DD542E5B7CED8E8D342663D
84999D348A1A563DEB401571D5064138BD2C0B1E5F20A3565EFA1C5D01D476F6
319010506B528EF173E483782FCACA8DB225952E5A14F5C4301CF50BE3C2593E
D2896DFBD3271FD12A072A575A7B73049606E431B254167C6A277EAB4E979509
A88A9D793D3194EACC274D5F58F230C214058AA0FE804A11F6D768031E4FFD6E
EAFADA79D447CA582E60E70E5C5E08ACAEA6F0E9C8F90A93AAA8A2C57AEDCC25
C844B04A982FFC2E4EB89D23017B31F3FEC116ABE08C523864BF9F81ACCFB125
F5E5D26892BD2FF089F0B98EA502E0B4D61A361165182B6E201C0526EE475BF2
EE12174C7CD696301B280F6DDD22C12A50C31564BBE1B4C581A776ADC88C296A
CA9F65547AEAE94EF7B3A3B2D34B9537A988168E3174096AFFD5B2E65606F517
94476F62F4D9E2CB4A7333EF3FC77FBAC01B8BDEC1FA2F733B3F2CD4F4C77C6C
64C0F3622F689EBA0AD020521767083155753E263CFE17A0643A09FE99F66586
474FCF20136A71BFE3CF13B53758A3BE19B922D16A6757485E350C17F3274C67
45188399E725ABE897F0E85F759CE3911315A67A7A93E2728E8C858A16E96DA7
11612F51064C1375A60F63CB7979E3DB5EF32CC963CE120894E410D42A2265FF
7B05792580C6012C8B68FE9EC0BC715F298228228FDB63AEE2E68582269F402C
2A4583C493E7FEE76BD675023214098FD9C9446A52633AB02C1A6D8A2E00E9D1
A5C91440ACAF6ED5B8A3A0B2961B6585C3BC8751B9BE474406372E7B3815FB5F
F41DF4C1728CE9FA210EE25DAD6E0BD721CB05C4F93C4AFA1670A6E0C0B539CE
618503BE25D7812CEC7CEB983E71575EB8575A5612C9671510D8B358A40B2812
488FC16119FD510637DAB73CDFA0B9777BECA40895CCCA9E0FF9D06EB80AA80C
19B3FA4B86A04DA39717BE6A4D7BDC9E00A5834CA315127B96D845FC9CB4181B
34915D94BE7778936B7307AAD0C3AABC8C11CF4D87C860A3635EDBFF4F3CB5F5
9A41E4C6CCD7D825421C31359DDF8535DBDC2F7220D4DE83698E676B03B3060A
5CA371396CE160EA185511A471E174D03555DCE2F18C3DC4448BA756E74EC71E
EA9AFA6265459DDBC73C1A5A5301C59D57A1414B1332BB861F9F5B3DE2ACE95A
C6D212D85553FCA786ED03E623310B2657FFEBAC121551249FFFF2B5E75BFA39
AF25EEF7F1C2E81647141D24BC9E0626F50DBBE08B90FE977CC49699FB8C5A36
B275FCCB27855526912643F7BA79E5A004A3D8DB5089BA3FD9B9569FC2BF2D19
E7DDED937442F04211607ACF2858239049077DD9660FB1356AACD5499DFB0A80
019A93A7A1672D407EDBE33DC17331331552581597282F3BFC58BE2AC39D0A1C
EF185152CB1A493AC71B523A5072491AE0E2CF7D447C1B6A40A3AE99769A4834
A753C8BD3AEA1DE4E43D831CD8DB8B4205FD3F597C38189CFB31BD28018ABA71
F48123181618AF6D255B045079096EC5355E2E2E28462C4993A2EC2654F0DF29
3296892E39EC883791721E97CE798934499738157FF412FCCE43288F42C93448
3E9DC48796247306204740690A01F044C379DD1EAE2BCEF21BA42D06D61AA809
55F86226CF381C72291EBB1567249EF94B6552F418EAD563D53FA4041B0873B9
66E6F41EB22F5A92F0FEF9A4742DCB0E5975B4C1C379253E7B4F582D9BD75E81
CCE8B28A6C5E70AB0F47CD15D7207C7A825D08BE9382D1012864D9AE93D84A19
945E722502311E59E64B1A9591C3860053C79BE565358E59B9E647E0BA34DC8B
7C43DF46169951A878D45A2EBB73A70DAE4C0CE00686403678EE29038DA29F0D
EF41F42051B84E160AB79B9C0736A85F8C80466A7538C67B91BE2D2DB38A4047
6DA35F5229ACF7BFD2A2DAF93F55D086CFED5DB67A8D7BED583B1F8FC12C4F3B
4CB98AB326C262534AD3432832B66CE1A4FE3F10AA41FD634AF23FEEF91E6176
1DBDD78F7634C7F8500C3AA24FABBDF23271CE408C335B8BBA0E96B63FB5F58F
876C6EED19A5987FA54B40D36D51ABFB943DA61A4F03CAC6A8379EE7D87A8076
7C7C5F25481982F05E0F0DC6E93A7777A90543D38DD3F7E980DEEFAA42C4A561
4E062B80C6B58933C514859212CCFFF5A79D1CFCD1E5AC524617569FE5C5935C
16918F0AB2DE1371AD8A11D552BCFF0E7E9D8209061B2556A5D0591044680F62
F7D9BF246114F4032A0BDA85E0C0903185864FE7A2596578B11218BD74C8D2B4
C22EE38950733524EF1ED2E41BDE6C9243839E2D64649CA4861430544D48FD38
37F0C2496BA5C760B3FDEE138C0213688E65C9C42274A40872A70EA09670BA6F
90B8E9A2598085E2EBF77506EAFDAE7D8522A5EE6D6CB150016A0C7828BB707B
ED0287402DF3168CEE4A44418DE08E2448440F87182531481CA96F88B4E181DD
06B48BF73DDA42EBD5D0D234673FC0BBCB47FFFC4D81334D762B22C960240C02
852201ACCE79BB4FC4FF6D98547FECAD7892228B84C0C7F3CF111A7DC0B91D4B
B0CC8C36196912A8E62A9B0A1D331A6DF16E8541BBD68719401929380191FA4C
AB889AB0DE9025FA945ACC965ABE961C05F527AB6AA16C612D1DC80CBC4729DF
40E4CFAAF4D2504B044DD0CBB22D045277A3E77EA1A5A668E456DA34313FD134
84DD0AB063DB4FF777BBFD9AF095C04EBA5466D40EAB56EA42325062A25F8908
3EE08C84D2688C8A0B39D7C9910578DCD4AB4A4113AB2B38026B2D02B42D9D08
C66149225823A8675BD1F1DBD790D61561AE5C0616226FD2D62757E95F7B76DB
5CF1E6077E98045B0EC8095312CCB07440C8E6E3573DB6FB5CFDE2C141D26782
ED6EE24A59DBF605896DD345C8EBAECA269B943104F74CB0C0CAA4ACC30CE10D
2D84E19201FAACED41BAA33950A7B84F087C0C6C032D121CCCD51B7AB164EE9A
217E609AC3CF154C9CF36171E8DA3FC6DE822ABE5DD85135735EF7A4BA2B00B3
9B1CC0CE374DEDA4A4ED0FE544E0CF55CF3032EB76701C814CB9BCEB0DDFA3BA
A3150F84D4EA0E7C610D9C6FF1290270398288706F7D9513F1BBF8A7B11B94B7
70C632A5CB74684948671E5A5F3E4B9C3FFAC77EE6E5274D2E530967829B3566
BD9187A9D0FE70ED2CFDDEABD773BD2C9976398180553EDBB33C97B055C2C88C
DB14C64D2181302C1E9AD80E4B3EC26AE5C08326F51F1E4B9E2D41E24070141B
DC000005A89437E1A0C9A002892F47F39350209304DF6B47BA77497A2570C3DA
FF920450F610B00B0397DFF8EF2A95CE8D0E1CF60FA713ECBD804AB5A3AA6959
EBFCA6FAD758330AF1392EBE0AE0EDF15FAD68DC8507209A7E809C829259B15F
347E4A546FA72AA6EF52B6B81C3ACD5A55CD30FED9AB91FC673A0B7B1E978476
BD5853DF4FDECA1460EE0E4D9B5F4C75BDD94EFCABFE9E20569323D1ACBCB1FB
71E9F71EB1B1CB417C36B378155E960F0A9BEB33F8E8625745160E324A6F88CE
638084C677467290F4F50E7BA78892F52CA438DFDEDEAADD161C14AE26A46D00
1C73E2E5CAE15BAB0E7E36914AA552400C71ACBB1FFAF7AB7FC1699870824378
041CCC18D96650DF6980AEA051D1636E6DF4A9585656F1D352D10CE2B8B68BDD
D6F37622EEB9FD77C30E5B0FF8B871D8F028CE13C65B4A9926D4399C07B68F34
A0280E29124409D99EB4589DD5B84B1A967FF8AE8F7639F1047D632B9988DF55
D78210C9C64CC21FF1A3813253FDB1F2B624186AA43D6D95CDFD5DFE98C90DC8
85512DD8DC2B7DEB0A5A0C8E25445247AAE99A862FA128FA6A8FDF5FE7890F49
35A209DA0799528161284E7D988703828DA3531F788D083B78654D57A3348916
240C5DDFC0F8456740D67A6D7D1603892F1BC92FB016B3A0B2CBDF3078FA1E3E
E537CEE6D6BEAF11EE59822E4AAA1094273DBD0DE5A120892A18F8CF4766DF99
138946494E912C161785A29AF92555599ADB5278A082296FBBEA3FF1EA5B2903
3A8CCDA9492C9F5E00681A20ACDB3CEA8601E00A318CBAB506254AF4A9165FD2
E18B86BC50A84894E83B5DE7F2232EAB5448832295276B20EF1A7321BAB75552
0C8198352837EF658A2EFF3A3FB05637F052883ADEF4241D7E78765717286617
8F05C52C2063DF74DA70A9FE4D992C5E780532C12AA61F84D834E1AC656B5636
90FBF67A50FB2B6B850C6A96177C522938031B02664BD7C30570B5C2748AB53D
2FA99ADD5AEC4D49AEC928FD845C48EBC9F5ECD12402252876A1A1F3096BF0FE
7FCD2631A8D21B5F1D0C0CC8A58A06C32755572B782FD36A399620651C38A483
CAA321FDED0B0A723696B3F78A721FFD1FDAA379649162E670EABDC7A54CBBA5
F0728CD698113F681E04FF2C1D23FD3F5E5C115D84DE140D305E12D7EC796347
224A9D8872EE8E2D7F2EED75DA39F9129B72BF4E880E1BE0494536C23C74C56A
6C787209638E7ECF4087DA3DB2B0DC2C5FAB07C1D8D85FCD7B98ED973BFDBDC6
B362DF04FED90CFFDAF209ED9622B88CA8EBDCA96F3312EFC2DFEE6E3E296D3F
B9EEA2BC3E940FBF89A965CF92BACE01BD2C8D501D34F63324708FB32A81923C
CCEFE29C5A4E1796F5B9D419B4E92D5A9C6F37CC7FC4FD3B78C26ED04ECD1FB4
99C604E54FEF34853B8D96BE9166F81A37E735279FBB2008D59E751E76345315
E10516100B76D658A684EA3F4E57F601110C16331526A29031761C9AB04930B3
0622E3F4834C43315A5C8BAC50516BE42F7F6C9D5BDF00FDD82767B7285561E1
B54E77214F501C39
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 113 /a75 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023877B96EA2AE6E5E42682E9F4BABD109F039E3
CDCC6B0F9404DA157F91B61905B34C39BD0543872FEBA04FADF1DD613E1E9822
560851385E512B3754A099D21B332D2C9547EEE2B94EBC03B2D954DE0D64D28B
5C0305C968BF1EA14529BE16F9E7F147B08D71B9332ABB7B5EF1B8B60A8D19F5
22B497164EA1A20E17E9B45FE94A09D54FA74709C83B0824F96BC972F4FD728A
BEBD57EFF668607F499E1C51E9FB45286F4C13BD0AFA0A508F56824CF0EAA82F
4FE235BBA8D245C937FACAF4DFF3681FBA6D35EEBA001B55704878F22E7A2C86
476C1CCF1FDAD0E29EE5CB818640B6853A362F764E9A5DBE640CA905A9146590
3F8F2CE8881EADDBC6FA9C1505D0EACDA995DA8D00B9EB755B79D90D68B335F9
49FBCE867D0F7DE2076A879038601083B20389216CB01A808CF4069034CD1152
FF9BEFCB0DB36F87FBFFD269DDA23439D738D84DA9C96CC7435484DA8BF6FB1A
34BC1DA8F3FE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600
(/home/fenarius/Travail/Cours/MkDocs/docs/pdf/C1/C1-exo.dvi)
@start
%DVIPSBitmapFont: Fa ecit1095 10.95 22
/Fa 22 120 df<00000000001C00000000003E00000000007E0000000000FE0000000000
FE0000000001FC0000000003F80000000003F80000000007F0000000000FE0000000000F
E0000000001FC0000000001F80000000003F80000000007F00000000007F0000000000FE
0000000001FC0000000001FC0000000003F80000000007F00000000007F0000000000FE0
000000000FC0000000001FC0000000003F80000000003F80000000007F0000000000FE00
00000000FE0000000001FC0000000003F80000000003F80000000007F00000000007E000
0000000FE0000000001FC0000000001FC0000000003F80000000007F00000000007F0000
000000FE0000000001FC0000000001FC0000000003F80000000003F00000000007F00000
00000FE0000000000FE0000000001FC0000000003F80000000003F80000000007F000000
0000FE0000000000FE0000000001FC0000000001F80000000003F80000000007F0000000
0007F0000000000FE0000000001FC0000000001FC0000000003F80000000003F00000000
007F0000000000FE0000000000FE0000000000FC0000000000F800000000007000000000
002F477ABE2F>47 D<0003FFFFFFFC0007FFFFFFFE0007FFFFFFFE0007FFFFFFFE0007FF
FFFFFE0003FFFFFFFE00007F0000FC00007E0000FC00007E0000FC00007E0001FC0000FE
0001F80000FC0001F80000FC0001F80000FC0000F00001FC0000000001F80000000001F8
0000000001F80000000003F80000000003F003C0000003F007C0000003F00FE0000007F0
0FC0000007E00FC0000007FFFFC0000007FFFFC000000FFFFF8000000FFFFF8000000FFF
FF8000000FFFFF8000001FC03F0000001F803F0000001F803F0000001F803F0000003F80
1E0000003F00000000003F00000000003F00000000007F00000000007E00000000007E00
007800007E00007C0000FE0000FC0000FC0000FC0000FC0000FC0000FC0001FC0001FC00
01F80001F80001F80001F80001F80001F80003F8003FFFFFFFF0007FFFFFFFF0007FFFFF
FFF000FFFFFFFFF0007FFFFFFFE0007FFFFFFFE0002F387BB72F>69
D<0007FFFFFE0007FFFFFF000FFFFFFF000FFFFFFF000FFFFFFF0007FFFFFE000003F800
000003F000000003F000000003F000000007F000000007E000000007E000000007E00000
000FE00000000FC00000000FC00000000FC00000001FC00000001F800000001F80000000
1F800000003F800000003F000000003F000000003F000000007F000000007E000000007E
000000007E00000000FE00000000FC00000000FC00000000FC00000001FC00000001F800
000001F800000001F800000003F800000003F000000003F000000003F000000007F00000
0007E000000007E000000007E00000000FE00000000FC00000000FC00000000FC000007F
FFFFE000FFFFFFF000FFFFFFF000FFFFFFF000FFFFFFE0007FFFFFE000283876B72F>73
D<0003FF803FFC0007FF807FFE000FFFC0FFFE000FFFC0FFFE0007FFC07FFE0007FFC07F
FC0000FFC00FC00000FBC00F800000FBC00F800000FBC01F800001FBC01F800001F3C01F
000001F3C01F000001F3C03F000003F3C03F000003E7C03E000003E7C03E000003E7C07E
000007E7C07E000007C7C07C000007C7C07C000007C7C0FC00000FC7C0FC00000F87C0F8
00000F87C0F800000F87C1F800001F87C1F800001F07C1F000001F07C1F000001F07C3F0
00003F07C3F000003E07C3E000003E07C3E000003E07C7E000007E07C7E000007C07C7C0
00007C07C7C000007C07CFC00000FC07CFC00000F807CF800000F807CF800000F8079F80
0001F8079F800001F0079F000001F0079F000001F007BF000003F007BF000003E007BE00
0003E007BE000003E007FE00007FFC07FE0000FFFC07FC0000FFFE07FC0000FFFE07FC00
00FFFC03F800007FF803F800002F387AB72F>78 D<000001FE03C0000007FFC3C000001F
FFE7E000003FFFFFC000007FFFFFC00000FFFFFFC00001FF03FFC00003FC00FF800007F8
00FF800007F0007F80000FE0007F80000FC0007F00001FC0007F00001F80007F00001F80
007F00003F80007E00003F00007E00003F00007E00003F00003C00003F00000000003F00
000000003F80000000001FC0000000001FE0000000000FFC000000000FFF8000000007FF
F800000003FFFC00000001FFFF000000003FFF8000000007FF8000000000FFC000000000
1FC0000000000FE00000000007E00000000007E00000000007E00000000007E000000000
07E00007800007E0000FC00007E0000FC00007E0001FC0000FE0001FC0000FC0001F8000
0FC0001F80001FC0003FC0001F80003FC0003F80003FC0007F00003FE000FF00007FF003
FE00007FFC0FFC00007FFFFFF800007FFFFFF00000FFFFFFE00000FCFFFFC00000783FFF
0000007807F80000002B3A79B82F>83 D<7FFFFFF8FFFFFFFCFFFFFFFEFFFFFFFEFFFFFF
FEFFFFFFFC7FFFFFF81F077A7D2F>95 D<0000FC00000003FF0000000FFF9C00001FFFFE
00007FFFFF0000FFFFFF0000FF8FFE0001FE07FE0003FC03FE0007F803FE0007F003FC00
0FE001FC000FC001FC001FC001FC001F8001F8003F8001F8003F0001F8003F0003F8007F
0003F0007E0003F0007E0003F0007E0007F000FE0007E000FC0007E000FC000FE060FC00
0FE0F8FC000FC1F8FC001FC1F8FC003FC1F8FC003FC3F8FC007F83F0FE00FF83F07E01FF
87F07F03FF87E07F0FFFCFE03FFFFFFFC03FFFEFFFC01FFFCFFF800FFF87FF0007FE03FE
0001F800FC00252975A72F>97 D<7FFC0000007FFE000000FFFE000000FFFE000000FFFE
0000007FFE00000000FE00000000FC00000000FC00000001FC00000001FC00000001F800
000001F800000003F800000003F800000003F000000003F07F000007F1FFC00007F7FFF0
0007FFFFF80007FFFFFC000FFFFFFC000FFFC1FE000FFF00FE000FFE007F001FF8003F00
1FF0003F001FF0003F001FE0003F803FC0001F803F80001F803F80001F803F00001F807F
00003F807F00003F007E00003F007E00003F007E00007F00FE00007E00FC00007E00FC00
00FE00FC0000FC00FC0001FC00FC0001F800FC0003F800FE0007F000FE000FF0007E001F
E0007F003FC0007F007FC0003FC1FF80003FFFFF00001FFFFE00000FFFF8000007FFF000
0003FFC0000000FF000000213975B72F>I<00001FE0000000FFF8000003FFFE000007FF
FF00001FFFFF00003FFFFF80007FF03F8000FF801FC001FF003FC003FC003FC007F8007F
8007F0007F800FE0003F801FC0003F001FC0000C003F800000003F800000003F00000000
7F000000007E000000007E000000007E00000000FE00000000FC00000000FC00000000FC
00000000FC00000000FC00000000FE000000007E000000007E000003807F000007C03F80
000FE03FC0007FE01FF003FFC01FFFFFFF800FFFFFFF0007FFFFFE0003FFFFF80000FFFF
C000003FFC0000232975A72F>I<00001FE0000000FFF8000003FFFE00000FFFFF00001F
FFFF80003FFFFF80007FF03FC000FF801FC001FF000FC003FC000FC007F8000FC007F000
0FC00FE0000FC01FC0001FC01FC0007F803F8001FF803F001FFF003FFFFFFE007FFFFFFC
007FFFFFF8007FFFFFE0007FFFFF0000FFFFF00000FC00000000FC00000000FC00000000
FC00000000FE00000000FE000000007E000000007E000003807F000007C03F80000FE03F
C0007FE01FF003FFC01FFFFFFF800FFFFFFF0007FFFFFE0003FFFFF80000FFFFC000003F
FC0000232975A72F>101 D<000001FC0000000007FF000000001FFFC70000007FFFEF80
0000FFFFFFC00001FFFFFFC00003FF07FFC00007FC03FF80000FF001FF80000FE000FF80
001FC000FF80003F8000FF00003F80007F00007F00007F00007E00007F0000FE00007E00
00FC00007E0000FC0000FE0001FC0000FE0001F80000FC0001F80000FC0001F80001FC00
03F80001FC0003F00001F80003F00003F80003F00003F80003F00007F80003F0000FF000
03F8000FF00001F8001FF00001F8003FF00001FC007FE00000FE01FFE00000FF07FFE000
007FFFFFE000007FFFFFC000003FFFFFC000001FFFDFC0000007FF1FC0000001FC1F8000
0000001F80000000003F80000000003F80000000003F00000000003F00000000007F0000
0000007F00000000007E0000000000FE0000000000FE00001E0001FC00003F0003F80000
7F0007F800007F801FF00000FF80FFE00000FFFFFFC000007FFFFF8000007FFFFF000000
3FFFFC0000001FFFF000000007FF800000002A3D7BA72F>103 D<000003C0000007E000
000FF000000FF000000FF000000FE000000FE00000038000000000000000000000000000
0000000000000000000000000000000000000000000000001FC000007FE00001FFF80003
FFF80007FFFC000FFFFC000FF0FE001FE0FE001FC07E003F80FE003F00FC007F00FC007E
01FC00FE01F800FE01F8007C03F8000003F0000007F0000007E0000007E000000FE00000
0FC000001FC000001F8000001F8030003F807C003F00FC007F00FC007E00FC007E01FC00
FE01F800FC03F800FC07F000FC0FF000FE1FE000FFFFC0007FFF80007FFF00003FFE0000
1FFC000007F0001E3A74B82F>105 D<3FFF807FFFC07FFFC0FFFFC07FFFC07FFFC0001F
C0001F80001F80003F80003F80003F00003F00007F00007F00007E00007E0000FE0000FE
0000FC0000FC0001FC0001FC0001F80001F80003F80003F80003F00003F00007F00007F0
0007E00007E0000FE0000FE0000FC0000FC0001FC0001FC0001F80001F800C3F801F3F80
3F3F003F3F003F7F007F7F007E7E00FE7E00FC7F01FC3F83F83FFFF81FFFF01FFFE00FFF
C003FF8000FE0018396FB72F>108 D<00001F800FC000387FC03FE0007DFFE0FFF0007F
FFF1FFF8007FFFFBFFFC00FFFFFFFFFC00FFF1FFF8FC00FFC0FFE07C00FF80FFC07C01FF
00FF807C01FF00FF807C01FE00FF007C01FC00FE007C03FC01FE00FC03F801FC00F803F8
01FC00F803F801FC00F807F003F801F807F003F801F007E003F001F007E003F003F00FE0
07F003E00FC007E003E00FC007E007E01FC00FE007C01F800FC007C01F800FC00FC01F80
0FC00F803F801FC00F803F001F800F803F001F801F803F001F801F807F003F801F807E00
3F001F807E003F001FE07E003F001FF0FE007F000FF0FC007E000FF0FC007E0007E0FC00
7E0001E078003C0000002E297CA72F>I<00F800FE000003FE03FF800007FF0FFFC0000F
FF9FFFE0000FFFBFFFE0001FFFFFFFF0001F9FFF87F0003F8FFE03F0003F0FFC03F0003F
1FF803F0007F1FF003F0007E1FF003F0007E1FE003F000FE1FE007F000FE3FC007E0007C
3FC007E000003F8007E000003F800FE000007F000FC000007F000FC000007F000FC00000
7E001FC00000FE001F800000FE001F800000FC003F830000FC003F07C001FC003F0FC001
F8007F0FC001F8007E0FC001F8007E1FC003F800FE1F8003F000FC1F8003F000FC3F0003
F000FC7F0007F000FCFE0007E000FFFE0007E000FFFC000FE0007FF8000FE0007FF00007
C0003FE0000380000F80002A297AA72F>I<00007F00000001FFC0000007FFF000001FFF
F800003FFFFC00007FFFFC0000FFC1FE0001FF00FE0003FE007F0003F8003F0007F0003F
000FF0003F000FE0003F801FC0001F801F80001F803F80001F803F00001F803F00003F80
7F00003F007E00003F007E00003F007E00007F00FE00007E00FC00007E00FC0000FE00FC
0000FC00FC0001FC00FC0001F800FC0003F800FE0007F000FE000FF0007E001FE0007F00
3FC0007F007FC0003FC1FF80003FFFFF00001FFFFE00000FFFF8000007FFF0000003FFC0
000000FF000000212975A72F>I<0007E003F000001FF80FFC00003FFC3FFE00007FFC7F
FF00007FFFFFFF8000FFFFFFFF8000FE7FFE3FC001FC7FF81FC001F83FF00FC001F87FE0
0FC003F87FC00FE003F07F8007E003F07F0007E007F0FF0007E007F0FE0007E003E0FE00
07E00000FC0007E00001FC000FE00001FC000FC00001F8000FC00001F8000FC00003F800
1FC00003F8001F800003F0001F800003F0003F800007F0003F000007F0003F000007F000
7F000007F000FE00000FF000FE00000FF001FC00000FF803F800000FF807F800001FFC0F
F000001FFC3FE000001FFFFFC000001FFFFF8000003FFFFF0000003FBFFE0000003F1FF8
0000003F07E00000007F00000000007F00000000007E00000000007E0000000000FE0000
000000FE0000000000FC0000000000FC0000000001FC0000000001FC0000000001F80000
000001F80000000003F8000000007FFFE0000000FFFFF0000000FFFFF0000000FFFFF000
0000FFFFE00000007FFFE00000002B3C7FA72F>I<00FC001FE00001FF00FFFC0003FF81
FFFF0007FFC7FFFF800FFFEFFFFFC01FFFFFFFFFC01FC7FFF03FE03F87FFC00FE03F07FF
000FE03F07FE000FE07F07FE001FE07E07FC001FE07E07F8001FE0FE07F8000FC0FE0FF0
0007807C0FF0000000000FE0000000000FE0000000001FC0000000001FC0000000001FC0
000000001F80000000003F80000000003F80000000003F00000000003F00000000007F00
000000007E00000000007E00000000007E0000000000FE0000000000FC0000000000FC00
00000000FC0000000001FC0000000001F80000000001F80000000003F80000000003F800
00000001F00000000000E0000000002B2979A72F>114 D<00001FF8000000FFFE000003
FFFF800007FFFFC0000FFFFFE0001FFFFFE0003FF01FF0007F800FF0007F000FF0007E00
0FF000FE000FE000FC000FE000FC0007C000FC00030000FE000000007F000000007FF800
00003FFFC000001FFFF000000FFFFC000003FFFE0000003FFF00000001FF800000003F80
0000001FC00000000FC01C00000FC03F00000FC07F00000FC07F00001FC0FF00001F80FF
00003F80FF00007F00FE0001FF007FC00FFE007FFFFFFC003FFFFFF8001FFFFFF0000FFF
FFC00003FFFF0000007FF80000242978A72F>I<0000380000007C000000FE000000FE00
0000FC000000FC000001FC000001FC000001F8000001F8000003F8000003F8000003F000
0003F0000007F0000007F0000007E0000007E0007FFFFFF0FFFFFFF8FFFFFFF8FFFFFFF8
FFFFFFF87FFFFFF0001F8000001F8000003F8000003F8000003F0000003F0000007F0000
007F0000007E0000007E000000FE000000FE000000FC000000FC000001FC000001FC0000
01F8000001F8003003F8007C03F800FC03F000FC03F001FC07F001F807F003F807E007F0
07E00FF007F01FE007F87FC003FFFF8003FFFF0001FFFE0000FFFC00007FF000001FC000
1E3A73B82F>I<007E0000000001FF8000780003FF8000FC0007FFC000FC000FFFE000FC
000FFFE001FC001FE7E001FC001F87E001F8003F87E001F8003F07E003F8007F0FE003F8
007E0FC003F0007E0FC003F000FE1FC007F000FE1F8007F0007C3F8007E000003F0007E0
00003F000FE000007F000FE000007E000FC000007E000FC000007E001FC00000FE001FC0
0000FC001F800000FC003F830000FC003F87C001FC003F8FC001F8007F0FC001F8007F0F
C001F800FF1FC001F800FF1F8001F801FE1F8001FC03FE1F8001FC07FE3F8000FE0FFF7F
0000FFFFFFFF00007FFFFFFE00007FFFBFFE00003FFF1FFC00001FFE0FF8000003F003E0
002A297AA72F>I<0000000001C03C0000E003E07F0001F007E07F8001F007F07F8001F0
07F07FC003F003F03FC003E003F007C003E003F007C003E003F007C007E003E007C007C0
03E007C007C003E007C007C003E007C00FC007E00FC00F8007C00F800F8007C01F800F80
07C01F001F800FC01F001F000F803F001F000F803E001F000F803E003F001F807E003F00
1F007C003E001F007C003E001F007C007E003F00FC007E003E00F8007C003E00F800FC00
7E00F800FC007C00F801FC00FC00FC01FE00FC00FC03FE01F8007E03FE03F8007F0FFF87
F0007FFFFFFFF0003FFFDFFFE0003FFF9FFFC0001FFF0FFF800007FE03FF000001F800FC
00002C2978A72F>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb tcrm1095 10.95 1
/Fb 1 177 df<01F80007FE001FFF803FFFC07F0FE07C03E0F801F0F801F0F000F0F000
F0F000F0F000F0F801F0F801F07C03E07F0FE03FFFC01FFF8007FE0001F80014147BBD1F
>176 D E
%EndDVIPSBitmapFont
/Fc 60[91 195[{ fa5free2 ReEncodeFont }1 90.9091 /FontAwesome5Free-Solid
rf /Fd 169[91 86[{ fa5free0 ReEncodeFont }1 90.9091
/FontAwesome5Free-Solid rf
%DVIPSBitmapFont: Fe ecti1095 10.95 45
/Fe 45 234 df<0000000007FF80000000003FFFF000000000FE00FC00000001F0001E00
000007E0000F0000000FC0001F0000000F80003F0000001F80007F0000003F00007F0000
003F00007F0000003F00007E0000007E0000380000007E0000000000007E000000000000
FE000000000000FC000000000000FC000000000000FC000000000000FC000000000001FC
000000000001F8000000000001F8000000000001F8000000000001F8000000000003F800
00000003FFFFFFFFF00003FFFFFFFFF00003FFFFFFFFE0000003F00007E0000007F0000F
E0000007E0000FC0000007E0000FC0000007E0000FC0000007E0001FC000000FE0001F80
00000FC0001F8000000FC0001F8000000FC0003F8000000FC0003F0000001FC0003F0000
001F80003F0000001F80007F0000001F80007E0000001F80007E0000003F80007E000000
3F0000FE0000003F0000FC0000003F0000FC0000003F0000FC0000007F0001FC0000007E
0001F81C00007E0001F81C00007E0001F81C00007E0003F81C0000FE0003F03C0000FC00
03F0380000FC0003F0380000FC0003F0780000FC0003F0700001FC0003F0700001F80001
F0F00001F80001F0E00001F80000F1C00001F800007F800003F800001F000003F0000000
000003F0000000000003F0000000000003E0000000000007E0000000000007E000000000
0007C0000000001C07C0000000007E0FC000000000FE0F8000000000FE0F8000000000FE
1F0000000000FC1F0000000000F81E0000000000F03C0000000000787800000000003FF0
000000000007C00000000000385383BF33>28 D<01E007F00FF80FF80FF80FF80FF80FF8
07B80030003000300070006000E000C001C00180038007000E000C001C0038007000E000
C0000D1B6CBE1C>39 D<01E003F807F80FF80FFC0FFC0FF80FF803D80018003800300030
0070006000E000C001C00380030007000E001C0038007000E000C0000E1B7A881C>44
D<0E003F807F80FF80FF80FF80FF007E003C00090976881C>46 D<000000060000000E00
00001E0000001E0000003C0000007C000000FC000001FC000007F800000FF800003FF800
01FFF8000FF3F0001FC3F0000E07F0000007F0000007E0000007E000000FE000000FE000
000FC000000FC000001FC000001FC000001F8000001F8000003F8000003F8000003F0000
003F0000007F0000007F0000007E0000007E000000FE000000FE000000FC000000FC0000
01FC000001FC000001F8000001F8000003F8000003F8000003F0000003F0000007F00000
07F0000007E0000007E000000FE000000FE000000FC000000FC000001FC000001FC00000
1F8000007FC000FFFFFFE0FFFFFFE0FFFFFFC01F3D76BC2E>49 D<000000FE0000000003
FFC00000000F01F00000003C00F800000078007C000000F0003E000001E0003F000003C0
001F00000380001F80000700001F80000F00001F80000E0C001F80001E0C001FC0001C0E
001FC0003C06001FC0003806001FC0007806001FC0007006001FC000700E003FC000F00C
003F8000E00C003F8000E01C003F8000E018007F8001E018007F0001C038007F0001C070
00FE0001C06001FE0001C0E001FC0000E3C003F80000FF0007F000003C000FE000000000
1FC0000000001F80000000007F0000000000FC0000000001F80000000003F0000000000F
C0000000001F00000000007E0000000000F80000000003E00000000007C0000000001F00
000000003E00000000007C0000180000F000003C0001E00000380003C00000380003C000
0078000780000078000F000000F0000E000000F0001E000001E0003FE00003E0003FFF00
07C0007C3FF01FC000780FFFFF80007003FFFF0000F001FFFE0000E0007FFC0000E0003F
F80000E00007C000002A3F79BC2E>I<0000007F8000000003FFE00000000F80F8000000
3C007C000000F8003E000001E0001F000003C0001F80000780000F80000F00000F80000E
00000FC0001E00000FC0001C18000FC0003C1C000FC000380C000FC000780C001FC00078
0C001F8000700C001F8000700C001F8000701C003F80003838003F00003870007F00001F
E0007E00000F8000FC0000000000FC0000000001F80000000003F00000000007E0000000
001F8000000000FF00000000FFFC00000000FFF000000000FFF00000000000FC00000000
003E00000000003F00000000001F00000000001F80000000000F80000000000FC0000000
000FC0000000000FC0000000000FC0000000001FC0000000001FC0000000001FC0003E00
001FC0007E00003FC000FE00003F8000FE00003F8000FE00003F8000FC00007F0000E000
007F0000E00000FE0000E00000FC0000E00001FC0000F00003F80000700007F000007800
0FC0000038001F8000001C007E0000000F01F800000003FFE000000000FF000000002A3F
78BC2E>I<0000000038000000007E00000000FE00000000FC00000000FC00000000FC00
000001FC00000001F800000001F800000001F800000003F800000003F000000003F00000
0007F000000007E000000007E00000000FC00000000FC00000000FC00000001F80000000
1F800000001F000000003F000000003F000000007E000000007E000000007C00000000FC
00000000F800000001F800000001F000000003F000000003E000000007C000000007C000
00000F800000000F800000001F000000003E000000003E038000007C0FC00000F80FC000
00F01FC00001F01F800003E01F800003C01F800007803F80000F803F00001F003F00003E
003F00007C007F0000F8007E0001F0007E0003E0007E0007C000FE000FFF80FC001FFFF0
FC003FFFFEFC007C00FFFC08F0000FFFFC600001FFFC000001FFE0000003F800000003F0
00000003F000000003F000000007F000000007E000000007E000000007E00000000FE000
00000FC00000000FC00000000FC00000001FC00000001F800000001F800000001F800000
000E0000274F7DBC2E>I<0000C00001800000F0000F800001FE007F000001FFFFFE0000
01FFFFFC000001FFFFF0000003FFFFE0000003FFFF80000003BFFC000000038180000000
0780000000000700000000000700000000000700000000000F00000000000E0000000000
0E00000000000E00000000001E00000000001C00000000001C00000000001C0000000000
3C0000000000381FC0000000387FF000000039E07C0000007F803E0000007E001F000000
7C001F00000078000F800000F0000F800000E0000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000001FC0000000001FC00000
00001FC0000000001FC0000C00003FC0003F00003F80007F00003F80007F00003F80007F
00007F8000FF00007F0000FE00007F0000F80000FE0000E00000FE0000E00001FC0000E0
0001F80000F00003F00000700007F0000070000FE0000078001FC000003C003F8000003E
007E0000001F01FC0000000FFFF000000003FFC000000000FE00000000293F77BC2E>I<
0000000FE00000007FF8000001FFFE000007F01F00001F800F00003F000700007E003F00
00F8007F0001F0007F0003E0007F0007E0007F000FC0007E001F800000003F000000003F
000000007E00000000FE00000000FC00000001FC00000001F800000003F800000003F800
000007F01FC00007F0FFF0000FE1E07C000FE7803E000FEE001E001FFC001F001FD8000F
801FF8000F801FF0000FC03FE0000FC03FE0000FC03FC0000FC03FC0000FE07F80000FE0
7F80000FE07F00000FE07F00001FC07F00001FC0FE00001FC0FE00001FC0FE00003FC0FE
00003F80FE00003F80FC00003F80FC00007F80FC00007F00FC00007F00FC0000FE00FC00
00FE00FC0001FC00FC0001F8007C0003F8007C0003F0007C0007E0003E000FC0003E001F
80001F007E00000F81FC000007FFF8000003FFE00000007F000000283F76BC2E>I<0070
3F0001C00070FF8003C000F3FF80038000EFFFC0078000FFFFC00F0001FFFFC01E0001FF
83C01E0003FE01C03C0003F801C07C0007F000C0F80007E000E3F0000FC0007FF0000F80
003FE0001F000001E0001E000003C0001E000007C0003C00000780003800000F80007800
000F00007000001F0000F000003E0000E000003E0000E000007C00000000007C00000000
00F80000000000F80000000001F00000000001F00000000003F00000000003E000000000
07E0000000000FC0000000000FC0000000001FC0000000001F80000000001F8000000000
3F00000000003F00000000007F00000000007E0000000000FE0000000000FE0000000001
FC0000000001FC0000000001FC0000000003F80000000003F80000000003F80000000007
F80000000007F0000000000FF0000000000FF0000000000FE0000000001FE0000000001F
E0000000001FE0000000001FC0000000003FC0000000003FC0000000003FC0000000003F
80000000003F00000000001E000000002A3F73BC2E>I<0000007F8000000003FFE00000
000FFFF00000001FC0F80000007F007C000000FC003E000001F8003E000003F0003F0000
07E0001F00000FE0001F00000FC0001F00001F80001F80003F80001F80003F00001F8000
7F00001F80007F00001F8000FE00001F8000FE00003F8000FE00003F8001FE00003F8001
FC00003F8001FC00003F0001FC00007F0003FC00007F0003F800007F0003F80000FF0003
F80000FF0003F80000FE0003F80001FE0003F00001FE0001F00003FE0001F00003FC0001
F80007FC0000F8000FFC0000F8001FFC000078003BF800007C0073F800003E00E3F80000
1F03C7F0000007FF07F0000001FC07F0000000000FE0000000000FE0000000000FC00000
00001FC0000000001F80000000003F00000000003F00000000007E00000000007E000000
0000FC00003E0001F800007F0003F000007F0003E000007F0007C00000FE000F800000FC
001F00000070003E0000007800FC0000007E03F80000003FFFE00000000FFF8000000003
FC00000000293F78BC2E>57 D<0001FFFFFFFF80000001FFFFFFFFF0000001FFFFFFFFFC
00000003FC0003FE00000003FC00007F80000003F800003F80000003F800000FC0000003
F800000FE0000007F8000007F0000007F0000003F0000007F0000003F8000007F0000001
F800000FF0000001F800000FE0000001FC00000FE0000000FC00000FE0000000FC00001F
E0000000FC00001FC0000000FE00001FC0000000FE00001FC0000000FE00003FC0000000
FE00003F80000000FE00003F80000000FE00003F80000001FE00007F80000001FE00007F
00000001FE00007F00000001FE00007F00000001FC0000FF00000001FC0000FE00000003
FC0000FE00000003FC0000FE00000003FC0001FE00000003F80001FC00000007F80001FC
00000007F80001FC00000007F00003FC0000000FF00003F80000000FF00003F80000000F
E00003F80000001FE00007F80000001FC00007F00000001FC00007F00000003F800007F0
0000003F80000FF00000007F00000FE00000007E00000FE0000000FE00000FE0000001FC
00001FE0000001F800001FC0000003F000001FC0000007F000001FC000000FE000003FC0
00001FC000003F8000003F8000003F8000007F0000007F800001FC0000007F800003F800
00007F00000FE0000000FF00007FC000007FFFFFFFFF000000FFFFFFFFFC000000FFFFFF
FFC00000003F3E7BBD44>68 D<0001FFFFFFFFFFF80001FFFFFFFFFFF80001FFFFFFFFFF
F8000003FC00003FF8000003FC000007F8000003F8000003F8000003F8000001F8000003
F8000000F0000007F8000000F0000007F0000000F0000007F0000000F0000007F0000000
F000000FF0000000F000000FE0000000F000000FE0000000E000000FE0000000E000001F
E0000000E000001FC0003800E000001FC0003800E000001FC0007801E000003FC0007001
C000003F800070000000003F800070000000003F8000F0000000007F8000E0000000007F
0001E0000000007F0003E0000000007F000FE000000000FFFFFFC000000000FFFFFFC000
000000FFFFFFC000000000FE001FC000000001FE00078000000001FC00078000000001FC
00078000000001FC00078000000003FC00070000000003F800070000000003F800070007
000003F8000F000F000007F8000E000E000007F0000E000E000007F00000001E000007F0
0000001C00000FF00000003C00000FE00000003800000FE00000007800000FE000000078
00001FE0000000F000001FC0000000F000001FC0000001E000001FC0000001E000003FC0
000003E000003F80000007C000003F8000000FC000007F8000001FC000007F8000003F80
00007F000000FF800000FF00000FFF00007FFFFFFFFFFF0000FFFFFFFFFFFF0000FFFFFF
FFFFFE00003D3E7BBD3D>I<0001FFFFFFFFFFF00001FFFFFFFFFFF00001FFFFFFFFFFF0
000003FC00003FF0000003FC00000FF0000003F8000007F0000003F8000003F0000003F8
000001E0000007F8000001E0000007F0000001E0000007F0000001E0000007F0000001E0
00000FF0000001E000000FE0000001E000000FE0000001C000000FE0000001C000001FE0
000001C000001FC0000001C000001FC0007001C000001FC000F003C000003FC000E00380
00003F8000E0000000003F8000E0000000003F8001E0000000007F8001C0000000007F00
03C0000000007F0003C0000000007F0007C000000000FF001F8000000000FFFFFF800000
0000FFFFFF8000000000FFFFFF8000000001FE003F0000000001FC001F0000000001FC00
0F0000000001FC000F0000000003FC000E0000000003F8000E0000000003F8000E000000
0003F8001E0000000007F8001C0000000007F0001C0000000007F0001C0000000007F000
00000000000FF00000000000000FE00000000000000FE00000000000000FE00000000000
001FE00000000000001FC00000000000001FC00000000000001FC00000000000003FC000
00000000003F800000000000003F800000000000007F800000000000007F800000000000
007F00000000000000FF8000000000007FFFFF8000000000FFFFFF8000000000FFFFFF80
000000003C3E7BBD3B>I<0001FFFFFF00000001FFFFFF00000001FFFFFF0000000003FE
000000000003FC000000000003F8000000000003F8000000000003F8000000000007F800
0000000007F0000000000007F0000000000007F000000000000FF000000000000FE00000
0000000FE000000000000FE000000000001FE000000000001FC000000000001FC0000000
00001FC000000000003FC000000000003F8000000000003F8000000000003F8000000000
007F8000000000007F0000000000007F0000000000007F000000000000FF000000000000
FE000000000000FE000000000000FE000000000001FE000000000001FC000000000001FC
000000000001FC000000000003FC000000000003F8000000000003F8000000C00003F800
0001E00007F8000001C00007F0000001C00007F0000003C00007F000000380000FF00000
0380000FE000000780000FE000000700000FE000000F00001FE000000F00001FC000001E
00001FC000001E00001FC000003E00003FC000007C00003F800000FC00003F800001FC00
007F800003F800007F800007F800007F00001FF80000FF0000FFF000FFFFFFFFFFF000FF
FFFFFFFFF000FFFFFFFFFFE000333E7BBD39>76 D<0001FFFFFFFF80000001FFFFFFFFF0
000001FFFFFFFFFC00000003FC0003FE00000003FC0000FF00000003F800003F80000003
F800001FC0000007F800001FC0000007F800000FE0000007F000000FE0000007F000000F
E000000FF000000FF000000FF000000FF000000FE000000FF000000FE000000FF000001F
E000000FF000001FE000001FE000001FC000001FE000001FC000001FE000003FC000001F
C000003FC000003FC000003F8000003F8000003F8000007F8000007F8000007F0000007F
800000FE0000007F000001FC0000007F000001F8000000FF000007F0000000FF00000FE0
000000FE00003F80000000FE0001FF00000001FFFFFFF800000001FFFFFFE000000001FC
00000000000001FC00000000000003FC00000000000003FC00000000000003F800000000
000003F800000000000007F800000000000007F800000000000007F000000000000007F0
0000000000000FF00000000000000FF00000000000000FE00000000000000FE000000000
00001FE00000000000001FE00000000000001FC00000000000001FC00000000000003FC0
0000000000003FC00000000000003F800000000000003F800000000000007F8000000000
00007F800000000000007F00000000000000FF8000000000007FFFFE0000000000FFFFFE
0000000000FFFFFE00000000003C3E7BBD3D>80 D<1FFFFFC001FFFFC01FFFFFC001FFFF
C01FFFFFC001FFFFC0003FE000000FF800003FC0000007E000003F80000007C000003F80
0000038000007F800000078000007F800000078000007F000000070000007F0000000700
0000FF0000000F000000FF0000000E000000FE0000000E000000FE0000000E000001FE00
00001E000001FE0000001C000001FC0000001C000001FC0000001C000003FC0000003C00
0003FC00000038000003F800000038000003F800000038000007F800000078000007F800
000070000007F000000070000007F00000007000000FF0000000F000000FF0000000E000
000FE0000000E000000FE0000000E000001FE0000001E000001FE0000001C000001FC000
0001C000001FC0000001C000003FC0000003C000003FC0000003C000003F800000038000
003F800000038000007F800000078000007F800000078000007F000000070000007F0000
00070000007F0000000F0000007F0000000E000000FE0000000E000000FE0000001E0000
00FE0000001C000000FE0000003C0000007E000000380000007E000000780000007E0000
00F00000007E000000E00000007E000001E00000003F000003C00000003F000007800000
001F80000F000000001F80003E000000000FC0007C0000000007E001F00000000003F80F
E00000000000FFFF8000000000003FFE0000000000000FF000000000003A406FBD43>85
D<7FFFF800FFFFF800FFFFC0FFFFF800FFFFF800FFFFC0FFFFF800FFFFF000FFFFC003FF
000007FE00000FF80003FC000003F8000007F00003FC000003F8000003E00003FC000003
F8000003C00001FC000003F8000007800001FC000003F8000007000001FC000007F80000
07000001FC000007F800000E000001FC00000FF800001E000001FC00000FF800001C0000
01FC00001FF800003C000001FC00001FF8000038000001FC00003BF8000070000001FC00
003BF8000070000001FC000073F80000E0000001FC0000F3F80000E0000001FC0000E3F8
0001C0000001FC0001E3F80001C0000001FC0001C3F8000380000001FC000383F8000380
000001FC000383F8000700000001FC000703F8000700000001FC000703F8000E00000001
FC000E03F8000E00000001FC000E03FC001C00000001FC001C03FC003C00000001FC001C
01FC003800000001FC003801FC007800000001FC003801FC007000000001FC007001FC00
E000000001FC00F001FC00E000000001FC00E001FC01C000000001FC01E001FC01C00000
0001FC01C001FC038000000001FC038001FC038000000001FE038001FC070000000000FE
070001FC070000000000FE070001FC0E0000000000FE0E0001FC0E0000000000FE0E0001
FC1C0000000000FE1C0001FC3C0000000000FE1C0001FC380000000000FE380001FC7800
00000000FE380001FC700000000000FE700001FCE00000000000FE700001FCE000000000
00FEE00001FDC00000000000FFE00001FDC00000000000FFC00001FF800000000000FFC0
0001FF800000000000FF800001FF000000000000FF000001FF000000000000FF000001FE
000000000000FE000001FE000000000000FE000001FC000000000000FC000001FC000000
000000FC000001F8000000000000F8000001F8000000000000F8000000F0000000000000
F0000000F0000000000000F0000000E0000000000052406EBD5A>87
D<00007E00000001FF80000007C1C380001F80EFC0003F00FFC0007E007FC000FC007F80
01F8003F8003F0003F8003F0003F8007E0003F000FE0003F000FC0003F001FC0007F001F
C0007E003F80007E003F80007E003F8000FE007F8000FC007F0000FC007F0000FC007F00
01FC00FF0001F800FE0001F800FE0001F800FE0003F800FE0003F038FC0003F038FC0003
F038FC0007F038FC0007E078FC000FE0707C000FE0707C001FE0F07E003FE0E03E007FE0
E03E00F3E1E01F01E3E1C00F8781E38003FF00FF0000FC003E00252977A72E>97
D<001FC0000FFFC0000FFF80000FFF8000003F8000003F8000003F0000003F0000007F00
00007F0000007E0000007E000000FE000000FE000000FC000000FC000001FC000001FC00
0001F8000001F8000003F8000003F8000003F0000003F07C0007F1FF0007F787C007EE03
E007FC01F00FF801F00FF001F80FF000F80FE000F81FC000F81FC000FC1F8000FC1F8001
FC3F8001FC3F8001FC3F0001FC3F0001FC7F0003FC7F0003F87E0003F87E0003F87E0007
F8FE0007F0FC0007F0FC0007F0FC000FE0FC000FE0FC000FE0F8001FC0F8001F80F8003F
80F8003F00F8007E0078007E007C00FC007C01F8003C03F0001E07E0000F0F800007FE00
0001F800001E4076BE29>I<00001FC00000FFF00003F07C000FC01E001F000E003E000F
007C001F00FC007F01F8007F03F0007F07F0007E07E0007E0FE000381FC000001FC00000
3F8000003F8000003F8000007F8000007F0000007F0000007F000000FF000000FE000000
FE000000FE000000FE000000FE000000FC000000FC000006FC00000E7E00001E7E00003C
7E0000783E0000F03F0001E01F0007C00F800F0007C07E0001FFF000007F8000202977A7
29>I<000000003F800000001FFF800000001FFF000000001FFF00000000007F00000000
007F00000000007E00000000007E0000000000FE0000000000FE0000000000FC00000000
00FC0000000001FC0000000001FC0000000001F80000000001F80000000003F800000000
03F80000000003F00000000003F00000000007F00000000007F00000000007E00000007E
07E0000001FF8FE0000007C1CFE000001F80EFC000003F00FFC000007E007FC00000FC00
7FC00001F8003F800003F0003F800003F0003F800007E0003F80000FE0003F00000FC000
3F00001FC0007F00001FC0007F00003F80007E00003F80007E00003F8000FE00007F8000
FE00007F0000FC00007F0000FC00007F0001FC0000FF0001FC0000FE0001F80000FE0001
F80000FE0003F80000FE0003F83800FC0003F03800FC0003F03800FC0007F03800FC0007
F07800FC000FE070007C000FE070007C001FE0F0007E003FE0E0003E007FE0E0003E00F3
E1E0001F01E3E1C0000F8781E3800003FF00FF000000FC003E0000294077BE2E>I<0000
3F000001FFE00007C0F0001F0078007E007800FC003C01F8003C03F0003C07F0003C0FE0
007C0FC000781FC000783F8000F83F8001F07F8007E07F001FC07F01FF007FFFF800FFFF
8000FE000000FE000000FE000000FE000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC00000CFC00001CFC00003C7C0000787C0000F07E0001E03E0003C01F00
0F800F001E000780FC0003FFE00000FF00001E2976A729>I<000003E00000001FF80000
003E1E380000F80EFC0001F007FC0003E007FC0007E003FC000FC003F8001F8003F8003F
8003F8003F0003F8007F0003F0007E0003F000FE0007F000FE0007F001FC0007E001FC00
07E001FC000FE003FC000FE003F8000FC003F8000FC003F8001FC007F8001FC007F0001F
8007F0001F8007F0003F8007F0003F8007E0003F0007E0003F0007E0007F0007E0007F00
03E000FE0003E001FE0003F001FE0001F003FE0001F007FC0000F80EFC00007C3DFC0000
1FF1FC000007C1F800000001F800000003F800000003F800000003F000000003F0000000
07F000000007F000000007E00000000FE0003C000FC0007E000FC000FE001F8000FE003F
0000FE007E0000FC00FC0000F001F800007C03E000003FFF80000007FE000000263B7CA7
29>103 D<0001FC000000FFFC000000FFF8000000FFF800000003F800000003F8000000
03F000000003F000000007F000000007F000000007E000000007E00000000FE00000000F
E00000000FC00000000FC00000001FC00000001FC00000001F800000001F800000003F80
0000003F800000003F000000003F03F800007F0FFE00007F3E0F80007E780FC0007EE007
C000FFC007E000FF8007E000FF0007E000FF0007E001FE0007E001FC0007E001FC0007E0
01F80007E003F8000FE003F8000FC003F0000FC003F0000FC007F0001FC007F0001F8007
E0001F8007E0001F800FE0003F800FE0003F000FC0003F000FC0007F001FC0007E001FC0
00FE071F8000FC071F8000FC073F8001FC0F3F8001F80E3F0001F80E3F0001F81E7F0001
F01C7F0001F01C7E0001F0387E0001F038FE0001F070FE0000F0E0FC00007FC03800001F
0028407ABE2E>I<0000700001FC0001FC0001FC0001F80001F80000E000000000000000
0000000000000000000000000000000000000000000000000000000000000000007C0001
FF00038F800707800E07C01E07C01C07C03C0FC0380FC0380FC0781FC0701F80701F80F0
3F80F03F00003F00007F00007E0000FE0000FC0000FC0001FC0001F80001F80003F80003
F00003F03807F03807E0380FE0780FC0700FC0700FC0F00F80E00F80E00F81C00F83C00F
838007870003FE0000F800163D79BB1C>I<00000003800000000FC00000001FC0000000
1FC00000001FC00000001F800000000F0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000007C00000003FF000000078F8000000E07C000001C07C0000
03C07C000003807E000007007E000007007E00000E00FE00000E00FC00001E00FC00001C
00FC00003C01FC00003C01FC00000001F800000001F800000003F800000003F800000003
F000000003F000000007F000000007F000000007E000000007E00000000FE00000000FE0
0000000FC00000000FC00000001FC00000001FC00000001F800000001F800000003F8000
00003F800000003F000000003F000000007F000000007F000000007E000000007E000000
00FE00000000FE00000000FC00000000FC00000001FC00000001F800000001F800000001
F800003C03F000007E03F00000FE07E00000FE07C00000FE0F800000FC1F000000F03E00
0000707C0000003FF00000000FC0000000224F83BB1C>I<0001FC000000FFFC000000FF
F8000000FFF800000003F800000003F800000003F000000003F000000007F000000007F0
00000007E000000007E00000000FE00000000FE00000000FC00000000FC00000001FC000
00001FC00000001F800000001F800000003F800000003F800000003F000000003F0007C0
007F001FF0007F007838007E00E078007E01C1FC00FE0381FC00FE0703F800FC0E03F800
FC0C03F801FC1C00E001FC38000001F870000001F8E0000003F9C0000003FB80000003F7
00000003FE00000007FC00000007FFC0000007EFF0000007E1FC00000FE0FE00000FE07F
00000FC03F00000FC01F80001FC01F80001FC01F80E01F801F80E01F801F80E03F801F81
E03F803F81C03F003F01C03F003F01C07F003F03C07F003F03807E001F07807E001F0700
FE001F0F00FE000F1E00FC0007FC00380001F00026407ABE29>I<0007F003FFF003FFE0
03FFE0000FE0000FE0000FC0000FC0001FC0001FC0001F80001F80003F80003F80003F00
003F00007F00007F00007E00007E0000FE0000FE0000FC0000FC0001FC0001FC0001F800
01F80003F80003F80003F00003F00007F00007F00007E00007E0000FE0000FE0000FC000
0FC0001FC0001FC0001F80001F80003F80003F80003F00003F00007F00007F07007E0700
7E0700FE0F00FE0E00FC0E00FC0E00FC1E00FC1C00FC1C007C38007C78003C70001FE000
078000144079BE17>I<01F0003F80007F000007FC01FFE003FFC0000F3E07C1F80F83F0
000E1F0F00FC1E01F8001E1F1C007C3800F8001C1F38007E7000FC003C1FF0007EE000FC
00381FF0007FE000FC00381FE0007FC000FC00783FC0007F8000FC00703FC0007F8000FC
00703F80007F0000FC00703F00007E0000FC00F03F0000FE0001FC00F07F0000FC0001F8
00007E0000FC0001F800007E0000FC0001F800007E0001FC0003F80000FE0001FC0003F0
0000FC0001F80003F00000FC0001F80003F00000FC0003F80007F00001FC0003F80007E0
0001F80003F00007E00001F80003F0000FE00001F80007F0000FC00003F80007F0001FC0
E003F00007E0001F80E003F00007E0001F80E003F0000FE0003F81E007F0000FE0003F01
C007E0000FC0003F01C007E0000FC0003F01C007E0001FC0003E03800FE0001FC0003E03
800FC0001F80003E07000FC0001F80003E07000FC0003F80003E0E001FC0003F80001E1C
001F80003F00000FF8000700000E000003E000432979A74A>I<01F0003F800007FC01FF
E0000F3E07C1F8000E1F0F00FC001E1F1C007C001C1F38007E003C1FF0007E00381FF000
7E00381FE0007E00783FC0007E00703FC0007E00703F80007E00703F00007E00F03F0000
FE00F07F0000FC00007E0000FC00007E0000FC00007E0001FC0000FE0001F80000FC0001
F80000FC0001F80000FC0003F80001FC0003F00001F80003F00001F80007F00001F80007
E00003F8000FE07003F0000FC07003F0000FC07003F0001FC0F007F0001F80E007E0001F
80E007E0001F81E007E0001F01C00FE0001F01C00FC0001F03800FC0001F03800FC0001F
07001FC0000F0E001F800007FC0007000001F0002C2979A733>I<00001FC0000000FFF8
000003F07C00000FC01F00001F801F00003F000F80007E000FC000FC0007C001F80007E0
03F00007E007F00007E007E00007E00FE00007F01FC00007F01FC00007F03F800007F03F
800007F03F80000FE07F80000FE07F00000FE07F00000FE07F00001FE0FF00001FC0FE00
001FC0FE00001FC0FE00003F80FE00003F80FE00007F00FE00007F00FC00007E007C0000
FC007E0001FC007E0001F8007E0003F0003E0007E0001F000FC0001F001F80000F803E00
0007C0FC000001FFF00000003F800000242977A72E>I<0003E001F800000FF807FE0000
1E7C1E0F80001C3E3C07C0003C3E7807C000383EE003E000783FE003E000703FC003F000
703F8001F000F07F0001F000E07F0001F800E07E0001F800E07E0003F801E0FE0003F801
E0FE0003F80000FC0003F80000FC0003F80001FC0007F80001FC0007F00001F80007F000
01F80007F00003F8000FF00003F8000FE00003F0000FE00003F0000FE00007F0001FC000
07F0001FC00007E0001F800007E0003F80000FE0003F00000FE0007F00000FE0007E0000
0FE000FC00001FE000FC00001FE001F800001FF003F000001FF007E000003FB80F800000
3F9C1F0000003F0FFC0000003F03E00000007F00000000007F00000000007E0000000000
7E0000000000FE0000000000FE0000000000FC0000000000FC0000000001FC0000000001
FC0000000001F80000000001F80000000003F80000000003F8000000007FFFE0000000FF
FFE0000000FFFFE00000002D3A80A72E>I<00007C00C00001FF03C00007C387C0001F01
CF80003E00EF80007C00FF8000FC007F8001F8007F0003F0007F0003F0007F0007E0007F
000FE0007E000FC0007E001FC0007E001FC000FE003F8000FC003F8000FC003F8000FC00
7F8001FC007F0001F8007F0001F8007F0001F800FF0003F800FE0003F000FE0003F000FE
0003F000FE0007F000FC0007E000FC0007E000FC0007E000FC000FE000FC000FC0007C00
1FC0007C003FC0007C007FC0003E00FF80003E01FF80001F03DF80000F07BF800007FE3F
000001F83F000000003F000000007F000000007E000000007E000000007E00000000FE00
000000FC00000000FC00000000FC00000001FC00000001F800000001F800000003F80000
0007F8000001FFFFE00001FFFFE00001FFFFE000223A77A729>I<01F000FE0007FC03FF
800F3E0F03E00E1F1C01E01E1F3807E01C1F7007F03C1FF00FE0381FE00FE0381FC00FE0
783FC00380703F800000703F800000703F000000F03F000000F07F000000007E00000000
7E000000007E00000000FE00000000FC00000000FC00000000FC00000001FC00000001F8
00000001F800000001F800000003F800000003F000000003F000000003F000000007F000
000007E000000007E000000007E00000000FE00000000FC00000000FC00000000FC00000
001FC00000001F800000000700000000242979A726>I<00007F800001FFE00007C0F800
1E003C003C001C003C001E0078000E00F0003E00F0007E00F0007E01F0007C01F0007C01
F0001001F8000001FC000001FF800001FFF80000FFFF0000FFFF80007FFFC0001FFFE000
07FFE000007FF000000FF0000003F0000003F0000001F03E0001F07E0000F07F0001F0FE
0001E0FE0001E0FC0001E0F80003C0F00007807000078078000F003C003C001F00F80007
FFE00000FF00001F297AA725>I<0001C0000003F0000007F0000007F0000007E0000007
E000000FE000000FE000000FC000000FC000001FC000001FC000001F8000001F8000003F
8000003F8000003F0000003F00007FFFFF80FFFFFF80FFFFFF00007E000000FE000000FE
000000FC000000FC000001FC000001FC000001F8000001F8000003F8000003F8000003F0
000003F0000007F0000007F0000007E0000007E000000FE000000FE000000FC000000FC0
00001FC000001FC01C001F801C001F801C003F803C003F8038003F0078003F0070003F00
F0003F00E0003F01C0001F03C0001F0780000F0F000007FC000001F00000193A78B81E>
I<007C0000000001FF00003800038F8000FC0007078000FC000E07C000FC001E07C001FC
001C07C001FC003C0FC001F800380FC001F800380FC003F800781FC003F800701F8003F0
00701F8003F000F03F8007F000F03F0007F000003F0007E000007F0007E000007E000FE0
00007E000FE00000FE000FC00000FC000FC00000FC001FC00001FC001FC00001F8001F80
0001F8001F800001F8003F800003F8003F838003F0003F038003F0003F038003F0007F03
8003F0007F078003F0007E070003F0007E070003F000FE0F0003F000FE0E0001F001FE0E
0001F803BE1C0000F8073E1C00007C1E1E3800003FF80FF0000007E003E000292979A730
>I<007C00038001FF0007E0038F800FE00707800FE00E07C00FF01E07C00FF01C07C007
F03C0FC007F0380FC003F0380FC003E0781FC001E0701F8001E0701F8001E0F03F8001E0
F03F0001C0003F0001C0007F0001C0007E0003C0007E00038000FE00038000FC00038000
FC00078001FC00070001F800070001F800070001F8000E0003F8000E0003F0000E0003F0
001C0003F0001C0003F000380003F000380003F000700003F000700001F000E00001F001
C00001F803C00000F8078000007E0F0000001FFC00000007F00000242979A729>I<0003
E003F000000FF80FFC00003C3C1C1F0000701E380F0000E01F703F0001E01FF03F8003C0
0FE07F0003800FE07F0007800FC07F0007001FC01C000F001FC000000E001F8000000E00
1F8000001E003F8000001E003F80000000003F00000000003F00000000007F0000000000
7E00000000007E00000000007E0000000000FE0000000000FC0000000000FC0000000000
FC0000000001FC0000000001F80038000001F80038000001F80038000003F80078000003
F80070001C03F000F0007E03F000E0007E07F001E000FE07F001C000FE0FF0038000FE0E
F8078000781C780F000078383C3C00003FF01FF8000007C007E0000029297CA729>120
D<007C00000001FF000038038F8000FC07078000FC0E07C000FC1E07C001FC1C07C001F8
3C0FC001F8380FC001F8380FC003F8781FC003F0701F8003F0701F8003F0F03F8007F0F0
3F0007E0003F0007E0007F0007E0007E000FE0007E000FC000FE000FC000FC000FC000FC
001FC001FC001FC001F8001F8001F8001F8001F8003F8003F8003F0003F0003F0003F000
3F0003F0007F0003F0007E0003F0007E0003F0007E0003F000FE0003F000FC0001F001FC
0001F803FC0000F807FC00007C1FF800003FF9F8000007E1F800000003F800000003F000
000003F000000007F000000007E0001F0007E0003F800FC0003F800FC0003F801F80007F
001F00007E003E000038007E00003800FC00003801F000001C03E000001E0FC0000007FF
00000001F8000000263B79A72C>I<00007000000000F800000001FC00000001FC000000
01FE00000000FF000000007F000000003F800000001FC00000000FC000000007E0000000
03F000000000F00000000060000000000000000000000000000000000000000000000000
000000007E00000001FF80000007C1C380001F80EFC0003F00FFC0007E007FC000FC007F
8001F8003F8003F0003F8003F0003F8007E0003F000FE0003F000FC0003F001FC0007F00
1FC0007E003F80007E003F80007E003F8000FE007F8000FC007F0000FC007F0000FC007F
0001FC00FF0001F800FE0001F800FE0001F800FE0003F800FE0003F038FC0003F038FC00
03F038FC0007F038FC0007E078FC000FE0707C000FE0707C001FE0F07E003FE0E03E007F
E0E03E00F3E1E01F01E3E1C00F8781E38003FF00FF0000FC003E00253C77BA2E>224
D<000180000007E0000007E0000007F0000007F0000007F8000003FC000001FC0000007E
0000003E0000001F0000000F800000078000000380000000000000000000000000000000
000000000000003F000001FFE00007C0F0001F0078007E007800FC003C01F8003C03F000
3C07F0003C0FE0007C0FC000781FC000783F8000F83F8001F07F8007E07F001FC07F01FF
007FFFF800FFFF8000FE000000FE000000FE000000FE000000FC000000FC000000FC0000
00FC000000FC000000FC000000FC00000CFC00001CFC00003C7C0000787C0000F07E0001
E03E0003C01F000F800F001E000780FC0003FFE00000FF00001E3C76BA29>232
D<000000038000000007C00000000FC00000001FC00000003FC0000000FF80000001FE00
000003FC00000007F00000000FC00000001F800000003E000000007C0000000030000000
00000000000000000000000000000000000000000000000000003F00000001FFE0000007
C0F000001F007800007E00780000FC003C0001F8003C0003F0003C0007F0003C000FE000
7C000FC00078001FC00078003F8000F8003F8001F0007F8007E0007F001FC0007F01FF00
007FFFF80000FFFF800000FE00000000FE00000000FE00000000FE00000000FC00000000
FC00000000FC00000000FC00000000FC00000000FC00000000FC00000C00FC00001C00FC
00003C007C000078007C0000F0007E0001E0003E0003C0001F000F80000F001E00000780
FC000003FFE0000000FF000000223C76BA29>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ectt1095 10.95 42
/Ff 42 122 df<00070000000F8000003FE000007FF00000FFF80003FFFE0007FFFF001F
F8FFC03FF07FE07FE03FF0FF800FF8FF0007F87E0003F0780000F01D0E77BA30>2
D<3C000F007E001F80FF003FC0FF003FC0FF003FC0FF003FC0FF003FC0FF003FC0FF003F
C0FF003FC0FF003FC07F003F807F003F807F003F807F003F807F003F807F003F807F003F
807E001F807E001F807E001F807E001F807E001F807E001F807E001F807E001F803C000F
001A1B76B82F>34 D<07C00001E00FE00003E01FF00007F03FF80007F03FF8000FF07FFC
000FF07EFC001FE0FC7E001FE0FC7E001FC0F83E003FC0F83E003FC0F83E007F80F83E00
7F80F83E007F00F83E00FF00FC7E00FF00FC7E00FE007EFC01FE007FFC01FE003FF803FC
003FF803FC001FF003F8000FE007F80007C007F80000000FF00000000FF00000000FE000
00001FE00000001FE00000003FC00000003FC00000003F800000007F800000007F800000
00FF00000000FF00000000FE00000001FE00000001FE00000001FC00000003FC00000003
FC00000007F800000007F800000007F00000000FF00000000FF003E0001FE007F0001FE0
0FF8001FC01FFC003FC01FFC003FC03FFE007F803F7E007F803E3E007F007E3F00FF007C
1F00FF007C1F00FE007C1F01FE007C1F01FE007C1F03FC007C1F03FC007C1F03F8007E3F
07F8003E3E07F8003F7E0FF0003FFE0FF0001FFC0FE0001FFC0FE0000FF807C00007F003
C00003E028477DBE2F>37 D<00003C00007E0001FE0003FE0007FC000FF8001FE0003FC0
007F8000FF0000FE0001FC0003F80003F80007F00007E0000FE0000FC0001FC0001F8000
1F80003F80003F00003F00007F00007E00007E00007E0000FE0000FC0000FC0000FC0000
FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FE00007E0000
7E00007E00007F00003F00003F00003F80001F80001F80001FC0000FC0000FE00007E000
07F00003F80003F80001FC0000FE0000FF00007F80003FC0001FE0000FF80007FC0003FE
0001FE00007E00003C174771BE2F>40 D<780000FC0000FF0000FF80007FC0003FE0000F
F00007F80003FC0001FE0000FE00007F00003F80003F80001FC0000FC0000FE00007E000
07F00003F00003F00003F80001F80001F80001FC0000FC0000FC0000FC0000FE00007E00
007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00
00FE0000FC0000FC0000FC0001FC0001F80001F80003F80003F00003F00007F00007E000
0FE0000FC0001FC0003F80003F80007F0000FE0001FE0003FC0007F8000FF0003FE0007F
C000FF8000FF0000FC0000780000174778BE2F>I<0001E000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000003003F003007C03F00F80FE
03F01FC0FF83F07FC0FFE3F1FFC07FF3F3FF801FFFFFFE000FFFFFFC0003FFFFF00000FF
FFC000003FFF0000000FFC0000003FFF000000FFFFC00003FFFFF0000FFFFFFC001FFFFF
FE007FF3F3FF80FFE3F1FFC0FF83F07FC0FE03F01FC07C03F00F803003F003000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000001E00000
22277AAE2F>I<00003C000000007E000000007E000000007E000000007E000000007E00
0000007E000000007E000000007E000000007E000000007E000000007E000000007E0000
00007E000000007E000000007E000000007E00003FFFFFFFFC7FFFFFFFFEFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF7FFFFFFFFE00007E000000007E000000007E000000007E00000000
7E000000007E000000007E000000007E000000007E000000007E000000007E000000007E
000000007E000000007E000000007E000000007E000000007E000000003C000028297DAF
2F>I<1F003F807FC0FFE0FFE0FFE0FFE0FFE07FC03F801F000B0B6E8A2F>46
D<00000000E000000001F000000003F000000003F000000007F000000007E00000000FE0
0000000FC00000001FC00000001F800000003F800000003F000000007F000000007E0000
0000FE00000000FC00000000FC00000001FC00000001F800000003F800000003F0000000
07F000000007E00000000FE00000000FC00000001FC00000001F800000003F800000003F
000000003F000000007F000000007E00000000FE00000000FC00000001FC00000001F800
000003F800000003F000000007F000000007E00000000FE00000000FC00000000FC00000
001FC00000001F800000003F800000003F000000007F000000007E00000000FE00000000
FC00000001FC00000001F800000003F800000003F000000003F000000007F000000007E0
0000000FE00000000FC00000001FC00000001F800000003F800000003F000000007F0000
00007E00000000FE00000000FC00000000FC00000000F800000000780000000024477BBE
2F>I<0001FE00000007FF8000001FFFE000003FFFF000007FFFF80000FFFFFC0001FF03
FE0003FC00FF0003F8007F0007F0003F800FE0001FC00FC0000FC01FC0000FE01F800007
E01F800007E03F000003F03F000003F03F000003F07E000001F87E000001F87E000001F8
7E000001F8FC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC
000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFC000000FCFE00
0001FC7E000001F87E000001F87E000001F87F000003F83F000003F03F000003F03F8000
07F01F800007E01FC0000FE01FC0000FE00FE0001FC00FE0001FC007F0003F8003F8007F
0003FC00FF0001FF03FE0000FFFFFC00007FFFF800003FFFF000001FFFE0000007FF8000
0001FE0000263A7CB82F>I<000380000007C0000007C000000FC000000FC000001FC000
003FC000003FC000007FC00001FFC00003FFC0007FFFC000FFFFC000FFFFC000FFCFC000
FF8FC0007E0FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000
3FFFFFF87FFFFFF87FFFFFFC7FFFFFFC7FFFFFF87FFFFFF81E3977B82F>I<000FFC0000
003FFF800000FFFFE00003FFFFF80007FFFFFC000FFFFFFE001FF80FFF003FE001FF803F
80007F807F00003FC07E00001FC07E00000FE0FE000007E0FE000007F0FF000007F0FF00
0003F0FF000003F0FF000003F07E000003F018000003F000000003F000000003F0000000
07F000000007E00000000FE00000000FC00000001FC00000001FC00000003F800000007F
00000000FF00000001FE00000003FC00000007F80000000FF00000001FE00000003FC000
00007F80000000FF00000001FE00000007FC0000000FF80000001FF00000003FE0000000
7F80000000FF00000001FE00000003FC0001E00FF80003F01FF00003F03FE00003F07FFF
FFFFF0FFFFFFFFF0FFFFFFFFF0FFFFFFFFF0FFFFFFFFF07FFFFFFFE024397BB82F>I<00
07FF0000003FFFE00001FFFFF80003FFFFFE0007FFFFFF000FFFFFFF801FFC01FFC01FE0
003FC03F80001FE03FC00007E03FC00007F03FC00003F03FC00003F01F800003F00F0000
03F000000003F000000007F000000007E00000000FE00000000FE00000001FC00000007F
C0000000FF8000000FFF00000FFFFE00001FFFFC00001FFFF800001FFFF800001FFFFE00
000FFFFF00000001FF800000003FC00000001FE000000007F000000003F000000003F800
000001F800000001FC00000000FC00000000FC18000000FC7E000000FCFF000000FCFF00
0000FCFF000001FCFF000001F8FE000003F8FE000003F87F000007F07F80001FE03FE000
3FE01FFE01FFC00FFFFFFF8007FFFFFF0003FFFFFE0000FFFFF800003FFFE0000003FF00
00263A7CB82F>I<0FFFFFFF001FFFFFFF801FFFFFFF801FFFFFFF801FFFFFFF801FFFFF
FF001F800000001F800000001F800000001F800000001F800000001F800000001F800000
001F800000001F800000001F800000001F800000001F800000001F800000001F80000000
1F83FE00001F9FFFC0001FFFFFF0001FFFFFF8001FFFFFFC001FFFFFFE001FFE03FF001F
F000FF801FE0003F801F80001FC01F80000FC00F00000FE000000007E000000007E00000
0007F000000003F000000003F000000003F000000003F03C000003F07E000003F0FF0000
03F0FF000007F0FF000007E0FF00000FE0FE00000FE07E00001FC07F00003FC07F80007F
803FC001FF001FF80FFE001FFFFFFC000FFFFFF80003FFFFF00001FFFFC000007FFF0000
000FF8000024397BB72F>53 D<7800000000FFFFFFFFF8FFFFFFFFFCFFFFFFFFFCFFFFFF
FFFCFFFFFFFFFCFFFFFFFFF8FC000007F0FC00000FE0FC00001FC07800003F800000003F
800000007F00000000FE00000001FC00000001F800000003F800000007F000000007E000
00000FE00000000FC00000001FC00000001F800000003F800000003F000000007F000000
007E00000000FE00000000FC00000000FC00000001FC00000001F800000001F800000003
F000000003F000000003F000000007F000000007E000000007E000000007E00000000FE0
0000000FC00000000FC00000000FC00000000FC00000000FC00000001FC00000001F8000
00001F800000001F800000001F800000001F800000001F800000001F800000001F800000
001F800000001F800000000F000000263A7CB82F>55 D<30000000007800000000FE0000
0000FF00000000FFC00000007FE00000003FF80000000FFC00000007FF00000001FF8000
0000FFE00000003FF00000001FFC00000007FE00000003FF80000000FFC00000007FF000
00001FF80000000FFE00000003FF00000001FFC00000007FE00000003FF00000000FF000
00003FF00000007FE0000001FFC0000003FF0000000FFE0000001FF80000007FF0000000
FFC0000003FF80000007FE0000001FFC0000003FF0000000FFE0000001FF80000007FF00
00000FFC0000003FF80000007FE0000000FFC0000000FF00000000FE0000000078000000
003000000000242F7BB22F>62 D<7FFF807FFF807FFF807FFF80FFFFC0FFFFC0FFFFC0FF
FFC07FFF807FFF807FFF807FFF8003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003FFFFFFF00003FFFFFFF00003FFFFFFF00003FFFFFF
F00003FFFFFFF00003FFFFFFF00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F0007FFF807FFF807FFF807F
FF80FFFFC0FFFFC0FFFFC0FFFFC07FFF807FFF807FFF807FFF802A387EB72F>72
D<7FFFFFE000FFFFFFF800FFFFFFFE00FFFFFFFF80FFFFFFFFC07FFFFFFFE003F0007FF0
03F0001FF003F00007F803F00003F803F00001FC03F00001FC03F00000FC03F00000FE03
F000007E03F000007E03F000007E03F000007E03F000007E03F000007E03F00000FE03F0
0000FC03F00001FC03F00001FC03F00003F803F00007F803F0001FF003F0007FF003FFFF
FFE003FFFFFFC003FFFFFF8003FFFFFE0003FFFFF80003FFFFE00003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F00000007F
FF800000FFFFC00000FFFFC00000FFFFC00000FFFFC000007FFF80000027387DB72F>80
D<7FFFFFFFFF80FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFF
C0FC003F000FC0FC003F000FC0FC003F000FC0FC003F000FC0FC003F000FC0FC003F000F
C0FC003F000FC078003F00078000003F00000000003F00000000003F00000000003F0000
0000003F00000000003F00000000003F00000000003F00000000003F00000000003F0000
0000003F00000000003F00000000003F00000000003F00000000003F00000000003F0000
0000003F00000000003F00000000003F00000000003F00000000003F00000000003F0000
0000003F00000000003F00000000003F00000000003F00000000003F00000000003F0000
0000003F00000000003F00000000003F00000000003F00000000003F00000000003F0000
0000003F00000000003F000000001FFFFE0000003FFFFF0000003FFFFF0000003FFFFF00
00003FFFFF0000001FFFFE00002A387EB72F>84 D<7FFFFFFFE07FFFFFFFE0FFFFFFFFF0
FFFFFFFFF0FFFFFFFFF07FFFFFFFE07FFFFFFFE024077B7D2F>95
D<007FF000000003FFFE00000007FFFF8000000FFFFFC000001FFFFFE000003FFFFFF000
003FC01FF800003FC003FC00003FC001FC00003FC000FE00001F80007E00000F00007F00
000000003F00000000003F00000000003F00000000003F000000007FFF00000007FFFF00
00003FFFFF000001FFFFFF000007FFFFFF00000FFFF83F00001FFE003F00003FF0003F00
007FC0003F00007F00003F0000FE00003F0000FC00003F0000FC00003F0000FC00003F00
00FC00003F0000FC00007F0000FE00007F00007F0000FF00007F8003FF80003FE01FFFFF
003FFFFFFFFF801FFFFFFFFF800FFFFFDFFF8007FFFF0FFF8001FFFC01FF00007FE00000
00292A7BA82F>97 D<7FF000000000FFF800000000FFF800000000FFF800000000FFF800
0000007FF80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F80F
F0000001F83FFC000001F8FFFF000001FBFFFFC00001FFFFFFE00001FFFFFFF00001FFF0
3FF00001FFC00FF80001FF8003FC0001FF0001FC0001FE0000FE0001FC0000FE0001FC00
007F0001F800003F0001F800003F0001F800003F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
003F8001F800003F8001FC00003F0001FC00007F0001FC00007F0001FE0000FE0001FE00
00FE0001FF0001FC0001FF8007FC0001FFC00FF80001FFF03FF00001FFFFFFE00001FFFF
FFC00001FBFFFF800001F9FFFF000000F07FFC000000001FE0000029397EB72F>I<0003
FFC000000FFFF800003FFFFC0000FFFFFE0001FFFFFF0003FFFFFF8007FF007F800FF800
7F800FF0007F801FE0007F801FC0003F003F80001E003F000000007F000000007E000000
007E00000000FE00000000FC00000000FC00000000FC00000000FC00000000FC00000000
FC00000000FC00000000FC00000000FE000000007E000000007E000000007F000000007F
000007803F80000FC03FC0000FC01FE0001FC01FF0001F800FFC007F8007FF81FF0003FF
FFFF0001FFFFFE0000FFFFFC00003FFFF000000FFFC0000003FE0000222A79A82F>I<00
0003FF8000000007FFC000000007FFC000000007FFC000000007FFC000000003FFC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000003FC0FC000001FFF0FC00000
7FFFCFC00000FFFFEFC00001FFFFFFC00003FFFFFFC00007FE07FFC0000FF801FFC0001F
F0007FC0001FC0003FC0003F80003FC0003F80001FC0007F00001FC0007F00000FC0007E
00000FC000FE00000FC000FE00000FC000FC00000FC000FC00000FC000FC00000FC000FC
00000FC000FC00000FC000FC00000FC000FC00000FC000FC00000FC000FE00000FC0007E
00001FC0007E00001FC0007F00001FC0003F80003FC0003F80007FC0001FC0007FC0001F
E000FFC0000FF801FFC00007FE07FFFF0007FFFFFFFF8003FFFFEFFF8001FFFFCFFF8000
7FFF8FFF80001FFE07FF000007F800000029397DB72F>I<0003FE0000000FFF8000003F
FFE00000FFFFF00001FFFFF80003FFFFFC0007FE07FE000FF800FF000FF0007F001FC000
3F803FC0001F803F80001FC03F00000FC07F00000FC07E00000FC07E00000FE0FE000007
E0FC000007E0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFC0
FC00000000FE000000007E000000007E000000007F000000003F800003C03F800007E01F
C00007E01FE0000FE00FF8001FC007FE003FC007FF80FF8003FFFFFF8001FFFFFF00007F
FFFC00003FFFF800000FFFE0000001FF0000232A7BA82F>I<000001FF00000007FFC000
001FFFE000007FFFE00000FFFFF00000FFFFF00001FF0FF00003FC0FF00003F807E00007
F001800007E000000007E000000007E000000007E000000007E000000007E000000007E0
00000007E000007FFFFFFF80FFFFFFFFC0FFFFFFFFC0FFFFFFFFC0FFFFFFFFC07FFFFFFF
800007E000000007E000000007E000000007E000000007E000000007E000000007E00000
0007E000000007E000000007E000000007E000000007E000000007E000000007E0000000
07E000000007E000000007E000000007E000000007E000000007E000000007E000000007
E000000007E000000007E000000007E000000007E000000007E000003FFFFFFC007FFFFF
FE007FFFFFFE007FFFFFFE007FFFFFFE003FFFFFFC0024397DB82F>I<0003F801FE0000
1FFF07FF80007FFFDFFF8000FFFFFFFFC001FFFFFFFFC003FFFFFFFFC003FE0FFF0F8007
F803FC07000FF001FE00000FE000FE00000FC0007E00001FC0007F00001F80003F00001F
80003F00001F80003F00001F80003F00001F80003F00001F80003F00001FC0007F00000F
C0007E00000FE000FE00000FF001FE000007F803FC000003FE0FF8000003FFFFF8000007
FFFFF0000007FFFFE000000FFFFFC000000F9FFF0000000F83F80000000F80000000000F
80000000000F80000000000FC00000000007E40000000007FFFFF0000003FFFFFF000007
FFFFFFC0000FFFFFFFE0001FFFFFFFF0003FC0001FF8003F000001FC007E000000FE007C
0000007E00FC0000003E00F80000003F00F80000001F00F80000001F00F80000001F00F8
0000001F00FC0000003F007C0000003E007F000000FE003F800001FC003FE00007FC001F
FE007FF8000FFFFFFFF00007FFFFFFE00001FFFFFF800000FFFFFF0000001FFFF8000000
03FFC000002A3E7DA72F>I<7FF000000000FFF800000000FFF800000000FFF800000000
FFF8000000007FF80000000001F80000000001F80000000001F80000000001F800000000
01F80000000001F80000000001F80000000001F80000000001F80000000001F800000000
01F80FF0000001F83FFC000001F8FFFE000001FBFFFF000001FFFFFF800001FFFFFF8000
01FFF03FC00001FFC01FC00001FF800FE00001FF000FE00001FE0007E00001FC0007E000
01FC0007E00001FC0007E00001F80007E00001F80007E00001F80007E00001F80007E000
01F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E000
01F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E000
01F80007E00001F80007E00001F80007E00001F80007E0007FFFE07FFF80FFFFF0FFFFC0
FFFFF0FFFFC0FFFFF0FFFFC0FFFFF0FFFFC07FFFE07FFF802A387EB72F>I<0003800000
000FE00000000FE00000001FF00000001FF00000001FF00000000FE00000000FE0000000
038000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000003FFFE000007FFFF000007FFFF000007FFFF000007FFFF0
00003FFFF000000003F000000003F000000003F000000003F000000003F000000003F000
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000007FFF
FFFF00FFFFFFFF00FFFFFFFF80FFFFFFFF80FFFFFFFF007FFFFFFF00213979B82F>I<7F
F000000000FFF800000000FFF800000000FFF800000000FFF8000000007FF80000000000
F80000000000F80000000000F80000000000F80000000000F80000000000F80000000000
F80000000000F80000000000F80000000000F80000000000F80000000000F807FFFF0000
F80FFFFF0000F80FFFFF8000F80FFFFF8000F80FFFFF0000F807FFFF0000F8003F800000
F8007F000000F800FE000000F801FC000000F803F8000000F807F0000000F80FE0000000
F81FC0000000F83F80000000F87F00000000F8FF00000000F9FF80000000FBFF80000000
FFFFC0000000FFE7E0000000FFC7F0000000FF83F0000000FF01F8000000FE00FC000000
FC00FE000000F8007E000000F8003F000000F8001F800000F8001F800000F8000FC00000
F80007E00000F80007F0007FFFF03FFFC0FFFFF87FFFC0FFFFF87FFFE0FFFFF87FFFE0FF
FFF87FFFC07FFFF03FFFC02B387EB72F>107 D<7FFFF000007FFFF80000FFFFF80000FF
FFF800007FFFF800007FFFF800000001F800000001F800000001F800000001F800000001
F800000001F800000001F800000001F800000001F800000001F800000001F800000001F8
00000001F800000001F800000001F800000001F800000001F800000001F800000001F800
000001F800000001F800000001F800000001F800000001F800000001F800000001F80000
0001F800000001F800000001F800000001F800000001F800000001F800000001F8000000
01F800000001F800000001F800000001F800000001F800000001F800000001F800000001
F800000001F800000001F800000001F800007FFFFFFFE07FFFFFFFE0FFFFFFFFF0FFFFFF
FFF07FFFFFFFE07FFFFFFFE024387BB72F>I<0001F801F8007F8FFC0FFC00FFDFFE1FFE
00FFFFFF3FFF00FFFFFFFFFF80FFFFFFFFFF807FFE1FFE1F8007FC0FFC0FC007F80FF80F
C007F007F007C007E007E007C007E007E007C007E007E007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007
C007C007C007C07FFC3FFC3FFCFFFE3FFE3FFEFFFE7FFE7FFEFFFE7FFE7FFEFFFE3FFE3F
FE7FFC3FFC3FFC2F2880A72F>I<00000FF000007FF03FFC0000FFF8FFFE0000FFFBFFFF
0000FFFFFFFF8000FFFFFFFF80007FFFF03FC00001FFC01FC00001FF800FE00001FF000F
E00001FE0007E00001FC0007E00001FC0007E00001FC0007E00001F80007E00001F80007
E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007
E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007
E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007
E0007FFFE07FFF80FFFFF0FFFFC0FFFFF0FFFFC0FFFFF0FFFFC0FFFFF0FFFFC07FFFE07F
FF802A287EA72F>I<0003FC0000001FFF8000003FFFC00000FFFFF00001FFFFF80003FF
FFFC0007FE07FE000FF801FF000FE0007F001FC0003F801F80001F803F80001FC03F0000
0FC07F00000FE07E000007E07E000007E0FC000003F0FC000003F0FC000003F0FC000003
F0FC000003F0FC000003F0FC000003F0FC000003F0FC000003F0FE000007F07E000007E0
7E000007E07F00000FE07F00000FE03F80001FC03F80001FC01FC0003F801FE0007F800F
F801FF0007FE07FE0003FFFFFC0001FFFFF80000FFFFF000007FFFE000001FFF80000003
FC0000242A7BA82F>I<00000FF000007FF03FFC0000FFF8FFFF0000FFFBFFFFC000FFFF
FFFFE000FFFFFFFFF0007FFFF03FF00001FFC00FF80001FF8003FC0001FF0001FC0001FE
0000FE0001FC0000FE0001FC00007F0001F800003F0001F800003F0001F800003F8001F8
00001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F8
00001F8001F800001F8001F800003F8001F800003F8001FC00003F0001FC00007F0001FC
00007F0001FE0000FE0001FE0000FE0001FF0001FC0001FF8007FC0001FFC00FF80001FF
F03FF00001FFFFFFE00001FFFFFFC00001FBFFFF800001F9FFFF000001F87FFC000001F8
1FE0000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F8000000007FFFE0000000FFFFF0000000FFFFF0000000FFFFF0000000FFFF
F00000007FFFE0000000293C7EA72F>I<0000000FF0007FFF007FFE007FFF81FFFF00FF
FF87FFFF00FFFF8FFFFF807FFF9FFFFF807FFFBFF87F80001FFFC07F80001FFF003F0000
1FFE001E00001FFC000000001FF8000000001FF0000000001FF0000000001FE000000000
1FC0000000001FC0000000001FC0000000001FC0000000001F80000000001F8000000000
1F80000000001F80000000001F80000000001F80000000001F80000000001F8000000000
1F80000000001F80000000001F80000000001F80000000001F80000000001F8000000000
1F800000007FFFFFF800007FFFFFFC0000FFFFFFFC0000FFFFFFFC00007FFFFFFC00007F
FFFFF8000029287EA72F>114 D<001FFC0E0001FFFF9F0007FFFFFF000FFFFFFF001FFF
FFFF003FFFFFFF007FF007FF007F8000FF00FE00007F00FE00007F00FC00003F00FC0000
3F00FC00003F00FE00003F007F00001E007FC00000003FFC0000001FFFF000000FFFFF80
0003FFFFE00000FFFFF800001FFFFE0000007FFF00000001FF800000007F807800001FC0
FC00000FC0FC000007E0FC000007E0FE000007E0FE000007E0FF000007E0FF80000FE0FF
C0001FC0FFE0003FC0FFFC01FF80FFFFFFFF80FFFFFFFF00FFFFFFFE00F8FFFFF800F83F
FFE0007007FF0000232A7AA82F>I<000F000000001F800000001F800000001F80000000
1F800000001F800000001F800000001F800000001F800000001F800000001F8000007FFF
FFFFC0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE07FFFFFFFC0001F800000001F80
0000001F800000001F800000001F800000001F800000001F800000001F800000001F8000
00001F800000001F800000001F800000001F800000001F800000001F800000001F800000
001F800000001F800000001F8000F0001F8001F8001F8001F8001F8001F8001F8001F800
1F8001F8001FC003F8001FC007F0000FE00FF0000FF81FE00007FFFFC00007FFFFC00003
FFFF800001FFFE0000007FF80000001FE00025337EB12F>I<7FF001FFC000FFF803FFE0
00FFF803FFE000FFF803FFE000FFF803FFE0007FF801FFE00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F80007E00001F80007E00001F80007E00001F80007E0
0001F80007E00001F80007E00001F8000FE00001F8000FE00001F8001FE00001F8003FE0
0001FC007FE00000FF01FFFF8000FFFFFFFFC0007FFFFFFFC0007FFFFFFFC0003FFFE7FF
C0000FFF83FF800003FE0000002A287EA62F>I<7FFF801FFFE07FFFC03FFFE0FFFFC03F
FFF0FFFFC03FFFF07FFFC03FFFE07FFF801FFFE007C000003E0007C000003E0007C00000
3E0007E000007E0003E000007C0003E000007C0003E000007C0003E000007C0003E00000
7C0001F00000F80001F00F80F80001F01FC0F80001F03FE0F80001F03FE0F80001F03FE0
F80000F87FF0F00000F87DF1F00000F87DF1F00000F8FDF1F00000F8FDF9F00000F8F9F9
F0000078F8F9E0000079F8F9E000007DF8F9E000007DF8F9E000007DF079E000007DF07B
E000003FF07FC000003FE07FC000003FE03FC000003FE03FC000003FC01FC000001F800F
80002C277FA62F>119 D<3FFF80FFFE007FFFC1FFFF007FFFC1FFFF007FFFC1FFFF007F
FFC1FFFF003FFF80FFFE00007E001F0000003F003F0000003F007E0000001F80FC000000
0FC0FC00000007C1F800000007E3F000000003F3E000000001FFE000000000FFC0000000
00FF80000000007F00000000003F00000000003F00000000007F0000000000FF80000000
00FFC000000001F3E000000003E3F000000007E1F000000007C0F80000000F80FC000000
1F807E0000003F003E0000003E001F0000007E001F800000FC000FC0007FFF807FFF807F
FFC0FFFF80FFFFC0FFFFC0FFFFC0FFFFC07FFFC0FFFF807FFF807FFF802A277EA62F>I<
7FFF803FFF80FFFF807FFFC0FFFFC07FFFC0FFFFC07FFFC0FFFF807FFFC07FFF803FFF80
01F00003E00001F80003E00000F80003E00000F80007C00000FC0007C000007C0007C000
007E000F8000003E000F8000003E000F8000003F001F0000001F001F0000001F001F0000
000F803E0000000F803E0000000FC03E00000007C07C00000007C07C00000007E07C0000
0003E0F800000003E0F800000001F0F800000001F0F000000001F1F000000000F9F00000
0000F9E000000000F9E0000000007BE0000000007FC0000000003FC0000000003FC00000
00003F80000000001F80000000001F80000000001F00000000001F00000000001F000000
00003E00000000003E00000000003E00000000007C00000000007C0000000000FC000000
0F00F80000001F81F80000003FC1F80000003FC3F00000003F07E00000003F1FE0000000
3FFFC00000001FFF800000001FFF800000000FFE0000000007FC0000000003F000000000
2A3C7EA62F>I E
%EndDVIPSBitmapFont
/Fg 1[91 123[114 130[{ fa5free1 ReEncodeFont }2 90.9091
/FontAwesome5Free-Solid rf
%DVIPSBitmapFont: Fh ecsx1095 10.95 15
/Fh 15 121 df<FC000000FE0000007F0000003F8000001FC000001FE000000FF0000007
F8000007FC000003FE000001FE000001FF000000FF800000FF800000FFC000007FC00000
7FE000003FE000003FF000003FF000001FF800001FF800001FF800000FFC00000FFC0000
0FFC00000FFE00000FFE000007FE000007FE000007FF000007FF000007FF000007FF0000
07FF000003FF000003FF800003FF800003FF800003FF800003FF800003FF800003FF8000
03FF800003FF800003FF800003FF800003FF800003FF800003FF800003FF800003FF8000
03FF800003FF800003FF800003FF000007FF000007FF000007FF000007FF000007FF0000
07FE000007FE00000FFE00000FFE00000FFC00000FFC00000FFC00001FF800001FF80000
1FF800003FF000003FF000003FE000007FE000007FC00000FFC00000FF800000FF800001
FF000001FE000003FE000007FC000007F800000FF000001FE000001FC000003F8000007F
000000FE000000FC000000195B7BC327>41 D<FFE0FFE0FFE0FFE0FFE0FFE0FFE0FFE0FF
E0FFE0FFE00B0B788A1C>46 D<00003E000000007F00000000FF00000003FF0000000FFF
000000FFFF00003FFFFF00007FFFFF0000FFFFFF0000FFFFFF00007FFFFF00003F87FF00
000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF000000
07FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007
FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF
00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00
000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF0000
1FFFFFFFC03FFFFFFFE07FFFFFFFE07FFFFFFFE03FFFFFFFE01FFFFFFFC0233D79BC32>
49 D<0003FF0000001FFFE000007FFFFC0001FFFFFE0003FFFFFF8007FFFFFFC00FFFFF
FFE01FFFFFFFF03FFFFFFFF83FFC07FFF87FF000FFFCFFE0007FFCFFC0003FFEFFC0001F
FE7F80001FFE3F00000FFF1F00000FFF1F00000FFF0E00000FFF06000007FF00000007FF
0000000FFF0000000FFF0000000FFF0000000FFE0000001FFE0000001FFE0000003FFC00
00003FFC0000007FF80000007FF0000000FFE0000001FFC0000003FF80000007FF000000
0FFE0000001FFC0000003FF80000007FF0000000FFC0000001FF80000003FF00000007FE
0000000FFC0000001FF00000003FE00000007FC0000000FF80000001FF00000003FE0000
0007FC0000000FF00000001FFFFFFFFE3FFFFFFFFF7FFFFFFFFF7FFFFFFFFF7FFFFFFFFF
7FFFFFFFFF7FFFFFFFFF3FFFFFFFFF1FFFFFFFFE283D7CBC32>I<0001FFC00000001FFF
F80000007FFFFE000001FFFFFF800003FFFFFFC0000FFFFFFFE0001FFFFFFFF0003FFFFF
FFF0007FFF01FFF8007FF8007FF8003FE0003FFC001FC0003FFC001F80003FFC000F0000
1FFC000600001FFC000000001FFC000000003FFC000000003FFC000000003FFC00000000
3FF8000000007FF8000000007FF800000000FFF000000001FFE000000003FFC00000001F
FF8000000FFFFF0000000FFFFE0000000FFFF80000000FFFFE0000000FFFFF8000000FFF
FFE000000000FFF8000000003FFC000000001FFC000000001FFE000000000FFF00000000
0FFF0000000007FF0000000007FF8000000007FF8000000007FF8000000007FF80000000
07FF8000000007FF8000000007FF8000000007FF8000000007FF806000000FFF80700000
0FFF007C00001FFF007F00001FFF00FFC0003FFE00FFFC00FFFE00FFFFFFFFFC00FFFFFF
FFFC00FFFFFFFFF8007FFFFFFFF0001FFFFFFFE00007FFFFFFC00001FFFFFF0000003FFF
F800000003FFC00000293F7CBC32>I<000003FFC000000007FFE000000007FFE0000000
0FFFE00000001FFFE00000001FFFE00000003FFFE00000003FFFE00000007F7FE0000000
7F7FE0000000FE7FE0000001FE7FE0000001FE7FE0000003FC7FE0000003FC7FE0000007
F87FE000000FF87FE000000FF07FE000001FF07FE000001FE07FE000003FE07FE000003F
C07FE000007FC07FE00000FF807FE00000FF807FE00001FF007FE00001FE007FE00003FE
007FE00003FC007FE00007FC007FE0000FF8007FE0000FF8007FE0001FF0007FE0001FE0
007FE0003FE0007FE0007FC0007FE0007FC0007FE000FF80007FE000FFFFFFFFFFC0FFFF
FFFFFFE0FFFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFE0FFFFFFFFFFE07FFF
FFFFFFC00000007FE0000000007FE0000000007FE0000000007FE0000000007FE0000000
007FE0000000007FE0000000007FE0000000007FE0000000007FE0000000007FE0000000
007FE0000000003FC0002B3B7DBA32>I<03FFFFFFF80007FFFFFFFC000FFFFFFFFC000F
FFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFF8000F
FE000000000FFE000000000FFE000000000FFE000000000FFE000000000FFE000000000F
FE000000000FFE000000000FFE000000000FFE000000000FFE000000000FFE000000000F
FE3FF000000FFFFFFE00000FFFFFFF80000FFFFFFFE0000FFFFFFFF0000FFFFFFFF8000F
FFE07FFC000FFF003FFC000FFE001FFE000FFC000FFE000FF8000FFF0007F0000FFF0003
E00007FF0000000007FF8000000007FF8000000007FF8000000007FF8000000007FF8000
000007FF8000000007FF8000000007FF8000000007FF8000000007FF800C000007FF801E
000007FF801E00000FFF003F00000FFF007F80001FFF007FC0001FFF00FFF0003FFE00FF
FE01FFFE007FFFFFFFFC003FFFFFFFFC001FFFFFFFF8000FFFFFFFF00007FFFFFFE00001
FFFFFF8000007FFFFE0000001FFFF800000003FF800000293D7DBA32>I<3FFFFFFFFFF0
7FFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8
FFFFFFFFFFF8FFFFFFFFFFF0FFF000000000FFF000000000FFF000000000FFF000000000
FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000
FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000
FFF000000000FFFFFFFFFF80FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFFC0
FFFFFFFFFFC0FFFFFFFFFFC0FFFFFFFFFF80FFF000000000FFF000000000FFF000000000
FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000
FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000FFF000000000
FFF000000000FFF000000000FFF000000000FFF000000000FFFFFFFFFFF8FFFFFFFFFFFC
FFFFFFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFC
7FFFFFFFFFFC3FFFFFFFFFF82E3F78BE3B>69 D<0003FFC000003FFFF80001FFFFFE0007
FFFFFF801FFFFFFFC01FFFFFFFE01FFE01FFF01FF0007FF01FC0007FF80F80003FF80F00
003FF80E00003FFC0C00001FFC0000001FFC0000001FFC0000001FFC0000001FFC000000
1FFC0000001FFC0000001FFC00007FFFFC000FFFFFFC007FFFFFFC01FFFFFFFC07FFFFFF
FC1FFFFC1FFC3FFF801FFC3FFE001FFC7FF8001FFCFFF0001FFCFFF0001FFCFFE0001FFC
FFE0001FFCFFE0001FFCFFE0003FFCFFF0003FFC7FF0007FFC7FF800FFFC7FFE07FFFC3F
FFFFFFFC1FFFFFFFFC0FFFFFDFFC07FFFF1FFC01FFFC0FF8007FC00000262D7DAB30>97
D<3FC0000000007FE000000000FFE000000000FFE000000000FFE000000000FFE0000000
00FFE000000000FFE000000000FFE000000000FFE000000000FFE000000000FFE0000000
00FFE000000000FFE000000000FFE000000000FFE000000000FFE000000000FFE0000000
00FFE000000000FFE000000000FFE000000000FFE000000000FFE000000000FFE01FF000
00FFE0FFFE0000FFE7FFFF8000FFEFFFFFC000FFFFFFFFF000FFFFFFFFF800FFFF01FFF8
00FFFC003FFC00FFF8001FFE00FFF0000FFE00FFE0000FFE00FFE00007FF00FFE00007FF
00FFE00007FF00FFE00007FF00FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF
80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF
80FFE00003FF80FFE00003FF80FFE00003FF80FFE00003FF80FFE00007FF00FFE00007FF
00FFE00007FF00FFE0000FFF00FFE0000FFE00FFF0001FFE00FFF8003FFC00FFFC007FFC
00FFFF01FFF800FFFFFFFFF000FFFFFFFFE000FFFFFFFFC0007FE7FFFF00003FC1FFFC00
0000007FC0000029437AC133>I<0000FFF800000FFFFF00003FFFFFC000FFFFFFF001FF
FFFFFC03FFFFFFFC07FFC01FFC0FFF0003FC1FFE0000F81FFC0000783FF80000383FF800
00187FF00000007FF00000007FF00000007FF0000000FFE0000000FFE0000000FFE00000
00FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000FFE0000000
FFE0000000FFE0000000FFE0000000FFE00000007FF00000007FF00000007FF00000003F
F80000183FF80000383FFC0000781FFE0001F80FFF0003FC0FFFC03FFC07FFFFFFFC01FF
FFFFFC00FFFFFFF0003FFFFFC0000FFFFE000000FFF000262D7DAB2D>I<0001FFC00000
0FFFF800003FFFFE0000FFFFFF0001FFFFFF8003FFFFFFC007FFC0FFE00FFE003FF01FFC
001FF01FF8000FF83FF0000FF83FF00007FC7FF00007FC7FE00007FC7FE00007FC7FE000
03FEFFE00003FEFFE00003FEFFC00003FEFFC00003FEFFFFFFFFFEFFFFFFFFFEFFFFFFFF
FEFFFFFFFFFEFFFFFFFFFEFFFFFFFFFCFFE0000000FFE0000000FFE00000007FE0000000
7FE00000007FE00000003FF00000003FF000000C3FF800001C1FF800003C0FFC0000FC0F
FF0003FE07FFE01FFE03FFFFFFFE01FFFFFFFE007FFFFFF8003FFFFFE00007FFFF000000
FFF000272D7DAB2E>101 D<3FE07FF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF0FFF07FE0
0000000000000000000000000000000000000000000000001FE03FF07FF07FF07FF07FF0
7FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF0
7FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF07FF03FF01FE0
0C427BC118>105 D<000007C03F803FC07FC0FFC0FFC1FFC0FFC3FFC0FFC7FFC0FFCFFF
C0FFDFFFC0FFFFFFC0FFFFF800FFFFE000FFFF8000FFFF0000FFFE0000FFFC0000FFF800
00FFF80000FFF00000FFF00000FFF00000FFE00000FFE00000FFE00000FFE00000FFE000
00FFE00000FFE00000FFE00000FFE00000FFE00000FFE00000FFE00000FFE00000FFE000
00FFE00000FFE00000FFE00000FFE00000FFE00000FFE00000FFE000007FE000003FC000
001A2B7AAA22>114 D<7FC00003FE007FE00007FE007FF0000FFE007FF8001FFE003FFC
001FFC001FFC003FF8000FFE007FF00007FF00FFE00003FF81FFC00001FFC1FFC00001FF
C3FF800000FFE7FF0000007FFFFE0000003FFFFC0000001FFFFC0000000FFFF80000000F
FFF000000007FFE000000003FFC000000001FF8000000001FF8000000001FFC000000003
FFE000000007FFE00000000FFFF00000001FFFF80000001FFFFC0000003FE7FE0000007F
E3FF000000FFC1FF800001FF81FF800001FF80FFC00003FF007FE00007FE007FF0000FFE
003FF8001FFC001FFC003FF8000FFC003FF8000FFE007FF00007FF00FFE00003FF80FFC0
0003FF807F800001FF00292A7EA92E>120 D E
%EndDVIPSBitmapFont
/Fi 142[69 113[{}1 90.9091 /Dingbats rf
%DVIPSBitmapFont: Fj ecbx0800 8 1
/Fj 1 102 df<000FFC00007FFF8001FFFFE007FC0FF00FF003F81FE001FC1FE000FC3F
C000FE7FC0007E7F80007E7F80007FFF80007FFF80007FFFFFFFFFFFFFFFFFFFFFFFFFFF
800000FF800000FF8000007F8000007FC000007FC000003FC0000F1FE0000F0FF0001F07
F8007E03FE01FC01FFFFF8007FFFE00007FF00201E7E9D25>101
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk ecrm1095 10.95 71
/Fk 71 245 df<00006000C000006000C00000E001C00000C001800001C0038000038007
0000038007000007800F000007000E00000F001E00001E003C00003C007800003C007800
007800F00000F801F00001F003E00003E007C00007C00F80000FC01F80001F803F00007F
00FE0000FE01FC0000FE01FC00007F00FE00001F803F00000FC01F800007C00F800003E0
07C00001F003E00000F801F000007800F000003C007800003C007800001E003C00000F00
1E000007000E000007800F00000380070000038007000001C003800000C001800000E001
C000006000C000006000C0222C76AB32>19 D<C001800000C001800000E001C000006000
C000007000E00000380070000038007000003C007800001C003800001E003C00000F001E
000007800F000007800F000003C007800003E007C00001F003E00000F801F000007C00F8
00007E00FC00003F007E00001FC03F80000FE01FC0000FE01FC0001FC03F80003F007E00
007E00FC00007C00F80000F801F00001F003E00003E007C00003C007800007800F000007
800F00000F001E00001E003C00001C003800003C00780000380070000038007000007000
E000006000C00000E001C00000C001800000C001800000222C7BAB32>I<FFFFFFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFFFFFF80590280985A>22 D<000003FF000FE000001F
FFC07FF80000FE00F1F81C0001F8003BE07E0007E0007FC0FF000FC001FFC0FF001F8001
FF80FF003F0001FF00FF007F0001FF00FF007E0001FF007E00FE0000FE000000FC00007E
000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E00
0000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E0000
00FC00007E000000FC00007E000000FC00007E0000FFFFFFFFFFFF80FFFFFFFFFFFF80FF
FFFFFFFFFF8000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC
00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00
007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC0000
7E000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E
000000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E00
0000FC00007E000000FC00007E000000FC00007E000000FC00007E000000FC00007E0000
00FC00007E000000FC00007E000001FE0000FF00007FFFF83FFFFF007FFFF83FFFFF007F
FFF83FFFFF0038407FBF35>27 D<000003FE000000001FFFC0000000FE01E0000001F800
78000007E0001C00000FC0007C00001F8000FE00003F0001FE00007F0001FE00007E0001
FE0000FE0001FE0000FC0000FC0000FC0000780000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC00007E00FFFFFFFFFE00FFFFFFFFFE00FFFFFFFF
FE0000FC0001FE0000FC0000FE0000FC00007E0000FC00007E0000FC00007E0000FC0000
7E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC0000
7E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC0000
7E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC0000
7E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC00007E0000FC0000
7E0000FC00007E0000FC00007E0001FE0000FF007FFFF83FFFFC7FFFF83FFFFC7FFFF83F
FFFC2E407FBF32>I<000003FE0001FF000000001FFF800FFFE0000000FE01E07F00F000
0001F80078FC003C000007E0001BF0000E00000FC0007FE0003E00001F8001FFC0007F00
003F0001FF8000FF00007F0001FF8000FF00007E0001FF0000FF0000FE0001FF0000FF00
00FC0001FE00007E0000FC00007E00003C0000FC00007E0000000000FC00007E00000000
00FC00007E0000000000FC00007E0000000000FC00007E0000000000FC00007E00000000
00FC00007E0000000000FC00007E0000000000FC00007E0000000000FC00007E00000000
00FC00007E0000000000FC00007E00003F00FFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF00
FFFFFFFFFFFFFFFF0000FC00007E0000FF0000FC00007E00007F0000FC00007E00003F00
00FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC00007E00003F00
00FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC00007E00003F00
00FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC00007E00003F00
00FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC00007E00003F00
00FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC00007E00003F00
00FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC00007E00003F00
00FC00007E00003F0000FC00007E00003F0000FC00007E00003F0000FC00007E00003F00
00FC00007E00003F0001FE0000FF00007F807FFFF83FFFFC1FFFFE7FFFF83FFFFC1FFFFE
7FFFF83FFFFC1FFFFE47407FBF4B>30 D<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000
C000C000C000C000C001C00180018003800300070006000E000C001C003800700060000A
1B78BE19>39 D<0000300000700000E00001C0000380000700000F00001E00003C00003C
0000780000F00000F00001E00001E00003C00003C00007C0000780000F80000F80000F00
001F00001F00001E00003E00003E00003E00003C00007C00007C00007C00007C00007C00
007C0000780000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
00F80000F80000F80000F80000F80000F80000F80000F800007800007C00007C00007C00
007C00007C00007C00003C00003E00003E00003E00001E00001F00001F00000F00000F80
000F800007800007C00003C00003C00001E00001E00000F00000F000007800003C00003C
00001E00000F000007000003800001C00000E0000070000030145A77C323>I<C00000E0
00007000003800001C00000E00000F000007800003C00003C00001E00000F00000F00000
7800007800003C00003C00003E00001E00001F00001F00000F00000F80000F8000078000
07C00007C00007C00003C00003E00003E00003E00003E00003E00003E00001E00001F000
01F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F000
01F00001F00001F00001F00001F00001E00003E00003E00003E00003E00003E00003E000
03C00007C00007C00007C0000780000F80000F80000F00001F00001F00001E00003E0000
3C00003C0000780000780000F00000F00001E00003C00003C0000780000F00000E00001C
0000380000700000E00000C00000145A7BC323>I<1C007F00FF80FF80FFC0FFC0FFC07F
C01CC000C000C000C000C000C001C00180018003800300070006000E000C001C00380070
0060000A1B788819>44 D<FFFFFEFFFFFEFFFFFEFFFFFEFFFFFE17057F951E>I<1C007F
00FF80FF80FF80FF80FF807F001C000909788819>I<0000C0000003C0000007C000001F
C000007FC00007FFC000FFFFC000FF9FC000F81FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001F
C000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000007F
F000FFFFFFF8FFFFFFF8FFFFFFF81D3D78BC2D>49 D<0007FC0000003FFF800000FFFFE0
0001F00FF800078003FC000F0001FE000E0000FF001C00007F803800003FC03000003FC0
7000001FE06000001FE06000001FE0FE00000FF0FF00000FF0FF80000FF0FF80000FF0FF
80000FF0FF80000FF0FF80000FF07F00000FF01C00000FF00000000FE00000001FE00000
001FE00000001FC00000003FC00000003F800000007F800000007F00000000FE00000001
FC00000001FC00000003F800000007F00000000FE00000000FC00000001F800000003E00
0000007C00000000F800000001F000000003E000000003C000000007800000000F000030
001E000030003C000030007800003000F000006001E000006003C0000060078000006007
000000E00FFFFFFFE01FFFFFFFE03FFFFFFFE07FFFFFFFC0FFFFFFFFC0FFFFFFFFC0FFFF
FFFFC0243D7CBC2D>I<0007FC0000003FFF800000FFFFE00001F807F80007C003FC000F
0001FE000E0000FF001C00007F801F80007F803FC0003FC03FE0003FC03FE0003FC03FE0
003FC03FE0003FC03FE0003FC01FC0003FC00700003FC00000003F800000007F80000000
7F800000007F00000000FF00000000FE00000001FC00000003F800000003F00000000FC0
0000003F0000001FFC0000001FFF800000000FE000000003F800000001FC00000000FE00
0000007F000000007F800000003FC00000003FC00000003FE00000003FE00000001FE000
00001FF00000001FF00C00001FF03F00001FF07F80001FF0FFC0001FF0FFC0001FF0FFC0
001FF0FFC0001FF0FFC0003FE0FF80003FE07F00003FC07000003FC07000007F80380000
7F801C0000FF000F0001FE0007C003FC0003F80FF00000FFFFE000003FFF80000007FC00
00243F7CBC2D>I<0000000E000000000E000000001E000000003E000000003E00000000
7E00000000FE00000000FE00000001FE00000003FE00000003FE00000006FE0000000EFE
0000000CFE00000018FE00000038FE00000030FE00000060FE000000E0FE000000C0FE00
000180FE00000380FE00000300FE00000600FE00000E00FE00000C00FE00001800FE0000
3800FE00003000FE00006000FE0000E000FE0000C000FE00018000FE00038000FE000300
00FE00060000FE000E0000FE000C0000FE00180000FE00380000FE00300000FE00600000
FE00E00000FE00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000FE00000000FE00000000FE
00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00
000000FE00000000FE00000001FF000001FFFFFF0001FFFFFF0001FFFFFF283E7EBD2D>
I<060000030007C0000F0007F800FE0007FFFFFC0007FFFFFC0007FFFFF00007FFFFE000
07FFFFC00007FFFF0000063FF80000060000000006000000000600000000060000000006
000000000600000000060000000006000000000600000000060000000006000000000600
00000006000000000601FE0000060FFF8000063E03E000067001F80006E000FC0007C000
7E000780003F000700003F800600001F800000001FC00000001FC00000001FE00000000F
E00000000FE00000000FE00000000FF00000000FF00000000FF00000000FF03E00000FF0
7F00000FF0FF80000FF0FF80000FF0FF80000FF0FF80000FF0FF00000FE0FE00001FE0E0
00001FE06000001FC07000001FC03000003F803800003F801C00007F001E0000FE000F00
01FC0007C003F80003F00FE00000FFFFC000003FFF00000007F80000243F7CBC2D>I<00
001FE0000000FFF8000003FFFE00000FF01F00001F800780003F000380007E000FC000FC
001FC001F8003FC003F0003FC003F0003FC007E0003FC00FE0001F800FC0000F001FC000
00001FC00000001F800000003F800000003F800000003F800000007F800000007F000000
007F01FE00007F07FF8000FF0E03E000FF1C01F000FF3800FC00FF70007E00FF60003E00
FFE0003F00FFC0001F80FFC0001FC0FF80001FC0FF80001FE0FF80000FE0FF80000FE0FF
00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF0FF00000FF07F00000FF07F00
000FF07F00000FF07F00000FF07F00000FF03F80000FF03F80000FE03F80000FE01F8000
0FE01F80001FC01FC0001FC00FC0001F800FC0003F8007E0003F0003F0007E0001F800FC
0000FC01F800007E07F000003FFFE000000FFF80000003FC0000243F7CBC2D>I<300000
000038000000003E000000003FFFFFFFFC3FFFFFFFFC3FFFFFFFFC3FFFFFFFF87FFFFFFF
F87FFFFFFFF07FFFFFFFE070000000E060000001C0600000038060000003006000000700
C000000E00C000000C00C000001C00C00000380000000030000000007000000000E00000
0001C000000001800000000380000000070000000007000000000E000000000E00000000
1C000000001C000000003C00000000380000000078000000007800000000F800000000F0
00000001F000000001F000000001F000000003F000000003F000000003F000000007F000
000007E000000007E000000007E00000000FE00000000FE00000000FE00000000FE00000
000FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE0000000
1FE00000001FE00000001FE00000001FE00000000FC00000000780000026407BBD2D>I<
0003FC0000001FFF8000007FFFE00000FC03F80001E000FC0003C0003E000780001F000F
00000F000E00000F801E000007801C000007C03C000003C03C000003C03C000003C03E00
0003C03E000003C03F000003C03F000007C03F800007801FE0000F801FF0000F001FFC00
1E000FFE003C000FFF80780007FFC0F00003FFF1E00001FFFF800000FFFF0000003FFF00
00001FFFC000000FFFE000001FFFF8000078FFFC0001F07FFE0003C01FFF0007800FFF80
0F0003FFC01F0001FFC01E00007FE03C00003FE07C00000FE078000007F078000003F0F8
000003F0F0000001F0F0000001F0F0000000F0F0000000F0F0000000F0F0000000F0F800
0000E078000001E078000001E07C000001C03E000003C01E000007801F00000F000FC000
1E0007E0007C0001FC03F80000FFFFE000001FFF80000003FC0000243F7CBC2D>I<1C00
7F00FF80FF80FF80FF80FF807F001C000000000000000000000000000000000000000000
000000000000000000000000000000000000000000001C007F00FF80FF80FF80FF80FF80
7F001C00092778A619>58 D<003FF80000FFFF0003C01FC00F0007F01C0001F8380001FC
700000FE600000FE7C00007FFE00007FFF00007FFF00007FFF00007FFF00007F7E00007F
3C0000FF000000FE000000FE000001FC000003F8000007F000000FE000000F8000001F00
00003E0000003C00000078000000F8000000F0000000E0000001E0000001C00000018000
000380000003800000030000000300000003000000030000000300000003000000030000
000300000003000000030000000300000000000000000000000000000000000000000000
0000000000000000000000000000000000070000001FC000003FE000003FE000003FE000
003FE000003FE000001FC0000007000020407BBF2B>63 D<000000070000000000000007
0000000000000007000000000000000F800000000000000F800000000000001FC0000000
0000001FC00000000000001FC00000000000003FE00000000000003FE00000000000003F
E00000000000007FF00000000000006FF00000000000006FF0000000000000CFF8000000
000000C7F8000000000000C7F800000000000187FC00000000000183FC00000000000183
FC00000000000301FE00000000000301FE00000000000301FE00000000000600FF000000
00000600FF00000000000E00FF80000000000C007F80000000000C007F80000000001C00
7FC00000000018003FC00000000018003FC00000000030003FE00000000030001FE00000
000030001FE00000000060001FF00000000060000FF00000000060000FF000000000C000
07F800000000C00007F800000000C00007F800000001800003FC00000001FFFFFFFC0000
0003FFFFFFFE00000003FFFFFFFE00000003000001FE00000007000001FF000000060000
00FF00000006000000FF0000000C000000FF8000000C0000007F8000000C0000007F8000
00180000007FC00000180000003FC00000180000003FC00000300000001FE00000300000
001FE00000700000001FE00000700000000FF00000F00000000FF00001F00000000FF800
03F80000000FF8000FFE0000003FFE00FFFFC00007FFFFF8FFFFC00007FFFFF8FFFFC000
07FFFFF83D417DC044>65 D<0000003FF0000C000003FFFE001C00001FFFFF801C00007F
E00FC03C0000FF0001F07C0003FC0000787C0007F000003CFC001FE000000FFC003FC000
0007FC007F80000003FC00FF00000003FC01FE00000001FC01FC00000000FC03FC000000
00FC07F8000000007C07F8000000007C0FF0000000003C0FF0000000003C1FE000000000
1C1FE0000000001C3FE0000000001C3FC0000000001C3FC0000000000C7FC0000000000C
7FC0000000000C7FC0000000000C7F800000000000FF800000000000FF800000000000FF
800000000000FF800000000000FF800000000000FF800000000000FF800000000000FF80
0000000000FF800000000000FF800000000000FF800000000000FF8000000000007F8000
000000007FC000000000007FC0000000000C7FC0000000000C3FC0000000000C3FC00000
00000C3FE0000000000C1FE0000000001C1FE000000000180FF000000000180FF0000000
001807F8000000003807F8000000003003FC000000007001FC000000006001FE00000000
E000FF00000001C0007F8000000380003FC000000780001FE000000F000007F000001E00
0003FC00003C000000FF0000F00000007FE007E00000001FFFFF8000000003FFFE000000
00003FF0000036427BBF41>67 D<FFFFFFFFFC000000FFFFFFFFFF800000FFFFFFFFFFE0
000000FFC0001FF80000007F800003FE0000007F800000FF0000007F8000003F8000007F
8000001FC000007F8000000FE000007F80000007F000007F80000003F800007F80000001
FC00007F80000001FC00007F80000000FE00007F80000000FF00007F800000007F00007F
800000007F80007F800000003F80007F800000003FC0007F800000003FC0007F80000000
3FC0007F800000003FE0007F800000001FE0007F800000001FE0007F800000001FE0007F
800000001FE0007F800000001FF0007F800000001FF0007F800000001FF0007F80000000
1FF0007F800000001FF0007F800000001FF0007F800000001FF0007F800000001FF0007F
800000001FF0007F800000001FF0007F800000001FF0007F800000001FE0007F80000000
1FE0007F800000001FE0007F800000001FE0007F800000003FE0007F800000003FC0007F
800000003FC0007F800000003F80007F800000007F80007F800000007F80007F80000000
7F00007F80000000FE00007F80000000FE00007F80000001FC00007F80000003F800007F
80000007F800007F8000000FF000007F8000001FE000007F8000003FC000007F800000FF
0000007F800003FE000000FFC0001FF80000FFFFFFFFFFF00000FFFFFFFFFF800000FFFF
FFFFFC0000003C3E7DBD45>I<FFFFFFFFFFFFC0FFFFFFFFFFFFC0FFFFFFFFFFFFC000FF
C00001FFC0007F8000001FC0007F8000000FE0007F80000003E0007F80000003E0007F80
000001E0007F80000000E0007F80000000E0007F80000000E0007F8000000060007F8000
000060007F8000000060007F8000000060007F8000000030007F8000300030007F800030
0030007F8000300030007F8000300030007F8000300000007F8000300000007F80007000
00007F8000700000007F8000F00000007F8001F00000007F8007F00000007FFFFFF00000
007FFFFFF00000007FFFFFF00000007F8007F00000007F8001F00000007F8000F0000000
7F8000700000007F8000700000007F8000300000007F8000300000007F8000300006007F
8000300006007F8000300006007F800030000C007F800000000C007F800000000C007F80
0000000C007F800000000C007F800000001C007F8000000018007F8000000018007F8000
000038007F8000000038007F8000000078007F8000000078007F80000000F0007F800000
01F0007F80000003F0007F80000007F0007F8000001FF000FFC00001FFF0FFFFFFFFFFFF
E0FFFFFFFFFFFFE0FFFFFFFFFFFFE0373E7DBD3D>I<FFFFFFFFFFFF80FFFFFFFFFFFF80
FFFFFFFFFFFF8000FFC00003FF80007F8000003F80007F8000001FC0007F80000007C000
7F80000003C0007F80000003C0007F80000001C0007F80000001C0007F80000001C0007F
80000000C0007F80000000C0007F80000000C0007F80000000C0007F8000000060007F80
00000060007F8000300060007F8000300060007F8000300060007F8000300000007F8000
300000007F8000300000007F8000700000007F8000700000007F8000F00000007F8001F0
0000007F8007F00000007FFFFFF00000007FFFFFF00000007FFFFFF00000007F8007F000
00007F8001F00000007F8000F00000007F8000700000007F8000700000007F8000300000
007F8000300000007F8000300000007F8000300000007F8000300000007F800030000000
7F8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000000007F8000000000007F800000000000FFE000
000000FFFFFFF0000000FFFFFFF0000000FFFFFFF0000000333E7DBD3B>I<FFFFFFC0FF
FFFFC0FFFFFFC001FFE000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F8000007F8000007F8000007F8000007F8000007F8000007F800000
7F8000007F8000007F800001FFE000FFFFFFC0FFFFFFC0FFFFFFC01A3E7DBD21>73
D<000FFFFFF8000FFFFFF8000FFFFFF8000007FF00000001FE00000001FE00000001FE00
000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE0000
0001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE000000
01FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001
FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE
00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00000001FE00
000001FE00000001FE00000001FE00000001FE003F0001FE007F8001FE00FFC001FE00FF
C001FE00FFC001FE00FFC001FE00FFC003FC00FF8003FC007F0003F8006C0007F8007000
07F00038000FE0001C001FC0000F003F800003C07E000000FFF80000003FC0000025407D
BD2E>I<FFFFFFF00000FFFFFFF00000FFFFFFF0000000FFE0000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000000007F80000000007F80000000007F
80000000007F80000000007F80000000007F80000003007F80000003007F80000003007F
80000003007F80000003007F80000007007F80000006007F80000006007F80000006007F
80000006007F8000000E007F8000000E007F8000000E007F8000001E007F8000001E007F
8000003E007F8000007E007F800000FE007F800001FC007F800007FC00FFC0003FFCFFFF
FFFFFFFCFFFFFFFFFFFCFFFFFFFFFFFC303E7DBD38>76 D<FFFF8000007FFFF8FFFFC000
007FFFF8FFFFE000007FFFF8007FE0000003FF00007FF0000000FC00006FF80000007800
006FFC00000030000067FC00000030000063FE00000030000063FF00000030000061FF00
000030000060FF800000300000607FC00000300000607FC00000300000603FE000003000
00601FF00000300000601FF00000300000600FF800003000006007FC00003000006007FC
00003000006003FE00003000006001FF00003000006001FF00003000006000FF80003000
0060007FC00030000060007FE00030000060003FE00030000060001FF00030000060001F
F80030000060000FF800300000600007FC00300000600007FE00300000600003FE003000
00600001FF00300000600000FF80300000600000FF803000006000007FC0300000600000
3FE03000006000003FE03000006000001FF03000006000000FF83000006000000FF83000
0060000007FC30000060000003FE30000060000003FE30000060000001FF300000600000
00FFB0000060000000FFF00000600000007FF00000600000003FF00000600000003FF000
00600000001FF00000600000000FF000006000000007F000006000000007F00000600000
0003F00000F000000001F00001F800000001F00007FE00000000F000FFFFF00000007000
FFFFF00000007000FFFFF000000030003D3E7DBD44>78 D<000000FFE0000000000007FF
FC00000000003FC07F8000000000FE000FE000000001F80003F000000007E00000FC0000
000FC000007E0000001F8000003F0000003F0000001F8000007E0000000FC00000FE0000
000FE00001FC00000007F00003F800000003F80003F800000003F80007F000000001FC00
07F000000001FC000FE000000000FE001FE000000000FF001FE000000000FF001FC00000
00007F003FC0000000007F803FC0000000007F803FC0000000007F807FC0000000007FC0
7F80000000003FC07F80000000003FC07F80000000003FC0FF80000000003FE0FF800000
00003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0
FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF800000
00003FE0FF80000000003FE07F80000000003FC07FC0000000007FC07FC0000000007FC0
7FC0000000007FC07FC0000000007FC03FC0000000007F803FE000000000FF801FE00000
0000FF001FE000000000FF001FE000000000FF000FF000000001FE000FF000000001FE00
07F800000003FC0003F800000003F80003FC00000007F80001FC00000007F00000FE0000
000FE000007F0000001FC000003F8000003F8000001F8000003F0000000FE00000FE0000
0007F00001FC00000001F80003F000000000FE000FE0000000003FC07F800000000007FF
FC000000000000FFE00000003B427BBF46>I<FFFFFFFFF00000FFFFFFFFFF0000FFFFFF
FFFFC00000FFC0003FF000007F800007F800007F800001FE00007F800000FF00007F8000
007F00007F8000007F80007F8000003FC0007F8000003FC0007F8000001FE0007F800000
1FE0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001F
F0007F8000001FF0007F8000001FF0007F8000001FF0007F8000001FE0007F8000001FE0
007F8000003FC0007F8000003FC0007F8000007F80007F8000007F00007F800000FE0000
7F800003FC00007F800007F800007F80003FE000007FFFFFFF8000007FFFFFFC0000007F
8000000000007F8000000000007F8000000000007F8000000000007F8000000000007F80
00000000007F8000000000007F8000000000007F8000000000007F8000000000007F8000
000000007F8000000000007F8000000000007F8000000000007F8000000000007F800000
0000007F8000000000007F8000000000007F8000000000007F8000000000007F80000000
00007F8000000000007F8000000000007F8000000000007F800000000000FFC000000000
FFFFFFC0000000FFFFFFC0000000FFFFFFC0000000343E7DBD3D>I<000000FFE0000000
000007FFFC00000000003FC07F8000000000FE000FE000000001F80003F000000007F000
01FC0000000FC000007E0000001F8000003F0000003F0000001F8000007F0000001FC000
00FE0000000FE00001FC00000007F00003FC00000007F80003F800000003F80007F80000
0003FC0007F000000001FC000FF000000001FE001FE000000000FF001FE000000000FF00
1FE000000000FF003FC0000000007F803FC0000000007F803FC0000000007F807FC00000
00007FC07FC0000000007FC07F80000000003FC07F80000000003FC0FF80000000003FE0
FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF800000
00003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0FF80000000003FE0
FF80000000003FE0FF80000000003FE07F80000000003FC07F80000000003FC07FC00000
00007FC07FC0000000007FC07FC0000000007FC03FC0000000007F803FC0000000007F80
1FE000000000FF001FE000000000FF001FE000000000FF000FF000000001FE000FF00000
0001FE0007F0001F0001FC0003F8007FC003F80003F800E07003F80001FC01C03807F000
00FE0380180FE000007E03001C0FC000003F03000C1F8000001F83000E3F0000000FC300
067E00000007F30007FC00000001FB8007F000000000FFC00FE0000000003FE07F800060
000007FFFF800060000000FFE38000600000000003C000600000000003C000E000000000
03E000E00000000003E001E00000000001F003E00000000001F807C00000000001FC0FC0
0000000001FFFFC00000000001FFFFC00000000000FFFF800000000000FFFF8000000000
007FFF0000000000007FFE0000000000003FFE0000000000001FF800000000000007E000
3B527BBF46>I<FFFFFFFFC0000000FFFFFFFFFC000000FFFFFFFFFF80000000FFC0007F
E00000007F80000FF00000007F800003FC0000007F800001FE0000007F800000FF000000
7F8000007F8000007F8000003FC000007F8000003FC000007F8000003FE000007F800000
1FE000007F8000001FF000007F8000001FF000007F8000001FF000007F8000001FF00000
7F8000001FF000007F8000001FF000007F8000001FF000007F8000001FE000007F800000
3FE000007F8000003FC000007F8000003F8000007F8000007F8000007F800000FF000000
7F800001FC0000007F800003F80000007F80000FE00000007F8000FF800000007FFFFFFC
000000007FFFFFF8000000007F8000FF000000007F80003FC00000007F80000FE0000000
7F800007F00000007F800003F80000007F800003FC0000007F800001FE0000007F800001
FE0000007F800000FF0000007F800000FF0000007F800000FF0000007F800000FF000000
7F800000FF0000007F800000FF0000007F800000FF8000007F800000FF8000007F800000
FF8000007F800000FF8000007F800000FF8000007F800000FF8000007F800000FF800000
7F800000FF8006007F800000FFC006007F8000007FC006007F8000007FC006007F800000
7FC00E00FFC000003FE00CFFFFFFC0001FE01CFFFFFFC0000FF038FFFFFFC00007F87000
0000000001FFE00000000000003F803F407DBD43>I<0007FC0018003FFF803800FFFFE0
3801FC03F87803F0007C7807C0001EF80F80000FF81F000007F83F000003F83E000001F8
7E000000F87E000000F87C00000078FC00000078FC00000078FC00000038FC00000038FC
00000038FE00000018FE00000018FF00000018FF000000187F800000007FC00000007FE0
0000003FF80000003FFF0000001FFFF000000FFFFF00000FFFFFF00007FFFFFC0001FFFF
FE0000FFFFFF80003FFFFFC00007FFFFE000007FFFE0000007FFF00000007FF80000001F
F80000000FFC00000007FC00000003FC00000001FE00000001FEC0000000FEC0000000FE
C0000000FEC00000007EC00000007EE00000007EE00000007EE00000007EE00000007CF0
0000007CF0000000FCF8000000F8FC000001F8FE000001F0FF000003F0FF800007E0FBE0
000FC0F1F8001F80F07F007F00E01FFFFC00E007FFF000C0007FC00027427BBF32>I<3F
FFFFFFFFFFFF003FFFFFFFFFFFFF003FFFFFFFFFFFFF003FE000FFC001FF003F00007F80
003F007E00007F80001F807C00007F80000F807800007F800007807000007F8000038070
00007F800003807000007F800003806000007F800001806000007F800001806000007F80
0001806000007F800001806000007F80000180C000007F800000C0C000007F800000C0C0
00007F800000C0C000007F800000C0C000007F800000C00000007F800000000000007F80
0000000000007F800000000000007F800000000000007F800000000000007F8000000000
00007F800000000000007F800000000000007F800000000000007F800000000000007F80
0000000000007F800000000000007F800000000000007F800000000000007F8000000000
00007F800000000000007F800000000000007F800000000000007F800000000000007F80
0000000000007F800000000000007F800000000000007F800000000000007F8000000000
00007F800000000000007F800000000000007F800000000000007F800000000000007F80
0000000000007F800000000000007F800000000000007F800000000000007F8000000000
00007F800000000000007F800000000000007F80000000000000FFC0000000000001FFE0
0000000007FFFFFFF800000007FFFFFFF800000007FFFFFFF800003A3E7DBD41>I<FFFF
FFC0007FFFF8FFFFFFC0007FFFF8FFFFFFC0007FFFF800FFC0000003FF00007F80000000
FC00007F800000007800007F800000003000007F800000003000007F800000003000007F
800000003000007F800000003000007F800000003000007F800000003000007F80000000
3000007F800000003000007F800000003000007F800000003000007F800000003000007F
800000003000007F800000003000007F800000003000007F800000003000007F80000000
3000007F800000003000007F800000003000007F800000003000007F800000003000007F
800000003000007F800000003000007F800000003000007F800000003000007F80000000
3000007F800000003000007F800000003000007F800000003000007F800000003000007F
800000003000007F800000003000007F800000003000007F800000003000007F80000000
3000007F800000003000007F800000003000007F800000003000007F800000003000007F
800000003000003F800000007000003FC00000006000003FC00000006000003FC0000000
E000001FC0000000C000001FE0000001C000000FE0000001C000000FF000000380000007
F000000700000003F800000F00000001FC00000E00000000FE00003C000000007F000078
000000003FC001F0000000000FF00FE00000000003FFFF800000000000FFFE0000000000
001FF00000003D407DBD44>I<FFFFFE000003FFFEFFFFFE000003FFFEFFFFFE000003FF
FE03FFC00000007FE001FF800000001F8000FF000000001F0000FF800000000E00007F80
0000000C00007F800000000C00007FC00000001C00003FC00000001800003FE000000018
00001FE00000003000001FE00000003000001FF00000007000000FF00000006000000FF0
00000060000007F8000000C0000007F8000000C0000007FC000000C0000003FC00000180
000003FC00000180000003FE00000380000001FE00000300000001FF00000300000000FF
00000600000000FF00000600000000FF80000E000000007F80000C000000007F80000C00
0000003FC00018000000003FC00018000000003FE00018000000001FE00030000000001F
E00030000000001FF00070000000000FF00060000000000FF800600000000007F800C000
00000007F800C00000000007FC01C00000000003FC01800000000003FC01800000000001
FE03000000000001FE03000000000001FF03000000000000FF06000000000000FF060000
00000000FF8E0000000000007F8C0000000000007FCC0000000000003FD8000000000000
3FD80000000000003FF80000000000001FF00000000000001FF00000000000000FE00000
000000000FE00000000000000FE000000000000007C000000000000007C0000000000000
07C0000000000000038000000000000003800000003F407EBD44>I<FFFFFE003FFFFF80
01FFFFFFFFFE003FFFFF8001FFFFFFFFFE003FFFFF8001FFFF07FFC00001FFF000003FF8
03FF0000007FC000000FE001FF0000007FC0000007C001FF0000003FC00000038000FF00
00003FC00000030000FF0000003FC00000030000FF8000001FE000000700007F8000001F
E000000600007F8000001FE000000600007FC000003FF000000600003FC000003FF00000
0C00003FC000003FF000000C00003FE000007FF800000C00001FE0000067F80000180000
1FE0000067F800001800001FE00000E7FC00001800000FF00000C3FC00003000000FF000
00C3FC00003000000FF00001C3FE000030000007F8000181FE000060000007F8000181FE
000060000007F8000181FF000060000003FC000300FF0000C0000003FC000300FF0000C0
000003FC000300FF0000C0000001FE0006007F800180000001FE0006007F800180000001
FE0006007F800180000001FF000C003FC00380000000FF000C003FC00300000000FF000C
003FC00300000000FF8018001FE007000000007F8018001FE006000000007F8018001FE0
06000000007FC030000FF006000000003FC030000FF00C000000003FC030000FF00C0000
00003FE070000FF80C000000001FE0600007F818000000001FE0600007F818000000001F
E0E00007FC18000000000FF0C00003FC30000000000FF0C00003FC30000000000FF1C000
03FE300000000007F9800001FE600000000007F9800001FE600000000007F9800001FF60
0000000003FF000000FFC00000000003FF000000FFC00000000003FF000000FFC0000000
0001FE0000007F800000000001FE0000007F800000000001FE0000007F800000000001FC
0000003F800000000000FC0000003F000000000000FC0000003F000000000000F8000000
1F000000000000780000001E000000000000780000001E000000000000700000000E0000
00000000300000000C00000058407EBD5D>I<001FF0000000FFFC000003E03F00000F00
0FC0001C0007E0001F0003F0003F8001F8003FC000FC003FC000FC003FC000FC003FC000
7E001F80007E000F00007E000000007E000000007E000000007E000000007E0000001FFE
000003FFFE00001FF87E00007F807E0001FC007E0007F0007E000FE0007E001FC0007E00
3F80007E007F80007E007F00007E007F00007E03FE00007E03FE00007E03FE00007E03FE
0000FE03FE0000FE03FE0001FE037F0001BE037F0003BE033F80071F061FC00E1F8E0FF0
3C0FFC03FFF007F8003FC003E0282A7CA82D>97 D<01F800000000FFF800000000FFF800
000000FFF80000000007F80000000003F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F80000000001F80000000001F80000000001F800
00000001F80000000001F80000000001F807F8000001F81FFF000001F8780FC00001F9E0
03F00001FB8001F80001FF0000FC0001FE00007E0001FC00003F0001FC00001F8001F800
001F8001F800001FC001F800000FC001F800000FE001F800000FE001F8000007E001F800
0007F001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F800
0007F001F8000007F001F8000007F001F8000007F001F8000007E001F800000FE001F800
000FE001F800000FE001F800000FC001F800001FC001F800001F8001FC00003F0001FE00
003F0001F600007E0001F70000FC0001E38001F80001C1C003E00001C0F81F800001803F
FE0000000007F000002C407EBE32>I<0001FF0000000FFFE000003F00F800007C001E00
01F800070003F0001F0007E0003F800FC0007F800FC0007F801F80007F801F80007F803F
00003F003F00001E007F000000007F000000007E00000000FE00000000FE00000000FE00
000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000
0000FE000000007F000000007F000000007F000000003F000000C03F800000C01F800001
C01FC00001800FC000038007E000070003F000060001F8001E0000FC003800003F01F000
000FFFC0000001FE0000222A7DA828>I<00000001F800000000FFF800000000FFF80000
0000FFF80000000007F80000000003F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F80000000001F80000000001F80000000001F80000000001F80000
000001F80000000001F8000000FF01F8000007FFC1F800001F80F1F800007C0039F80001
F8001DF80003F0000FF80007E00007F8000FC00003F8000FC00003F8001F800001F8003F
800001F8003F000001F8007F000001F8007F000001F8007F000001F8007E000001F800FE
000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE000001F800FE
000001F800FE000001F800FE000001F800FE000001F8007E000001F8007F000001F8007F
000001F8003F000001F8003F800001F8001F800003F8001F800003F8000FC00007F80007
E0000FF80003F0000DFC0001F8003DFE0000FC0071FFF0003F01E1FFF0000FFF81FFF000
01FE01F8002C407DBE32>I<0003FC0000001FFF8000007E07E00000F801F00001F000F8
0003E0007C0007C0003E000FC0003F001F80001F001F80001F803F00001F803F00000F80
7F00000F807F00000FC07E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FF
FFFFFFC0FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007E00
0000007F000000007F000000007F000000003F000000C03F800000C01F800001C00FC000
01800FC000038007E000070003F0000E0001F8001C0000FC003800003F01F000000FFFC0
000001FE0000222A7DA828>I<00001FC00000FFF00003F0380007C0FC000F81FE001F81
FE003F01FE003E01FE007E01FE007E00FC00FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC0000FFFFFF00FFFFFF00FFFFFF0000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC00
0001FE00007FFFFE007FFFFE007FFFFE001F407FBF1C>I<000000007E000003FC01FF00
000FFF078780003E07CE0F8000FC03FC0F8001F801F80F8003F000FC070003E0007C0000
07E0007E000007E0007E00000FC0003F00000FC0003F00000FC0003F00000FC0003F0000
0FC0003F00000FC0003F00000FC0003F00000FC0003F000007E0007E000007E0007E0000
03E0007C000003F000FC000001F801F8000001FC03F0000001BE07C00000038FFF000000
0303FC000000070000000000070000000000070000000000070000000000078000000000
07800000000007C00000000003E00000000003FFFFF0000001FFFFFE000001FFFFFF8000
007FFFFFE00001FFFFFFF80007C0001FF8001F800003FC003F000000FE003E0000007E00
7C0000003E007C0000003F00F80000001F00F80000001F00F80000001F00F80000001F00
F80000001F00FC0000003F007C0000003E007E0000007E003F000000FC001F800001F800
0FC00003F00003F0000FC00000FE007F0000003FFFFC00000003FFC00000293D7EA82D>
I<01F800000000FFF800000000FFF800000000FFF80000000007F80000000003F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F8000000
0001F80000000001F80000000001F80000000001F80000000001F80000000001F803FC00
0001F80FFF800001F83C0FC00001F8F003E00001F9C003F00001FB8001F80001FB0001F8
0001FF0000FC0001FE0000FC0001FE0000FC0001FC0000FC0001FC0000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0003FC0001FE
00FFFFF07FFFF8FFFFF07FFFF8FFFFF07FFFF82D3F7EBE32>I<01C00007F0000FF8000F
F8000FF8000FF8000FF80007F00001C00000000000000000000000000000000000000000
000000000000000000000000000000000001F8007FF8007FF8007FF80007F80003F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80003FC00FFFFE0FFFFE0FFFFE0133D7EBC19>I<
0000700001FC0003FE0003FE0003FE0003FE0003FE0001FC000070000000000000000000
0000000000000000000000000000000000000000000000000000000000FE003FFE003FFE
003FFE0001FE0000FE00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E00007E
00007E00007E00007E00007E00007E00007E00007E00007E00007E3C007E7E007CFF00FC
FF00FCFF00F8FF01F8FE01F07803E03E07C00FFF0001FC00175084BC1C>I<01F800FFF8
00FFF800FFF80007F80003F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F8
0001F80001F80001F80001F80001F80001F80001F80001F80001F80003FC00FFFFF0FFFF
F0FFFFF0143F7EBE19>108 D<01F803FC0001FE0000FFF80FFF8007FFC000FFF83C0FC0
1E07E000FFF8F003E07801F00007F9C003F0E001F80003FB8001F9C000FC0001FB0001F9
8000FC0001FF0000FF80007E0001FE0000FF00007E0001FE0000FF00007E0001FC0000FE
00007E0001FC0000FE00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC
00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC
00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC
00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC
00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC
00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC00007E0001F80000FC
00007E0001F80000FC00007E0003FC0001FE0000FF00FFFFF07FFFF83FFFFCFFFFF07FFF
F83FFFFCFFFFF07FFFF83FFFFC46287EA74B>I<01F803FC0000FFF80FFF8000FFF83C0F
C000FFF8F003E00007F9C003F00003FB8001F80001FB0001F80001FF0000FC0001FE0000
FC0001FE0000FC0001FC0000FC0001FC0000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000
FC0001F80000FC0001F80000FC0001F80000FC0003FC0001FE00FFFFF07FFFF8FFFFF07F
FFF8FFFFF07FFFF82D287EA732>I<0001FE0000000FFFC000003F03F000007C00F80001
F0003E0003E0001F0007C0000F8007C0000F800F800007C01F800007E01F000003E03F00
0003F03F000003F07E000001F87E000001F87E000001F87E000001F8FE000001FCFE0000
01FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001
FC7E000001F87E000001F87E000001F87F000003F83F000003F03F000003F01F800007E0
0F800007C00FC0000FC007C0000F8003E0001F0001F0003E0000FC00FC00003F03F00000
0FFFC0000001FE0000262A7DA82D>I<01F807F80000FFF81FFF0000FFF8780FC000FFF9
E003F00003FB8001F80001FF0000FC0001FE00007E0001FC00007F0001FC00003F8001F8
00001F8001F800001FC001F800001FC001F800000FE001F800000FE001F800000FE001F8
00000FF001F8000007F001F8000007F001F8000007F001F8000007F001F8000007F001F8
000007F001F8000007F001F8000007F001F8000007F001F800000FE001F800000FE001F8
00000FE001F800000FE001F800001FC001F800001FC001F800003F8001FC00003F0001FE
00007F0001FE0000FE0001FF0001FC0001FB8003F80001F9C007E00001F8F81F800001F8
3FFE000001F807F0000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000001F80000000001F80000000001F80000000001F8
0000000001F80000000001F80000000003FC00000000FFFFF0000000FFFFF0000000FFFF
F00000002C3A7EA732>I<0000FF000C000007FFC01C00001F80F01C00007E00381C0000
FC001C3C0003F8000E3C0007F000077C0007E000037C000FC00003FC001FC00001FC003F
800001FC003F800000FC007F000000FC007F000000FC007F000000FC007F000000FC00FE
000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE000000FC00FE
000000FC00FE000000FC00FE000000FC00FF000000FC007F000000FC007F000000FC007F
000000FC003F800000FC003F800001FC001FC00001FC000FC00003FC000FE00003FC0007
E00007FC0003F0000EFC0001F8001CFC00007E0078FC00003F01E0FC00000FFFC0FC0000
01FE00FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC0000
000000FC0000000000FC0000000001FE000000007FFFF80000007FFFF80000007FFFF82D
3A7DA730>I<03F00FC0FFF03FF0FFF0F0F8FFF1C3FC07F183FC03F383FC01F703FC01F6
03FC01F601F801FE006001FC000001FC000001FC000001FC000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8
000001F8000003FC0000FFFFF800FFFFF800FFFFF8001E287EA723>I<007FC06003FFF8
E007C03DE01E000FE03C0003E0780001E0780001E0700000E0F00000E0F0000060F00000
60F8000060F8000060FC000060FF0000007FC000007FFE00003FFFE0001FFFFC0007FFFE
0003FFFF80007FFFC00007FFE000003FE000000FF0C00003F0C00001F8C00000F8E00000
F8E0000078E0000078F0000078F0000078F8000078F80000F0FC0000F0FC0001E0FE0001
C0F7800780F1E01F00E0FFFC00C01FE0001D2A7DA824>I<001800000018000000180000
001800000018000000180000003800000038000000380000003800000078000000780000
00F8000000F8000001F8000003F8000007F800001FFFFFC0FFFFFFC0FFFFFFC001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
01F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80000
01F8000001F8006001F8006001F8006001F8006001F8006001F8006001F8006001F80060
01F8006000FC00E000FC00C000FC00C0007E01C0003F0380001F87000007FE000001F800
1B397EB723>I<01F80000FC00FFF8007FFC00FFF8007FFC00FFF8007FFC0007F80003FC
0003F80001FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC0001F80000FC
0001F80001FC0001F80001FC0001F80001FC0001F80003FC0000F80003FC0000FC0007FC
0000FC000EFE00007C001CFF00003E0038FFF8001F80F0FFF80007FFE0FFF80000FF00FC
002D297EA732>I<FFFFC007FFE0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F80000
7C0003F80000780001F80000700001FC0000700000FC0000600000FC00006000007E0000
C000007E0000C000007F0001C000003F00018000003F00018000001F80030000001F8003
0000001FC0070000000FC0060000000FC00600000007E00C00000007E00C00000007F01C
00000003F01800000003F01800000001F83000000001F83000000001FC7000000000FC60
00000000FC60000000007EC0000000007EC0000000007FC0000000003F80000000003F80
000000001F00000000001F00000000001F00000000000E00000000000E0000002B287EA6
30>I<FFFF87FFFC03FFF0FFFF87FFFC03FFF0FFFF87FFFC03FFF00FFC003FE0007FC007
F0001FC0003F0003F0000F80001E0003F0000FC0001C0001F8000FC0001C0001F80007C0
00180001F80007E000180000FC000FE000300000FC000FE000300000FE000FF000700000
7E0019F0006000007E0019F0006000007F0019F800E000003F0030F800C000003F0030F8
00C000003F8030FC01C000001F80607C018000001F80607C018000000FC0E07E03000000
0FC0C03E030000000FC0C03E0300000007E1C03F0600000007E1801F0600000007E1801F
8600000003F3801F8C00000003F3000F8C00000003F3000FCC00000001FE0007D8000000
01FE0007D800000001FE0007F800000000FC0003F000000000FC0003F000000000FC0003
F000000000780001E000000000780001E000000000780001E000000000300000C000003C
287EA641>I<7FFFC00FFFE07FFFC00FFFE07FFFC00FFFE003FF0007FE0000FF0003F800
007F0003E000003F0003C000003F80038000001FC0070000000FC00E00000007E00C0000
0007F01800000003F83800000001F87000000000FCE000000000FEC0000000007F800000
00003F80000000001F80000000000FC0000000000FE0000000001FE0000000003BF00000
000071F800000000E1FC00000000C0FE00000001807E00000003803F00000007003F8000
000E001FC000000C000FC000001C0007E00000380007F00000F80003F80001F80003FC00
0FFC0007FE00FFFF001FFFF8FFFF001FFFF8FFFF001FFFF82D277FA630>I<FFFFC007FF
E0FFFFC007FFE0FFFFC007FFE007FC0001FF0003F800007C0001F80000780001F8000070
0001FC0000700000FC0000600000FE00006000007E0000C000007E0000C000003F000180
00003F00018000003F80038000001F80030000001F80030000000FC0060000000FC00600
00000FE00E00000007E00C00000007E00C00000003F01800000003F01800000003F83800
000001F83000000001FC3000000000FC6000000000FC60000000007EC0000000007EC000
0000007FC0000000003F80000000003F80000000001F00000000001F00000000001F0000
0000000E00000000000E00000000000C00000000000C00000000001C0000000000180000
000000180000000000300000000000300000000000600000003800600000007C00E00000
00FE00C0000000FE01C0000000FE0180000000FE03000000007C0700000000700E000000
00383C000000001FF80000000007E0000000002B3A7EA630>I<1FFFFFFF801FFFFFFF80
1FE0007F801F00007F001E0000FE001C0001FC001C0003FC00180003F800380007F00038
000FE00030001FE00030001FC00030003F800030007F000030007F00000000FE00000001
FC00000003FC00000003F800000007F00000000FE00000001FE00000001FC00180003F80
0180007F000180007F00018000FE00018001FC00018003FC00038003F800038007F00003
000FE00003001FE00007001FC0000F003F80000F007F00003F00FF0001FF00FFFFFFFF00
FFFFFFFF0021277EA628>I<001C000000003E000000003F000000003F800000003FC000
00001FE00000000FF000000003F800000000FC000000007E000000001F00000000078000
00000380000000008000000000000000000000000000000000001FF0000000FFFC000003
E03F00000F000FC0001C0007E0001F0003F0003F8001F8003FC000FC003FC000FC003FC0
00FC003FC0007E001F80007E000F00007E000000007E000000007E000000007E00000000
7E0000001FFE000003FFFE00001FF87E00007F807E0001FC007E0007F0007E000FE0007E
001FC0007E003F80007E007F80007E007F00007E007F00007E03FE00007E03FE00007E03
FE00007E03FE0000FE03FE0000FE03FE0001FE037F0001BE037F0003BE033F80071F061F
C00E1F8E0FF03C0FFC03FFF007F8003FC003E0283B7CB92D>224
D<000E000000001F000000001F800000001FC00000001FE00000000FF000000007F80000
0001FC000000007E000000003F000000000F8000000003C000000001C000000000400000
00000000000000000000000000000003FC0000001FFF8000007E07E00000F801F00001F0
00F80003E0007C0007C0003E000FC0003F001F80001F001F80001F803F00001F803F0000
0F807F00000F807F00000FC07E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFF
C0FFFFFFFFC0FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
7E000000007F000000007F000000007F000000003F000000C03F800000C01F800001C00F
C00001800FC000038007E000070003F0000E0001F8001C0000FC003800003F01F000000F
FFC0000001FE0000223B7DB928>232 D<00000E000000001F000000003F000000007F00
000000FF00000001FE00000003FC00000007F00000000FC00000001F800000003E000000
0078000000007000000000400000000000000000000000000000000000000003FC000000
1FFF8000007E07E00000F801F00001F000F80003E0007C0007C0003E000FC0003F001F80
001F001F80001F803F00001F803F00000F807F00000F807F00000FC07E00000FC07E0000
0FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0FE00000000FE00000000FE000000
00FE00000000FE00000000FE000000007E000000007F000000007F000000007F00000000
3F000000C03F800000C01F800001C00FC00001800FC000038007E000070003F0000E0001
F8001C0000FC003800003F01F000000FFFC0000001FE0000223B7DB928>I<0000C00000
0001E000000003F000000007F80000000F3C0000001E1E0000001C0E0000003807000000
7003800000E001C00001C000E00003800070000700003800020000100000000000000000
00000000000000000003FC0000001FFF8000007E07E00000F801F00001F000F80003E000
7C0007C0003E000FC0003F001F80001F001F80001F803F00001F803F00000F807F00000F
807F00000FC07E00000FC07E00000FC0FE00000FC0FE00000FC0FFFFFFFFC0FFFFFFFFC0
FE00000000FE00000000FE00000000FE00000000FE00000000FE000000007E000000007F
000000007F000000007F000000003F000000C03F800000C01F800001C00FC00001800FC0
00038007E000070003F0000E0001F8001C0000FC003800003F01F000000FFFC0000001FE
0000223B7DB928>I<00300000780000FC0001FE0003CF000787800703800E01C01C00E0
380070700038E0001CC0000C80000400000000000000000000000000FC003FFC003FFC00
3FFC0003FC0001FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC00
00FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC00
00FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0001FE007FFFF07FFFF0
7FFFF0163A7FB919>238 D<000030000000007800000000FC00000001FE00000003CF00
0000078780000007038000000E01C000001C00E0000038007000007000380000E0001C00
01C0000E0000800004000000000000000000000000000000000001FE0000000FFFC00000
3F03F000007C00F80001F0003E0003E0001F0007C0000F8007C0000F800F800007C01F80
0007E01F000003E03F000003F03F000003F07E000001F87E000001F87E000001F87E0000
01F8FE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001FCFE000001
FCFE000001FCFE000001FC7E000001F87E000001F87E000001F87F000003F83F000003F0
3F000003F01F800007E00F800007C00FC0000FC007C0000F8003E0001F0001F0003E0000
FC00FC00003F03F000000FFFC0000001FE0000263B7DB92D>244
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl eccc1095 10.95 19
/Fl 19 233 df<1C007F00FF80FF80FFC0FFC0FFC07FC01CC000C000C000C000C000C001
C00180018003800300070006000E000C001C003800700060000A1B76BE1D>39
D<0003FE000600001FFFC00E00007FFFF00E0001FE01FC1E0003F0001F1E0007E0000FBE
000FC00003FE001F800001FE003F000000FE003E0000007E007E0000007E007E0000003E
007C0000001E00FC0000001E00FC0000001E00FC0000000E00FC0000000E00FC0000000E
00FE0000000600FE0000000600FF0000000600FF00000006007F80000000007FC0000000
007FF0000000003FFC000000003FFF800000001FFFFC0000000FFFFFC0000007FFFFFC00
0003FFFFFF000001FFFFFFC000007FFFFFE000001FFFFFF0000003FFFFF80000003FFFFC
00000003FFFE000000001FFE0000000007FF0000000001FF8000000000FF80000000007F
80000000003FC0000000003FC0C00000001FC0C00000001FC0C00000001FC0C00000000F
C0C00000000FC0E00000000FC0E00000000FC0E00000000FC0F00000000F80F00000001F
80F80000001F80F80000001F00FC0000003F00FE0000003E00FF0000007C00FF800000FC
00F9E00001F800F0FC0003F000F07FC01FC000E01FFFFF8000E003FFFE0000C0003FF000
002A427ABF37>83 D<000000C0000000000001E0000000000001E0000000000001E00000
00000003F0000000000003F0000000000007F8000000000007F8000000000007F8000000
00000CFC00000000000CFC00000000001CFE0000000000187E0000000000187E00000000
00303F0000000000303F0000000000703F8000000000601F8000000000601F8000000000
C00FC000000000C00FC000000001C00FE0000000018007E0000000018007E00000000300
03F0000000030003F0000000070003F8000000060001F8000000060001F80000000C0000
FC0000000FFFFFFC0000001FFFFFFE0000001800007E0000001800007E0000003000003F
0000003000003F0000007000003F8000006000001F8000006000001F800000E000000FC0
0000C000000FC00001C000000FE00001C0000007E00003C0000007F00007E0000007F000
1FF000000FF800FFF80000FFFFC0FFF80000FFFFC032307DAF38>97
D<00000FF8003000007FFF00700003F807C070000FC000F0F0001F000039F0007E00001F
F000FC00000FF001F8000007F003F0000003F007E0000001F00FE0000001F00FC0000000
F01F80000000F01F80000000703F80000000703F00000000707F00000000307F00000000
307F0000000030FE0000000000FE0000000000FE0000000000FE0000000000FE00000000
00FE0000000000FE0000000000FE0000000000FE0000000000FE0000000000FE00000000
007F00000000007F00000000307F00000000303F00000000303F80000000301F80000000
701F80000000600FC0000000600FE0000000E007E0000000C003F0000001C001F8000003
8000FC00000700007E00000E00001F00001C00000FC00078000003F803E00000007FFF80
0000000FFC00002C317BAF36>99 D<FFFFFFF80000FFFFFFFF800007F8001FE00003F000
03F00003F00000FC0003F000007E0003F000001F0003F000000F8003F000000FC003F000
0007E003F0000003E003F0000003F003F0000001F003F0000001F803F0000001F803F000
0001FC03F0000000FC03F0000000FC03F0000000FC03F0000000FE03F0000000FE03F000
0000FE03F0000000FE03F0000000FE03F0000000FE03F0000000FE03F0000000FE03F000
0000FE03F0000000FE03F0000000FC03F0000000FC03F0000000FC03F0000001F803F000
0001F803F0000001F803F0000003F003F0000003E003F0000007E003F0000007C003F000
000F8003F000001F0003F000003E0003F00000FC0003F00003F80007F8001FE000FFFFFF
FF8000FFFFFFFC00002F2F7BAE39>I<FFFFFFFFFE00FFFFFFFFFE0007F80001FE0003F0
00007E0003F000001F0003F000000F0003F00000070003F00000070003F00000030003F0
0000030003F00000030003F00000030003F00000018003F00000018003F00030018003F0
0030018003F00030000003F00030000003F00030000003F00070000003F000F0000003F0
01F0000003FFFFF0000003FFFFF0000003F001F0000003F000F0000003F00070000003F0
0030000003F00030000003F00030006003F00030006003F00030006003F0000000C003F0
000000C003F0000000C003F0000000C003F0000001C003F0000001C003F00000018003F0
0000038003F00000038003F00000078003F000000F8003F000003F8007F80001FF00FFFF
FFFFFF00FFFFFFFFFF002B2F7BAE33>I<FFFFC0FFFFC007F80003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003
F00003F00007F800FFFFC0FFFFC0122F7BAE1C>105 D<FFFFF00000FFFFF0000007FC00
000003F000000003F000000003F000000003F000000003F000000003F000000003F00000
0003F000000003F000000003F000000003F000000003F000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000C03F000000C03F0
00000C03F000000C03F000001C03F000001803F000001803F000001803F000003803F000
003803F000007803F000007803F00000F803F00001F803F00007F007F8003FF0FFFFFFFF
F0FFFFFFFFF0262F7BAE2F>108 D<FFF000000007FF80FFF80000000FFF8007F8000000
0FF00003F80000000FE000037C0000001BE000037C0000001BE000033E00000033E00003
3E00000033E000033E00000033E000031F00000063E000031F00000063E000030F800000
C3E000030F800000C3E000030F800000C3E0000307C0000183E0000307C0000183E00003
03E0000303E0000303E0000303E0000303E0000303E0000301F0000603E0000301F00006
03E0000300F8000C03E0000300F8000C03E00003007C001803E00003007C001803E00003
007C001803E00003003E003003E00003003E003003E00003001F006003E00003001F0060
03E00003001F006003E00003000F80C003E00003000F80C003E000030007C18003E00003
0007C18003E000030007C18003E000030003E30003E000030003E30003E000030001F600
03E000030001F60003E000030001F60003E000030000FC0003E000078000FC0003E0000F
C000780003E0001FE000780007F000FFFC007800FFFF80FFFC003000FFFF80392F7AAE45
>I<FFF00000FFFCFFF80000FFFC07F800001FE003FC00000FC003FE00000780037F0000
0300033F00000300033F80000300031FC0000300030FC0000300030FE00003000307F000
03000303F80003000301F80003000301FC0003000300FE00030003007E00030003007F00
030003003F80030003001FC0030003000FC0030003000FE00300030007F00300030003F0
0300030003F80300030001FC0300030000FE0300030000FE03000300007F03000300003F
83000300001F83000300001FC3000300000FE30003000007F30003000007F30003000003
FB0003000001FF0003000000FF0003000000FF00030000007F00030000003F0003000000
3F00078000001F000FC000000F001FE000000700FFFC00000700FFFC000003002E2F7BAE
38>I<00001FF800000000FFFF00000007F00FE000000F8001F000003F0000FC00007C00
003E0000F800001F0001F000000F8003E0000007C007E0000007E00FC0000003F00FC000
0003F01F80000001F81F80000001F83F00000000FC3F00000000FC7F00000000FE7F0000
0000FE7E000000007E7E000000007EFE000000007FFE000000007FFE000000007FFE0000
00007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE0000
00007F7F00000000FE7F00000000FE7F00000000FE3F00000000FC3F80000001FC3F8000
0001FC1F80000001F80FC0000003F00FC0000003F007E0000007E003F000000FC001F800
001F8000F800001F00007E00007E00003F0000FC00000FC003F0000007F00FE0000000FF
FF000000001FF8000030317BAF3A>I<FFFFFFF80000FFFFFFFF000007F8001FC00003F0
0003F00003F00001F80003F00000FC0003F000007E0003F000007F0003F000003F0003F0
00003F0003F000003F8003F000003F8003F000003F8003F000003F8003F000003F8003F0
00003F0003F000003F0003F000007F0003F000007E0003F00000FC0003F00001F80003F0
0003F00003F0001FC00003FFFFFF000003FFFFF8000003F00000000003F00000000003F0
0000000003F00000000003F00000000003F00000000003F00000000003F00000000003F0
0000000003F00000000003F00000000003F00000000003F00000000003F00000000003F0
0000000003F00000000003F00000000003F00000000003F00000000007F800000000FFFF
C0000000FFFFC0000000292F7BAE33>I<00001FF800000000FFFF00000007F00FE00000
0FC003F000003F0000FC00007C00003E0000F800001F0001F000000F8003F000000FC007
E0000007E00FC0000003F00FC0000003F01F80000001F81F80000001F83F00000000FC3F
00000000FC7F00000000FE7F00000000FE7E000000007E7E000000007EFE000000007FFE
000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE000000007FFE
000000007FFE000000007FFE000000007F7E000000007E7F00000000FE7F00000000FE3F
00000000FC3F00000000FC3F80000001FC1F80000001F80FC0000003F00FC003C003F007
E00FF007E003E01C3C07C001F0380C0F8000F8300E1F00007C30073E00003F3007FC0000
0FF803F0000007FC0FE0000000FFFF800300001FFBC00300000001C00300000001E00700
000001E00700000001F00F00000001F83E00000000FFFE00000000FFFE000000007FFC00
0000007FFC000000003FF8000000001FF00000000007C0303D7BAF3A>I<FFFFFFE00000
00FFFFFFFC00000007F8007F80000003F0000FC0000003F00003F0000003F00001F80000
03F00000FC000003F00000FE000003F000007E000003F000007F000003F000007F000003
F000007F000003F000007F000003F000007F000003F000007F000003F000007E000003F0
0000FE000003F00000FC000003F00001F8000003F00003F0000003F0000FC0000003F000
7F80000003FFFFFC00000003FFFFF800000003F000FE00000003F0003F00000003F0001F
80000003F0000FC0000003F00007E0000003F00007E0000003F00003F0000003F00003F0
000003F00003F0000003F00003F0000003F00003F0000003F00003F8000003F00003F800
0003F00003F8000003F00003F8000003F00003F8018003F00003FC018003F00003FC0180
03F00001FC038003F00001FC030007F80000FE0700FFFFC0007F0E00FFFFC0001FFC0000
00000003F00031307BAE37>I<003FC00C00FFF81C03E03E1C0F0007BC1E0001FC3C0000
FC3800007C7800007C7000003CF000003CF000001CF000001CF000001CF800000CF80000
0CFC00000CFE0000007F0000007F8000003FF800003FFF80001FFFF8000FFFFF0003FFFF
C000FFFFE0003FFFF00001FFF800001FFC000003FC000000FE0000007E0000003F000000
1FC000001FC000001FC000000FC000000FE000000FE000000FE000000EF000001EF00000
1EF800003CFC000038FF000070F38001E0E1F807C0E07FFF00C007FC0020317BAF2A>I<
7FFFFFFFFFF87FFFFFFFFFF87F001FE003F87C000FC000F878000FC0007870000FC00038
60000FC0001860000FC00018E0000FC0001CE0000FC0001CC0000FC0000CC0000FC0000C
C0000FC0000CC0000FC0000CC0000FC0000CC0000FC0000C00000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000000FC0000000000FC0000000000FC0000000000FC0000000000FC00000
00000FC0000000001FE0000000003FF00000001FFFFFE000001FFFFFE0002E2F7CAE36>
I<7FFFC0007FFE007FFFC0007FFE0007FF00003FF00001FF00001FC00000FF00001F0000
007F00001E0000007F00001C0000003F8000380000001FC000700000000FE00060000000
0FE000E000000007F001C000000003F8018000000001FC030000000001FC070000000000
FE0E00000000007F0C00000000003F1800000000003FB800000000001FF000000000000F
E0000000000007E0000000000007F0000000000003F8000000000007FC000000000006FC
00000000000CFE00000000001C7F0000000000383F8000000000301F8000000000601FC0
00000000E00FE000000001C007F0000000018007F0000000030003F8000000070001FC00
00000E0000FE0000000C0000FE0000001C00007F0000003800003F8000007000001FC000
00F000001FC00001F000001FE00007F000001FF0001FF800001FFC00FFFC00007FFFC0FF
FC00007FFFC0322F7DAE38>120 D<FFFF800001FFF0FFFF800001FFF00FFE0000007F80
03FC0000007E0001FC0000007C0001FE000000780000FE0000007000007F000000E00000
3F800000C000003F800001C000001FC000018000000FE000030000000FE0000700000007
F0000E00000003F8000C00000003F8001C00000001FC003800000000FE003000000000FE
0060000000007F00E0000000003F80C0000000003F8180000000001FC380000000000FE3
00000000000FE6000000000007FE000000000003FC000000000001F8000000000001F800
0000000001F8000000000001F8000000000001F8000000000001F8000000000001F80000
00000001F8000000000001F8000000000001F8000000000001F8000000000001F8000000
000001F8000000000001F8000000000001F8000000000001F8000000000001F800000000
0003FC00000000007FFFE0000000007FFFE00000342F7EAE38>I<00700000000000FC00
00000000FF0000000000FF8000000000FFE0000000007FF8000000000FFE0000000001FF
80000000001FC00000000003E00000000000600000000000000000000000000000000000
000000000000000000000000000000FFFFFFFFFE00FFFFFFFFFE0007F80001FE0003F000
007E0003F000001F0003F000000F0003F00000070003F00000070003F00000030003F000
00030003F00000030003F00000030003F00000018003F00000018003F00030018003F000
30018003F00030000003F00030000003F00030000003F00070000003F000F0000003F001
F0000003FFFFF0000003FFFFF0000003F001F0000003F000F0000003F00070000003F000
30000003F00030000003F00030006003F00030006003F00030006003F0000000C003F000
0000C003F0000000C003F0000000C003F0000001C003F0000001C003F00000018003F000
00038003F00000038003F00000078003F000000F8003F000003F8007F80001FF00FFFFFF
FFFF00FFFFFFFFFF002B3F7BBE33>232 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm ecbx1095 10.95 12
/Fm 12 121 df<0F803FE07FF07FF8FFFCFFFCFFFCFFFEFFFEFFFE7FFE7FFE3FFE0FCE00
0E000E001E001C001C003C00380078007800F000F001E003C007C00F801F001E000C000F
2079BE1D>39 D<00000F000000001F000000007F00000001FF0000000FFF000001FFFF00
00FFFFFF0000FFFFFF0000FFF7FF0000FE07FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF000000
07FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007
FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF
00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00
000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF0000
0007FF00000007FF00000007FF00000007FF00000007FF00000007FF00000007FF00003F
FFFFFFF83FFFFFFFF83FFFFFFFF83FFFFFFFF8253C79BB34>49 D<07801FE03FF07FF8FF
FCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE007800000000000000000000000000000000000
0000000000000007801FE03FF07FF8FFFCFFFCFFFCFFFCFFFCFFFC7FF83FF01FE007800E
2879A71D>58 D<FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF800
7FFC0000FFFC007FFC00001FFC007FFC000007FC007FFC000001FC007FFC000000FC007F
FC000000FC007FFC0000007C007FFC0000007E007FFC0000003E007FFC0000003E007FFC
0000001E007FFC0000001E007FFC0000001E007FFC0000001E007FFC001E001F007FFC00
1E000F007FFC001E000F007FFC001E000F007FFC001E0000007FFC001E0000007FFC003E
0000007FFC003E0000007FFC007E0000007FFC00FE0000007FFC03FE0000007FFFFFFE00
00007FFFFFFE0000007FFFFFFE0000007FFFFFFE0000007FFC03FE0000007FFC00FE0000
007FFC007E0000007FFC003E0000007FFC003E0000007FFC001E0000007FFC001E000000
7FFC001E0000007FFC001E0000007FFC001E0000007FFC001E0000007FFC00000000007F
FC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC
00000000007FFC00000000007FFC00000000007FFC00000000007FFC00000000007FFC00
000000007FFC00000000007FFC00000000FFFFFFFFC00000FFFFFFFFC00000FFFFFFFFC0
0000FFFFFFFFC00000383E7CBD41>70 D<00007FF0000003FFFF00001FFFFFC0007FE01F
E000FF8003F001FF000FF803FE000FFC07FE001FFC0FFC001FFC1FFC001FFC1FF8001FFC
3FF8001FFC3FF8000FF87FF80007F07FF00001C07FF0000000FFF0000000FFF0000000FF
F0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0000000FFF0
000000FFF00000007FF00000007FF00000007FF80000007FF80000003FF800001E3FFC00
001E1FFC00003E0FFC00003C0FFE00007C07FF0000F803FF8001F000FFC003E0007FF00F
C0001FFFFF000007FFFC0000007FE000272B7DA92E>99 D<0000000007F80000000007FF
F80000000007FFF80000000007FFF80000000007FFF800000000003FF800000000001FF8
00000000001FF800000000001FF800000000001FF800000000001FF800000000001FF800
000000001FF800000000001FF800000000001FF800000000001FF800000000001FF80000
0000001FF800000000001FF800000000001FF800000000001FF800000000001FF8000000
7FE01FF8000003FFFC1FF800001FFFFF1FF800007FF00FDFF80000FFC003FFF80003FF00
00FFF80007FE00007FF8000FFE00003FF8000FFC00001FF8001FFC00001FF8003FF80000
1FF8003FF800001FF8007FF800001FF8007FF000001FF8007FF000001FF8007FF000001F
F800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF8
00FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800FFF000001FF800
7FF000001FF8007FF000001FF8007FF000001FF8007FF800001FF8003FF800001FF8003F
F800001FF8001FF800001FF8001FFC00003FF8000FFC00007FF80007FE0000FFF80003FF
0001FFFC0001FF8007FFFFE0007FE01F9FFFE0001FFFFE1FFFE00007FFF81FFFE000007F
C01FE00033407DBE3A>I<0000FFE0000007FFFC00003FFFFF00007FE0FF8001FF803FC0
03FF001FE007FE000FF00FFC000FF80FFC0007FC1FF80007FC3FF80003FE3FF80003FE3F
F80003FE7FF00003FE7FF00003FF7FF00003FFFFF00001FFFFF00001FFFFF00001FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000FFF0000000FFF0000000FFF0000000FFF000
00007FF00000007FF00000007FF00000003FF80000003FF800000F1FF800000F1FFC0000
1F0FFC00001E07FE00003E03FE00007C01FF0000F800FFC003F0007FF01FE0001FFFFFC0
0007FFFE0000007FF000282B7DA92F>I<00FF0000000000FFFF0000000000FFFF000000
0000FFFF0000000000FFFF000000000007FF000000000003FF000000000003FF00000000
0003FF000000000003FF000000000003FF000000000003FF000000000003FF0000000000
03FF000000000003FF000000000003FF000000000003FF000000000003FF000000000003
FF000000000003FF000000000003FF000000000003FF000000000003FF003FF0000003FF
00FFFE000003FF03FFFF800003FF0FC0FFC00003FF1E007FE00003FF3C003FF00003FF78
003FF00003FFF0003FF00003FFE0001FF80003FFC0001FF80003FFC0001FF80003FF8000
1FF80003FF80001FF80003FF80001FF80003FF00001FF80003FF00001FF80003FF00001F
F80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF8
0003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800
03FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003
FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF80003FF00001FF800FFFF
FC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0FFFFFC07FFFFE0333F7CBE3A>104
D<01F80003FC0007FE000FFF001FFF801FFF801FFF801FFF801FFF801FFF800FFF0007FE
0003FC0001F80000000000000000000000000000000000000000000000000000000000FF
00FFFF00FFFF00FFFF00FFFF0007FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF0003FF
00FFFFF8FFFFF8FFFFF8FFFFF815407CBF1D>I<01FE01FC00FFFE07FF80FFFE0FFFE0FF
FE3F1FF0FFFE3C1FF007FE783FF803FEF03FF803FEE03FF803FFE03FF803FFC03FF803FF
C01FF003FF800FE003FF80038003FF80000003FF80000003FF00000003FF00000003FF00
000003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF0000
0003FF00000003FF00000003FF00000003FF00000003FF00000003FF00000003FF000000
03FF00000003FF00000003FF00000003FF00000003FF000000FFFFFF0000FFFFFF0000FF
FFFF0000FFFFFF000025297DA82B>114 D<001FF80E0001FFFF3E0007FFFFFE000FE007
FE001F8001FE003F0000FE007E00007E007C00003E00FC00003E00FC00001E00FC00001E
00FE00001E00FF00001E00FF80000000FFE0000000FFFF0000007FFFFC00007FFFFF8000
3FFFFFE0001FFFFFF8000FFFFFFC0003FFFFFE0000FFFFFF00003FFFFF000003FFFF8000
000FFF80000001FFC0F000007FC0F000003FC0F800001FC0F800001FC0F800000FC0FC00
000FC0FC00000FC0FE00000F80FE00001F80FF00001F00FF80003F00FFE0007E00FFF803
FC00FCFFFFF000F03FFFC000E007FE0000222B7DA929>I<FFFFF801FFFF00FFFFF801FF
FF00FFFFF801FFFF00FFFFF801FFFF0001FFC0003FC00000FFC0003F0000007FE0007E00
00007FF0007C0000003FF800F80000001FFC01F00000000FFE03E000000007FF07C00000
0003FF0F8000000001FF9F8000000001FFFF0000000000FFFE00000000007FFC00000000
003FF800000000001FF800000000000FFC00000000000FFE00000000000FFF0000000000
1FFF80000000003FFFC0000000007EFFC0000000007C7FE000000000F87FF000000001F0
3FF800000003E01FFC00000007C00FFE0000000F8007FE0000001F8003FF0000003F0003
FF8000007E0001FFC000007C0000FFE00001FC00007FF000FFFF8003FFFFC0FFFF8003FF
FFC0FFFF8003FFFFC0FFFF8003FFFFC032287EA737>120 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref)/Author ()/Keywords () /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136 -396
a
SDict begin H.S end
 -136 -396 a -136 -396 a
SDict begin H.R end
 -136 -396 a -136 -396 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -136
-396 a 0 TeXcolorgray -128 -297 a Fm(Fic)m(he)36 b(d'exercices)f(:)46
b Fl(Syst\350mes)34 b(d'exploit)-8 b(a)g(tion)1632 b
Fk(Niv)m(eau)31 b(:)40 b Fl(nsi)35 b Fm(1)4083 -330 y
Fj(e)p -128 -260 4252 4 v Black 0 TeXcolorgray -128 -180
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -128 -180 a -128 -180 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -180 a -128 -180 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -128
-180 a -128 -180 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -180 a -128 -180 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -128 -180
a -128 -180 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -128 -180 a -128 -180 a
SDict begin H.S end
 -128 -180 a -128
-180 a
SDict begin 13.6 H.A end
 -128 -180 a -128 -180 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -128 -180 a -128 -180
a
SDict begin H.S end
 -128 -180 a -128 -180 a
SDict begin 13.6 H.A end
 -128 -180 a -128 -180 a
SDict begin [/View [/XYZ H.V]/Dest (Exercise.1) cvn /DEST pdfmark end
 -128
-180 a 91 x Fi(q)c Fh(Exercice)g(1)f Fk(:)h Fl(qcm)3285
b Fg(\202)-128 -76 y
SDict begin H.S end
 -128 -76 a -128 -76 a
SDict begin 13.6 H.A end
 -128 -76 a
-128 -76 a
SDict begin [/View [/XYZ H.V]/Dest (Question.1.1) cvn /DEST pdfmark
end
 -128 -76 a 0 TeXcolorgray 13 47 a Fk(1.)p
0 TeXcolorgray 61 w(Une)30 b(et)g(une)h(seule)g(de)f(ces)g
(a\036rmations)i(est)e(fausse.)g(Laquelle)15 b(?)-128
80 y
SDict begin H.S end
 -128 80 a -128 80 a
SDict begin 13.6 H.A end
 -128 80 a -128 80 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 -128 80
a 0 TeXcolorgray 233 191 a Fk(a\))p 0 TeXcolorgray 31
w(Un)30 b(syst\350me)g(d'exploitation)i(libre)f(est)f(la)g(plupart)i
(du)e(temps)h(gratuit)-128 229 y
SDict begin H.S end
 -128 229 a -128 229
a
SDict begin 13.6 H.A end
 -128 229 a -128 229 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 -128 229 a 0 TeXcolorgray 228
334 a Fk(b\))p 0 TeXcolorgray 31 w(Je)f(p)s(eux)g(con)m(tribuer)j(\340)
d(un)h(syst\350me)f(d'exploitation)i(libre)-128 372 y
SDict begin H.S end

-128 372 a -128 372 a
SDict begin 13.6 H.A end
 -128 372 a -128 372 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 -128 372
a 0 TeXcolorgray 238 478 a Fk(c\))p 0 TeXcolorgray 31
w(Il)e(est)g(in)m(terdit)i(d'\351tudier)f(un)g(syst\350me)f
(d'exploitation)i(propri\351taire)-128 516 y
SDict begin H.S end
 -128 516
a -128 516 a
SDict begin 13.6 H.A end
 -128 516 a -128 516 a
SDict begin [/View [/XYZ H.V]/Dest (Item.4) cvn /DEST pdfmark end
 -128 516 a 0 TeXcolorgray
228 621 a Fk(d\))p 0 TeXcolorgray 31 w(Un)e(syst\350me)g
(d'exploitation)i(propri\351taire)g(est)e(plus)h(s\351curis\351)-128
675 y
SDict begin H.S end
 -128 675 a -128 675 a
SDict begin 13.6 H.A end
 -128 675 a -128 675 a
SDict begin [/View [/XYZ H.V]/Dest (Item.5) cvn /DEST pdfmark end
 -128
675 a 0 TeXcolorgray 13 788 a Fk(2.)p 0 TeXcolorgray
61 w(Quelle)g(est)f(l'e\033et)h(de)f(la)h(commande)h
Ff(cd)47 b(..)15 b Fk(?)-128 821 y
SDict begin H.S end
 -128 821 a -128 821
a
SDict begin 13.6 H.A end
 -128 821 a -128 821 a
SDict begin [/View [/XYZ H.V]/Dest (Item.6) cvn /DEST pdfmark end
 -128 821 a 0 TeXcolorgray 233
931 a Fk(a\))p 0 TeXcolorgray 31 w(Changer)31 b(le)g(r\351p)s(ertoire)g
(couran)m(t)h(v)m(ers)e(le)h(r\351p)s(ertoire)g(sup)s(\351rieur)-128
969 y
SDict begin H.S end
 -128 969 a -128 969 a
SDict begin 13.6 H.A end
 -128 969 a -128 969 a
SDict begin [/View [/XYZ H.V]/Dest (Item.7) cvn /DEST pdfmark end
 -128
969 a 0 TeXcolorgray 228 1075 a Fk(b\))p 0 TeXcolorgray
31 w(Ejecter)g(le)f Fl(cd)-128 1113 y
SDict begin H.S end
 -128 1113 a -128
1113 a
SDict begin 13.6 H.A end
 -128 1113 a -128 1113 a
SDict begin [/View [/XYZ H.V]/Dest (Item.8) cvn /DEST pdfmark end
 -128 1113 a 0 TeXcolorgray
238 1218 a Fk(c\))p 0 TeXcolorgray 31 w(Copier)h(le)f(con)m(ten)m(u)j
(du)d(r\351p)s(ertoire)i(couran)m(t)g(dans)e(un)h(r\351p)s(ertoire)g
(cac)m(h\351)-128 1256 y
SDict begin H.S end
 -128 1256 a -128 1256 a
SDict begin 13.6 H.A end
 -128
1256 a -128 1256 a
SDict begin [/View [/XYZ H.V]/Dest (Item.9) cvn /DEST pdfmark end
 -128 1256 a 0 TeXcolorgray 228 1362
a Fk(d\))p 0 TeXcolorgray 31 w(Supprimer)h(le)e(r\351p)s(ertoire)h
(couran)m(t)-128 1415 y
SDict begin H.S end
 -128 1415 a -128 1415 a
SDict begin 13.6 H.A end
 -128
1415 a -128 1415 a
SDict begin [/View [/XYZ H.V]/Dest (Item.10) cvn /DEST pdfmark end
 -128 1415 a 0 TeXcolorgray 13 1528
a Fk(3.)p 0 TeXcolorgray 61 w(Dans)36 b(un)g(terminal)i(sous)e(Lin)m
(ux,)h(quelle)g(commande)g(faut-il)g(\351crire)g(p)s(our)f(donner)i
(\340)e(tout)h(le)f(monde)h(le)g(droit)144 1641 y(d'\351criture)31
b(sur)g(un)f(\034c)m(hier)i Ff(information.py)15 b Fk(?)-128
1677 y
SDict begin H.S end
 -128 1677 a -128 1677 a
SDict begin 13.6 H.A end
 -128 1677 a -128 1677
a
SDict begin [/View [/XYZ H.V]/Dest (Item.11) cvn /DEST pdfmark end
 -128 1677 a 0 TeXcolorgray 233 1785 a Fk(a\))p 0 TeXcolorgray
31 w Ff(chmod)46 b(o+w)h(information.py)-128 1823 y
SDict begin H.S end
 -128
1823 a -128 1823 a
SDict begin 13.6 H.A end
 -128 1823 a -128 1823 a
SDict begin [/View [/XYZ H.V]/Dest (Item.12) cvn /DEST pdfmark end
 -128 1823
a 0 TeXcolorgray 228 1928 a Fk(b\))p 0 TeXcolorgray 31
w Ff(chmod)f(a+w)h(information.py)-128 1966 y
SDict begin H.S end
 -128 1966
a -128 1966 a
SDict begin 13.6 H.A end
 -128 1966 a -128 1966 a
SDict begin [/View [/XYZ H.V]/Dest (Item.13) cvn /DEST pdfmark end
 -128 1966 a 0 TeXcolorgray
238 2072 a Fk(c\))p 0 TeXcolorgray 31 w Ff(chmod)f(o+x)h
(information.py)-128 2110 y
SDict begin H.S end
 -128 2110 a -128 2110 a
SDict begin 13.6 H.A end
 -128
2110 a -128 2110 a
SDict begin [/View [/XYZ H.V]/Dest (Item.14) cvn /DEST pdfmark end
 -128 2110 a 0 TeXcolorgray 228 2216
a Fk(d\))p 0 TeXcolorgray 31 w Ff(chmod)f(a+x)h(information.py)-128
2269 y
SDict begin H.S end
 -128 2269 a -128 2269 a
SDict begin 13.6 H.A end
 -128 2269 a -128 2269
a
SDict begin [/View [/XYZ H.V]/Dest (Item.15) cvn /DEST pdfmark end
 -128 2269 a 0 TeXcolorgray 13 2382 a Fk(4.)p 0 TeXcolorgray
61 w(Quel)31 b(est)f(le)g(r\364le)h(de)f(la)h(commande)h
Ff(ls)15 b Fk(?)-128 2415 y
SDict begin H.S end
 -128 2415 a -128 2415 a
SDict begin 13.6 H.A end
 -128
2415 a -128 2415 a
SDict begin [/View [/XYZ H.V]/Dest (Item.16) cvn /DEST pdfmark end
 -128 2415 a 0 TeXcolorgray 233 2525
a Fk(a\))p 0 TeXcolorgray 31 w(basculer)31 b(en)f(mo)s(de)h
(administrateur)-128 2563 y
SDict begin H.S end
 -128 2563 a -128 2563 a
SDict begin 13.6 H.A end
 -128
2563 a -128 2563 a
SDict begin [/View [/XYZ H.V]/Dest (Item.17) cvn /DEST pdfmark end
 -128 2563 a 0 TeXcolorgray 228 2669
a Fk(b\))p 0 TeXcolorgray 31 w(lister)f(le)h(con)m(ten)m(u)h(du)f
(r\351p)s(ertoire)g(couran)m(t)-128 2707 y
SDict begin H.S end
 -128 2707
a -128 2707 a
SDict begin 13.6 H.A end
 -128 2707 a -128 2707 a
SDict begin [/View [/XYZ H.V]/Dest (Item.18) cvn /DEST pdfmark end
 -128 2707 a 0 TeXcolorgray
238 2813 a Fk(c\))p 0 TeXcolorgray 31 w(e\033acer)f(le)h(con)m(ten)m(u)
h(du)f(r\351p)s(ertoire)g(couran)m(t)-128 2851 y
SDict begin H.S end
 -128
2851 a -128 2851 a
SDict begin 13.6 H.A end
 -128 2851 a -128 2851 a
SDict begin [/View [/XYZ H.V]/Dest (Item.19) cvn /DEST pdfmark end
 -128 2851
a 0 TeXcolorgray 228 2956 a Fk(d\))p 0 TeXcolorgray 31
w(donner)g(un)g(acc\350s)f(complet)i(\340)e(un)g(\034c)m(hier)-128
3010 y
SDict begin H.S end
 -128 3010 a -128 3010 a
SDict begin 13.6 H.A end
 -128 3010 a -128 3010
a
SDict begin [/View [/XYZ H.V]/Dest (Item.20) cvn /DEST pdfmark end
 -128 3010 a 0 TeXcolorgray 13 3122 a Fk(5.)p 0 TeXcolorgray
61 w(Quel)h(est)f(l'e\033et)g(de)h(la)f(commande)i Ff(chmod)47
b(u+w)g(fichier.txt)15 b Fk(?)-128 3155 y
SDict begin H.S end
 -128 3155 a
-128 3155 a
SDict begin 13.6 H.A end
 -128 3155 a -128 3155 a
SDict begin [/View [/XYZ H.V]/Dest (Item.21) cvn /DEST pdfmark end
 -128 3155 a 0 TeXcolorgray
233 3266 a Fk(a\))p 0 TeXcolorgray 31 w(de)30 b(p)s(ermettre)i(au)e
(propri\351taire)i(du)f(\034c)m(hier)h(de)e(mo)s(di\034er)h(le)g(con)m
(ten)m(u)h(de)f(ce)f(\034c)m(hier)-128 3304 y
SDict begin H.S end
 -128 3304
a -128 3304 a
SDict begin 13.6 H.A end
 -128 3304 a -128 3304 a
SDict begin [/View [/XYZ H.V]/Dest (Item.22) cvn /DEST pdfmark end
 -128 3304 a 0 TeXcolorgray
228 3410 a Fk(b\))p 0 TeXcolorgray 31 w(d'in)m(terdire)i(au)f
(propri\351taire)h(de)e(mo)s(di\034er)h(le)g(con)m(ten)m(u)h(de)f(ce)f
(\034c)m(hier)-128 3448 y
SDict begin H.S end
 -128 3448 a -128 3448 a
SDict begin 13.6 H.A end
 -128
3448 a -128 3448 a
SDict begin [/View [/XYZ H.V]/Dest (Item.23) cvn /DEST pdfmark end
 -128 3448 a 0 TeXcolorgray 238 3553
a Fk(c\))p 0 TeXcolorgray 31 w(d'in)m(terdire)i(\340)e(tous)h(les)f
(autres)h(utilisateurs)g(de)f(lire)h(le)f(\034c)m(hier)-128
3591 y
SDict begin H.S end
 -128 3591 a -128 3591 a
SDict begin 13.6 H.A end
 -128 3591 a -128 3591
a
SDict begin [/View [/XYZ H.V]/Dest (Item.24) cvn /DEST pdfmark end
 -128 3591 a 0 TeXcolorgray 228 3697 a Fk(d\))p 0 TeXcolorgray
31 w(d'e\033acer)h(le)f(\034c)m(hier)-128 3750 y
SDict begin H.S end
 -128
3750 a -128 3750 a
SDict begin 13.6 H.A end
 -128 3750 a -128 3750 a
SDict begin [/View [/XYZ H.V]/Dest (Item.25) cvn /DEST pdfmark end
 -128 3750
a 0 TeXcolorgray 13 3863 a Fk(6.)p 0 TeXcolorgray 61
w(Dans)i(la)h(console)g(Lin)m(ux,)h(quelle)f(commande)h(faut-il)f
(ex\351cuter)g(p)s(our)g(obtenir)h(la)e(do)s(cumen)m(tation)j(sur)e(la)
g(com-)144 3976 y(mande)e(p)m(wd)15 b(?)-128 4009 y
SDict begin H.S end
 -128
4009 a -128 4009 a
SDict begin 13.6 H.A end
 -128 4009 a -128 4009 a
SDict begin [/View [/XYZ H.V]/Dest (Item.26) cvn /DEST pdfmark end
 -128 4009
a 0 TeXcolorgray 233 4120 a Fk(a\))p 0 TeXcolorgray 31
w Ff(man)47 b(pwd)-128 4158 y
SDict begin H.S end
 -128 4158 a -128 4158 a
SDict begin 13.6 H.A end

-128 4158 a -128 4158 a
SDict begin [/View [/XYZ H.V]/Dest (Item.27) cvn /DEST pdfmark end
 -128 4158 a 0 TeXcolorgray 228
4263 a Fk(b\))p 0 TeXcolorgray 31 w Ff(cd)g(pwd)-128
4301 y
SDict begin H.S end
 -128 4301 a -128 4301 a
SDict begin 13.6 H.A end
 -128 4301 a -128 4301
a
SDict begin [/View [/XYZ H.V]/Dest (Item.28) cvn /DEST pdfmark end
 -128 4301 a 0 TeXcolorgray 238 4407 a Fk(c\))p 0 TeXcolorgray
31 w Ff(mkdir)f(pwd)-128 4445 y
SDict begin H.S end
 -128 4445 a -128 4445
a
SDict begin 13.6 H.A end
 -128 4445 a -128 4445 a
SDict begin [/View [/XYZ H.V]/Dest (Item.29) cvn /DEST pdfmark end
 -128 4445 a 0 TeXcolorgray
228 4550 a Fk(d\))p 0 TeXcolorgray 31 w Ff(ls)h(pwd)-128
4604 y
SDict begin H.S end
 -128 4604 a -128 4604 a
SDict begin 13.6 H.A end
 -128 4604 a -128 4604
a
SDict begin [/View [/XYZ H.V]/Dest (Item.30) cvn /DEST pdfmark end
 -128 4604 a 0 TeXcolorgray 13 4717 a Fk(7.)p 0 TeXcolorgray
61 w(Lequel)31 b(de)f(ces)g(syst\350mes)g(d'exploitation)i(est)e(sous)g
(licence)h(propri\351taire)15 b(?)-128 4750 y
SDict begin H.S end
 -128 4750
a -128 4750 a
SDict begin 13.6 H.A end
 -128 4750 a -128 4750 a
SDict begin [/View [/XYZ H.V]/Dest (Item.31) cvn /DEST pdfmark end
 -128 4750 a 0 TeXcolorgray
233 4860 a Fk(a\))p 0 TeXcolorgray 31 w(Android)-128
4898 y
SDict begin H.S end
 -128 4898 a -128 4898 a
SDict begin 13.6 H.A end
 -128 4898 a -128 4898
a
SDict begin [/View [/XYZ H.V]/Dest (Item.32) cvn /DEST pdfmark end
 -128 4898 a 0 TeXcolorgray 228 5004 a Fk(b\))p 0 TeXcolorgray
31 w(Lin)m(ux)-128 5042 y
SDict begin H.S end
 -128 5042 a -128 5042 a
SDict begin 13.6 H.A end
 -128
5042 a -128 5042 a
SDict begin [/View [/XYZ H.V]/Dest (Item.33) cvn /DEST pdfmark end
 -128 5042 a 0 TeXcolorgray 238 5147
a Fk(c\))p 0 TeXcolorgray 31 w(Windo)m(ws)-128 5185 y
SDict begin H.S end

-128 5185 a -128 5185 a
SDict begin 13.6 H.A end
 -128 5185 a -128 5185 a
SDict begin [/View [/XYZ H.V]/Dest (Item.34) cvn /DEST pdfmark end
 -128
5185 a 0 TeXcolorgray 228 5291 a Fk(d\))p 0 TeXcolorgray
31 w(Ubun)m(tu)-128 5344 y
SDict begin H.S end
 -128 5344 a -128 5344 a
SDict begin 13.6 H.A end
 -128
5344 a -128 5344 a
SDict begin [/View [/XYZ H.V]/Dest (Item.35) cvn /DEST pdfmark end
 -128 5344 a 0 TeXcolorgray 13 5457
a Fk(8.)p 0 TeXcolorgray 61 w(Une)36 b(application)i(doit)e(\351crire)h
(sur)g(le)f(disque)g(dur)h(de)f(l'ordinateur,)i(laquelle)f(des)f
(a\036rmations)i(suiv)-5 b(an)m(tes)36 b(est)144 5570
y(vraie)15 b(?)-128 5586 y
SDict begin H.S end
 -128 5586 a -128 5586 a
SDict begin 13.6 H.A end
 -128
5586 a -128 5586 a
SDict begin [/View [/XYZ H.V]/Dest (Item.36) cvn /DEST pdfmark end
 -128 5586 a 0 TeXcolorgray 233 5714
a Fk(a\))p 0 TeXcolorgray 31 w(Elle)31 b(p)s(eut)f(le)h(faire)f(quand)h
(b)s(on)f(lui)h(sem)m(ble.)-128 5752 y
SDict begin H.S end
 -128 5752 a -128
5752 a
SDict begin 13.6 H.A end
 -128 5752 a -128 5752 a
SDict begin [/View [/XYZ H.V]/Dest (Item.37) cvn /DEST pdfmark end
 -128 5752 a 0 TeXcolorgray
228 5857 a Fk(b\))p 0 TeXcolorgray 31 w(Elle)g(doit)g(en)f(faire)g(la)h
(demande)h(au)e(syst\350me)g(d'exploitation.)-128 5895
y
SDict begin H.S end
 -128 5895 a -128 5895 a
SDict begin 13.6 H.A end
 -128 5895 a -128 5895 a
SDict begin [/View [/XYZ H.V]/Dest (Item.38) cvn /DEST pdfmark end
 -128
5895 a 0 TeXcolorgray 238 6001 a Fk(c\))p 0 TeXcolorgray
31 w(Elle)h(doit)g(en)f(faire)g(la)h(demande)h(aux)e(autres)h
(applications)g(qui)f(fonctionnen)m(t)j(sur)d(l'ordinateur.)-128
6039 y
SDict begin H.S end
 -128 6039 a -128 6039 a
SDict begin 13.6 H.A end
 -128 6039 a -128 6039
a
SDict begin [/View [/XYZ H.V]/Dest (Item.39) cvn /DEST pdfmark end
 -128 6039 a 0 TeXcolorgray 228 6145 a Fk(d\))p 0 TeXcolorgray
31 w(Elle)h(doit)g(en)f(faire)g(la)h(demande)h(\340)e(l'utilisateur)i
(de)e(l'ordinateur)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -136
-396 a
SDict begin H.S end
 -136 -396 a -136 -396 a
SDict begin H.R end
 -136 -396 a -136 -396
a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -136 -396 a 0 TeXcolorgray -128 -297 a Fm(Fic)m(he)36
b(d'exercices)f(:)46 b Fl(Syst\350mes)34 b(d'exploit)-8
b(a)g(tion)1632 b Fk(Niv)m(eau)31 b(:)40 b Fl(nsi)35
b Fm(1)4083 -330 y Fj(e)p -128 -260 4252 4 v 0 TeXcolorgray
-128 -89 a Fi(q)c Fh(Exercice)g(1)f Fk(:)h Fe(Une)h(nouvel)5
b(le)34 b(c)-5 b(ommande)-128 -89 y
SDict begin H.S end
 -128 -89 a -128 -89
a
SDict begin 13.6 H.A end
 -128 -89 a -128 -89 a
SDict begin [/View [/XYZ H.V]/Dest (Item.40) cvn /DEST pdfmark end
 -128 -89 a 0 TeXcolorgray -24
24 a Fh(1.)p 0 TeXcolorgray 46 w Fk(Essa)m(y)m(er)31
b(la)f(commande)i Ff(cal)p Fk(.)-128 42 y
SDict begin H.S end
 -128 42 a -128
42 a
SDict begin 13.6 H.A end
 -128 42 a -128 42 a
SDict begin [/View [/XYZ H.V]/Dest (Item.41) cvn /DEST pdfmark end
 -128 42 a 0 TeXcolorgray -24
137 a Fh(2.)p 0 TeXcolorgray 46 w Fk(Lire)f(la)f(do)s(cumen)m(tation)j
(sur)d(cette)h(commande.)-128 137 y
SDict begin H.S end
 -128 137 a -128 137
a
SDict begin 13.6 H.A end
 -128 137 a -128 137 a
SDict begin [/View [/XYZ H.V]/Dest (Item.42) cvn /DEST pdfmark end
 -128 137 a 0 TeXcolorgray -24
250 a Fh(3.)p 0 TeXcolorgray 46 w Fk(Quel)g(\351tait)g(le)f(jour)g(de)h
(la)f(semaine)h(le)g(26)f(juin)h(1815)15 b(?)-128 387
y Fi(q)31 b Fh(Exercice)g(2)f Fk(:)h Fe(Pr)-5 b(emiers)33
b(p)-5 b(as)33 b(en)f(Python)g(en)h(ligne)f(de)h(c)-5
b(ommande)-128 500 y Fk(Le)42 b(langage)h(Python)f(p)s(eut)g(\352tre)f
(in)m(v)m(o)s(qu\351)i(\340)e(partir)h(de)g(la)f(ligne)h(de)g
(commande,)h(tap)s(er)f(simplemen)m(t)h Ff(python)e Fk(dans)-128
612 y(w)m(ebminal.)28 b(L'in)m(vite)f(de)e(commande)i(se)e(transforme)i
(en)e Ff(>)16 b(>)f(>)p Fk(,)26 b(on)f(dit)h(que)f(Python)i(est)e(en)g
(mo)s(de)h(console.)g(V)-8 b(ous)26 b(p)s(ouv)m(ez)-128
725 y(quitter)31 b(Python)g(en)g(tapan)m(t)h Ff(exit\(\))p
Fk(.)-128 743 y
SDict begin H.S end
 -128 743 a -128 743 a
SDict begin 13.6 H.A end
 -128 743 a -128
743 a
SDict begin [/View [/XYZ H.V]/Dest (Item.43) cvn /DEST pdfmark end
 -128 743 a 0 TeXcolorgray -24 838 a Fh(1.)p 0 TeXcolorgray
46 w Fk(Utiliser)e(Python)h(comme)h(calculatrice)100
951 y(En)f(mo)s(de)f(console,)h(Python)g(v)m(ous)g(fournira)g
(directemen)m(t)h(les)e(r\351sultats)h(de)g(calculs,)g(tester)f(par)h
(exemple)g(:)-128 969 y
SDict begin H.S end
 -128 969 a -128 969 a
SDict begin 13.6 H.A end
 -128 969
a -128 969 a
SDict begin [/View [/XYZ H.V]/Dest (Item.44) cvn /DEST pdfmark end
 -128 969 a 0 TeXcolorgray 167 1064 a Fh(a\))p
0 TeXcolorgray 46 w Ff(15+5*5)p Fk(,)f(dans)g(quel)h(ordre)g(les)f(op)s
(\351rations)h(son)m(t-elles)g(e\033ectu\351es)15 b(?)-128
1087 y
SDict begin H.S end
 -128 1087 a -128 1087 a
SDict begin 13.6 H.A end
 -128 1087 a -128 1087
a
SDict begin [/View [/XYZ H.V]/Dest (Item.45) cvn /DEST pdfmark end
 -128 1087 a 0 TeXcolorgray 164 1177 a Fh(b\))p 0 TeXcolorgray
46 w Ff(2**10)p Fk(,)30 b(de)g(quelle)h(op)s(\351ration)g(s'agit-il)15
b(?)31 b(\(tester)g(d'autres)g(v)-5 b(aleurs)30 b(si)g(necessaires\))
-128 1200 y
SDict begin H.S end
 -128 1200 a -128 1200 a
SDict begin 13.6 H.A end
 -128 1200 a -128
1200 a
SDict begin [/View [/XYZ H.V]/Dest (Item.46) cvn /DEST pdfmark end
 -128 1200 a 0 TeXcolorgray 171 1290 a Fh(c\))p
0 TeXcolorgray 45 w Ff(20\0453)g Fk(et)g Ff(20//3)p Fk(,)g(de)h(quelle)
g(op)s(\351ration)g(s'agit-il)15 b(?)31 b(\(tester)f(d'autres)h(v)-5
b(aleurs)31 b(si)f(necessaires\))-128 1313 y
SDict begin H.S end
 -128 1313
a -128 1313 a
SDict begin 13.6 H.A end
 -128 1313 a -128 1313 a
SDict begin [/View [/XYZ H.V]/Dest (Item.47) cvn /DEST pdfmark end
 -128 1313 a 0 TeXcolorgray
-24 1403 a Fh(2.)p 0 TeXcolorgray 46 w Fk(Obtenir)h(de)g(l'aide)g(en)f
(p)m(ython)-128 1421 y
SDict begin H.S end
 -128 1421 a -128 1421 a
SDict begin 13.6 H.A end
 -128 1421
a -128 1421 a
SDict begin [/View [/XYZ H.V]/Dest (Item.48) cvn /DEST pdfmark end
 -128 1421 a 0 TeXcolorgray 167 1516 a Fh(a\))p
0 TeXcolorgray 46 w Fk(T)-8 b(ester)31 b(les)f(commandes)i
Ff(chr\(33\))p Fk(,)e Ff(chr\(72\))p Fk(,)g Ff(chr\(125\))-128
1539 y
SDict begin H.S end
 -128 1539 a -128 1539 a
SDict begin 13.6 H.A end
 -128 1539 a -128 1539
a
SDict begin [/View [/XYZ H.V]/Dest (Item.49) cvn /DEST pdfmark end
 -128 1539 a 0 TeXcolorgray 164 1629 a Fh(b\))p 0 TeXcolorgray
46 w Fk(P)m(our)h(conna\356tre)h(l'utilit\351)g(de)e(cette)h(commande)h
(demander)g Ff(help\(chr\))-128 1765 y Fi(q)f Fh(Exercice)g(3)f
Fk(:)h Fe(Ecrir)-5 b(e)33 b(dans)f(un)h(\034chier,)f(\351)-5
b(diter)34 b(un)e(\034chier)-128 1878 y Fk(Nous)f(a)m(v)m(ons)g(vu)g
(que)f(la)h(command)h Ff(touch)e Fk(p)s(ermet)i(de)f(cr\351er)g(un)g
(\034c)m(hier)h(vide.)f(Il)f(serait)h(bien)g(sur)g(in)m(t\351ressan)m
(t)h(d'\351crire)-128 1991 y(dans)38 b(ce)g(\034c)m(hier,)h(c'est)e(ce)
h(que)f(nous)h(allons)f(d\351couvrir)i(dans)e(cet)h(exercice.)g
(Commencer)i(par)e(cr\351er)g(un)f(\034c)m(hier)i(vide)-128
2104 y(nomm\351)32 b Ff(monfichier.txt)p Fk(.)-128 2104
y
SDict begin H.S end
 -128 2104 a -128 2104 a
SDict begin 13.6 H.A end
 -128 2104 a -128 2104 a
SDict begin [/View [/XYZ H.V]/Dest (Item.50) cvn /DEST pdfmark end
 -128
2104 a 0 TeXcolorgray -24 2217 a Fh(1.)p 0 TeXcolorgray
46 w Fk(A)-10 b(v)m(ec)30 b(la)h(commande)h Ff(echo)-128
2217 y
SDict begin H.S end
 -128 2217 a -128 2217 a
SDict begin 13.6 H.A end
 -128 2217 a -128 2217
a
SDict begin [/View [/XYZ H.V]/Dest (Item.51) cvn /DEST pdfmark end
 -128 2217 a 0 TeXcolorgray 167 2330 a Fh(a\))p 0 TeXcolorgray
46 w Fk(T)-8 b(ester)31 b(la)f(commande,)i(par)f(exemple)g(en)g(tapan)m
(t)h Ff(echo)46 b("Hello)h(world")-128 2353 y
SDict begin H.S end
 -128 2353
a -128 2353 a
SDict begin 13.6 H.A end
 -128 2353 a -128 2353 a
SDict begin [/View [/XYZ H.V]/Dest (Item.52) cvn /DEST pdfmark end
 -128 2353 a 0 TeXcolorgray
164 2443 a Fh(b\))p 0 TeXcolorgray 46 w Fk(P)m(ar)34
b(d\351faut)g(la)f(commande)i Ff(echo)e Fk(\351crit)h(dans)g(le)f
(terminal,)i(nous)e(p)s(ouv)m(ons)h(lui)f(pr\351ciser)h(d'\351crire)h
(dans)e(un)300 2556 y(\034c)m(hier)e(\340)g(l'aide)g(du)f(caract\350re)
i Ff(>)p Fk(.)e(P)m(ar)i(exemple)f(a)m(v)m(ec)g Ff(echo)47
b("Hello)g(world")g(>)g(monfichier.txt)-128 2573 y
SDict begin H.S end
 -128
2573 a -128 2573 a
SDict begin 13.6 H.A end
 -128 2573 a -128 2573 a
SDict begin [/View [/XYZ H.V]/Dest (Item.53) cvn /DEST pdfmark end
 -128 2573
a 0 TeXcolorgray 171 2668 a Fh(c\))p 0 TeXcolorgray 45
w Fk(A\036c)m(her)31 b(le)g(con)m(ten)m(u)h(du)f(\034c)m(hier)g
(\(commande)i Ff(cat)p Fk(\))d(p)s(our)g(constater)h(qu'il)g(a)f
(\351t\351)h(mo)s(di\034\351.)-128 2691 y
SDict begin H.S end
 -128 2691 a
-128 2691 a
SDict begin 13.6 H.A end
 -128 2691 a -128 2691 a
SDict begin [/View [/XYZ H.V]/Dest (Item.54) cvn /DEST pdfmark end
 -128 2691 a 0 TeXcolorgray
-24 2781 a Fh(2.)p 0 TeXcolorgray 46 w Fk(A)-10 b(v)m(ec)30
b(un)h(\351diteur)g(de)g(texte)f(:)g(nano.)h(T)-8 b(ap)s(er)32
b(la)e(commande)i Ff(nano)47 b(monfichier.txt)p Fk(.)100
2894 y(nano)34 b(est)f(un)g(\351diteur)h(de)g(texte)f(fonctionnan)m(t)i
(dans)f(le)f(terminal.)i(Les)e(commandes)h(principales)h(s'a\036c)m
(hen)m(t)g(en)100 3007 y(bas)30 b(de)g(page)h(\(le)g(caract\350re)h
Ff(\002)d Fk(d\351signe)i(la)f(touc)m(he)61 b Fl(ctrl)p
1893 2936 270 5 v 1893 3034 5 101 v 2158 3034 V 1893
3036 270 5 v 30 w Fk(\).)-128 3144 y Fi(q)31 b Fh(Exercice)g(4)f
Fk(:)h Fe(F)-7 b(air)i(e)33 b(un)f(p)-5 b(eu)34 b(de)e(r)-5
b(angement)2495 b Fd(V)-128 3257 y Fk(Dans)33 b(le)f(dossier)h
Ff(/common_pool)p Fk(,)f(se)g(trouv)m(e)i(un)e(dossier)h(nomm\351)g
Ff(a_ranger)p Fk(,)f(comme)i(son)e(nom)h(l'indique)h(ce)e(dossier)-128
3370 y(demande)d(\340)e(\352tre)g(rang\351)h(car)f(il)g(con)m(tien)m(t)
i(de)f(nom)m(breux)g(\034c)m(hiers)g(de)f(div)m(erses)g(sortes)g
(\(texte,)h(page)f(h)m(tml)h(ou)f(programme)-128 3482
y(p)m(ython\))32 b(tous)e(m\351lang\351s)i(dans)e(le)g(m\352me)h
(dossier.)-128 3505 y
SDict begin H.S end
 -128 3505 a -128 3505 a
SDict begin 13.6 H.A end
 -128 3505
a -128 3505 a
SDict begin [/View [/XYZ H.V]/Dest (Item.55) cvn /DEST pdfmark end
 -128 3505 a 0 TeXcolorgray -24 3595 a Fh(1.)p
0 TeXcolorgray 46 w Fk(Lister)g(le)f(con)m(ten)m(u)j(de)d(ce)h(dossier)
f(p)s(our)g(d\351couvrir)i(par)e(v)m(ous-m\352me)i(son)e(con)m(ten)m
(u.)-128 3613 y
SDict begin H.S end
 -128 3613 a -128 3613 a
SDict begin 13.6 H.A end
 -128 3613 a -128
3613 a
SDict begin [/View [/XYZ H.V]/Dest (Item.56) cvn /DEST pdfmark end
 -128 3613 a 0 TeXcolorgray -24 3708 a Fh(2.)p
0 TeXcolorgray 46 w Fk(Copier)h(le)f(dossier)h Ff(a_ranger)f
Fk(ainsi)g(que)g(tous)h(les)f(\034c)m(hiers)h(qu'il)g(con)m(tien)m(t)h
(dans)f(v)m(otre)g(r\351p)s(ertoire)g(p)s(ersonnel.)100
3821 y Fg(\376)55 b Fk(Consulter)31 b(l'aide)g(de)g(la)f(commande)i
Ff(cp)e Fk(p)s(our)h(d\351couvrir)g(commen)m(t)h(copier)f(un)g(dossier)
f(et)h(son)f(con)m(ten)m(u.)-128 3841 y
SDict begin H.S end
 -128 3841 a -128
3841 a
SDict begin 13.6 H.A end
 -128 3841 a -128 3841 a
SDict begin [/View [/XYZ H.V]/Dest (Item.57) cvn /DEST pdfmark end
 -128 3841 a 0 TeXcolorgray
-24 3934 a Fh(3.)p 0 TeXcolorgray 46 w Fk(Dans)23 b(cette)h(copie)h
(cr\351er)f(trois)f(dossiers)h(nomm\351s)g Ff(Texte)p
Fk(,)f Ff(Html)g Fk(et)h Ff(Python)p Fk(.)f(Puis,d\351placer)j(les)d
(\034c)m(hiers)i(de)e(c)m(haque)100 4047 y(t)m(yp)s(e)30
b(dans)h(le)f(dossier)g(corresp)s(ondan)m(t.)100 4160
y Fg(\376)62 b Fk(D\351placer)38 b(les)f(\034c)m(hiers)i(un)e(par)h(un)
f(serait)h(long)g(et)f(fastidieux,)h(p)s(enser)f(\340)g(utiliser)h(le)g
(caract\350re)g Ff(*)p Fk(,)g(en)f(e\033et)100 4273 y(dans)26
b(un)h(nom)g(de)g(\034c)m(hier)h(il)f(remplace)h(n'imp)s(orte)g(quelle)
f(s\351quence)g(de)f(caract\350res.)i(P)m(ar)g(exemple)f
Ff(*.bak)g Fk(d\351signe)100 4386 y(n'imp)s(orte)k(quel)f(\034c)m(hier)
i(don)m(t)g(le)e(nom)h(se)f(termine)h(par)g Ff(.bak)p
Fk(.)-128 4522 y Fi(q)g Fh(Exercice)g(5)f Fk(:)h Fe(Enigme)3077
b Fd(V)55 b Fc(\303)-128 4540 y
SDict begin H.S end
 -128 4540 a -128 4540
a
SDict begin 13.6 H.A end
 -128 4540 a -128 4540 a
SDict begin [/View [/XYZ H.V]/Dest (Item.58) cvn /DEST pdfmark end
 -128 4540 a 0 TeXcolorgray
-24 4635 a Fh(1.)p 0 TeXcolorgray 46 w Fk(T)-8 b(rouv)m(er)32
b(six)d(lettres)i(en)g Fe(utilisant)g(uniquement)j(W)-7
b(ebminal)32 b(en)h(ligne)g(de)f(c)-5 b(ommande)p Fk(.)p
0 TeXcolorgray 164 4778 a(\026)p 0 TeXcolorgray 46 w(Lettre)31
b(n)p Fb(\260)p Fk(1)f(:)g(\023)24 b Fe(c)-5 b(ach\351)g(e)36
b(dans)c Fa(/common_pool/EnigmeNSI)39 b Fk(\024.)p 0
TeXcolorgray 164 4920 a(\026)p 0 TeXcolorgray 46 w(Lettre)31
b(n)p Fb(\260)p Fk(2)f(:)g(\023)24 b Fe(son)32 b(c)-5
b(o)g(de)35 b Fl(asci)s(i)d Fe(est)g(71)37 b Fk(\024.)p
0 TeXcolorgray 164 5063 a(\026)p 0 TeXcolorgray 46 w(Lettre)31
b(n)p Fb(\260)p Fk(3)f(:)g(\023)24 b Fe(deuxi\350me)35
b(lettr)-5 b(e)33 b(du)g(jour)g(de)f(la)h(semaine)f(du)h(23)f(juin)g
(1912)37 b Fk(\024.)p 0 TeXcolorgray 164 5206 a(\026)p
0 TeXcolorgray 46 w(Lettre)24 b(n)p Fb(\260)p Fk(4)e(:)g(\023)d
Fe(L)-5 b(a)25 b(c)-5 b(ommande)26 b Fa(wc)f Fe(vous)h(p)-5
b(ermettr)g(a)27 b(de)f(c)-5 b(ompter)27 b(le)f(nombr)-5
b(e)26 b(de)g(c)-5 b(ar)g(act\350r)g(es)28 b(du)e(\034chier)g(lettr)-5
b(e4)300 5319 y(qui)39 b(se)g(tr)-5 b(ouve)40 b(dans)e
Fa(/common_pool/EnigmeNSI)p Fe(.)g(Diviser)h(le)g(r)-5
b(\351sultat)40 b(obtenu)g(p)-5 b(ar)39 b(1956)g(p)-5
b(our)39 b(avoir)g(la)300 5431 y(p)-5 b(osition)32 b(dans)g(l'alphab)-5
b(et)33 b(de)g(la)g(quatri\350me)g(lettr)-5 b(e)p 0 TeXcolorgray
164 5574 a Fk(\026)p 0 TeXcolorgray 46 w(Lettre)33 b(n)p
Fb(\260)p Fk(5)f(:)h(\023)25 b Fe(L)-5 b(orsque)36 b(c)-5
b(ette)36 b(lettr)-5 b(e)36 b(est)e(donn\351)-5 b(e)36
b(en)e(option)g(\340)h(la)f(c)-5 b(ommande)36 b Fa(cp)p
Fe(,)e(el)5 b(le)35 b(p)-5 b(ermet)35 b(de)g(c)-5 b(opier)300
5687 y(un)32 b(dossier)h(et)f(tout)h(c)-5 b(e)34 b(qu'il)e(c)-5
b(ontient)33 b Fk(\024)p 0 TeXcolorgray 164 5830 a(\026)p
0 TeXcolorgray 46 w(Lettre)e(n)p Fb(\260)p Fk(6)f(:)g(\023)25
b Fe(L)-5 b(a)32 b(tail)5 b(le)32 b(en)h(kilo)g(o)-5
b(ctet)33 b(du)g(\034chier)g Fa(last)f Fe(qui)h(se)g(tr)-5
b(ouve)34 b(dans)e Fa(/usr/bin)h Fe(vous)g(donner)-5
b(a)33 b(le)300 5942 y(r)-5 b(ang)33 b(dans)f(l'alphab)-5
b(et)34 b(de)e(la)h(sixi\350me)g(lettr)-5 b(e)-128 5990
y
SDict begin H.S end
 -128 5990 a -128 5990 a
SDict begin 13.6 H.A end
 -128 5990 a -128 5990 a
SDict begin [/View [/XYZ H.V]/Dest (Item.59) cvn /DEST pdfmark end
 -128
5990 a 0 TeXcolorgray -24 6085 a Fh(2.)p 0 TeXcolorgray
46 w Fk(Remettez)35 b(dans)g(l'ordre)h(les)e(six)g(lettres)h(obten)m
(ues)h(p)s(our)f(trouv)m(er)h(le)f(nom)g(d'un)g(c\351l\350bre)h
(informaticien.)h(F)-8 b(aites)100 6198 y(quelques)30
b(rec)m(herc)m(hes)i(sur)e(le)h Fe(W)-7 b(eb)37 b Fk(p)s(our)30
b(d\351couvrir)h(ses)f(con)m(tributions)j(\340)d(l'informatique.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
